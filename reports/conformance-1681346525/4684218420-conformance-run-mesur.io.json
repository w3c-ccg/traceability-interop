{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "16351e18-8df7-4202-866e-71425f4f8efe",
        "name": "Clear Cache",
        "item": [
          {
            "id": "21a87f3c-fce4-47e1-96fb-7731251a4354",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "852b0b50-1360-4118-87fe-6477b33048ab",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9439ac28-85c8-47cc-8e04-76b34d17fb47"
                }
              }
            ]
          },
          {
            "id": "7a857f24-8707-4a96-b7c3-ba1dca1d502d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c4cda6b1-61c1-4d6d-a461-1373bfc01416",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7169eaae-eb23-4cb1-8e52-e12022278859"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "199bcd5c-3a0d-409b-b5c8-ae3012f1ff7c",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "70f6e313-4711-4038-860b-6ff1a81057b4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "719089b7-eb76-4400-9245-7bd78b62e1fa",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "89f2cc0e-9605-414f-b741-2d3f4239077a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9a23877a-38da-4ff1-ae36-67f4f00c7b6a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bfe924b5-5e34-425a-8963-886eca6226e2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "540c18a7-6828-4fe5-ad40-9d1fca537d47"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "57dbd8f9-0a7a-4bcf-8491-22f607891f0e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6f3992f6-956e-4f5a-87ff-529595f20195"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "da4ecfed-a7ed-4b9b-a33d-5dde4024348b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "1af82614-e506-4769-a14e-389844e67807"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2083a0ad-1a19-4f2d-99ec-f459cfe847d5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "010b3af6-70be-4e2f-a77f-72023c402d19"
            }
          }
        ]
      },
      {
        "id": "b61ec7b0-c46b-4d7e-bcbf-539c8b188c0b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a40403ea-4490-444a-869c-8a8096c74474",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9e281300-ffd6-47f0-94ce-cde09de94258",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "edc89499-2958-4383-b3dc-17401d017e0a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "588c1943-f914-474e-b240-2628d45ed2fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "925e0bf6-9616-48b6-b2cb-fda182f2191b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f95618a-3c05-4dc5-ab7c-898d37f472a8",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb95e4c6-5b50-4abc-b04d-eeb0361ac3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "436d3ae9-eeac-4245-a057-1aa93d9b69b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "006415ed-926a-442e-a0aa-1830a2faff5d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b77aa70-17ca-43f1-a9a7-0871e94a752c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb2c46e1-4328-4944-9730-4dac269f1102"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5e253795-2609-4362-ae94-807345cbde8a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d7473a9d-540e-4941-b19e-f347a4bb365c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edaef9d6-560b-401f-81d7-503e2dd3a3aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ba13dfc9-50ae-4a4e-8d13-af5bf4f1e8f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87bf404a-fafb-4adf-90dd-4a524339264d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b9a03fd-3ef0-4cf5-a615-762677897261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d72552-df08-4e7b-b366-38b8b0d0dc76",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c61067-cf3c-4d4f-83d9-d0f5609b876f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b2f499d-db04-44e5-a42c-99367b6e6b6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c022fcb-9ede-4bab-9265-f5c26c88efd5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "82627a3d-76da-4a79-8809-18f40972bcfa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1d6dc85b-8f03-44c8-951a-b15bffcc979a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6a8a4311-7fd0-4327-b5b6-26ec49a685df",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4c34c72-732a-4a75-8abc-778a8ba9b912",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b4d379ab-d946-48b8-8e99-55a9ed5b198a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d5120e9b-f61b-4106-b901-7fe9a6f69db7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "a86831d9-d4af-4c51-941d-d4af91af53f1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d6f7f537-93c7-490a-a24c-c50372d4dc64",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "09f5b3d8-8df4-42f0-9ad4-8d156864b24d"
            }
          }
        ]
      },
      {
        "id": "9aa5810b-e918-46fa-92a3-d16589b2da57",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "cd6e001f-1321-4f6a-8681-7749bba19d97",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7ce2d1ef-8e48-4d16-8d82-4b39c6dd394b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ddad4487-8dda-456d-86bc-14caa05b0724",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38596243-e5b8-465e-bc7b-6c8fbc1e37ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6c346a1-88a8-4d3a-af40-c5319f292c3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a66985e-b858-41ba-932d-c7fff8a364f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e2a7ec2-7542-489f-91b9-cfa2528d9959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "515c626f-517a-4c1c-adda-43e5fd702801",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f9a5738-21d9-4f41-9449-f42b257e3e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6699b41-6367-4ca6-8c89-f22b6c7fd62f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "effb936b-2b3e-44ce-972e-caf4f1826f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3263bbeb-732f-4ae3-883c-2afb07d1770a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a8aa27c-19aa-4556-ba77-8fe621d33c61",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad23d92-8ed8-465a-9cb2-9feb360094b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60a36420-b233-4252-a79e-d4f843c3b91e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05558ef1-dcc2-461c-beb8-976c1b2675d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e3028c5-6627-4c29-a867-d24a192fb5c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99911029-0951-498e-a743-bfa55f14557d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ec36cf-6c4d-42fe-96e4-12f7df8aa225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1d7c17d-41eb-4927-931a-dfc1f11eef76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68fbcc8e-ec24-4626-8809-054a59dd2413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a68e1201-c6f8-4a80-bdfb-bb73113f5ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cededc3-6b28-44ff-9280-937c9224ea41",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "131c1297-55d9-458b-b5f2-c2ec60274a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a49b9c03-498f-48ed-b278-be3185663ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c23f5994-2b36-4826-a8be-10afa9826817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f532b93c-f05c-458b-b85a-4e8cab1f90e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "778e4796-dde5-4af9-ae57-b8352f366b33",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf81eb8b-7652-4c25-9e48-d85523ba583d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a72d9195-9299-43f1-a1f3-459ad5d26233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b30f56-0404-4a62-997f-cf15e90742dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bece85e8-923b-416c-852b-b42d1f5866ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d76284-151a-4683-8a1b-3be0676b4130",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61710d6d-2129-41d4-b6f7-72d469c60c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee0ec1d4-6f34-474f-a782-d26c45799c5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac787b9-04d6-422a-a198-94fcfddd4e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6cac8e8f-6dd0-484b-a2bd-c610416e56d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae645f5-3db4-47a2-8a5a-b33b612b3a7e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ccee4b-8d4f-48e3-934d-4a60b80603b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaeaee6e-1481-4b20-af1b-e3814cde9bf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f97eba-b07e-4126-b286-4bafdc743d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72b728df-2387-45e7-aa89-a641e41f751e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf56c52-98dd-4b79-9129-1787056275c4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "531c19f8-993a-4279-8b86-2a7dee3bba99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffac151c-a7fb-4961-ba32-ad3a4801234f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a83b48-0ac1-4ead-8316-effbf87c5e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "85230793-4417-42c2-ae33-1dda0a2f8b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a23c5a7-4738-4703-9cac-267b4a625dd9",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24e96922-f59d-4e39-9cac-5c798f5a6e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9adf7d4c-b179-44a7-8181-0ef63b3c03c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc73f04d-89eb-4d49-ba41-126f37587267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed2aca9d-85f9-48e0-a448-e11672362166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b66407-c2ff-47d9-a030-5a172c12acd8",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dacfc17e-c3ff-4c67-a1dc-ea4ddcba8172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35f27e47-351b-4d41-82ec-c0acbb285cba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3596e909-9892-4867-ba38-ec6c2b62c450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25df3148-4b49-4147-b778-997466889ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a032a8c-b58f-428b-80a6-9fc98a90677f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3357c3e5-adc6-4fa9-8435-4871a0688340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24f019d6-3db7-4076-b6f1-bca82c2a495b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc8243f-400d-4a23-9d93-e31419e25720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "822d15a9-4970-4ff1-b03d-6172ceda57f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40fc0b00-8ab5-457c-86c7-24788bed87fa",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f387c29a-52a6-4cc4-917d-721fa2dc3b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dcb18cb-3954-463a-8193-a7663570ffc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf497ecf-3d9a-4e0a-8796-712f42275c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14e2ecfc-9412-4850-9fc1-0934089ce01c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bed81f2-3049-4c24-aafe-d66753e774ac",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42267d7b-d149-4d49-8af0-51b8da19a115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "241198d7-5dfb-48b9-b02a-5dbf74ad0a6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf42b072-0dfd-4925-8ee9-a4b3a79708bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c009c092-7108-4b58-a0e3-0b3494691e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69533c61-c26c-4b82-9f26-a53a6421e4da",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db955de-ad50-466d-8e73-9dcadbb87e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a287ae3d-d0e4-46e3-b66b-de8fa005e201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a72bad3-566c-44e4-9e38-194cfd2a354b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40031d40-2329-495a-9b5d-67f27088be7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4110028-dc05-4b40-a70d-d319a7949d5b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e587545-ab5c-46ca-8bfb-e39b1d4b1c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9cf7380-c18c-418c-8c72-237bec318f69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d95fd72-fb26-457d-8576-89eac939afae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aec5c150-380f-49e8-b114-521f78ce2fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e64240a-c699-4826-9d80-87728bd48598",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d831b0b4-b9ba-42c6-9321-15eb8bc12165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "329423f0-72e6-40a9-9c9b-11e14ffcd3e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f037967b-5946-4ed8-b6db-2e36e3831cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13a03d6d-feeb-48c7-828f-420b43c8c866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32635bce-c9e0-4bce-b6a5-bd47dacb8c8b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "091c6867-6570-4219-80a6-e6881044ca10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f71e510-7535-4746-88a5-cea0bc89ade7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b2ed5fc-3ef5-4091-9e9d-cfec11656759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c2bd4cd-ee4d-41c5-9ee3-ef0931153330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cea8348-fb07-41b9-ba79-16481cb0a052",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c564c222-e919-4c28-b80b-7f69fdd8b2e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60c71e95-011c-4cc0-917b-b476561d3d40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070f178b-069a-41ac-a443-a68d397e47e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9266a689-d67b-45c2-9e1a-7163a3fc1d5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb2dfe7-ba27-49f5-bb32-2dd2ccf27213",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc7b69c9-dddc-4507-8a77-aa4493b7abef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcd272a9-02cb-41e9-80b0-4723c0fcfcc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bae7a4f8-794a-4bae-9319-28adbdbfd32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "09a6df54-f632-4e64-9ea2-a57c0d1ebc8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de0ab422-0c8d-488d-ae9d-e1642b06d8f6",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ed9f40-6c2b-43dd-b999-1d9431f4a05d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d16753a5-525b-4464-ad38-132bd9db75cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f3ad97-9eab-4cb6-a769-349d855880ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fea870e7-aa02-4c03-ba01-0c4253d88bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1705843c-d608-4311-98df-2775318d725e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9759ff4-d9e3-4fdc-9667-65d2a578f0bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9298998f-11c1-47fb-9920-ed443a3c0e35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e81038-5feb-468e-a124-299e94fecc3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "32c5046d-3480-4e8e-a4fc-9e029800f286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "448f1cd9-eaf9-4f00-a119-cd3a103b2417",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2398620-87ce-4f8c-b1d4-ef1f04526cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2da89e79-7934-4412-831c-54900595a9b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f1a04b5-af76-462e-a9cb-21606a9d946b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bcc8f0d2-91f2-48fa-a436-b4fadc53a1e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4a1053-3f5c-4596-b0a2-a06b4b259e59",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee325b82-137e-4d0a-9a9a-6523297908e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "237616ce-7251-4a73-b361-5252c57468e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd17de4b-9db8-4a8e-a843-681958d4baf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f1440dd-3797-4bc8-bd87-4d245111a39d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c882fa96-fc74-4a41-a147-18b3282cef0f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e6c7539-2751-430b-8116-12628505aa18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d471b83-d14e-4ff2-9dd3-7c07f5cb55c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd4d7708-07fb-4edc-9acd-0ce1277a7289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0bac3c5-ac4c-4761-bd4c-2a727c7e14c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7583c85c-9ffb-4e9c-b97f-e2d2281b3780",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0298a669-13e3-471e-a98e-97425c5bfbbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54d948f4-3d4c-4c7a-b169-016fb106ea3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "747ce982-99bb-4102-9163-dd91b3a92db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e4719b6-7672-442f-a0f8-63e21c7bf37a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f19b1819-288c-41aa-ab36-d36d3ebbe12c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e08204-5be0-407a-ac2e-29d0b93626f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1f276f8-d665-476b-852b-ebe2e305cfe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7aa7323-7819-4f9c-a8ce-683a8c3da784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "15184a8c-b370-4f1d-b1fb-3dd040807976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde80547-d6fc-484a-9cee-59cad06e7411",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2a88f2-ac66-4ef6-91d6-56d87c29d91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2c57e29-88a3-4cc4-842d-70161434dd76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc052d9e-44cf-4abf-9b54-0fb46fdfa2fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed8bc35f-f21b-43a1-b244-e306fc999004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7443f9b5-5f4e-4ac4-a74d-3ba581c95f70",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1fcbe66-1834-44c9-8ea6-44d6b1eb1990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3123363-e962-486c-863d-6419337d5cc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05568eaa-0d53-488f-9646-802387b2a150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "52a8a6e9-25d0-4ac2-bb28-c54562ad64b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f57fad-647f-4d24-8bc4-d13b22efea23",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef6abd04-63d4-4e29-a31a-d4a1fd2e45d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee9de3c2-f636-4f3b-912a-55f113392036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d8045bb-ba3c-4ba0-bb66-b30c87a7aa7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "917968c9-f103-4a9c-b34f-70398489def2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ca6f47-7faf-4181-84da-5bdd5710da96",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1689675-08be-4c36-9e48-00e431228f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36337c55-976c-4369-bf23-067f403049eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8417f066-cec7-4c46-b62c-8a97063368a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec925f28-f4e1-4dd1-8dc2-0a3bea7a8440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d0c76d3-b032-4b7c-98ee-9365c106d147",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9170243b-a3c5-401b-b314-d1de7a087ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47fd8465-d641-412c-8aae-b80f54a0d3df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c56a16ea-7fc2-4740-af1c-e0906dc0366f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fd45bee-2c96-4d29-9a14-bffc866273aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd8f990-c332-4248-9292-003aa2d29265",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a181e4-9c37-41f3-bc56-dd788b6b3fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99f69df4-57c7-4675-b1d9-b09e20e43ce4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c01b02b-8691-42ba-9d53-7a042e4de4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c29d6a38-ea67-4767-86be-52e18cfe35cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6737f58-f728-4753-ae16-094bc22395ca",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91bc94d4-6de4-4c23-a83d-6fa5ec3b5d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "944fa91b-1052-4f88-a184-90d735ac0131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c7a1bd-a0f9-4b29-958b-26c4e9936964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6360372c-cc0b-4418-a3ea-a8733ba4b1b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b70bdc07-3e98-495c-914c-49d9c7bc1322",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c542efe-aa34-4ea1-a1e6-56e1042e2205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1181b7b3-b647-4824-bb12-db0eec2ae07c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c610df9-1195-46d5-b024-580984a6de65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e063e966-8761-43b0-9559-9e34a8e43d73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591359a5-9660-47b2-bdce-da6d06679d02",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9726ef7-743e-4b5d-9d56-d3184e6a6755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "189ee3c8-3aba-435d-b060-aeafdc0eff66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92dc1a2-d1d3-44b3-8d22-49ef28a1a9f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "000b3cc1-444e-4435-9ab2-f423aac40153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a32a487-20ef-412b-8695-e6a648c70ef1",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d5fa2c-b52f-49c1-adeb-ed95d31f0439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "902d5826-7b6c-43f8-b037-68e676551324"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf5cd7a-d1b9-4adf-ac2f-6e31988ef0b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "243bf90d-a356-4afa-9a44-071001a201be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19bc4c6-db5c-4423-9be5-d0c9c8ea2320",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19cc5c1e-abf2-4c9f-baaa-148a7019641c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c892fe8-f0aa-4531-8b5a-e3a679b878f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56d8b60f-168f-486f-bda7-de04f5fdd617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "574776dc-b307-492a-a309-75540d1bac88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39917833-0c20-4a50-a777-17ca0cb2d893",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e497a670-f17b-4674-898d-0d215e879055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c785f57-dbe1-43a0-ab05-dd3a73f818ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0243b718-3939-409e-bfab-802789640a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "03333e2f-bd8b-41c5-b551-e8fa7fde43fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed82031-3e81-4700-8041-92268c757248",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d154bd36-3066-4413-b658-3386287b3582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73fe6dfe-6b0e-4bf8-9810-31ad174c78d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d308c00-0881-4f06-abe2-b5384589cc44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d11a7544-286d-4eff-901b-e468f4f66708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab9cae6-46f2-4798-b693-65b952908193",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72525668-5fec-43f0-9f03-71bfcb9898a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "131122fa-4316-496d-bcc5-dde1d73876aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d69a0d-9b2d-43f3-8cde-e968f317b7b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "dfdb65d2-b870-41fd-b6ce-9ca998517da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d9c33ea-e184-4615-a590-69c1b35952cd",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98eab975-48b6-4cff-94e4-442788b1a402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9ac526f-6020-4ef2-80fe-9a4bcac75519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad770690-9cce-4d3c-9a06-360854229f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4a5b1597-4485-4ec7-9cb6-e043f95ce135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3892105a-de49-4bce-b059-8cf68c34694d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ca37db-6ac5-46c6-985c-54f78f54c568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb9536c7-83d3-47f9-b0f7-1d24921e875f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff21700c-e176-4009-8087-c2d958c8eb92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8815c7e-5e00-43ef-9044-c55762f18328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d903c897-652e-46c4-84aa-96e26edc2197",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93666756-3d38-475e-838d-37282527d3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c088b5c-65b2-4445-8e69-47236a9cb6c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d750c01-dc17-4fe8-a8b9-de58d62f6efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "64de867d-f4f7-4fe5-8e5e-4b3f0fed00ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51a34e3c-5206-4c09-8b4f-8e5d2070cf7f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cac954d3-9604-44f1-863f-e81d7186e77d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17bc1bf4-7b05-4452-bbc0-1bbdf8f37f0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40f04d67-6315-4ad4-8968-c3997eb2e891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f0ecf90-e05e-47cb-a13b-263953f9cfe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16aa6d68-78b0-4369-896c-c7836c9ecf50",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb54f8d9-2101-4f18-ae92-62d3b8c97b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1751e257-6dae-4eb4-91d4-c658ffa8a056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e43004ed-3cdd-42ab-9bbc-ff1e95bf197b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "58716b86-b977-4fb4-9d72-9a200a40802c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37de71cf-ccfb-4443-997a-eb5adbf10e80",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "604f7d9b-a2bc-4730-b841-24afed579403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8594a37e-87b1-41c4-b005-1703f5889be0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "713d793a-54c4-49de-bb70-1da59b379d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b479760-2dc9-4554-a6cc-fa507ef1059d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced52cf2-8a4f-478b-a315-82510fc4a61f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb4c179-78c0-4794-8a98-b3af046a5cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08edb228-a880-4f82-8987-83dbc9c2e0f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f45a27b7-66ff-43d8-9657-962fd2e318c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6dac4373-9304-469c-ba67-90d7833de51a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61ff7bda-7d3e-476b-b9c9-ff889393698c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "140b6220-4045-4a89-9c40-d6c0b5cb2c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b36c084c-253c-4929-8fa6-0cb026c67000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3297e9c4-50ae-4816-b582-f601edb5051b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe4403d5-71a4-4c31-8e0b-72e1c7b0720b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e63ceada-7b52-48ae-b751-3fd314c65207",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a272e57d-2bbb-4ab2-a38f-5ee45ebf5ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a457de02-340b-4840-bf3d-d131b38c2e99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04df412a-35c9-434f-a291-3768206a9938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "26bf7365-caa8-4254-a9a1-4f2169df5e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e5de4d-32a7-497a-9377-d57e061a1817",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a24abe-4e2f-44f5-bb46-67fc37cf5824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41daa550-0f63-462e-aa36-74b4273a9c1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5dca8d0-2c7b-4995-bf8d-e0e9afa25c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "89b3d2e5-f334-4938-87ff-0e46c7e6fc60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed845ea-7455-4be8-bc0e-2a1a58782887",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf351c4-2865-4cb1-aea6-f41c5fe3515d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6635d1f1-ea4b-4ca3-8f55-8b1779327940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec2415d6-ab8d-4f93-8027-16fa4286559b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffadf0dd-88f9-45c8-b993-9f0ff0ace569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e3e1c9-9968-4a95-8847-4f5566ae558e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be0d6ad8-6972-4efc-b083-6b68f1ad125d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dee38856-2f0a-4faa-8384-a43b712947eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c6169da-6193-4113-b6c6-3fdb39a2c75b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "db12f9f6-ad1b-4b37-aac5-732cb9acf523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c06c973-a0d2-4f2c-9e92-94deb8c578d9",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c54e6a8-cddc-4a87-b096-60b2bd4ebcf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e65de3aa-0690-457d-8907-1c2a3e76e36d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "384e0536-f724-45b8-9cd2-c207c7a73b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "29b4cdd0-c1e7-496b-90b1-c5f5bbdc98b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e380113-177c-47a7-b489-a4a605587529",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ccad6c-c750-4b2e-a551-dac027c4fcfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb59ced4-9004-473c-8ffa-4f16f66d762a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3abacd0b-b2ed-4991-a421-fe9e1933b265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2ac080a-2846-4ba6-a393-6850a3b46296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66700331-c76d-44e9-8059-38578afe66f8",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4517462-3de6-4ecf-9674-bd601ccca442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18b4b1a4-88a2-4cf3-a429-92c5aeb414b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0200dffc-d64a-450b-b4b5-44a9bf091324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "55174411-9812-428a-a9e7-ae0eee4c2d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdcc9a37-9ce6-47b6-adbd-c48bb27d8d36",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7456499c-b37c-4384-8ea9-90870cfd9725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a235e7a1-5a8e-49d8-b693-900d706b4353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "609570ed-8e61-48ba-bf0d-e2c26f7e3303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "40c1d668-a1ea-4e2a-85b8-82766e3e952d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ddb384d-598c-41b3-a1e8-50336fbcb50f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef2c093-c640-4087-8baf-bd26da846edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "583caa36-aefa-421d-a41c-d5d940d866d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5440a651-6dd9-4bb6-ac81-c150175ac9b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a6f13ce-f6f8-4bfb-81c6-b7fe241f510e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa2a69d-f1b4-4353-aedb-b508c9af9276",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "094e0bcd-77a0-43fe-ba7c-870313c44467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b3db693-354d-4061-b5ae-5490dbdc910d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e1932f-07dd-4330-962b-c8e2d924ff02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4fe7ecea-320d-4d2c-af51-74a05c64cdc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f35d90-8f0a-4665-82d5-c353f7f82113",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc43090-73a7-4c87-902e-f1f332fa495f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6613ea78-93fa-4f58-8c58-de61c704ce6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61c4159e-4dce-4e52-bfc3-09e1be1e7c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5d95c88-12ee-462b-856f-85f9d7218e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36bd3df8-ee9a-4ce2-9297-fc74a83a3d83",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69fd9feb-5be9-425f-8756-2149a4c82df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "989616d6-8e59-4935-9675-569a70c353de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20785d5-d097-4a3c-9859-c9d7788d0204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6dbc12c7-f59f-4aeb-a886-e6f72bc67a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ca1f45-a706-4a6c-967b-37b6e793c216",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "362c9e9e-fe62-4e0c-aaab-34fec5d5fe6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9bc23db-06e6-4281-866d-4c16a448ffeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ada7d7f-c406-4103-9160-d4ab82fa29e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ce48e88-ab8c-41cf-ab3a-d31377368ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b21446-8629-4c54-8087-8a5d9175d305",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47427d97-92a7-43f9-84db-b06a31efeb69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c51c217d-2ee7-4432-9cb0-b3610ae671d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb5d87dc-6c02-4d41-86ec-92f9563ffd60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f900ba13-2c29-4c2c-a169-bdf5483acdc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd6405e-2485-47cb-a307-25ec26acd578",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6500cd63-d899-4c51-8714-c387085ef7d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2a8fc86-e94b-43cd-8944-909876860cf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e7218c2-6e8e-4bea-bb4b-78d5e21ae788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "41628688-e5dc-40eb-8b90-3a65e834264d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "836987b5-81ba-4cfd-a61c-6b6171bf7048",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f53a2e-d4d4-42b3-873c-5e46d3b1bc82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e47183b-85dc-4993-a718-37cf0dbbad71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b8ffc6-d018-460d-86a7-1708aee5ee00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "11a4ad20-27e9-424c-a342-09d462a510ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db61e68-a9aa-438c-8f6b-c1f92fe1a5a7",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f99c72-2102-4b3a-9aba-6386bbdf81a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8a7afc4-b5f5-4680-b16b-64d7605f70b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bf01f49-3d60-4d9f-a28b-bf8b82e53dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a8890bb-e9c6-477f-aef4-8e1a04a79201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bce211b-3ff5-430d-9da7-ba406fad1e15",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce3e282-a7bf-46ed-b89b-f812be051e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7f90b1d-669b-4207-9dc8-d993e3fd2be6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f58aa9-42fd-425b-b4a9-b276ba13ce72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d6fe83ce-8c4d-4663-89c1-3d04e9cf3118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627dd97d-9124-4fc3-8211-b2c571f2b6e4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b71d54ea-16fa-4c11-beae-bb8aa2c910dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c09c77f2-0fca-4c91-b5e8-31a6c9341861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8aff5c-51cb-4a7a-b5e2-26148f196413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b992995-3d73-4e01-80ee-61dae9501fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d722089f-f752-43cb-84dd-51904a285fb8",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c55c867d-ac1c-4fc3-9e13-8ba59670eaa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc3c84d2-9b95-4a3f-b33b-3f51a3003825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c72cde5f-91ca-4383-98d3-c97edda63b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "45966d0a-3e73-4768-be81-edebddce0828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a8afad0-36a9-410f-89c4-5de4e10cc6d8",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e2ee38-23c1-464e-8eb3-5831424cb0a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f337bdeb-cf6a-4a12-9379-ecf872db5abb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2325915e-f0a5-47a6-b527-180dc489a0d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e12d080-d65a-4144-bc4c-13b19ca7670b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "925f72bf-c731-4233-859e-dec45227e45c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd727d2-ec97-445c-90cc-e9a6426f0d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e72d221-c063-4940-9ca3-248e8d5b043c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da7e917-d79f-4cbc-bf6f-7a5aa9d670e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "39e3d6f0-9412-41d7-95d5-4cc689eee7b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801c068e-9bfb-4f6f-8664-9979ca7ce831",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce4817c-7416-4dcd-b3aa-15a437c2db40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5ca98fa-84e8-499d-ac0d-71849be07e44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d325492-f739-4164-8cfb-a82249883c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9dd0ef1a-137f-4f48-8c56-c513536f8365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d57b6399-b701-434e-b865-9194ab47cf5a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1de62e97-fa62-4680-bc7e-0dd93f83b9a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c700cb34-0cdd-4498-b436-40d219d0ed9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1669676-23c7-48ab-8a5e-474184c34134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "25805527-32e4-4f6b-a803-34e81100c416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f63372-2f66-476d-9b63-7a4748ae9863",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "813a30c7-60a3-489a-ad35-1a6d291df319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "314569c4-5fe1-4063-9983-506ea38654f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "367d64c9-64c8-4914-8cbe-11297c70a0d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "83ab54d0-eb4c-40c1-a9d2-f51ca841971d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "740e9af8-68ec-41a9-bb65-13664017616f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f01724-fb92-4ef9-b7c2-e4ad86bf0333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b35888e-cb0e-45f9-9fe6-8563bebdb803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c50895a-0c8e-4cff-93aa-c6d35dde7b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "373a819c-e8c5-43b8-bd2a-01a97872f7dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0bdd8c-131a-471f-b138-8e0791f17c19",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "829d2313-31c9-46fb-b6fe-7b0a38496e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "116e0f54-2e69-4eb4-8822-1dae262b9508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "860c03ae-2f85-48d4-94cc-6d1dd394ab69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "96c7a03d-967a-4aa9-b3dc-c5492058ff54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb9cb34-a673-4969-846c-fd0c3cc21a78",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86635d1b-2969-4048-b893-263992e65b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4860e12-78d8-44ca-a1ab-c3ac3d5b1393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f7d9247-63ee-4ba1-b445-1a23d11cccc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "24c3c048-c201-40d9-83af-ebaeafd619c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741d234a-a702-4819-807f-3daa5d92f434",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "002653a5-49e6-4af9-9f26-1f30eada22d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aece1ab5-1ce2-4740-ba91-316831805bab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11de2486-cd37-4e03-aead-2b552494e1c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "63c3292d-e59c-4040-8619-c51e8fda24fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f6a1a07-4974-47c8-9406-6a7682b18ce8",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "995d660c-2346-4c63-a8e4-68acaa9e66bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47925639-4b71-4fc8-9a55-81bae70059cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e124e9d-f9af-423b-b5c6-83309e7cc506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "065f4ded-aaca-428a-8a92-c067a8647d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e2d992c-5a9b-44fe-98be-c8ddd4a6cd62",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65248261-9322-44e4-a802-90ca53865f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4720cb8-d5ff-4889-ae1b-1a9353c49922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bff7b84-119b-4266-8e41-d7aa95c51cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "80fd1e13-80c0-407e-844e-b159f0dabcdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8043c88-62df-4499-95a7-c6eaea9f38c7",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e36d3ed-39b0-4d49-b738-e14b18829b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a588fb3c-eb84-4d78-876d-9203db95551b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ee85a4-5bb4-44e1-a2c0-1f74019dfd9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "289be1ab-377d-4287-a163-36d488ddb9c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f51e7b9-d76f-46ed-b3fb-ed330b83eef3",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1049c8e-94d2-4eb5-babb-0142a126f89c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06b43e27-efab-4adc-9cdd-bacbc68078ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17be2ff7-eca8-4461-9dbe-f6395de7e92a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4a01dc9-894d-4012-9437-bd91675ac106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2be11f5c-703a-41be-b7f2-8b641ec26b29",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "860b29fa-e6c6-452f-8c79-89fa81ad532d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f4d411f-7841-4491-bac4-02c9ec7cef59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8658d999-dd8f-46d8-8524-a8e134f86cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d20b618a-dc4a-4f67-a7fc-2c762636f32c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7acd1f15-b992-4252-958d-68a10b4c528b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcce4625-0402-4c49-9350-d7cdf9145a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59d2ea7c-369b-439e-a6bf-738daf43bdfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17476fe8-7517-45c9-87b9-01621fc24168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "43453273-295f-4bbb-a243-c12f780916a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db409442-4725-477c-b44f-2af2e9127b77",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63da99a-ad59-44b7-85d6-5c76f0ea9e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3401ee0-0ea8-48a9-8f16-e340b9369c22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b79fafd-b671-4f3b-bd8a-392783ac555f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d18eaf74-b0a0-46cb-95d3-bbd8fe8767da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21af5922-a0ef-47ac-b382-dc29e611844e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea35d50d-0210-4880-9c40-509435c73ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd5ed453-a4b1-49c4-b088-74439434926e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69361cb9-7e17-41d7-95f6-ee78aa9e521d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c447e455-ea57-4206-826e-95ae485d9ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e6de300-6f78-4b27-8a0d-eb05537ce0f3",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a1f36e0-8c09-4985-b10c-1da82df404b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9a7fa7c-f669-4c64-a6cd-98767d24e0c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a631e5c-8019-4f12-8cdc-364d3d893b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c92e7a5e-04ee-438c-a70b-22367e00ddd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f186e2-5b3f-449d-9d9e-e169645d6d0b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f91580-aae2-4604-8c36-45c61eb29c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c43bd72b-428e-4318-b31e-08718534f52b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b347501-fefc-4dfa-8564-b922def0f15d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0b2a412-5c4b-4ae0-a3e3-47e482a01788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2457c737-768a-4f35-b8bd-ee3d32061cab",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d201eb-08e8-441a-afd7-d74c8d189ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d4ef391-b3b7-4230-aa5a-21c2577aab3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c19e920b-1be4-4e09-86bf-e86d5091c00b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "97a8ff41-4f48-48c4-9f8b-940c970d39d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a44d07fe-725d-412d-8536-ca15941562bb",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f60a6daf-767e-494c-9197-c7fe7da47a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74ae787f-7e48-41bf-bd01-5d92731cff01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba2a2b8-cec0-4fee-b262-3e1b2fea6aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0ada6cb-39d8-4e3c-9d62-e73450b318cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f9ed8b-d891-446c-aa79-82968d7781ad",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b114b150-c2d2-4616-b100-bd5f0269649e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18739dbb-750a-44ce-9859-5860ee0b0c10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02dea4b7-3cce-4dc2-8ce0-da55d68ea0f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c134706-9cfc-4de4-ad6f-420a3daa1171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "280ded8f-40fc-47f7-b5fe-65329e821499",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc13497-fed6-43f6-b9a7-16686d15b83a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "95f3875b-5197-4011-8e4f-ddc3da7f5724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f02c5937-664d-4d78-bd38-79a82304c21f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "293249be-b1f2-4d7e-91fa-56c07cdcc20c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ca554234-698c-45dc-a9cf-5d981a7f8f6a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3db97290-ac22-4bbc-8059-c499b5c0d542",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf570ac-d73a-4e59-87fe-b24832305022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "169fb97d-e41b-4736-827b-c2a211cb92ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f59694-7b8b-4a44-a01e-3b9f5db000c6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d7da684-d49c-43da-886c-d3069a3c0512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf2235e3-da30-4802-a217-af0e9b89f25d",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7750d89a-a131-47bc-92fc-9d263387579e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3462ddfc-7410-4b61-a22e-a1624f0ecb54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5fa6246-0029-4124-8629-893b68220003",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b4127ca-0738-4b9c-9023-63da39138f24"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0935756-3c41-4587-9ae5-b6f15d706435",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d045308-6690-4e4d-985c-e2c886985a0b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f9d9194-ce02-4425-bb51-b3f28cfb51f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b11643fd-6da4-4d39-a27c-695b2d4462e9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "acfe792e-1f37-4a8a-81f6-da74797697e1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a50bad3c-e672-46da-8694-f17a652bbefb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "786b279a-5001-4a03-a680-c532bcf4f8a1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c8510efb-8e1a-49bc-ab3e-7a18065d5673"
                }
              }
            ]
          },
          {
            "id": "f6c29fc0-9c1c-47bc-a1e2-92f6d2dd55eb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "031953d6-fcf4-4d1f-9a53-27c6833f49f2",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa8aef45-b6be-4746-99ff-7492cc9fd9cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6f77cf16-f5d0-4512-b0ef-5516eb6ac00a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "efefa77c-b18f-47be-9b1c-aca528befaae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "750d063c-e80c-439e-aa73-1e789fd75507"
                    }
                  }
                ]
              },
              {
                "id": "cf265bc9-7e62-4fec-90dd-2cf0cc120335",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "71815c87-fb60-4f27-a74a-949160c7f1b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "af442816-5099-4639-aae1-87f32f000654"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ebbcd3c-795e-4fcf-bf76-beff2f09e60d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ef749cec-8773-45af-a114-5a5493282615"
                    }
                  }
                ]
              },
              {
                "id": "4ee011a2-4d54-4291-8605-3d2f5ef678a8",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "48d32997-954d-4685-8522-2ad0d87dc1c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d98e5467-cc89-47cf-a55b-aab8ba6af81e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4fdec68-7771-4830-9579-8b8e9f9f98e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2ea4716f-fe9c-46cb-9123-06996a22f4f3"
                    }
                  }
                ]
              },
              {
                "id": "75f6c87c-0173-460b-8c46-e0700b7fbd25",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "22dbc317-654e-466b-abcc-ac897c7e0a80",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "54846ab4-5508-45cd-b693-b20e7a0274bc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e19dbe5-9d6b-4c0d-8463-90095354638f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e558efd3-87d8-4867-bb90-7259974d89ef"
                    }
                  }
                ]
              },
              {
                "id": "238e2fa3-10ea-4c09-8656-16df6813604b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "25b398e8-3f52-40a4-ae8b-e036e6ad866c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9e92b087-dba8-4b0f-b0a7-7d667dafd3f3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "425fe287-3ce6-4560-b4c8-ce252f72713e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "68dc22e2-1334-459a-acaf-51fae6b4a847"
                    }
                  }
                ]
              },
              {
                "id": "12cbefce-b584-4a36-9ef9-9d78fdbf1946",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f267bb8e-6659-412e-a2d5-73d782306d83",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e7dc81d3-c8db-4968-9e49-b030c28294f5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26eef427-bc85-4557-8c0a-843f874ab494",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "79f93383-61a0-43e2-ad6c-0aac0ebff7f5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f224b2c4-5ba4-479e-befe-18f0df8aeaae",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "755e4194-8914-48ad-9c49-855e60182223"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6723a0f4-d479-4581-9c35-0d7e49b21cca",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9ce5f1f2-1e04-49a1-91aa-bad1a041eeee"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b7026a82-17f9-4b66-a6e7-ff2070b69675",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "43015f4c-41cb-48b8-9128-25714d339c8c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "11974655-25f9-4c06-9143-973a31029199",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "14a089c8-6331-4058-8745-61972e87ee22"
            }
          }
        ]
      },
      {
        "id": "d8dc5b89-973d-44b9-9748-0358909aca43",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ef668aa2-34dc-4530-b25c-fc2cacde51b7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "54a2312b-a8b5-4cad-9238-ad1a2cc48333",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e7d2744a-98a9-4ae1-9d17-71dd56461be1",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eafa005-1b85-42ea-8960-3862764dd9b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2be82634-3570-4c8c-a331-320cc74c95cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddfc3707-f085-40c3-8e76-fb53cbbd73f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2348ef47-973d-4f2b-9ea4-85559efc49d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daaa1193-1c25-422a-89f8-2c5f8412c4cc",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b636aed9-6e1d-45af-b054-ffc875a620bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07b7a9ac-a6f8-494e-a27a-d045d7ecf6a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cfa8cec-3730-4ef3-b007-26dfbbbad8a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cb9e990-6271-4d0c-be39-469b72c4412d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a86f00ec-ba35-4fa9-af9a-44612cabb0f0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6492053b-9ddb-4623-b013-539daee610dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41c327ce-89e4-4433-8201-6a4856525865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d96ab86c-c57e-4b86-8588-4c1c44ab4bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "62d8c433-ca7e-42f1-bb4e-f26a98977e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72437bd3-5be9-47f1-bdd4-72d22689ff5e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d92089-ab14-469e-a1be-844ced99fedd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "050c7065-33f9-41b8-a838-53a986cd3c7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "074cbbe0-df5c-4782-84f5-030a7cb66f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5f9d110-5d37-47a5-bb5f-6b24dfcbd459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1add8321-3e51-4833-9f5b-cab23b6199f0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "377b8d5a-fd4f-46f0-82d9-1dcb9a7fb67d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81ea18a6-0898-4c5c-aed1-0dc36e3a63e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbaa66e7-a23d-4602-9904-678cf0660b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "08bf7eb8-97c8-4a54-ab6d-80569314af61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5d69a0-b5dc-4d83-8e22-937e0b662ff5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea4a3c4a-650e-46b8-b58a-d383e158b7a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5093256-b670-42a8-9111-9a92cb6f0b92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "755e4e19-69bd-437e-af13-6ae1f8da4efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1a458ff-6fe0-44cf-b97f-b8b9475997d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd44cc41-a390-4b45-a1a3-98cb79995a52",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d85383-6c94-4b71-a117-3a55649d3f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac6722bb-ddfd-41dc-9396-6d5766d01314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec49907-244b-4ad5-8012-24352499e95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0c04337-562a-4b67-adfb-6741c75428b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f10d52c5-c032-43a6-abf0-917492713077",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e5f1b7e-fc23-4cce-a050-7c8c9c1f4466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "232bfc2c-5b42-4931-a34d-68dc59ebac74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ef285f-d97b-472b-9e48-350fdc507d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e572694-a309-4210-82ff-26795d62f3f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92e038db-e0bc-40c6-8127-8e4e813d9a3d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a36a85c8-3d23-41ae-917f-bf3398004f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25ce05ef-8743-48ce-8425-ec9bc33698c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ef7e66-c3fb-4377-aa98-4c9d2c5f7b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "61e68149-1391-42a7-981b-3e1017184bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75036a9e-99f1-4646-bc2f-391db54334d2",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f39fc8-ef53-4c08-ab25-adf9e9106555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c107469-05c9-4d05-96c3-2a367ac55fb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06a4793-eddf-4bee-8967-3e9aa977f2e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb2b0682-8a02-4322-8cae-d9503db1a784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4a147c-ce29-4000-a2ec-531079b0ed50",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac57c834-a50e-4b7a-80bf-61064abf67ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2a06b9b-e86c-4d5b-897e-e47ead5da7c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a87654-ea6d-42a4-b1a2-1e5884ba4524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "988214df-ac4b-4a36-b24e-55abacf5a99b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc04377-7195-451c-bc33-1048086b081e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc040c9-640e-4ac7-991c-e0404f69fcb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f755c2fd-bc94-4884-b234-ecab149873d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e07c641b-a20f-40aa-9c9c-da9b87c0789e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2763fa1f-f0da-4da5-b5ad-8fb22755d217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe47097-71f4-4236-bf36-48a48b53d3a0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "226b22d0-e996-4556-9bea-c48a04b6532e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29b1adec-827a-4a28-83c1-1b40766c37bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f3ce5f-8663-4573-8670-cce69d5b742e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5f4e328-5da2-44ba-9e9d-d996c5bd4b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba0d17c-a043-4e8c-a0e9-1581e8ddff16",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02052ef5-1dc2-48e9-805d-5d5633a338ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22456fff-daa6-46dc-892a-e0c9ace9753e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5abcaf8-0e46-4bc7-9d3c-80fce06ad99c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "71a9161f-7c2c-47a0-b1a6-f9d7870912a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c2a122-068f-4e24-a9c2-d852594c1e8f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef16697-a04f-4c80-b6a2-9d561b5be1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9d37b6b-adc3-4bb2-92ca-bfb8f32da1e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f0345b0-350a-471d-b8ee-2b2e3115f511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddb73b07-5b79-4d8b-9eb3-62a5d68dab61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1fc8d3-4264-4b97-8d9f-c7ae995b977f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b66b15bf-2eaa-465a-82cd-c9633b653ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19728091-6794-40e1-ad5d-84f39f12357b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e11a40-08a5-48e2-908b-ef5bfd948889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcf4de78-5c10-4219-bc7f-a01145482bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7d5e59-5b2d-4f9a-9234-cc8430399e47",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d305f57-1760-4ab4-a2d5-fe0beda8d109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c01cd90f-2013-4d56-9a92-d750d4dae33a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2984ab57-a335-4b60-958c-a7d4ef9399d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1df71a0-3676-47c6-b418-4362d18a8ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f52dc29-29aa-4506-a66b-8167b50801c5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1edd752-e05b-4fd9-9c07-0544dcb0f70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97a06443-34d7-4226-a1a8-a8f3ff21d343"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de735c11-dab8-42f9-a117-3cf234a914f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a24e19c8-6652-40fe-8450-941412e9a4dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340e28d0-3bef-4e29-bb80-93c21889faa5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f77d6415-3976-4055-adb8-0de79fc73ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58b0d802-5245-4311-a11a-1d1d74dbf6c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f36a0cb5-4320-44d1-9238-9f48ff51a177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8c5d9fd-2640-4f42-b945-c1207ea99c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e57095d0-13ab-4f57-94a6-e4998a4c573c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c82dc131-9aa8-4e4b-9ee5-e13d188b8195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "842a3e3b-2a04-479d-a7fd-7314955243b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb4c3d2e-3097-4e16-a049-0b22d7e90200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f29c126-3a71-42b9-8be0-63f3e1553389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33ae516c-2813-4ee0-a87f-d7bf10a33307",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc4986c-d79e-4afc-a09a-44952f89e31b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2621bc2-da1f-4a48-a727-9fe97ead9842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4069c974-63b0-4f1c-8f30-65b9ac8ec880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5933b145-04a4-4942-bbb0-78f1f51a8fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40084de6-eee6-4346-9cf1-83a2d9bc99bd",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26368640-c769-4b36-9a43-106a70f2ad2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b747a90-eda6-4e61-8eb3-134415cc3d1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23cb7642-2a8e-4006-a4e9-84ccdf2f431b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c912aa0-09a4-478e-af88-1a30c22aa61c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9dd8fe2-79b1-4b84-ae5d-a7e8731e4a3e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dcfb3ea-3594-4e39-b34f-1a7822477321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "032866e9-cc34-411b-8206-7176c27fb759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63976e6-e64a-402f-9664-d552bc62410a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4da68e0-9a88-4e4d-9cb2-4aa1358daf55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b7ce178-f68c-41dd-884e-3dd40f53391f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fcca1e0-b3e9-4c1b-bcc2-87a16e2afa7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d8e7b76-2038-4174-b4e8-9cd170fbdfc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd6a319-552c-497c-bbc5-33fa185b8ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ee732da-5b5b-4dbe-860e-1dba9304f62f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9100a8c6-b045-4d27-ac27-543ff0ced143",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b8655cd-d4b0-4c68-8bdf-17b9bd219ffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa6f846c-e89c-4975-a6e4-f33bd90951d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f58675-98db-4782-ace9-43d33f68844d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88eb27f5-6a2f-415b-bfaa-24de5385fbef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd16f17-1484-4510-8e86-e4a3f31b1f6f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8753486d-c704-4a5c-8654-30eb375ab7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79caf715-6f84-41ef-a810-fdce34f56338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e153a1bd-c8e4-42f1-bea0-ab4997aadfe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53f0e569-b8e2-4633-a713-83e3a635354f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c0210e-8ef2-41e6-aa6a-c648658a672e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf6008e-310b-4987-be74-6ec2b659d9ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0149041-c818-43e0-a2b9-1be54af45193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d785422b-98b6-4e8b-a88a-cf591384b125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6dbce6a-48e2-4494-bc1e-9638f4fd6a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92487a8-aba6-4a57-8e12-cf5eba90984a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d55c5c4-9cbf-40aa-aca6-d2cd1cb85fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50b47296-c4d2-4a9d-b344-06b9af51f0fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4582a45-0445-4672-b7ba-ea79ed3ea6bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5decb736-1ddf-4f3c-9192-c48332f8e61d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "626f6699-af2d-4da2-ae22-18b995863b80",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "940340fa-b978-447f-9212-2785392e71dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f618511d-db1e-4fd8-b51f-7189166704b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0be1dde-db4e-41db-949e-dd955aea1d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4efe30d-cf07-4ad7-89f5-3601c9d0d613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c7ebba9-b68e-4c61-834a-d8612898fc71",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c066f51-8a8a-4dec-b4d9-7a7210d988d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65d939c8-93f9-4aba-a6fe-447d860af40a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab27a12b-e1a7-422d-aaf2-a4ac152d6a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "794a3eab-3197-4778-afb2-25e9986ae164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "300e3100-4055-4c5d-ab78-209d633e687d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "401ddfbe-906f-4941-9d4d-ca6e02c8a877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfec6875-6751-40ef-a6ca-9346d4a01c3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc3021e-9e22-4e7a-b10d-804061918fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d65bd33e-0d76-4b5b-bc63-cfeb67eb2dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "709f6253-ca11-4977-8d7d-2f168b6a580e",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee5d37ad-41dc-4847-bc51-30c88ae60bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6aef5e2-4f8b-4fc4-af69-ad19a74748b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ffb36e-c8e2-4160-b9d1-9b0268588d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17733f33-72e0-48a4-b024-c4e4a13fc6cd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5c9cb124-1cc6-4db4-9236-555ad7fbbe3b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f1f25bb3-b238-4595-bf6a-7e16852c7f87",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9baf30ff-2395-465d-a69c-eb2df3636d1e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f00d3c56-55c0-421a-ac07-a7dbd912994c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f3cdc7-a062-430a-9c73-3026c9495ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d24a2a4b-9c63-4ad9-bc8f-370d8527d70d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc19ffd6-f5cd-43aa-aa6a-389102216bf4",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e007dc-80b2-4bef-8655-7e25116d2e21",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7e000232-bec2-4a8e-a3ad-478e7321358a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad6b68ef-6a5a-4216-9c76-dc80f4d12bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e73eb3c8-d1c9-4fa5-8b60-4e979c6e505a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff42d4c0-ff64-4d40-91cb-f937c589f70f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84de030b-857a-40b2-a2e0-645260ce3d96"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "22439938-140a-4b86-a1da-711393c9890f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e2d133d-2c7c-40ae-bfeb-27dac22dcd73"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "14fcb191-cd4c-4780-b0a9-6379ecf1e943",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bf202ef6-cb72-48ec-8535-84b59176e419"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "df386575-1f3b-4324-bc43-db43e6d04995",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6ec1f173-5e3b-4d14-b69f-d57e1e5ebeda"
            }
          }
        ]
      },
      {
        "id": "752320b6-d6ed-4d37-9b63-07b2b4c36538",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "9633ac86-06a9-4988-9fdb-24f38f893a40",
            "name": "Negative Testing",
            "item": [
              {
                "id": "efa0a7e7-7a19-4e4b-837d-9916832fe89d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7c0ec3bf-7e7d-4696-b849-4422534ed99a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc45ac0-9da3-4a92-9667-cacbf3a8ddd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2529cffa-fe5f-4f6b-a666-a0e83342d450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90a8d973-abd2-495c-a73b-a032bca4eef5",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d31e17-f903-4b0b-85f5-a8e4cdf07355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39eaade5-e51f-4436-bb92-f3dc20de9cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf4d1964-d594-47f8-949d-b596f91f30a1",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd68fd9-e2e3-439e-a88a-466e7fc487b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "685ea258-f8c9-4cb5-90c9-55c990dca069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423f8582-0d50-4c97-a3ae-26e2e6421655",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d49d9c-00a4-421b-96ac-3b98f5ae94ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d60e1048-6366-42ab-b071-3a552c360b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28979835-03fb-4f70-a938-9c05604985dc",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a78736-eaae-41a3-9cac-743ea0d66031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0809f6d-e247-42c3-b852-dceda1c1d1be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bce8c04-05c7-4b2e-b018-f7aa8f49808f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58632704-9f5b-45e3-bb48-8e9798cc0096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10557f32-f4a9-427d-81a0-db6295d00047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa1171e-4500-44fa-b1f4-06328a79de19",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff09f8c3-3a13-44ea-a895-50ffa366906b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "539f88e2-0aed-42ee-85fc-8109e1edd56d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ac3286-ef3b-4117-8894-8329952ef0ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b462d047-0adf-4b84-9a2d-fe65b301ae75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73f857f-c15a-4609-8723-d0589c5b54e4",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f957a6-343b-486d-a9ed-c44cfa87804f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a48a31c7-5263-4339-9d80-b06e35ea24b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7d7e3a-654b-421d-b4b3-819a25eee6b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62b5bbfa-cf20-4fc5-93de-3976b688d42b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdaacaf9-ca47-4587-b8d3-fde549961890",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49cfae59-aef8-44a5-aad0-a344dfffb687",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a18369d4-e951-49e3-9020-b96ed486e2c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c060085-f151-4122-a23c-47e4217175c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75aff58b-5f2f-4f01-b6e6-01a2d6689b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a4ccee-ef53-45dd-8b95-b94c9c7e2177",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f24a2e0-1c73-4b81-88af-1c80850f4fb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7d37b49-7800-4eda-a677-02448eb0f7ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93f9793-e1e8-4633-98cc-17bd006de707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95ccc40d-6cd3-4dc7-8821-12d2b0bf3a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb6859f-95e5-4dd9-829a-6e5e88032d0a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9489c3a4-91a6-4a00-8996-493e0844c447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f665fb9-355b-4e9c-bd21-78490f4a446a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3494814a-2448-47b2-9158-b75f0ae963f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba1bd8ff-69cc-472d-ac38-5953786d7470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b861eac-fbe0-42e9-bcf2-828fbe7c74a4",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "787c2383-86aa-4bb5-a23b-ed82d59f986b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "242f4515-f456-499b-a3d0-bfa6080c1383"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "887147c2-5882-4f5c-8f95-82e652286474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28e42455-17a3-4963-a97f-2117b54cd302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f59cd076-6c20-4d52-96d6-4d3da18532c9",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eba03b9-8266-4ec0-bd7d-23aad559d5d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cefd4428-055b-460b-a4ab-db355614589a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45754290-8c4c-4dca-9bf7-7f4a4ea7c193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88438498-0794-4e38-83f2-2c9ce7d2e743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4773f834-3f89-4eb9-a7b0-1cfc9066f287",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0d70ef-fe83-40a9-8efc-0ce38db688d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bddf966-5831-436a-9b29-38f4fc40b3c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7757ebb-0ea0-4b19-a9f7-b8d0c026a360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ee64f78-e677-4b7b-8e72-1fdf509c8f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cdeca07-beb5-468e-8505-30e3b21b3855",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b7ca58d-c674-4507-8aff-b2872b5b97ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "048bf0e7-a97b-424d-8ec7-d84bc5519849"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa7fa102-62f3-41b6-ba4e-b7702c85b32d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4feadd1f-9ad5-409e-91c5-67d274f04884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e015e722-ee5e-478e-9269-225b4a3608ba",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "969ee93a-8dc1-47ac-a5fe-03a40c3df5bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "265f7c90-84f4-4012-9199-40b7adbf0485"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc9e458-740d-445a-9274-d81fb510bd15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f7a189e-2b70-433f-bb2c-79da2db1e918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58264f12-383c-4474-a005-4ddb8bae2ef7",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "497ab126-b0cb-42ab-8a41-054ad3aa1b36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35dae5bf-28b3-44f8-9229-5135c309f3b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb7280b-0929-4039-91e2-ccbbd3743b4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77ca1fa7-bd81-4cc8-b25d-affd33cf7471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc006da-3841-4181-946c-ef04becc2bce",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa21ae0-a4c6-4e2a-a929-e9f0aefb7b07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8532c6e1-0069-477f-b206-61f99222938c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80141b06-25f2-48a7-8d51-fe89dcf594a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e22b1db-aa83-4b14-b53d-21849ef274e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1671b7d4-252f-4180-9238-2a339cc1ead2",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fda5ee3-1959-4508-b27f-99f36e065afa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a747d74b-9c97-409f-bdaa-312e11437b75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52125ec6-e202-4a1f-8031-e4e3d12b5623",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b46395f-1fed-4685-8bf9-18da9a56b187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c16f927c-a35d-48e5-b7b5-d1803044bc76",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "100d9cd7-3f8d-4cd3-88c2-84884b0e3b74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6cd6e0b-3b9a-4822-b9e2-7b7af3e26548"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e76fef97-1496-4c9e-8d09-b7cb46626159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ac63e28-0bc2-4303-a14c-5acf05df6034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "655de608-75f9-4b9b-ad83-d8f42da91682",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd34615f-c539-49ad-be83-465e5949c752",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5854e26a-1b25-43af-8892-788967a525ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86223cee-44f0-4e87-8c7e-03695f4acc4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46887474-a82e-4a7f-bb77-a3ce4fd494ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd96a310-2720-4ff4-9863-b8fe93e8227f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ec8207-fa09-47d8-b798-3e9a26fa9fd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5280b38-75dc-40aa-ad0b-f7a5d26487c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ff7006-22c2-4c25-a1ee-c10186fb7bc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de69e3fe-5c4d-43a0-8dd2-e7ae961a4872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f87bfc62-4e94-48f8-ad33-776cbf396167",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d14bcdee-2898-40da-8fd5-f96c3d03a09c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52260aa9-5211-4a26-bf78-70f6dcb1a8ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d18d794f-8296-4384-96b9-95ccd5efd810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fdb9209-54ac-414c-9d47-0a47ad8c5260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "993fde84-f0ae-4be7-bfc8-68e37762d2b1",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f89c65f-6597-4f92-8082-cf3cac14c668",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09f678c8-27a5-4a9c-9e85-afc624d7258c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f76234d-eddf-442c-8cfc-4615aca6a7ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50f205fe-9b75-423f-be64-92ae57231607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c365a890-0d89-4e16-a3ca-18c29ceb4b2a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f357f9f1-194b-4f70-a5d1-bd6e2ab66bb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0c285ba-2636-4a15-8940-a1b207c69365"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "967e3645-9846-441b-8bc2-179c6a998870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f66613e-8567-45c2-9fc6-453f78be8fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d09b8e41-eaea-4ed2-b913-44710e5cf050",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a2366b-17c2-44be-b9e3-4af68d069ee0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03703974-b15c-4968-a17e-deb61ed86403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c3dbab6-c1ce-41cd-99f7-32d7a128be75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68329880-4ed3-4c01-bc80-6cd747a8563d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e97ab388-759b-4f3b-b7b6-a2b25211adff",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e7bc24-bc9b-4149-86c2-8a035218a990",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fad30966-12e0-485e-bc26-bf41d5f778e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6a516b5-101f-49cd-816a-c994df3fd3c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "116df893-31fe-4fb2-9ae7-2a2af30b489a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcbdb829-4a69-4e67-821f-bf0dcb1c95a2",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e4305b-766d-4a7f-aef8-f2473d6b6a9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4ef1fa2-bbf8-4088-9a93-112ed43f3c88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b102e494-173c-4edb-8baf-3ece8c23dc12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1ad0569-fcdc-4992-82c1-c1790d9f714b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20002cea-c49a-41b2-9206-8b5ff9ab93e3",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4709053-a78c-4551-99d7-8b11a9fb2cc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40db1dc7-709a-4c6a-8779-3466771d028b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae4a277-0754-4697-bb74-8d03fa60c52d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "508dc6bc-b88e-451b-99f4-87453df79aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c4c3b0d-41dd-434f-ba96-a6955d5949d7",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a21a2d23-b9ba-4532-89af-75eac645414a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a9feba9-ffe0-46c1-a111-271dac5a5926"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "902a2ece-ee83-4cc4-b660-ddcfd762a079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bf18c36-5a7d-43c1-876b-94ab10ef814e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "170106ad-ad03-426a-8fbf-dab8a72532e8",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eacaab9-fa9f-40cb-acbe-2d4424a60adc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcd6781d-3820-4330-8a1f-54162e4fe805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc5735bc-6976-4cf7-bcf1-45d7bac9a6ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a210933e-442e-4383-9704-0e63edbf63e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f9b1f2-cc02-4e97-8da7-b5db398e394f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "444f637c-5e01-4411-b0d2-7f13ce5cf806",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca5a339f-e6be-4f8e-bcc2-ad7614ca4097"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "857f306f-5b1f-4d99-8d4d-9c0fca38de30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43645f99-7aec-4337-96ef-539ef2801acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "105edb1b-49a3-4056-a856-a78e30464421",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f5f58ff-483c-40ea-be26-039fd78305d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f1db741-3bad-4575-9869-426834ac19b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1540545-31aa-4741-961b-1ec69b63205d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18512326-576d-4c21-aa14-f4f45b44e739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53820add-24db-44b6-9f4a-7e473ec8a00c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb3d4fe-2236-43eb-987b-64d62aa928ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f8067a3-384e-44e0-a765-b02d5f968002"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf0bc2a6-8cae-4079-8b25-3c9688a79169",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c60c095d-f9b3-4aa1-b6e3-07b329ff9ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9655637-8a4a-44c3-be19-6e720e33c5bd",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a69349-9c99-4e76-9cfb-a8c67ea2d2f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05b7b3f2-7e86-4361-989b-00e528a918b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9c371e0-9720-4a4f-88aa-d720fa06021f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f47f0dee-069c-48dc-bf01-7ee0e97876dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16da5043-2a45-4d82-8e45-7ae7f856359a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20fc4ae-4705-4905-95e3-8664cf4e21ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2621ede7-7d54-4ad9-a02d-f688503f3f9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16174b5f-2267-4b75-a592-b00c5019b4b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "446a09a3-2315-4a2c-b30b-e46689dbf4d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb82c908-57de-4c72-9c0f-6b84a5861c48",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d12da103-1f49-43e2-b843-3d455752e22e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c32b8aae-4241-43bf-83e0-194c25c1feab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34f1116-5b90-40d8-b088-5f224de86470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06e6cb7e-4823-4b37-9ba2-fd2bc97a12b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091e5d93-eb35-457f-831e-294c2f1481bf",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e575d4-2a07-4b28-98ba-a453c2f1e5a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad67af33-20e4-4fad-a84d-cd1ff05e71fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c1405de-a5a7-4179-a77a-4f74f1f690c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "271c15c8-bb6e-4bba-a558-8edb5c3f65cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90550710-4926-408e-9719-0d366057fe9e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd5c8792-1b2d-41db-9c11-ff6f742e982f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27a8a0fc-2987-4c6d-9ffe-acea3328c83b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "850f2e1b-7f65-4df8-bcd6-239726aa9135",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88b7dcf3-d33c-4b55-8573-10d36fe53518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f7444a-94eb-4daf-b960-dfa265c3a5f7",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6dd8297-9d2a-43b0-bf2b-dab0fc45a736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9ebd3f3-1b77-471b-baa8-bf61e9e96050"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0915bd93-cefe-472c-adec-a37933b50c30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17704726-0cf2-4844-b24e-1181439d3a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c971f408-baa4-47fc-8ae2-57a7821e6aa9",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf721069-02d3-46c9-996b-52fc13ac11ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28d951dc-61d0-4d20-a7cb-c6b9bf7f1e88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "112a6ade-500a-4f4b-b99b-59d7dc857acd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ba89613-5db1-4c10-b2fe-6f513f1a0de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775373f3-b6b0-4530-86c8-0c27ec0ea4c6",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68eee30e-7854-447e-b2fb-86ee881ed3b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76975b56-9776-48be-b2b3-80769e35a943"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9975ce1-51a1-4303-aee2-8476bb029574",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a8368fb-50bd-4c7d-9dad-81aa59adf55f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee37ee9c-02c2-4683-9e5a-412c97c2949e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f34b58-5b21-4ca7-90d5-3fc82a480566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0638b855-9492-4813-b0da-67a745d62783"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85015066-f904-4726-81b7-9d7765d75563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a663d9cc-27cf-40d4-968d-95dcf7b0c830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f808a2e-77f6-4c9e-ae7b-b5527e4c3e9d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a3046e-e4fa-4c83-90a2-b38eaf0b9dd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d754b08-e40c-4ca4-b5fc-8375b5f1efbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "151f75c5-18f2-49c4-b8e4-be0c97c54953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f09e0e3b-f8ca-4174-bace-f32445099cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aee975e-002f-45f7-a068-4fc95cb204a5",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c9457ea-cf1c-47ac-8e62-d1ebec39515c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1afa1d07-9075-4f85-9a44-6e3fc6af7647"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07feb18c-4e9c-43de-b828-9396196893e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be91623b-e598-479d-a955-37fb488521a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cede5752-23d9-4f47-9815-7101c231b1f4",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "381e4422-91e9-48e3-b2dc-89f6cad96d86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b9ebaa0-9d7c-40a7-be39-106fb7ded8ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f3f9782-c424-46b2-bf9e-51a926face7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c288c99-be96-4210-90cb-7323cf40e5a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caad12b7-c49e-4673-8b9e-ca082fb3bd34",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c880a9-05ed-4f5e-bdda-8a89df806465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "501efff5-c041-40f0-b830-d19e2579d484"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb4dd0a-a4a5-436e-8de9-fd3dbed74151",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17337a70-1018-454f-aced-386788e15adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3437daed-f539-4c9e-9ab3-6d8da41949e5",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b42b95d-8ceb-4bbb-bbf2-fb56969f0f86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0fcd102-d93e-4354-91d4-8930e3c5e199"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de49726e-ef34-44d6-a520-aa4b211e26f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12e841d5-16fa-4e31-8991-398b88058a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e2b1db-8e54-48ee-9954-047b20b948b4",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b3f8808-83e2-4286-885a-3b3201e8feca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad577102-d073-41e3-abe9-26085f0bba03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "730c3435-2dd1-4c1d-b653-b28b879132e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "397b1a4b-24da-4082-9bea-a95e461f02f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c285d49d-ee6a-45b2-9fe0-c41d9bd9bf7d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd4d39a-4cc4-4de7-ac98-3b16214d1f32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f89d461e-e6d4-4e5a-9016-25d31ba48612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "361b58c8-41ed-490c-b3ef-1a1b1934c5de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e70297be-76d3-41e3-9313-343321f01d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e17e57ea-06c0-4c1b-8ac0-fc209d3aa8ba",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfef6c42-4b04-4fed-9fdd-cfabfba09c9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88916c70-ef47-40cc-a35d-e2ad04802b3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5400c8ed-5d30-49cc-a52c-d64bf103bfe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc92ef63-edad-4401-8954-fba0990df77e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbfbbd54-0e05-47b4-b1b5-77e71014c1a1",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aa6d480-002c-4391-aca4-26db292abbd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38a3ec7b-a5d5-4e76-a983-5c296d0c258f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a06001d2-ea5f-4987-92a3-c152b9f6fd2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d6bf4fe-c00e-4b98-b0ca-0f854b66bf55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1125fc95-eabf-4382-9fbb-222ff9f7c30c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c6d0c8-ce66-424f-9e54-577ad161bcf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02f9941e-f8ce-4096-b4a3-16826c6dfd6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed3ba40-0b88-4b04-bf9b-422268a4f9d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "804f1fc0-2a3d-45e7-9e45-67028210baf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b647c938-f614-41bb-9529-d772f08f91dd",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9328f1-65cf-4490-8f0f-8a5094cdf0c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9738f339-cae0-4432-aac1-2945b3940fc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54da1af4-1d8d-4444-aa44-a394c7dbfb37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4236179-8eec-4c7a-8595-152d7b277d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcfb40c1-167a-4e5c-acd1-ca110bf5edbf",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec6f6d0-a886-4b56-91d3-e13d1a272d3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "930e57e6-619b-4246-8bbd-215abb4cfd48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ebd735f-9a31-4cf6-a2af-a8d8cc2944d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bd72f08-ec4c-454b-9d9a-2fea8f8acfd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7dbc6ac-ec1d-4a0f-9b14-529a934ea25e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08369d9d-315d-4326-92cd-c8fe173a561c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "345b11a5-dabb-45df-9fb4-c21f4c1e5637"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93124b6b-85aa-4a02-a0b8-1dd3251d6b9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e24bbce-a41d-4371-8371-ff01ca27fb09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f6fc96-1e96-4d99-89f2-18cd92301684",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02847d1b-5c04-4e3a-8371-478cdfa9bced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1bc3e0f-61ed-49dd-9ba8-c2fab7968aa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa41b222-23ab-4086-936f-1c0f4281fb74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be42eec8-41a3-469e-a8f6-37ad3405bf74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e903833f-c753-4a41-be34-b3709b671d96",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba881053-11b9-4c69-a3b7-c7b9acc38d2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c72f7622-6660-4725-87e0-e12d66775730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea85d041-e16a-4ce7-b362-1c309e02c4ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fb24db5-68a8-4d33-ad9d-54ce9e8c89c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e302420c-078e-4efb-8c79-cd3b41788ae4",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa0c0c8-67a3-4703-8ef6-db2882d42aad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a0948f1-d318-453d-ab71-6cf62213edb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1827f715-70f2-459f-a65d-97aab26be3b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb5e9fc6-f9ad-4666-af25-988e7afaa615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6019909f-9ab5-4712-999d-b5f4010962b2",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be20f0da-7756-47b1-af13-825f531b5aab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b031dfc0-acf2-4c98-891d-f415cb51ce6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f9cc1c-2385-4f7d-b77f-2e79ea962332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03f4731d-ba29-4ab1-bdda-d3b2d3b61773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "132cccac-d5eb-4d54-9b20-b83df8602102",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8c7ed0-8d99-4dd9-906a-0fea2755b6a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2db0b3a-38e1-4ec0-8c13-beb258b1f812"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "649444b1-a695-4951-9125-25d9dcaac589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "454e4cb3-8aed-4bd9-9731-efa256cccef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de21077-33e4-4136-9d0b-d6023fe84448",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c454006-8fb8-467e-b8c0-d9da84885d79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b2395c8-bf89-4caf-a29a-dc2d4f575c4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d55db82-ebde-467d-bb93-09d51b7c2e92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd6af981-8206-40f5-8235-3001598a09e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c90f10-84e8-47ce-acc4-c4c0d3e8d6bb",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d11c8228-6a7f-4243-a8d6-ef5bf5659706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e409875-3f29-41ba-b20f-d1fc1e59380a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b150e79a-2d84-4212-ac1b-5b188f16827e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "528d3f97-dbd7-4248-9323-d6de8abb3220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "248577ce-9905-4299-87ba-b3fa364484d9",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d0cefc-79ef-4607-aa17-18982b361cf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d72e730-405e-4a87-ae09-14111948e182"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b18101bc-e814-4bbe-9e43-d52debbe2783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80cfe0e3-76da-4cd6-b7db-fbe64b058ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b4c4fa-a9dd-46e9-a2f4-c8e38a13d0f8",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0580e7dc-cdb0-4b39-bb9e-3583bc24b457",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbb4161e-0642-4413-8ffd-daa36e44d4a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb05316-f1be-48ab-b977-2f64b9ed95df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e32a7272-e215-414d-bb04-cd20f36e8229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf423856-808d-4de1-ae5c-a7d4a147262b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3bcd106-50f0-4db2-b908-986c27b00446",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51babc7e-6a9f-43c4-bd4e-f71aa0244e07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa8d2678-4fd6-4ac6-810f-ce32f1045abd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c91e7b4-f7af-4c79-8666-23d5757e2e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "458f9f51-17ef-4d0c-ace8-d94fe9a97622",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "362f366f-f653-4282-8fda-7153f8578380",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae4900bf-bfc0-4cf4-80a4-ef08b8d279c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed54b0c-3d4e-4c11-a259-b433f79ba22f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07d92ba5-efe6-4d3c-b641-3f3a26a13264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6543a359-8049-42d2-aa28-2bf045aa99ec",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0403a110-8dc3-4b95-b09e-9d499910ac07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "587ea410-415c-446f-808d-1fb8ed10c010"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fed74af3-c93f-4408-9bf9-a4c024da97d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab4a9abd-dde3-48fb-8537-deafab7728f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f9410f-c2dd-4f64-b7e2-52613c7d596c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c63c8ae0-b227-485a-8049-470482c3b069",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c68a13b-2099-4022-badf-7caabd86c35d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1567f0fe-f086-44ee-a05d-b69996a700da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3d0fe93-d788-47ef-89ce-42f02aaeee12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0f4afc9-516d-4be8-a51e-b9516fdb3459",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df9b205-f051-4f92-afc6-9a752afd0f89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81353388-4ff5-43b7-b4ed-02283da42f0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7af435c-1429-49cf-ac3a-dcd06b43e45f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35e5ad88-ff44-4b79-a536-9446da272c45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a70cba-34f9-4600-aa47-7f87f52fe22c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17763bb2-d2f2-4f55-8feb-b510100b459a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80e46ad4-811e-4f9c-adcd-eb55bd3973bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e98fa9-0d39-4d5b-9bd4-0b9bc2fa128d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8399358-c184-469a-aaea-25f2242f8fe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe4ff5b-7264-4bb0-b889-3815329ef2f1",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f8c3da-2883-4f45-bf20-8a06926f169a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6792a795-0fc9-474f-80d3-25af105d7adc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc5d90aa-0201-465d-a306-07bbaa04b334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d63e95dd-60fe-4dde-923a-8808f4baf412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "880e6d29-387d-4cce-9932-07f6427f3f6f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede4f361-b19b-433d-b046-5fe8249e8f3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf297f05-e5f2-42f0-93d8-0d3578a57043"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d2e9345-a3ca-4d94-8fb9-2c6cc7175c3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "203b2519-6021-4de1-8d2e-9ef9323a3e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3a01380-c7af-4932-941f-ae61747d7758",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba3976d-a2a9-4127-b395-e2212cbc543e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e222359f-262c-4234-989f-694ed478fea1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e796b62-26b5-4093-8f5b-d94c6c1eea7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d595df3-5fdb-4026-bc35-74d393fe07ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddb61873-1d81-4c54-bb74-5ee8a1f97ebb",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7557f130-9611-46e4-8a0d-1a6759bfe967",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6183e6a-f402-4b6e-886c-4968108537b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66773747-8f2a-4e05-baaa-c08d19968bdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b22ebf8-edec-4260-ba4f-2b6bf775e1fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e6180d0-5dfc-4acf-b4ce-bd990b5d499f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "409ae5a6-d503-445b-adc1-f479bd9fc6be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c8c6096-3844-4152-a470-f6150c2c6794"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e365b81-b7c8-4695-b6e7-eb5f93ec0b77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f68cee11-8582-42da-80cb-b10ade8f4a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d285aeec-e601-4073-acb1-f92880f177aa",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05369361-e0bb-4581-a062-5a9c022f2ded",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47b7e429-378e-415e-8556-23abb380e94e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5525fb5-2630-4215-9b5a-e24f2cfc6efe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b86c7a8c-ab10-44a4-ba87-fdd78fa91120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c5b4894-ec79-4970-8f8a-f2ea463e3cdf",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce6db1eb-aa84-4dac-affd-63ed9d3fc755",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "440111a8-074d-41b2-8928-35f2d9342738"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2567433-b79f-4f90-a46c-8114e23d120f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "882e8da9-2ea2-45ef-aeb2-df2b62b2828b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c597c88-9782-4992-9fc1-c7690be18843",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec877df-ede5-406e-93c4-c6acf2a2f4e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e859402d-91d9-4f8d-87ed-e98792fef969"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3478d61b-bb5c-4bfc-9334-318a391086a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34caf252-a68d-495f-9379-a52eb11e84f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad7e2a85-ce35-4d49-b742-4d18aaf576e6",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba965dce-d5f5-4564-9861-c9774a53738f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4a7d255-5b73-4ade-ac98-c48c7bf78aae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e160c3-ba48-41c6-a2a4-fff25c1a5239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5841a2ee-5016-4a60-91d7-b4485ff53325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c0f172-6e41-4d2a-ae56-305aaf625bfc",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c71768-3f41-43f2-b07e-84684953311d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bde7e449-a3cf-4529-bf30-b65918d26d53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4339f1f-1f53-47b5-a949-df0af1c21bd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37e18632-9f80-4ece-8b34-96c8f4474539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84721900-a8bd-475e-a65f-78e29384d0d4",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d0bb05-d81f-4a09-977e-39664eda060e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a0f7960-265f-4cde-a2e3-07d45653a8dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "825ba9ec-5cc1-402b-9ea1-be12e63a1934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05921c34-0ce3-469c-afc6-b6debcb66fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb5485a-2929-4929-81f0-af86db6eb416",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "079d192e-b548-4e21-9056-55daa97533eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a2e782f-5f15-460f-8a8a-661aa39396b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51828baf-5271-4a9f-bf3e-d04c459909b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f56a5e0-4de9-4892-958a-ec2077c30169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d44b80-c325-4d39-81d0-2c0eb0af68ab",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623f946b-a82a-45cc-aceb-54fc1edbb81b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0e4b4a6-7f72-435e-9a84-74f65ef9da6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1891d2d6-4f1f-45d8-8c4f-7b5271c9935a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3272371a-7814-416d-ab19-6a63ad00c7de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b32ae8d5-fb8f-4048-8e17-b0d1667108a4",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "030c96ab-07b3-4af5-be9e-a3c101001546",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4ac1ce8-e06e-4672-abd6-1c4c4016eaea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "342c38d9-e775-44cb-934f-b8f19c536d40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3001560f-a351-4667-be12-e6c2384bff99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a03250-c5c1-4f0b-ab9e-60f8ddcfb1ce",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7bd7dd-ab66-433d-8ea2-b617919a194f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1028c547-554c-4d33-8afb-a2c032600800"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7237ba2-3823-4bb1-8c93-4c6f346cfa76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "559c0c40-8cce-43cd-a0fa-8a3f90d7f74c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aad2bda8-4960-46b9-ae2e-8edc7ff8581d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b31d9f-08f8-48c1-be2a-8841fb8905e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f940c90-ffbc-4f04-be98-6448ffac39c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e1f63c-7d4c-4c7d-8b22-1b93d33b2ad5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3e1cc0a-850e-4239-a6e7-2b963a8d735b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1144c2d-4334-4058-887c-bfdabf2c10a2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bdf4f7a-7c5a-482c-a8e6-83007a3ef5dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2595b22a-b267-46a4-900d-644f93f2e799"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ca31d7-31d6-4586-89bd-c85393958a1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "864ece63-5a03-42a6-a230-05b5fec3582a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148a353a-dda9-4268-b26d-b4f24c0a72e3",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a35d561-9df8-4341-9abb-edde2aade081",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea457359-6703-47cf-82fe-4fcd02eeb763"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28020953-8968-4d9c-acd1-bfed35b49b31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9219c02-8391-4405-9ea7-ebef95e5921b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "817e2c7f-e923-4cd8-89a3-1250fb10d812",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a6a01b-fc7a-43ea-bc48-d984f47947d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3427fc2c-c547-4d85-ad28-44485f2e9749"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7106ef5f-5511-467f-866c-014839d32a46",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b0210bd-77ee-4376-92a9-778f40f510f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e464e952-bd2d-4d5d-969c-7f9bd4249566",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e50453-c276-4cf8-a3f7-98a9e04867ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a13b547-8321-4555-b92e-ec77a33bbe95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29304805-25e1-4051-9147-3bfe4e707887",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1e81878-3bfd-4584-ac6d-1a40b8fced64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efbcebe4-abeb-4f38-8053-6a1d57f92c68",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb14cf4-05a7-434b-954e-327be8f0952e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "059bab72-3fbb-48c8-a3c1-eebedaa624e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3656b4f4-adff-4eeb-8a6d-798a6ac35f10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81e9591b-798f-47d4-b01f-87c5e58b1062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e95cd3ce-f62e-4344-8539-5ab08611873d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fbca3cc-c64a-43e3-85c1-b2b60bc22ee3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8019b45-d600-4dfa-8970-50c17562214d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afbd0983-f936-44d9-9e36-6cbd26a9ac7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae61510e-3c26-4068-9fe0-cab0a4cf8412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a9c6aa-510d-4980-a8a5-2b0888188c6d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa7801a-7d88-48e6-a88c-bba4669ab16f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ae89646-b8f9-496f-9e23-48571508c4e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f0ab29-0f3c-488c-896c-28da36d18108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "273d309b-b8e4-4548-99a8-b5937fe7505b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e735228-846c-4933-b434-d97eb32b9cba",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "583305af-8ca3-411d-9373-9680bbe16e3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d93c2f8-4bed-4fa7-b7da-3eddc8b215cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef43739-3409-460a-9cf8-5f1ba0734d86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0da2fee-3cce-48e5-9aee-857e420af2e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d365ef2-6a09-45aa-99f8-9bfe46cf5c78",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa79083-bf59-4d77-8bde-e8da508c0c0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08623613-cc52-4583-8dea-8933de784fb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bbe5c87-b033-4f27-8ec9-98c3b3c9ff05",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f9c8725-3f6d-4f24-ab53-78f87a6fb068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e1fa46-db89-4503-8aa0-0a5f8a90bd5f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a6b5f9c-94bd-4a4c-abf0-c1d9301799d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7489a09-7187-4f6f-b6ae-936ad4b0f336"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4b2dc1-440f-41a0-a6a6-718cb4e7de5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4401badd-3054-45fe-b707-ab605ac864eb"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47597cbe-7c88-4423-88f6-0118754ae076",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "99b6ea7c-6af8-48d5-963f-b503ebc5eb6e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "884c43bf-a1a2-4525-b1aa-ff1b5467e7a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "45a0a70a-4a0f-44df-a61f-3a675627e4eb"
                    }
                  }
                ]
              },
              {
                "id": "978deec9-2c74-4363-adb7-96841fffa2d5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9eff8b5b-921e-4bc7-8a83-932d150e90ca",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "302fbcca-8a1c-4b47-9fcf-5b2f60c52029",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "460ac6c3-4a41-4231-856c-38158202ab7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2135150b-ef1e-4b82-b461-3dceaa1575ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5929bfc8-0382-4cd2-b03a-2c12dfb08170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2160ae3c-7539-4ee2-a05f-9a4b3ae95ed2",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19515d37-1d54-4562-80bd-60638ca23b5e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "81e9bfb0-6dd7-4008-ac2e-a138434d8aff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ec7180-5bcf-4f17-adc2-0c580f92dbd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2075ec6-2142-4293-8337-0a58659390fd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "869d1e62-1161-4602-8e9e-e5221360c211",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ff9cf03-9fbd-41a6-9303-79f9df4810d2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d1f4191-3d9a-410d-b5bc-9cb832febdcb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59377767-802d-42f4-8ea5-673e55c6fd32"
                    }
                  }
                ]
              },
              {
                "id": "efdfe4e3-1b6a-4a3b-bd07-94247cdc128f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "d63415af-0d98-44be-977c-62858c8d9b83",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "076a4eb0-23a2-4e4a-a498-f636ac64d47e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9b15866f-98c9-4b02-bb35-402873c19d2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4cc683d-aba3-4faf-a694-5a51f0985b4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9fb090a-7da8-4e4a-adb5-f9ee9d4d1f5b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ee3fc2e5-2d60-4743-bcef-1d026084a8da",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d9f55747-f2cc-42ae-b70f-366662abe979",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5993ad57-1c07-4f30-ab6e-b48970a13e89",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b8aa489a-d6dc-4813-bc34-a9d3c035cbfd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a92df77-9e3d-4ff2-81d0-3d1c4050fe3b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e472dfc9-afab-49e7-9904-6903f76208de"
                    }
                  }
                ]
              },
              {
                "id": "625867e3-be3b-4d74-8cd8-c60c4ed87bd7",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f650514-f15c-49b6-b502-2993f140049e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "058a8fbc-d9d2-49f3-b554-49c2ae3831a5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f9b5591-253b-4f60-b03e-f9f627c1ebaf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d6e9d2ed-cb01-4a3c-a745-9b6d19d05fbb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4520840f-a851-4a37-b183-812b5bda823e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "fde57582-9e18-4217-9e2c-77cf4aaec2d0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "186204cc-f44e-4867-8a8d-a6db8cb6d17d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "450b7de0-63a7-4813-b9c4-08bf653c9494"
            }
          }
        ]
      },
      {
        "id": "f02a3ae3-c972-43c0-a42d-6e3a3de6fc8d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c06e85e8-f994-427b-beef-89888a13d086",
            "name": "Negative Testing",
            "item": [
              {
                "id": "af010e6f-5237-463d-be9c-4d477c1ffaa4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5a24870b-e5a5-49ee-8941-6aea957abcf5",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95182c0-33cc-49af-b2fd-12f2e6549e5a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d9f513c6-8b27-44dd-8afb-eaf64be4f0d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f71543-943d-4f53-9ff9-1f2097a72900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dc57f445-e76f-4b96-9d16-24d27e91dc93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8180bf7b-bf12-4374-8cd5-7b087ba98a72",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d26044d9-f3d7-4f85-b0e9-073fb51d5261",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "92425171-cee8-4545-b773-86836b1dd8a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07bab2c9-b35d-4353-8bb8-e449780f1f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7e90f0f-81f4-46a4-a469-ff80f4d488a5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d351874-ad6c-4d45-933c-03570feb1c63",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0d10cbf-f6e2-41b8-a437-b1dc99a3553b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2c086e1-75d1-434d-a9b2-81e1df12bc7c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2875f9bb-e905-48fe-a09a-34b15e874c56"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4e14f44c-24f0-4037-8f30-2ef536a935a5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c821d4e1-a57a-4752-b743-30e4e726c4dc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e2b91728-e63c-4e49-9d9f-7bf1e2f98129",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eb00e7a1-514f-48ab-8627-5bbe5608834a"
            }
          }
        ]
      },
      {
        "id": "b591bb7a-591d-4cd5-a0b0-e5c1b97cc328",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0b1bf0a7-6767-41a3-a845-6f06ad227fd1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "470e7867-9e0f-40df-9a5d-d51399ce447d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d8635db7-0a9c-41db-b6bf-2b9c4ea20722",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f5c0edd-105c-4547-8021-45d4412ee4e8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1c49dc9-76c0-4278-818f-2754107b04e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdba25bc-241a-4923-81e2-e97d1d232b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ceeeffc4-e41b-4fca-9a78-64a8f40a5519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd8e6e6-2cdc-4810-a1ac-585fcae0430b",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16b10d3-e0cb-4940-8f85-9dfc3cb9b346",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "66cab54f-a574-49ba-bd9f-dfcd511f4dc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3734ddad-d5d0-4d74-a14e-4bb988c80a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "338416bb-6e9e-458e-80cf-7c40fb523c7b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7fd9f23-6627-4924-94aa-1c497ffb291f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "afd7e7f3-eee4-45de-8054-5b4e2e82e3bb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5538316-ea1f-4953-af0a-c289fbae674d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7acf8807-117f-4639-a8ae-e9ca45247b91"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a2f320ec-89dc-411b-b222-cd1256a35916",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1f48c510-3eb5-47ab-81f3-1dcabed3c770"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "27519079-3715-41e4-8dd0-f23da50b5f08",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "36b531b9-efcc-49a9-82d1-4bf4c97d0d44"
            }
          }
        ]
      },
      {
        "id": "284cd570-e4ef-4487-96f9-80037d17dd0e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "27a3fb70-a5f9-49e4-8744-f25fc4650078",
            "name": "Negative Testing",
            "item": [
              {
                "id": "767ad618-0377-45bb-b9c4-b47df210473d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "93c374a4-5a92-4a7a-b2db-694c3c0f14bd",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f987a7ea-748c-4f53-a620-461180affe81",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f7c2651-934a-43be-b446-689895cc03ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a69f406-32d5-4a62-a42a-99a99e25da1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dcfea3f8-2abd-4e3c-acb7-9418860faad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f1ff5a-a5a4-442b-900b-2b6cda82fcf6",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d2d113f-406c-4c62-a76e-fccb223e6b50",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "09059f2b-6a17-420b-a3dc-fafab84fd86e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "305e93be-3e07-47a1-b50d-355f43f707e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ce9ba4d2-b1cd-4de8-bf4b-ecea7c226ebb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b45607a9-6cda-4453-86b0-0defe3767c5a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "efb4e1bd-5ab5-4828-b0e7-e9f4cae96ae1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a812f048-b101-4026-bde3-b49e9ef51ed3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "704f8457-5f41-4a5d-887b-debe40b804ed"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8cbedafe-5dc1-4d7f-bdbd-8684f8151c03",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6818baba-c0e5-406a-8f43-b1bf06d35f57"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c31c99eb-8d84-45ef-baef-d9df276061e6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "11d93f23-3045-4d97-a973-d79cb79fe045"
            }
          }
        ]
      },
      {
        "id": "06ed2bfa-70d0-402f-9c3e-ce0e243b8fd5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "97f3e99d-63d8-4377-ba4b-118990ba5a5e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2bbce5a2-1002-4c4e-a591-6fc29ad14879",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8a53cd63-d71b-439b-8111-e99a170140ee",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4408eda7-4ae6-4c32-ac69-341b30b64cc3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b07224e8-4835-4cf4-a4f7-259d4381a12f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 19.54615384615386,
      "responseMin": 6,
      "responseMax": 373,
      "responseSd": 43.51358966124375,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1681346100244,
      "completed": 1681346115828
    },
    "executions": [
      {
        "id": "21a87f3c-fce4-47e1-96fb-7731251a4354",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2d1b6675-ac8a-46aa-be20-291c66774193",
          "httpRequestId": "25503ad5-4dcc-4883-8750-130704c952a2"
        },
        "item": {
          "id": "21a87f3c-fce4-47e1-96fb-7731251a4354",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "50999a40-969d-4878-995c-b2c5e9e28e47",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 0
        }
      },
      {
        "id": "7a857f24-8707-4a96-b7c3-ba1dca1d502d",
        "cursor": {
          "ref": "b9ee2aa7-0e6f-40d5-874e-0a48204e3c14",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "2a404264-484b-4fe8-a84f-cd40da383888"
        },
        "item": {
          "id": "7a857f24-8707-4a96-b7c3-ba1dca1d502d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f60f156d-e715-48c1-b95b-e9f38cadb2bd",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "719089b7-eb76-4400-9245-7bd78b62e1fa",
        "cursor": {
          "ref": "13f0eded-a716-4822-a32e-25090a66217b",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "1556ebe8-64f2-42ec-aede-2c379400449c"
        },
        "item": {
          "id": "719089b7-eb76-4400-9245-7bd78b62e1fa",
          "name": "did_json"
        },
        "response": {
          "id": "c62832d1-197a-4e04-8103-f8a1fcfa90be",
          "status": "OK",
          "code": 200,
          "responseTime": 215,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc89499-2958-4383-b3dc-17401d017e0a",
        "cursor": {
          "ref": "294622ac-5c26-4b0e-acd7-66e2006e8ade",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "94da5d70-a6d0-4130-ac9a-ebaa37edd655"
        },
        "item": {
          "id": "edc89499-2958-4383-b3dc-17401d017e0a",
          "name": "did:invalid"
        },
        "response": {
          "id": "18a374b1-7dd6-442a-8189-b53782406b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc89499-2958-4383-b3dc-17401d017e0a",
        "cursor": {
          "ref": "294622ac-5c26-4b0e-acd7-66e2006e8ade",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "94da5d70-a6d0-4130-ac9a-ebaa37edd655"
        },
        "item": {
          "id": "edc89499-2958-4383-b3dc-17401d017e0a",
          "name": "did:invalid"
        },
        "response": {
          "id": "18a374b1-7dd6-442a-8189-b53782406b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f95618a-3c05-4dc5-ab7c-898d37f472a8",
        "cursor": {
          "ref": "ad59daa3-f29e-4c93-8119-9c386edc2b25",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a4a13e98-cda4-4b2a-b7b1-5f6b4ee8e2f8"
        },
        "item": {
          "id": "5f95618a-3c05-4dc5-ab7c-898d37f472a8",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "460da15e-a694-4427-b48d-fb387b4eac24",
          "status": "Not Found",
          "code": 404,
          "responseTime": 114,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "006415ed-926a-442e-a0aa-1830a2faff5d",
        "cursor": {
          "ref": "ac529bec-43cf-499a-bcc6-fe67f10b35b3",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "3740fb68-d582-4c5b-af9d-e129675a1eed"
        },
        "item": {
          "id": "006415ed-926a-442e-a0aa-1830a2faff5d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "902442e9-fe3e-48f2-bac3-10d656ebbd47",
          "status": "Not Found",
          "code": 404,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7473a9d-540e-4941-b19e-f347a4bb365c",
        "cursor": {
          "ref": "4242bea5-7f97-4ea0-ac76-b481829ac723",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b9306e05-1a77-4f7d-a3d5-99a82a0fd4d5"
        },
        "item": {
          "id": "d7473a9d-540e-4941-b19e-f347a4bb365c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "03b2c9c7-ca49-41ff-a444-ea3b46fe34cf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d72552-df08-4e7b-b366-38b8b0d0dc76",
        "cursor": {
          "ref": "a19cb216-6f66-45ca-a6dd-09681ba68355",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f0dbfedf-febc-4045-b723-9e54acd1bc07"
        },
        "item": {
          "id": "d8d72552-df08-4e7b-b366-38b8b0d0dc76",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "8fbc026c-83f6-4e4e-bd60-3f7d114eab9c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 9,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d72552-df08-4e7b-b366-38b8b0d0dc76",
        "cursor": {
          "ref": "a19cb216-6f66-45ca-a6dd-09681ba68355",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f0dbfedf-febc-4045-b723-9e54acd1bc07"
        },
        "item": {
          "id": "d8d72552-df08-4e7b-b366-38b8b0d0dc76",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "8fbc026c-83f6-4e4e-bd60-3f7d114eab9c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 9,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a8a4311-7fd0-4327-b5b6-26ec49a685df",
        "cursor": {
          "ref": "6c8a764f-80f5-457f-85e0-5171443806c4",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7077de11-56d7-4109-9ebf-e61fd31180c3"
        },
        "item": {
          "id": "6a8a4311-7fd0-4327-b5b6-26ec49a685df",
          "name": "identifiers"
        },
        "response": {
          "id": "fc9531b0-f7cf-483d-9ba4-50f28afe503b",
          "status": "OK",
          "code": 200,
          "responseTime": 139,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddad4487-8dda-456d-86bc-14caa05b0724",
        "cursor": {
          "ref": "2c91e3d0-0f45-4365-ba69-1724126c8af9",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "36ce3bd3-b20a-4457-8f72-718e79cb4194"
        },
        "item": {
          "id": "ddad4487-8dda-456d-86bc-14caa05b0724",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "cb5be3e5-ce20-48a3-bafd-4d065eb64327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddad4487-8dda-456d-86bc-14caa05b0724",
        "cursor": {
          "ref": "2c91e3d0-0f45-4365-ba69-1724126c8af9",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "36ce3bd3-b20a-4457-8f72-718e79cb4194"
        },
        "item": {
          "id": "ddad4487-8dda-456d-86bc-14caa05b0724",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "cb5be3e5-ce20-48a3-bafd-4d065eb64327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "515c626f-517a-4c1c-adda-43e5fd702801",
        "cursor": {
          "ref": "abe84dfd-585d-4ab0-974a-c9513feb8414",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "cb4fbfbb-75ca-46c6-9841-f11c7e4b16f0"
        },
        "item": {
          "id": "515c626f-517a-4c1c-adda-43e5fd702801",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ac8d8913-e5b2-45ae-b624-3304363d2a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a8aa27c-19aa-4556-ba77-8fe621d33c61",
        "cursor": {
          "ref": "c570679c-b654-41b6-a3c2-4d4c9d0a92c1",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "914f506f-6d8c-43aa-814c-54f584b03fcd"
        },
        "item": {
          "id": "4a8aa27c-19aa-4556-ba77-8fe621d33c61",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "234f58c1-dcfd-4c37-b0ff-2f318984c867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99911029-0951-498e-a743-bfa55f14557d",
        "cursor": {
          "ref": "90ef0f21-4421-4ae2-9710-43b27c67c8bb",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "3298e263-7f93-41e1-8c54-b05fb724c796"
        },
        "item": {
          "id": "99911029-0951-498e-a743-bfa55f14557d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5407d910-ec58-4126-a28f-02059b37bb27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cededc3-6b28-44ff-9280-937c9224ea41",
        "cursor": {
          "ref": "88f25590-b960-43b7-ae88-86c1c79b6b45",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b9220351-f5b0-447a-ad34-76a12ffe1d7f"
        },
        "item": {
          "id": "4cededc3-6b28-44ff-9280-937c9224ea41",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ed14ac05-6406-420e-971c-92840ec1a953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778e4796-dde5-4af9-ae57-b8352f366b33",
        "cursor": {
          "ref": "a96b54e8-0056-44f4-8d3a-e73ec4cdd908",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e68aaab8-fc92-45f2-8705-db4dddcf67cc"
        },
        "item": {
          "id": "778e4796-dde5-4af9-ae57-b8352f366b33",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "210b4123-163e-4c14-bbb9-2b56159dab21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d76284-151a-4683-8a1b-3be0676b4130",
        "cursor": {
          "ref": "d0a15d5b-175f-4f77-b648-5633fa8e06a1",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0f7da259-c846-417e-b974-856ce1b74766"
        },
        "item": {
          "id": "54d76284-151a-4683-8a1b-3be0676b4130",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "cb960c82-ea93-45c3-9497-7174dc9d508f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae645f5-3db4-47a2-8a5a-b33b612b3a7e",
        "cursor": {
          "ref": "f2c85fdc-72c2-4738-83f7-2be600121814",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "89b50c2b-aad7-4ed4-ad22-774cb3f4f867"
        },
        "item": {
          "id": "5ae645f5-3db4-47a2-8a5a-b33b612b3a7e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8581370c-3edc-47a7-bea7-849227ef2e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf56c52-98dd-4b79-9129-1787056275c4",
        "cursor": {
          "ref": "883ee6cf-a0e4-4657-857e-5cfaa8927408",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d3577b06-1f84-4e8a-b136-09286d05f45f"
        },
        "item": {
          "id": "fbf56c52-98dd-4b79-9129-1787056275c4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c7c6fa06-fd1c-4ff7-b46c-ac499a7a0bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a23c5a7-4738-4703-9cac-267b4a625dd9",
        "cursor": {
          "ref": "f3dc0ea3-966e-41ec-91c7-b2b3af2d4563",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "eb93785f-52e8-44a7-bb75-1460f2d11e53"
        },
        "item": {
          "id": "1a23c5a7-4738-4703-9cac-267b4a625dd9",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "46d598b6-a5db-420f-b772-81a3d4ab3612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b66407-c2ff-47d9-a030-5a172c12acd8",
        "cursor": {
          "ref": "22fb3240-e75b-482e-b83f-44101a7b39e1",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "fcbe71fd-5976-44dc-a0b6-a4e3b730c439"
        },
        "item": {
          "id": "d3b66407-c2ff-47d9-a030-5a172c12acd8",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5b05cd82-15a5-4c51-9eae-84f4d8932ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a032a8c-b58f-428b-80a6-9fc98a90677f",
        "cursor": {
          "ref": "6e961135-4f1b-4791-9f03-8ac0baf2eaa7",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "fbab25ae-9416-44cb-95e9-121518e1a65f"
        },
        "item": {
          "id": "6a032a8c-b58f-428b-80a6-9fc98a90677f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d3fa1691-a5c2-4ab1-94f1-2c80fd0e6865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40fc0b00-8ab5-457c-86c7-24788bed87fa",
        "cursor": {
          "ref": "4539649e-1fd7-4816-b104-10de87925b4f",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5ca14647-db59-4663-a6df-349363539ea3"
        },
        "item": {
          "id": "40fc0b00-8ab5-457c-86c7-24788bed87fa",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ebfdc66e-0cda-4297-9f4c-1e12c90d3b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bed81f2-3049-4c24-aafe-d66753e774ac",
        "cursor": {
          "ref": "c230c050-f828-47a2-8596-8f18a791991a",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d395f451-0337-450c-8907-7b20b3d69577"
        },
        "item": {
          "id": "2bed81f2-3049-4c24-aafe-d66753e774ac",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5748f9b7-ad26-4e14-adad-5c31f99770ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69533c61-c26c-4b82-9f26-a53a6421e4da",
        "cursor": {
          "ref": "c6468151-92d9-4b0c-bf89-94126944dc56",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c95de44f-db26-4473-b11f-d132abbfb480"
        },
        "item": {
          "id": "69533c61-c26c-4b82-9f26-a53a6421e4da",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "437c9aea-2557-4053-997e-ddf0c2cc5b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4110028-dc05-4b40-a70d-d319a7949d5b",
        "cursor": {
          "ref": "a785cd9d-9ecb-40a4-884c-a64d8c2f5a96",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e5b34690-faef-48f4-9e30-e85ddfdf81fd"
        },
        "item": {
          "id": "c4110028-dc05-4b40-a70d-d319a7949d5b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "05b52401-da56-438e-8904-e00bb61288b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e64240a-c699-4826-9d80-87728bd48598",
        "cursor": {
          "ref": "765c9d79-41d2-453b-8c0b-1ac9e7ef5fe2",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "bd8b7a25-8139-4a7b-a74f-8ac305859969"
        },
        "item": {
          "id": "2e64240a-c699-4826-9d80-87728bd48598",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "9f01fd4e-301d-448a-8c5b-6a51d620a6a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32635bce-c9e0-4bce-b6a5-bd47dacb8c8b",
        "cursor": {
          "ref": "926043c6-baec-4b46-8192-e5cd19bf5f5c",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "87ccc7fe-74ec-484b-9807-2fb41a196a69"
        },
        "item": {
          "id": "32635bce-c9e0-4bce-b6a5-bd47dacb8c8b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f6e97f1e-2089-4e2d-9219-88657a64ec5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cea8348-fb07-41b9-ba79-16481cb0a052",
        "cursor": {
          "ref": "217db198-fba0-49d8-bb8c-1f3cc5534d79",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "cc8f761a-c5a9-4789-9425-8bd98e302cf2"
        },
        "item": {
          "id": "8cea8348-fb07-41b9-ba79-16481cb0a052",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "0bd4a2d9-da61-43c6-b9ad-0e3b47ea9ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb2dfe7-ba27-49f5-bb32-2dd2ccf27213",
        "cursor": {
          "ref": "9b941f56-06e0-404f-a47a-541921e36288",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b5b29e27-8108-4866-a432-3b3a71829b66"
        },
        "item": {
          "id": "1fb2dfe7-ba27-49f5-bb32-2dd2ccf27213",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a41cf7ed-905a-4bee-b439-84bb4c20e6a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de0ab422-0c8d-488d-ae9d-e1642b06d8f6",
        "cursor": {
          "ref": "d70876cf-58a7-4a99-bbb2-be1998072332",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "6168bb67-44a1-4e86-bd20-6465b1b298f0"
        },
        "item": {
          "id": "de0ab422-0c8d-488d-ae9d-e1642b06d8f6",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "99a9f8f8-3a97-44d1-b450-63c22b86d399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1705843c-d608-4311-98df-2775318d725e",
        "cursor": {
          "ref": "64328397-9d74-460b-9a01-78aae4494076",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7e40efaa-37c1-4842-9bce-bb9fdbd4dfcd"
        },
        "item": {
          "id": "1705843c-d608-4311-98df-2775318d725e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "165eac90-2ddc-4b8e-b922-64f70e7a0c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "448f1cd9-eaf9-4f00-a119-cd3a103b2417",
        "cursor": {
          "ref": "67725b1a-00e7-4044-be2d-0e0476e1cd20",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "58bc0e90-8ecb-4273-801c-3959e7f84525"
        },
        "item": {
          "id": "448f1cd9-eaf9-4f00-a119-cd3a103b2417",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "caa00b68-629f-4319-84db-234dc62ae8e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4a1053-3f5c-4596-b0a2-a06b4b259e59",
        "cursor": {
          "ref": "8bee250a-8837-4ec6-abcc-7d32ecd9194d",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "dbca9302-a3cd-41fa-a6a8-a7b3bd1d0478"
        },
        "item": {
          "id": "dc4a1053-3f5c-4596-b0a2-a06b4b259e59",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f3831da3-cf77-4cd5-8889-df7c08b54519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c882fa96-fc74-4a41-a147-18b3282cef0f",
        "cursor": {
          "ref": "d453dc3e-493a-4015-b0f5-2d0e141cbaa9",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2d76b0d8-167a-4d84-8f02-b0b7ab4af1bb"
        },
        "item": {
          "id": "c882fa96-fc74-4a41-a147-18b3282cef0f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "494a3259-4d1b-46b4-af43-3fb0a57e4436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7583c85c-9ffb-4e9c-b97f-e2d2281b3780",
        "cursor": {
          "ref": "f8db10f2-7b9e-4a4e-86e9-22d8a2f8c3d4",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "eea3aa3d-4c39-4190-86dd-976a6a8b2481"
        },
        "item": {
          "id": "7583c85c-9ffb-4e9c-b97f-e2d2281b3780",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6045ecf0-2658-46d6-9b34-4414ec24b1a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f19b1819-288c-41aa-ab36-d36d3ebbe12c",
        "cursor": {
          "ref": "2d8912ff-8dc4-4ce2-8a28-0bda0d035bef",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "57b52d19-408d-4323-a8be-c99d3b1c1715"
        },
        "item": {
          "id": "f19b1819-288c-41aa-ab36-d36d3ebbe12c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "decfad56-7297-48ec-b623-da649b19da29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde80547-d6fc-484a-9cee-59cad06e7411",
        "cursor": {
          "ref": "dcf3024d-df5c-4c52-8527-ba7bc119f2a5",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1df7ab0b-e2ff-47f0-b582-374ee2d69f8e"
        },
        "item": {
          "id": "bde80547-d6fc-484a-9cee-59cad06e7411",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c1c5838a-7983-444c-a5bc-d61e98f60967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7443f9b5-5f4e-4ac4-a74d-3ba581c95f70",
        "cursor": {
          "ref": "944b467f-9a5f-44aa-9157-8862cc552238",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "0fbefae4-15ba-4225-a92b-8520fdb0da12"
        },
        "item": {
          "id": "7443f9b5-5f4e-4ac4-a74d-3ba581c95f70",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "35386e08-ed2e-444f-9239-954dd697c6b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f57fad-647f-4d24-8bc4-d13b22efea23",
        "cursor": {
          "ref": "9bed474c-9bc6-4be7-b3dd-81e47a179745",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3af31bb6-db57-4b2a-a982-e7278007d056"
        },
        "item": {
          "id": "81f57fad-647f-4d24-8bc4-d13b22efea23",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "404c0506-031c-4a1d-a95e-5c6bcbaad53d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ca6f47-7faf-4181-84da-5bdd5710da96",
        "cursor": {
          "ref": "64fffba1-dadb-49a1-8770-730190f7cec1",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "16f50b9f-66b5-43cb-b96c-7c2eaedb724e"
        },
        "item": {
          "id": "74ca6f47-7faf-4181-84da-5bdd5710da96",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "e0534439-6d02-4943-bc97-697c8b71c45f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0c76d3-b032-4b7c-98ee-9365c106d147",
        "cursor": {
          "ref": "0575293b-3ea0-43e5-9439-ac29be8d21f7",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9d4c72fb-9cbb-43f6-993e-62d36a0847e2"
        },
        "item": {
          "id": "8d0c76d3-b032-4b7c-98ee-9365c106d147",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "9cd5ca01-4574-488f-8bb6-46994bb5862c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd8f990-c332-4248-9292-003aa2d29265",
        "cursor": {
          "ref": "eba3d4a6-3c75-4ae7-973f-7f143a5de9d9",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "57ba250b-653d-42f3-92a8-951a98b18d7f"
        },
        "item": {
          "id": "5bd8f990-c332-4248-9292-003aa2d29265",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a4a6d58b-a687-4e69-9717-6c97dcfa3aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6737f58-f728-4753-ae16-094bc22395ca",
        "cursor": {
          "ref": "c3425957-3d52-4601-b1ee-f78d5ef6073a",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f362afa2-bcef-444a-8786-fdd078fcb6f8"
        },
        "item": {
          "id": "b6737f58-f728-4753-ae16-094bc22395ca",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "fa0da907-3675-448d-b214-0441a6c7e8ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b70bdc07-3e98-495c-914c-49d9c7bc1322",
        "cursor": {
          "ref": "ba3233e4-fb35-4459-8156-02386c00b2e5",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c7d345e8-573d-4f64-9ade-b74cb218646b"
        },
        "item": {
          "id": "b70bdc07-3e98-495c-914c-49d9c7bc1322",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a656d4b0-6759-473a-97dd-46b43ad84abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591359a5-9660-47b2-bdce-da6d06679d02",
        "cursor": {
          "ref": "ab9d2a3e-e72d-4603-acb4-ff9cda01df98",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "593f1868-df47-406d-85da-60e0774f73a7"
        },
        "item": {
          "id": "591359a5-9660-47b2-bdce-da6d06679d02",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "14072f1e-d708-4b75-822e-1971b44785f0",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 18,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a32a487-20ef-412b-8695-e6a648c70ef1",
        "cursor": {
          "ref": "49d70075-54f4-43bd-8b87-9dd3d6f8d763",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "2dca867d-5abb-4d40-9a19-8eb535471d63"
        },
        "item": {
          "id": "1a32a487-20ef-412b-8695-e6a648c70ef1",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2a37ddd4-2f73-4642-bfa3-819333a7cbf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19bc4c6-db5c-4423-9be5-d0c9c8ea2320",
        "cursor": {
          "ref": "aec29174-128d-4069-b37e-851f56fbe358",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "087c4e0c-ffe3-4431-839b-af8874c80fd2"
        },
        "item": {
          "id": "d19bc4c6-db5c-4423-9be5-d0c9c8ea2320",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "4a8e7a57-230a-461c-b29b-975fc52f17a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39917833-0c20-4a50-a777-17ca0cb2d893",
        "cursor": {
          "ref": "b67c0330-219e-4500-a817-3897e3cbddc7",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5ff9201d-97da-4be4-934a-57e1768e9a57"
        },
        "item": {
          "id": "39917833-0c20-4a50-a777-17ca0cb2d893",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "01ecadaa-aa02-4a39-9593-298e5cda1ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed82031-3e81-4700-8041-92268c757248",
        "cursor": {
          "ref": "6d0843c7-1541-468d-82bf-cc27f7f2ef52",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "76fc4a6e-e3f2-498e-8fde-4d6ece7fb490"
        },
        "item": {
          "id": "bed82031-3e81-4700-8041-92268c757248",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f5a79f7f-ee75-48c5-9eaf-7d921cf6413f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab9cae6-46f2-4798-b693-65b952908193",
        "cursor": {
          "ref": "5e2075db-9307-40cc-8e35-3728ffb36c73",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "577b87c0-764b-41b3-9e75-d3f2b23e0fdb"
        },
        "item": {
          "id": "cab9cae6-46f2-4798-b693-65b952908193",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "b63b9370-aacc-433a-9a2b-331379cfbe48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d9c33ea-e184-4615-a590-69c1b35952cd",
        "cursor": {
          "ref": "512b94a1-a25a-407d-96ad-f20730328baa",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b02212be-4918-4a92-b44c-84d29589d33d"
        },
        "item": {
          "id": "0d9c33ea-e184-4615-a590-69c1b35952cd",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "38365a1d-b35a-4a3f-8ba8-221d0ab4b74d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3892105a-de49-4bce-b059-8cf68c34694d",
        "cursor": {
          "ref": "d8b6db04-d0bb-4bf5-b1fd-87d2aeb8dd44",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "dfcd378f-bb3c-4eb4-87ad-6fceef580ed0"
        },
        "item": {
          "id": "3892105a-de49-4bce-b059-8cf68c34694d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "abc8bfed-a69a-41f1-a02e-2b8521034ceb",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 18,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d903c897-652e-46c4-84aa-96e26edc2197",
        "cursor": {
          "ref": "c249a29b-3e08-40f4-9e80-d6746fd9665f",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "db98b07b-12ad-439e-a492-1aad431c120a"
        },
        "item": {
          "id": "d903c897-652e-46c4-84aa-96e26edc2197",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "440c50e1-babc-4bf6-ba7c-cdcdf2b68c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51a34e3c-5206-4c09-8b4f-8e5d2070cf7f",
        "cursor": {
          "ref": "b14df3c4-dcb2-40eb-917a-b388f703f1fd",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "741c770c-d0a8-479d-a56c-b5e6d6efffff"
        },
        "item": {
          "id": "51a34e3c-5206-4c09-8b4f-8e5d2070cf7f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "4fa835a9-8146-4a03-811b-75358bcfb5b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16aa6d68-78b0-4369-896c-c7836c9ecf50",
        "cursor": {
          "ref": "1e576ac1-ac2b-4fe8-a74b-183023477b05",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "09e22494-0586-4f28-855e-2501145bacb4"
        },
        "item": {
          "id": "16aa6d68-78b0-4369-896c-c7836c9ecf50",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9ea8c635-04c3-4179-92a5-fe1aeabf835d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37de71cf-ccfb-4443-997a-eb5adbf10e80",
        "cursor": {
          "ref": "cfc85e71-ac4d-4086-8f32-bf557fdf26ea",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "1d6c3910-2a2a-49ae-9eee-9317c6a82555"
        },
        "item": {
          "id": "37de71cf-ccfb-4443-997a-eb5adbf10e80",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a86a9fad-2e35-4111-bf40-e699246331a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced52cf2-8a4f-478b-a315-82510fc4a61f",
        "cursor": {
          "ref": "e589479d-6aef-4377-b9c2-7bd9a2231b96",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "16ba49dd-d47b-4487-924d-74970ab4557e"
        },
        "item": {
          "id": "ced52cf2-8a4f-478b-a315-82510fc4a61f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3659fd75-b8dc-4526-84f9-1e959424106e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ff7bda-7d3e-476b-b9c9-ff889393698c",
        "cursor": {
          "ref": "54dd8db4-b0d1-49b1-baa3-367ccd2e73f3",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a7d712f1-ef09-4407-a49b-be2a94401ad1"
        },
        "item": {
          "id": "61ff7bda-7d3e-476b-b9c9-ff889393698c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f3ab6ff4-119d-47f5-a556-30858e59ff95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e63ceada-7b52-48ae-b751-3fd314c65207",
        "cursor": {
          "ref": "35122214-ca89-4ead-8a5c-d87fb9f43765",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "2f2d98bb-f088-49cb-b5ab-e2fc64995e9e"
        },
        "item": {
          "id": "e63ceada-7b52-48ae-b751-3fd314c65207",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c4760361-2214-44a8-a369-f71de535344a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e5de4d-32a7-497a-9377-d57e061a1817",
        "cursor": {
          "ref": "ff29a556-575f-4b5a-9478-a689825d310d",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "1cbd0668-d637-4373-8923-0fe6247f5492"
        },
        "item": {
          "id": "83e5de4d-32a7-497a-9377-d57e061a1817",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ea517834-b27a-43ed-b7f4-696026aef929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed845ea-7455-4be8-bc0e-2a1a58782887",
        "cursor": {
          "ref": "a10c29bd-f663-4752-95da-c31cf62e3d0f",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "feaf2e20-6e00-45c0-b816-bca8065f7bc8"
        },
        "item": {
          "id": "fed845ea-7455-4be8-bc0e-2a1a58782887",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "46ada6a5-cc62-4113-914f-50a8f3a0c6c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e3e1c9-9968-4a95-8847-4f5566ae558e",
        "cursor": {
          "ref": "d0fd14bf-7795-494f-90a7-f1a5cb0c404a",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b8c18bc1-94ef-4de1-94c0-6c58d6d4a418"
        },
        "item": {
          "id": "06e3e1c9-9968-4a95-8847-4f5566ae558e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "34d11da5-bba8-4d1d-9e33-914a80e527ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c06c973-a0d2-4f2c-9e92-94deb8c578d9",
        "cursor": {
          "ref": "bae14c84-cfeb-4afa-9671-37ec5036ae54",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f4acf146-bf00-4c69-8dbb-f37e3992230f"
        },
        "item": {
          "id": "3c06c973-a0d2-4f2c-9e92-94deb8c578d9",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "63cf7cad-8e11-4067-a579-31e8c433bce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e380113-177c-47a7-b489-a4a605587529",
        "cursor": {
          "ref": "9fec83e2-b780-45ca-a51b-544311fb482a",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "593d26ea-7b36-4cc9-b40f-2b9755868138"
        },
        "item": {
          "id": "6e380113-177c-47a7-b489-a4a605587529",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "7a8e571b-a89a-449a-a6c0-39f8dc8baa36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66700331-c76d-44e9-8059-38578afe66f8",
        "cursor": {
          "ref": "3400378d-192e-4df7-bbee-f80888d2790a",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3b9327b0-622e-43ee-a9da-05e4bffbb72d"
        },
        "item": {
          "id": "66700331-c76d-44e9-8059-38578afe66f8",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "d0f4e72c-48dc-4f08-a7ea-6b05851204c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdcc9a37-9ce6-47b6-adbd-c48bb27d8d36",
        "cursor": {
          "ref": "ad82598f-941f-4bd0-8777-bd698e2c6c51",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8bcfd71f-9039-40f5-b14b-a0378c7f45dc"
        },
        "item": {
          "id": "cdcc9a37-9ce6-47b6-adbd-c48bb27d8d36",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c57500ae-0137-4ac4-abc1-1293dd2cafcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ddb384d-598c-41b3-a1e8-50336fbcb50f",
        "cursor": {
          "ref": "4bc850b3-6bac-4a73-ae8d-a8a5a029614f",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "60cf3b6c-0675-4c37-8149-166a3b88e5f7"
        },
        "item": {
          "id": "2ddb384d-598c-41b3-a1e8-50336fbcb50f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "902605a8-0d7f-432a-a815-466ac4a3c29b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa2a69d-f1b4-4353-aedb-b508c9af9276",
        "cursor": {
          "ref": "1e059f3d-587d-4d46-b404-6840782deea4",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "4d312f0c-27c8-42cc-9651-7f2beaba3bd6"
        },
        "item": {
          "id": "eaa2a69d-f1b4-4353-aedb-b508c9af9276",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "91d7b3eb-cc3a-479a-ba0b-a571d20b9307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f35d90-8f0a-4665-82d5-c353f7f82113",
        "cursor": {
          "ref": "5c071d30-3ecf-4316-a57a-3973a2d05e8d",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "62e5098b-2953-431f-82c3-1b059fb53901"
        },
        "item": {
          "id": "51f35d90-8f0a-4665-82d5-c353f7f82113",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ed03ec43-afbc-4ad1-8bd5-6738cf200f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36bd3df8-ee9a-4ce2-9297-fc74a83a3d83",
        "cursor": {
          "ref": "05cf464b-f873-4725-9b7e-3a4c3cde8654",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "02349248-01a3-4fa3-8e61-359ab5d025dd"
        },
        "item": {
          "id": "36bd3df8-ee9a-4ce2-9297-fc74a83a3d83",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "200df69c-1aaa-442b-b3b9-439b2e4bbce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ca1f45-a706-4a6c-967b-37b6e793c216",
        "cursor": {
          "ref": "2b794a4e-7165-4391-ab5c-8804ee9ac331",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9d29fb7e-da9a-4f66-9a21-8d81e5156b50"
        },
        "item": {
          "id": "e5ca1f45-a706-4a6c-967b-37b6e793c216",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2d94c347-72c6-4900-b7ff-4e23c8f94011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b21446-8629-4c54-8087-8a5d9175d305",
        "cursor": {
          "ref": "ec5b5771-4b7d-4675-b842-51a82d50f358",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "36858bda-a867-42c8-97c4-096d97385deb"
        },
        "item": {
          "id": "f5b21446-8629-4c54-8087-8a5d9175d305",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a83c4cee-cc99-4ea7-941d-da51a00dd672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd6405e-2485-47cb-a307-25ec26acd578",
        "cursor": {
          "ref": "5bf0fa88-88f0-40f7-bd73-44bc4e3d5255",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "8571c436-5d9e-437e-a9e5-44cc2d66660a"
        },
        "item": {
          "id": "ecd6405e-2485-47cb-a307-25ec26acd578",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "cb6f6250-67ec-46d3-a88f-9f23002d4883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "836987b5-81ba-4cfd-a61c-6b6171bf7048",
        "cursor": {
          "ref": "f76281c4-a3d5-47b2-a6ef-ec97cc83cd99",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "35fcb1fb-3f3d-4ff3-aa43-caacac34a481"
        },
        "item": {
          "id": "836987b5-81ba-4cfd-a61c-6b6171bf7048",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ff0c3562-303a-4581-9399-8aaf11510505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db61e68-a9aa-438c-8f6b-c1f92fe1a5a7",
        "cursor": {
          "ref": "eef762fe-c6fd-4078-b247-1a27f29fc948",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "98dd0231-9ea4-4695-a152-96377aff2cad"
        },
        "item": {
          "id": "2db61e68-a9aa-438c-8f6b-c1f92fe1a5a7",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9186d377-ab60-4ca5-9e2a-be01a6223152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bce211b-3ff5-430d-9da7-ba406fad1e15",
        "cursor": {
          "ref": "d4fdb4be-d292-43c4-8c06-740b762cb907",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7440d1ca-caf8-49f3-bdb6-b73343e6616e"
        },
        "item": {
          "id": "1bce211b-3ff5-430d-9da7-ba406fad1e15",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "694e2e30-1b25-40f3-8c02-924fbbb19795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627dd97d-9124-4fc3-8211-b2c571f2b6e4",
        "cursor": {
          "ref": "2b26739a-2e24-4533-88c6-eabf542132ca",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3119ddc6-4d1f-4b95-acea-8c5a2ccebfa2"
        },
        "item": {
          "id": "627dd97d-9124-4fc3-8211-b2c571f2b6e4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "da9c6841-937d-4a8d-a7bd-f39abf14c721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d722089f-f752-43cb-84dd-51904a285fb8",
        "cursor": {
          "ref": "99cb9201-e5a0-42f9-b03e-e286babaa9d8",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "08b3d490-b6c3-4337-960a-7fbf6d9d6a8c"
        },
        "item": {
          "id": "d722089f-f752-43cb-84dd-51904a285fb8",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5b8c16d8-4822-41a2-bf9b-52afa58b06a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8afad0-36a9-410f-89c4-5de4e10cc6d8",
        "cursor": {
          "ref": "a690bcdd-d2ec-4755-9690-a6a46a443f0c",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f293c221-e91d-4e04-85c3-d9d38335fe5e"
        },
        "item": {
          "id": "0a8afad0-36a9-410f-89c4-5de4e10cc6d8",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "caa14c76-8389-47c3-9804-a96b937d1e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925f72bf-c731-4233-859e-dec45227e45c",
        "cursor": {
          "ref": "58c0390b-300a-46b2-a2f1-5e3f10503c53",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "81da2045-1d66-4af2-90ed-429ec86d1f7b"
        },
        "item": {
          "id": "925f72bf-c731-4233-859e-dec45227e45c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a9a3d3c7-2ebc-4a07-91f2-850180ebfa5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801c068e-9bfb-4f6f-8664-9979ca7ce831",
        "cursor": {
          "ref": "3febbc5d-481d-4ec0-a04a-b32e633bc54e",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c6e2f298-39f6-43b4-b966-9464617ee08a"
        },
        "item": {
          "id": "801c068e-9bfb-4f6f-8664-9979ca7ce831",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e1035288-e2f9-4640-93c6-abc719242fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d57b6399-b701-434e-b865-9194ab47cf5a",
        "cursor": {
          "ref": "723ed5b8-7532-4b34-b4a8-431edecddae1",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "151496bb-d407-4e1c-a325-2e08561ec5cb"
        },
        "item": {
          "id": "d57b6399-b701-434e-b865-9194ab47cf5a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ec43d867-c3c5-4aa3-be9c-f44ffdf7fdf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f63372-2f66-476d-9b63-7a4748ae9863",
        "cursor": {
          "ref": "990626a9-4095-4d9a-9ef0-5ec9babab815",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "585759ba-4460-4295-acec-4f5e50674151"
        },
        "item": {
          "id": "17f63372-2f66-476d-9b63-7a4748ae9863",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "045bd74c-afe2-43a4-b32e-e2ac5582cc81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740e9af8-68ec-41a9-bb65-13664017616f",
        "cursor": {
          "ref": "5d11b6fa-7a7c-443d-99b3-e84d1feda14d",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "54a661b8-5754-4651-b9be-fcc66c16c85d"
        },
        "item": {
          "id": "740e9af8-68ec-41a9-bb65-13664017616f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "07f89b20-16f2-4927-9277-d1bd1a9f167b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0bdd8c-131a-471f-b138-8e0791f17c19",
        "cursor": {
          "ref": "781e2c6c-1525-4381-91c6-8c2d2e0589dc",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "4b0a4894-80f7-41e5-8827-e0f1221a8054"
        },
        "item": {
          "id": "4e0bdd8c-131a-471f-b138-8e0791f17c19",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "5914d32e-f71c-4e19-b175-53fe747beff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb9cb34-a673-4969-846c-fd0c3cc21a78",
        "cursor": {
          "ref": "d30acf2e-8e8e-4a7d-8d6c-2f50cef41879",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "eb016608-6344-49bc-9ce7-941fb5d0fffd"
        },
        "item": {
          "id": "ffb9cb34-a673-4969-846c-fd0c3cc21a78",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "5adeabb1-2aa4-407a-b799-4a0b43e85381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741d234a-a702-4819-807f-3daa5d92f434",
        "cursor": {
          "ref": "5d84415b-720e-4c15-ba6a-ce1a61df41db",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "694931e3-6ec3-4a60-a20a-13223e59cdc4"
        },
        "item": {
          "id": "741d234a-a702-4819-807f-3daa5d92f434",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "62a7214a-1f40-4e0a-b9e6-6c0709fcfef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f6a1a07-4974-47c8-9406-6a7682b18ce8",
        "cursor": {
          "ref": "0cc2f249-e678-415a-8afc-7abf53fb1d0d",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "df768731-3ef2-45a6-994c-caad119d1cd3"
        },
        "item": {
          "id": "5f6a1a07-4974-47c8-9406-6a7682b18ce8",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "fa82c384-bf0b-439d-92a6-e3d800fc2777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2d992c-5a9b-44fe-98be-c8ddd4a6cd62",
        "cursor": {
          "ref": "b17e5973-eb5a-4e59-8084-be2e185abf1a",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1aa359a5-d583-49e5-b7d4-d844ebecedfe"
        },
        "item": {
          "id": "6e2d992c-5a9b-44fe-98be-c8ddd4a6cd62",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "544039b8-98f8-47cb-b984-84f036c5b997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8043c88-62df-4499-95a7-c6eaea9f38c7",
        "cursor": {
          "ref": "34f3fc1d-f974-4945-a2aa-542ef459bb68",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c775308d-c55f-40c0-8419-b0098beaf57f"
        },
        "item": {
          "id": "c8043c88-62df-4499-95a7-c6eaea9f38c7",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "4e02bbe5-ee8e-4cfd-90bb-06657cfe4fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f51e7b9-d76f-46ed-b3fb-ed330b83eef3",
        "cursor": {
          "ref": "637df4f7-17c5-43a4-a0c3-492d89aec98d",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1841a81f-c8d3-4627-955b-3a6a3f3c5468"
        },
        "item": {
          "id": "5f51e7b9-d76f-46ed-b3fb-ed330b83eef3",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "80f6af47-3f30-4cf0-9b50-e2ba42671d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2be11f5c-703a-41be-b7f2-8b641ec26b29",
        "cursor": {
          "ref": "ff450a27-083d-49f7-890c-d0a71e72fffe",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f2b81d85-39ae-4cf2-8059-4100e65b97f8"
        },
        "item": {
          "id": "2be11f5c-703a-41be-b7f2-8b641ec26b29",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e467305f-6323-4dca-b3a2-d38576feb8f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7acd1f15-b992-4252-958d-68a10b4c528b",
        "cursor": {
          "ref": "0c24472e-e69a-4eec-b0e2-91f36790c8dc",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "05c4ca40-eaa4-4b44-a9f1-a676ef215954"
        },
        "item": {
          "id": "7acd1f15-b992-4252-958d-68a10b4c528b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b98297de-e3e5-4890-813a-c498628251aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db409442-4725-477c-b44f-2af2e9127b77",
        "cursor": {
          "ref": "e1a8443b-4451-4590-a299-c0737666bf45",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "b3c64ee6-8794-4ee1-9903-af75aa9ef1db"
        },
        "item": {
          "id": "db409442-4725-477c-b44f-2af2e9127b77",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "eb4a7145-0062-4a4b-a5e9-5f4902c97412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21af5922-a0ef-47ac-b382-dc29e611844e",
        "cursor": {
          "ref": "a7fe8c17-8ed4-479f-82ae-484f2375a911",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "de9dc056-fc95-4b1e-bafc-d312094d8168"
        },
        "item": {
          "id": "21af5922-a0ef-47ac-b382-dc29e611844e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "97d4c02f-b707-425a-a838-207069720624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e6de300-6f78-4b27-8a0d-eb05537ce0f3",
        "cursor": {
          "ref": "9b514d83-af01-4177-9e1e-c423a7c05586",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7fcacd37-4480-47e1-a3f5-ac44a3a7c8b8"
        },
        "item": {
          "id": "7e6de300-6f78-4b27-8a0d-eb05537ce0f3",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ff70b64f-6af8-4c63-a833-a3ff67b1ab13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f186e2-5b3f-449d-9d9e-e169645d6d0b",
        "cursor": {
          "ref": "dddea4ad-a5cb-43c1-a57c-06f67bec62cd",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ab898584-0387-4764-897c-b39095361869"
        },
        "item": {
          "id": "f7f186e2-5b3f-449d-9d9e-e169645d6d0b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "8efc67c0-81a8-4603-b25e-bac59aafb3bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2457c737-768a-4f35-b8bd-ee3d32061cab",
        "cursor": {
          "ref": "c5ef36ba-d810-41a3-9a68-bbcb236207db",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "164ab31f-e9cf-4126-8eac-c3376bf0851a"
        },
        "item": {
          "id": "2457c737-768a-4f35-b8bd-ee3d32061cab",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "205bf9be-fdcf-4d72-b45d-d55683c7e198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a44d07fe-725d-412d-8536-ca15941562bb",
        "cursor": {
          "ref": "f2fec2c1-7d66-47df-871a-59d7267ffcc3",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ea910539-7544-47e8-83f7-f0d4b2a3dded"
        },
        "item": {
          "id": "a44d07fe-725d-412d-8536-ca15941562bb",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e657ab1c-ff39-4882-a155-869c104293b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f9ed8b-d891-446c-aa79-82968d7781ad",
        "cursor": {
          "ref": "83c4b170-cbb0-40de-825a-674506f1681a",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a7ad7164-c332-42fb-ba78-c7faa9628162"
        },
        "item": {
          "id": "f0f9ed8b-d891-446c-aa79-82968d7781ad",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f72ad418-aa0c-4aac-b5c5-8afc11b5e485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280ded8f-40fc-47f7-b5fe-65329e821499",
        "cursor": {
          "ref": "29346b32-897e-4701-8d35-527fdbb50431",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ecd2db4b-c4ff-46fe-be3a-89339cd7c370"
        },
        "item": {
          "id": "280ded8f-40fc-47f7-b5fe-65329e821499",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "446fb97f-4072-4844-8035-76be96517912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db97290-ac22-4bbc-8059-c499b5c0d542",
        "cursor": {
          "ref": "6de9e5b0-6dd7-4408-8861-0cef82d84f11",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9ae97cf6-9de4-43cc-bf88-b630364a555d"
        },
        "item": {
          "id": "3db97290-ac22-4bbc-8059-c499b5c0d542",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "ca29063f-10e4-49a3-8310-e7631579ad85",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf2235e3-da30-4802-a217-af0e9b89f25d",
        "cursor": {
          "ref": "b6c58b80-5201-48d0-924f-96b40b45ebaf",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "8da28428-e3cd-4943-b7e6-d06297a2efcb"
        },
        "item": {
          "id": "cf2235e3-da30-4802-a217-af0e9b89f25d",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "3fa56f2c-bc5f-4575-963c-186ec3b32cb5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 44,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031953d6-fcf4-4d1f-9a53-27c6833f49f2",
        "cursor": {
          "ref": "9e72f1a6-e505-4215-bac6-b988b402c019",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "2d7f457f-ea0d-4860-a998-f9556d1b6b6e"
        },
        "item": {
          "id": "031953d6-fcf4-4d1f-9a53-27c6833f49f2",
          "name": "credentials_issue"
        },
        "response": {
          "id": "eba82b07-196d-4029-b0d6-4f840a78c9d4",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf265bc9-7e62-4fec-90dd-2cf0cc120335",
        "cursor": {
          "ref": "6ee739cd-7475-4afa-8c77-d5699a0824d9",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "51e2c541-b059-418e-8284-c86f19e8872b"
        },
        "item": {
          "id": "cf265bc9-7e62-4fec-90dd-2cf0cc120335",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "bc206c55-3711-4a47-8b97-843e13da4bc1",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee011a2-4d54-4291-8605-3d2f5ef678a8",
        "cursor": {
          "ref": "dabc0787-8f46-4bae-8b02-011857519fd9",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c2eb7e68-afc5-44d2-a194-fd9345a20be6"
        },
        "item": {
          "id": "4ee011a2-4d54-4291-8605-3d2f5ef678a8",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "61e801d1-8014-49f7-9b4b-49f1b2651ede",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f6c87c-0173-460b-8c46-e0700b7fbd25",
        "cursor": {
          "ref": "632f6471-3f8a-4ea1-8966-13f425cb2b02",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b4e5373a-9546-4d4b-8308-db7e62ec6df3"
        },
        "item": {
          "id": "75f6c87c-0173-460b-8c46-e0700b7fbd25",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ba085aca-480c-41ad-b134-f60e046d423e",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "238e2fa3-10ea-4c09-8656-16df6813604b",
        "cursor": {
          "ref": "dcf6c49f-4cfc-4ec8-be43-410cc56be2ca",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ea81b8bf-983c-4ea0-be14-451d93fc71ce"
        },
        "item": {
          "id": "238e2fa3-10ea-4c09-8656-16df6813604b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "a4cc1299-8a2d-4fe8-b033-55a331bf8f19",
          "status": "Created",
          "code": 201,
          "responseTime": 26,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "12cbefce-b584-4a36-9ef9-9d78fdbf1946",
        "cursor": {
          "ref": "94732f14-8cd5-4d20-acfb-b787e4388508",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ca041990-b7b8-4f22-bae9-736c04ee0369"
        },
        "item": {
          "id": "12cbefce-b584-4a36-9ef9-9d78fdbf1946",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "bd185ecd-318b-4b15-8216-986e2555f9ae",
          "status": "Created",
          "code": 201,
          "responseTime": 27,
          "responseSize": 905
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d2744a-98a9-4ae1-9d17-71dd56461be1",
        "cursor": {
          "ref": "44e9bc07-602d-446d-95fd-69ecb65ef188",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "26746dbf-932d-4a03-bdf4-8366ca194107"
        },
        "item": {
          "id": "e7d2744a-98a9-4ae1-9d17-71dd56461be1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f3f90c4e-bcf0-4319-b236-db9ae03ad31a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d2744a-98a9-4ae1-9d17-71dd56461be1",
        "cursor": {
          "ref": "44e9bc07-602d-446d-95fd-69ecb65ef188",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "26746dbf-932d-4a03-bdf4-8366ca194107"
        },
        "item": {
          "id": "e7d2744a-98a9-4ae1-9d17-71dd56461be1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f3f90c4e-bcf0-4319-b236-db9ae03ad31a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daaa1193-1c25-422a-89f8-2c5f8412c4cc",
        "cursor": {
          "ref": "0d7a1099-ffcf-4417-844b-76f7d754771a",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "13d11759-7354-4250-b7c6-e313f1073bf4"
        },
        "item": {
          "id": "daaa1193-1c25-422a-89f8-2c5f8412c4cc",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "fb9b3f7e-0d73-49a1-ae70-880ea2165805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a86f00ec-ba35-4fa9-af9a-44612cabb0f0",
        "cursor": {
          "ref": "a4e32de7-880a-4278-8850-7cfef37acdcf",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c899487a-f073-4fc0-8cb8-458a05d2bce6"
        },
        "item": {
          "id": "a86f00ec-ba35-4fa9-af9a-44612cabb0f0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "63e2fc57-a4a0-439b-bfd5-2ce1779c3394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72437bd3-5be9-47f1-bdd4-72d22689ff5e",
        "cursor": {
          "ref": "1e9fbe48-efe8-4056-8852-95cf41152773",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "1bd9243e-056d-49c9-9a43-ebf23f6d5185"
        },
        "item": {
          "id": "72437bd3-5be9-47f1-bdd4-72d22689ff5e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c64f5f67-2138-4e66-8adf-5c5eab06c236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1add8321-3e51-4833-9f5b-cab23b6199f0",
        "cursor": {
          "ref": "b3b5c611-0ca0-47dd-bc8c-074e49bdc62a",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "9fb7026d-252e-4884-928a-f9f9f8d4a40d"
        },
        "item": {
          "id": "1add8321-3e51-4833-9f5b-cab23b6199f0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7161ffb3-f70a-4a50-b024-ab9fcc6a633f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5d69a0-b5dc-4d83-8e22-937e0b662ff5",
        "cursor": {
          "ref": "9f0b18ae-a2fc-4f1b-8a41-1ea88a295753",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "40306bf0-6015-4d62-be54-f9606f25654d"
        },
        "item": {
          "id": "fd5d69a0-b5dc-4d83-8e22-937e0b662ff5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "fb091473-8f4d-4a50-86eb-3dda6f519c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd44cc41-a390-4b45-a1a3-98cb79995a52",
        "cursor": {
          "ref": "f4fb52f4-b5b9-4be2-aa8a-a106d360729b",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "7506fc1d-fd22-4465-8b1e-1097af5a84de"
        },
        "item": {
          "id": "dd44cc41-a390-4b45-a1a3-98cb79995a52",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0f105fab-7aa1-46f2-a9fd-aed1b4b7b714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f10d52c5-c032-43a6-abf0-917492713077",
        "cursor": {
          "ref": "c064ae26-aaca-4cd6-834e-9172a2eec952",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7dd74f63-2f27-473a-8edd-6897104a1a63"
        },
        "item": {
          "id": "f10d52c5-c032-43a6-abf0-917492713077",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "19681d6e-8eef-41d7-b103-f9feb7013225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92e038db-e0bc-40c6-8127-8e4e813d9a3d",
        "cursor": {
          "ref": "9a26ab1d-6bfd-4535-873d-831704457ebd",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "2e55a05d-87ec-4690-b201-fddc6a28eacc"
        },
        "item": {
          "id": "92e038db-e0bc-40c6-8127-8e4e813d9a3d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1f7ddbcc-01a1-44c0-bca5-378a723b6329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75036a9e-99f1-4646-bc2f-391db54334d2",
        "cursor": {
          "ref": "138cd842-fc06-42a3-8e7a-94784be792fa",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "8063b9f9-e1ca-46de-b341-a38c27bb0259"
        },
        "item": {
          "id": "75036a9e-99f1-4646-bc2f-391db54334d2",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "05ef435f-de45-4dbf-842e-d934e938eb17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4a147c-ce29-4000-a2ec-531079b0ed50",
        "cursor": {
          "ref": "546032da-47d8-4f78-88c0-9d4a33891b7b",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "64cfca59-6dec-4705-8228-52607ea91605"
        },
        "item": {
          "id": "6b4a147c-ce29-4000-a2ec-531079b0ed50",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "19396a59-e1f3-409a-829e-8e1f8e5decc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc04377-7195-451c-bc33-1048086b081e",
        "cursor": {
          "ref": "58924baa-c519-4871-9373-a5a65fa45759",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "18209208-5a48-4aa5-bd59-d4796ca5a325"
        },
        "item": {
          "id": "3bc04377-7195-451c-bc33-1048086b081e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2cb6e5ad-9388-45bd-a01b-20fa4393b513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe47097-71f4-4236-bf36-48a48b53d3a0",
        "cursor": {
          "ref": "39080abd-4a8a-44bf-8c93-01c3f5db20b7",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4e393f84-b8be-4675-9c71-0c07c99b71df"
        },
        "item": {
          "id": "cbe47097-71f4-4236-bf36-48a48b53d3a0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "90976c99-2264-48e0-a7da-5d3af7e63800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba0d17c-a043-4e8c-a0e9-1581e8ddff16",
        "cursor": {
          "ref": "a4f37804-e83e-4773-8f95-371ed8c6baae",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "23502764-be1f-4516-b647-5249edc33c90"
        },
        "item": {
          "id": "6ba0d17c-a043-4e8c-a0e9-1581e8ddff16",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "488eb415-96fb-43b5-bc98-c30d38f7c49a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c2a122-068f-4e24-a9c2-d852594c1e8f",
        "cursor": {
          "ref": "6b7d2f1e-8019-4e39-9c16-77057bdcc637",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "edb7ce71-206a-4119-8072-1f7aa32e450e"
        },
        "item": {
          "id": "88c2a122-068f-4e24-a9c2-d852594c1e8f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "261e7b38-f86d-41fc-8b56-acc4826a4677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1fc8d3-4264-4b97-8d9f-c7ae995b977f",
        "cursor": {
          "ref": "9d47e85b-2b12-410f-9ec0-4393ff1dd30b",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "42527134-f412-47c5-ad83-3909c828c9d8"
        },
        "item": {
          "id": "8d1fc8d3-4264-4b97-8d9f-c7ae995b977f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "04a1bcc7-e706-4a12-934f-6290dd47567d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7d5e59-5b2d-4f9a-9234-cc8430399e47",
        "cursor": {
          "ref": "4d191ac4-6e76-4395-843f-ef903e6f6e44",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "4f4fde30-a93c-420a-a9b3-b8f9d3dfcfff"
        },
        "item": {
          "id": "7d7d5e59-5b2d-4f9a-9234-cc8430399e47",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "eebfb2e3-cdc0-440c-b77c-8e39f8f3e274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f52dc29-29aa-4506-a66b-8167b50801c5",
        "cursor": {
          "ref": "79fbb245-cde2-4680-ab4f-810e377ccf83",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f9b2e043-4ce5-45f8-acea-aad744d334f3"
        },
        "item": {
          "id": "1f52dc29-29aa-4506-a66b-8167b50801c5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "18c8ebd5-db19-47e5-9e04-db180774ea69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340e28d0-3bef-4e29-bb80-93c21889faa5",
        "cursor": {
          "ref": "d29e482a-ae60-4f75-b4ff-d6f5dd9fa95e",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "4afe7db2-7bbf-4f33-8d5a-8fb2b172f166"
        },
        "item": {
          "id": "340e28d0-3bef-4e29-bb80-93c21889faa5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7ee2f0d4-9732-4789-9a75-691602133f13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e57095d0-13ab-4f57-94a6-e4998a4c573c",
        "cursor": {
          "ref": "e04fbca1-4ae2-4877-99ef-5a89b13a97e5",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ff102971-0514-445f-b084-1d677af8d91b"
        },
        "item": {
          "id": "e57095d0-13ab-4f57-94a6-e4998a4c573c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ba5076d6-4d16-4008-b486-b75a3b4dfa9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ae516c-2813-4ee0-a87f-d7bf10a33307",
        "cursor": {
          "ref": "aa5291de-20b4-4207-978b-f79d0aeed071",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "9adc618e-130c-40b3-b9db-b57b1692726f"
        },
        "item": {
          "id": "33ae516c-2813-4ee0-a87f-d7bf10a33307",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8ba401b0-ed40-4132-b46d-9193236dc827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40084de6-eee6-4346-9cf1-83a2d9bc99bd",
        "cursor": {
          "ref": "39b5f0a6-2c2d-4e39-9f40-67f37686c30f",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e2bf2645-b303-4a6b-91fd-f5f5ce602e64"
        },
        "item": {
          "id": "40084de6-eee6-4346-9cf1-83a2d9bc99bd",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c9013089-5a13-42e7-933a-83f44b44d427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9dd8fe2-79b1-4b84-ae5d-a7e8731e4a3e",
        "cursor": {
          "ref": "439e9f3f-d3cc-49ef-b2bc-d9104e5453cb",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "29844630-8be3-45cc-8630-6de17f18cf5f"
        },
        "item": {
          "id": "f9dd8fe2-79b1-4b84-ae5d-a7e8731e4a3e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b48f0f32-3eec-4029-9a45-8843b374e143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b7ce178-f68c-41dd-884e-3dd40f53391f",
        "cursor": {
          "ref": "f7a5d2cf-056a-47ad-a48c-fede522a6841",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d51245ba-579c-4b52-9b55-622bcb0db496"
        },
        "item": {
          "id": "7b7ce178-f68c-41dd-884e-3dd40f53391f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8d169b40-7b59-4d6c-95ed-cd30c866e18f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9100a8c6-b045-4d27-ac27-543ff0ced143",
        "cursor": {
          "ref": "639e1548-ff10-4e2a-ab9c-71c9e5a59f1f",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "2a41127a-2fa7-4598-842b-c16691380620"
        },
        "item": {
          "id": "9100a8c6-b045-4d27-ac27-543ff0ced143",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a9df37d0-8f12-4806-9b38-ee29a25be478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd16f17-1484-4510-8e86-e4a3f31b1f6f",
        "cursor": {
          "ref": "1075b7bb-a900-47ed-aab8-770dd58b5aba",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "81f00107-fc69-48ca-bb5a-d9fb70d24a7b"
        },
        "item": {
          "id": "fcd16f17-1484-4510-8e86-e4a3f31b1f6f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9b50ebd9-6c35-4277-97ba-0eae9c81feaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c0210e-8ef2-41e6-aa6a-c648658a672e",
        "cursor": {
          "ref": "2804b62e-cf78-4783-9f06-ac363af6a9b3",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5c6ee72e-45b5-45cf-8831-981971ff495b"
        },
        "item": {
          "id": "39c0210e-8ef2-41e6-aa6a-c648658a672e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1f0be4da-2466-4192-a6e1-3413ecd33c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92487a8-aba6-4a57-8e12-cf5eba90984a",
        "cursor": {
          "ref": "701214f6-bb22-4872-8073-ab1fc549db54",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "4f873f6f-874e-4f2d-8b12-71f4a0fb2962"
        },
        "item": {
          "id": "a92487a8-aba6-4a57-8e12-cf5eba90984a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5996f41f-54eb-4fe6-b352-a70a528041d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "626f6699-af2d-4da2-ae22-18b995863b80",
        "cursor": {
          "ref": "f2535784-2cd9-467e-b84e-457e44c210fa",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "66f50dad-771e-4fff-b91e-fa474f826b4a"
        },
        "item": {
          "id": "626f6699-af2d-4da2-ae22-18b995863b80",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "dc790996-e983-488d-9fcb-8c042a808b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7ebba9-b68e-4c61-834a-d8612898fc71",
        "cursor": {
          "ref": "1793d1dc-0ac0-4ddc-a8e1-9e90cb03bbbc",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c3be3256-e718-4e4b-9d90-276168446b37"
        },
        "item": {
          "id": "1c7ebba9-b68e-4c61-834a-d8612898fc71",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "52a43886-4c30-4ecf-8adf-fa197a7b3cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "300e3100-4055-4c5d-ab78-209d633e687d",
        "cursor": {
          "ref": "326f24ba-1101-488d-a836-39f93eef7217",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d6ae935c-49ea-4dc5-83d3-8bb1e6a3a336"
        },
        "item": {
          "id": "300e3100-4055-4c5d-ab78-209d633e687d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d3779d6b-d99f-47fb-810b-bc2585a0658c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "709f6253-ca11-4977-8d7d-2f168b6a580e",
        "cursor": {
          "ref": "61599032-a7dd-4adc-adba-e7ccf91e4ff2",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6aa24c3f-e9d0-4606-bf8d-7fafbb8d7b58"
        },
        "item": {
          "id": "709f6253-ca11-4977-8d7d-2f168b6a580e",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a89a4ebc-221f-4f52-a923-675a2e6fc620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f25bb3-b238-4595-bf6a-7e16852c7f87",
        "cursor": {
          "ref": "372ca002-e734-4664-86d4-88d251f08621",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f02ef52b-12fc-470a-900f-3738fe8b3c27"
        },
        "item": {
          "id": "f1f25bb3-b238-4595-bf6a-7e16852c7f87",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c5e51fd0-1405-496f-88c5-bf398146b7d2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc19ffd6-f5cd-43aa-aa6a-389102216bf4",
        "cursor": {
          "ref": "d8f4a474-1e05-4ff0-b251-bbae701cfc5e",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c2eb07c4-0708-41d7-8832-382d56320226"
        },
        "item": {
          "id": "fc19ffd6-f5cd-43aa-aa6a-389102216bf4",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "59bc18d6-587f-4991-8f35-68037bda48d8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 9,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c0ec3bf-7e7d-4696-b849-4422534ed99a",
        "cursor": {
          "ref": "99bad72e-0c81-4ee8-aa1e-b39633cb984f",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3279c0e0-a0ab-4425-9b27-c0c8182e2f3f"
        },
        "item": {
          "id": "7c0ec3bf-7e7d-4696-b849-4422534ed99a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "120cd0c8-6596-45fa-b97c-6d88dcd76e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c0ec3bf-7e7d-4696-b849-4422534ed99a",
        "cursor": {
          "ref": "99bad72e-0c81-4ee8-aa1e-b39633cb984f",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3279c0e0-a0ab-4425-9b27-c0c8182e2f3f"
        },
        "item": {
          "id": "7c0ec3bf-7e7d-4696-b849-4422534ed99a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "120cd0c8-6596-45fa-b97c-6d88dcd76e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90a8d973-abd2-495c-a73b-a032bca4eef5",
        "cursor": {
          "ref": "4de8dd31-d2e1-4753-866e-174f61d87820",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "606ed7d7-2093-4e20-85f2-e53b234d07bf"
        },
        "item": {
          "id": "90a8d973-abd2-495c-a73b-a032bca4eef5",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "32328d8a-1db1-49ad-8fbe-c30084df8293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf4d1964-d594-47f8-949d-b596f91f30a1",
        "cursor": {
          "ref": "acebb53c-1b74-4cec-844b-5aa4851d321e",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "dad2a982-65e6-4e4d-ae13-adea4cd8d656"
        },
        "item": {
          "id": "bf4d1964-d594-47f8-949d-b596f91f30a1",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "fd79472a-1b97-448f-947e-13c0475f117b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423f8582-0d50-4c97-a3ae-26e2e6421655",
        "cursor": {
          "ref": "8e39d32c-7aa2-43d8-b2fd-616caba3e9d7",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4e13e380-744c-41fc-8485-e373065cd3f0"
        },
        "item": {
          "id": "423f8582-0d50-4c97-a3ae-26e2e6421655",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6f8453b8-6490-4669-872d-d11731f6e980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28979835-03fb-4f70-a938-9c05604985dc",
        "cursor": {
          "ref": "58137125-1b1c-475c-a2b2-a3802b0e9456",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "55a00dbf-4c6f-4568-a709-c6a84516beb8"
        },
        "item": {
          "id": "28979835-03fb-4f70-a938-9c05604985dc",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "5f3b3ba3-7ddc-45e9-b554-c3b8fd5c2a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bce8c04-05c7-4b2e-b018-f7aa8f49808f",
        "cursor": {
          "ref": "96fb88e9-e669-4117-a91e-717c70e51ce2",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "231439a8-8403-4dbe-a0f0-fddb758c14bd"
        },
        "item": {
          "id": "4bce8c04-05c7-4b2e-b018-f7aa8f49808f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "7d6c51fc-03d9-4127-9680-5287db66b514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa1171e-4500-44fa-b1f4-06328a79de19",
        "cursor": {
          "ref": "ef75c3e8-e996-448d-9377-6ce914212742",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "87f2155f-e065-44d5-ad90-a6d229e46b65"
        },
        "item": {
          "id": "baa1171e-4500-44fa-b1f4-06328a79de19",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b5680b4e-c7e8-42dc-bd22-30cefd771115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73f857f-c15a-4609-8723-d0589c5b54e4",
        "cursor": {
          "ref": "de9b7aea-3a22-4951-b486-dd38a911b063",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "670da37d-5eee-49b3-9f29-41ec9ccb12d1"
        },
        "item": {
          "id": "d73f857f-c15a-4609-8723-d0589c5b54e4",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "8481450f-dbb2-41be-80ab-0a06e0af3d81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdaacaf9-ca47-4587-b8d3-fde549961890",
        "cursor": {
          "ref": "c50dc2a3-2163-45f4-a9d8-95e1c08553b0",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "472e5e7e-baab-4fa3-b969-646efae216f4"
        },
        "item": {
          "id": "fdaacaf9-ca47-4587-b8d3-fde549961890",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9b0ee4f0-7da5-4ebf-b64b-8312ff7febb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a4ccee-ef53-45dd-8b95-b94c9c7e2177",
        "cursor": {
          "ref": "a380db1a-1079-49a9-9f78-c7104a0255d5",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "5e197bbd-d57f-4a28-9020-afbd1c94e0a8"
        },
        "item": {
          "id": "e9a4ccee-ef53-45dd-8b95-b94c9c7e2177",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7730522b-aa05-42e6-9547-fc1133cc9bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb6859f-95e5-4dd9-829a-6e5e88032d0a",
        "cursor": {
          "ref": "d9fae602-eefc-4b02-b671-fdfcf44b1fc6",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6f6eab16-8403-4c27-86e1-f1ab722c1a61"
        },
        "item": {
          "id": "8eb6859f-95e5-4dd9-829a-6e5e88032d0a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "bde6cf80-b62f-40e8-b645-7df6bf1f690f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b861eac-fbe0-42e9-bcf2-828fbe7c74a4",
        "cursor": {
          "ref": "0df32f3d-4ed1-42c3-a342-70d6d3e8bacb",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7fde9a52-490f-4332-847d-98a955b2ad60"
        },
        "item": {
          "id": "7b861eac-fbe0-42e9-bcf2-828fbe7c74a4",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "dba9cc3f-2b44-46d8-9d7c-aeb579c5cb6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59cd076-6c20-4d52-96d6-4d3da18532c9",
        "cursor": {
          "ref": "f4bc1335-81ba-4347-8133-127e5e1aad2a",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d334733f-cc91-4ff7-9092-c1a68f6c988a"
        },
        "item": {
          "id": "f59cd076-6c20-4d52-96d6-4d3da18532c9",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "af59d7c4-df7d-4030-8ca7-3e1a2bb43f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4773f834-3f89-4eb9-a7b0-1cfc9066f287",
        "cursor": {
          "ref": "f1fd5b8e-f094-4e30-ab0f-17ab573f2485",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "594198d0-f86b-4c73-9c26-7f9142bc1670"
        },
        "item": {
          "id": "4773f834-3f89-4eb9-a7b0-1cfc9066f287",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "671d4b6c-483a-4193-9acd-7f53eaed361d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cdeca07-beb5-468e-8505-30e3b21b3855",
        "cursor": {
          "ref": "8dabb028-15cc-4948-ac05-8f874ca6b8a7",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3e1a928d-16f9-420c-9d60-3a89e564cb31"
        },
        "item": {
          "id": "0cdeca07-beb5-468e-8505-30e3b21b3855",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7f29aa8f-5341-4fad-94b5-e4117b791cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e015e722-ee5e-478e-9269-225b4a3608ba",
        "cursor": {
          "ref": "75fbd740-7b3d-4b45-8a74-51cf2a9cd6cb",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "52a57ec8-88fb-4bee-b39f-231e42661a06"
        },
        "item": {
          "id": "e015e722-ee5e-478e-9269-225b4a3608ba",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d0d7f890-bdf7-4213-b9af-548730244479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58264f12-383c-4474-a005-4ddb8bae2ef7",
        "cursor": {
          "ref": "572a5ce4-0e4a-4ff4-8f54-740282a1c234",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "45e5b016-827b-4199-a579-d4817d55810f"
        },
        "item": {
          "id": "58264f12-383c-4474-a005-4ddb8bae2ef7",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "d5b5492d-bf6d-4321-8a83-c02ce651314c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc006da-3841-4181-946c-ef04becc2bce",
        "cursor": {
          "ref": "8b2a39a7-28eb-496d-af17-c1db31db4d16",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "20276992-feb4-439d-a097-d00ece63b869"
        },
        "item": {
          "id": "dfc006da-3841-4181-946c-ef04becc2bce",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "504182d1-79dd-4dda-afe9-906338c8aaf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1671b7d4-252f-4180-9238-2a339cc1ead2",
        "cursor": {
          "ref": "4cfb1cdd-7fcf-47fb-90e0-225d1a465479",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a99acdff-bdc5-406b-9825-f795e1600c56"
        },
        "item": {
          "id": "1671b7d4-252f-4180-9238-2a339cc1ead2",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "589ab4d0-bb18-44f0-9be9-d36de9c4385e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c16f927c-a35d-48e5-b7b5-d1803044bc76",
        "cursor": {
          "ref": "e220fcc9-7871-4821-8819-40876c1d0591",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "95fba3f7-8fc0-4ab8-8edf-31f77c58f6a8"
        },
        "item": {
          "id": "c16f927c-a35d-48e5-b7b5-d1803044bc76",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "50b4da1a-fc9f-4508-9d76-a26728d2ce5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "655de608-75f9-4b9b-ad83-d8f42da91682",
        "cursor": {
          "ref": "6c38b97f-5fc4-4495-8354-8b748265a71a",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "5ea67ebd-3d66-4979-860a-3972fd258531"
        },
        "item": {
          "id": "655de608-75f9-4b9b-ad83-d8f42da91682",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "1ddb7ea1-97cd-4c6f-82de-98763e9b6529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd96a310-2720-4ff4-9863-b8fe93e8227f",
        "cursor": {
          "ref": "82eb5774-844a-401c-96cf-10289787e8cb",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "24efcc4b-5fad-420a-9f79-5eabd8122b36"
        },
        "item": {
          "id": "cd96a310-2720-4ff4-9863-b8fe93e8227f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4979cef0-efe4-4af3-ad59-0d8e58463212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87bfc62-4e94-48f8-ad33-776cbf396167",
        "cursor": {
          "ref": "669cf75e-5d23-4a8b-920a-83c38fbb1a9c",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "51843e8e-131c-4b59-951a-71142bfe229f"
        },
        "item": {
          "id": "f87bfc62-4e94-48f8-ad33-776cbf396167",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "547ce3d6-1059-4015-ba20-7101e59c000f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "993fde84-f0ae-4be7-bfc8-68e37762d2b1",
        "cursor": {
          "ref": "124c6937-364b-41ff-a15f-1d244c69f225",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "2fd2d386-2bdc-4ad3-9d25-fa1725a868c9"
        },
        "item": {
          "id": "993fde84-f0ae-4be7-bfc8-68e37762d2b1",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ba4897e2-27dd-4f0a-88ba-0ae950c0ebda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c365a890-0d89-4e16-a3ca-18c29ceb4b2a",
        "cursor": {
          "ref": "74501207-3033-4239-a669-7fe2aed84e6f",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "072e7af3-e78d-4930-8c31-f4eb64981900"
        },
        "item": {
          "id": "c365a890-0d89-4e16-a3ca-18c29ceb4b2a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "9e01dd06-f643-49e2-a3e0-dc681fb7892f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d09b8e41-eaea-4ed2-b913-44710e5cf050",
        "cursor": {
          "ref": "1c2f1170-2a5e-487c-88b5-562ab95309b3",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "11bea256-3bec-42f0-8795-3814a7dc857e"
        },
        "item": {
          "id": "d09b8e41-eaea-4ed2-b913-44710e5cf050",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8f96a2d3-3a3b-438f-b5d8-c72848bcd8c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e97ab388-759b-4f3b-b7b6-a2b25211adff",
        "cursor": {
          "ref": "b7397411-d900-4389-9ee5-e50ab2f23138",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e72035eb-02d8-4382-b276-999cae6575b6"
        },
        "item": {
          "id": "e97ab388-759b-4f3b-b7b6-a2b25211adff",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b01a91e5-1ef1-49cd-afc2-28d9415eede1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcbdb829-4a69-4e67-821f-bf0dcb1c95a2",
        "cursor": {
          "ref": "271dc3dd-f8c1-4777-a185-3feee14b664b",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "7b4b813a-8bcb-46ae-85b6-e423e69fb36b"
        },
        "item": {
          "id": "dcbdb829-4a69-4e67-821f-bf0dcb1c95a2",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b671fae1-9fbd-4e76-921c-e73e03e9a200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20002cea-c49a-41b2-9206-8b5ff9ab93e3",
        "cursor": {
          "ref": "815c1659-275c-408b-9259-1d96a7bf54b6",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b411cd1a-0133-4724-953d-dd004a7d1f1b"
        },
        "item": {
          "id": "20002cea-c49a-41b2-9206-8b5ff9ab93e3",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "68efb144-552d-4aea-a519-98aecb0de472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c4c3b0d-41dd-434f-ba96-a6955d5949d7",
        "cursor": {
          "ref": "29c240be-e18d-4d14-be8a-04e6eabb806b",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4a617264-9f75-42a6-8268-dacc6c9e92e1"
        },
        "item": {
          "id": "8c4c3b0d-41dd-434f-ba96-a6955d5949d7",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a5a3e84d-516f-47aa-bdb2-459a7b4921c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "170106ad-ad03-426a-8fbf-dab8a72532e8",
        "cursor": {
          "ref": "cd17ffe6-8d8b-44e1-a47d-518e7708913d",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "35b841ad-f010-4a58-8063-be84ad246778"
        },
        "item": {
          "id": "170106ad-ad03-426a-8fbf-dab8a72532e8",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "77f72717-ede3-4926-82ed-d6ed1c2d5c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f9b1f2-cc02-4e97-8da7-b5db398e394f",
        "cursor": {
          "ref": "e7620890-043a-4735-89de-651d081a7e1f",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "24705644-627a-4cc7-ba7b-681edcf3d75c"
        },
        "item": {
          "id": "33f9b1f2-cc02-4e97-8da7-b5db398e394f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "372d3fe7-3edc-434c-b7d0-548cc81b2ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "105edb1b-49a3-4056-a856-a78e30464421",
        "cursor": {
          "ref": "2bd5cbe9-9dd1-439d-94ad-cdc6956d3779",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ac7a38b0-2e32-40ca-87d0-9519eab107af"
        },
        "item": {
          "id": "105edb1b-49a3-4056-a856-a78e30464421",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "2b9bceda-e6c3-4d4b-bf3e-1971ed742c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53820add-24db-44b6-9f4a-7e473ec8a00c",
        "cursor": {
          "ref": "a4ff0f36-c36a-4b83-9afe-7cf6a6aacf18",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b1df8abd-71f8-4c56-90bf-48a986712742"
        },
        "item": {
          "id": "53820add-24db-44b6-9f4a-7e473ec8a00c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "6bb1250a-814d-4ebe-81f5-a0e4e434d8f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9655637-8a4a-44c3-be19-6e720e33c5bd",
        "cursor": {
          "ref": "0f6bc779-f62f-4e63-8fc9-6c1fdd465a63",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b861cc56-36ba-4636-8bbb-f2019dcfcffb"
        },
        "item": {
          "id": "a9655637-8a4a-44c3-be19-6e720e33c5bd",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "7ff3de6d-add5-4173-abce-6af66e3ad022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16da5043-2a45-4d82-8e45-7ae7f856359a",
        "cursor": {
          "ref": "f96e6749-3ef9-4aeb-9855-d82e87f30e4e",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ad24b7bf-d63b-407f-8190-bcb24facd110"
        },
        "item": {
          "id": "16da5043-2a45-4d82-8e45-7ae7f856359a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f9230fd1-26a6-4305-a5e9-4feec4204b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb82c908-57de-4c72-9c0f-6b84a5861c48",
        "cursor": {
          "ref": "31e26671-391a-4625-aef6-7b449feb831a",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d5d3d70f-2da6-4fad-abfa-8b2889c2f77f"
        },
        "item": {
          "id": "bb82c908-57de-4c72-9c0f-6b84a5861c48",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "db4a77a6-76c8-45b5-91d6-b45c1a883e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091e5d93-eb35-457f-831e-294c2f1481bf",
        "cursor": {
          "ref": "3c81a4f7-85a5-4e1e-9a76-260ff9f957da",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "397de68d-b30d-4c01-8c95-952baab799d3"
        },
        "item": {
          "id": "091e5d93-eb35-457f-831e-294c2f1481bf",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b1b57b9d-2615-4571-9337-c525864f16f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90550710-4926-408e-9719-0d366057fe9e",
        "cursor": {
          "ref": "e33b6914-e5f9-4da7-8c19-234adadf3b01",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ab6d98a6-93cb-41b5-9b48-8b09330098ac"
        },
        "item": {
          "id": "90550710-4926-408e-9719-0d366057fe9e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "52b83438-68cf-4e31-ad70-de0eedce7d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f7444a-94eb-4daf-b960-dfa265c3a5f7",
        "cursor": {
          "ref": "8d336511-79a3-4946-91fe-834390056532",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2b19a7e7-9c1d-4c97-a360-ae5fdd3c7330"
        },
        "item": {
          "id": "41f7444a-94eb-4daf-b960-dfa265c3a5f7",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "803009cd-5689-4d8d-838c-d56864e03013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c971f408-baa4-47fc-8ae2-57a7821e6aa9",
        "cursor": {
          "ref": "4c7347ba-86f1-4918-8746-69b3be7e3b7a",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1787f954-2da4-41ca-9210-47540ce33122"
        },
        "item": {
          "id": "c971f408-baa4-47fc-8ae2-57a7821e6aa9",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2633ad41-da91-4e53-879f-6fbeded96b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775373f3-b6b0-4530-86c8-0c27ec0ea4c6",
        "cursor": {
          "ref": "18aec80f-b795-4ff7-b770-4d2bb6e902c7",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a9e3d7f3-2de5-411c-9f34-c53fb20e4e80"
        },
        "item": {
          "id": "775373f3-b6b0-4530-86c8-0c27ec0ea4c6",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b8abcca6-ea31-4072-b9d7-2e027f2b5008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee37ee9c-02c2-4683-9e5a-412c97c2949e",
        "cursor": {
          "ref": "077a2a0b-cfaa-495e-9438-49df72d2879d",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "407532bd-f446-40e4-9215-3f5bb89d1456"
        },
        "item": {
          "id": "ee37ee9c-02c2-4683-9e5a-412c97c2949e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "09e635b7-b329-44c3-a8ff-b88231dc8f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f808a2e-77f6-4c9e-ae7b-b5527e4c3e9d",
        "cursor": {
          "ref": "d19448db-3cfd-4aff-9034-35f1b09a9f62",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6ea2e18a-d7dc-498d-bc64-64d9738fd3c3"
        },
        "item": {
          "id": "6f808a2e-77f6-4c9e-ae7b-b5527e4c3e9d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "837258ca-0e5e-45ab-8bbd-6a4c7f331e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aee975e-002f-45f7-a068-4fc95cb204a5",
        "cursor": {
          "ref": "d0b39f11-9b6a-4e71-80c5-aa45a9b514f5",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ce7390c4-b62b-43e0-9fd0-6459e765cba2"
        },
        "item": {
          "id": "9aee975e-002f-45f7-a068-4fc95cb204a5",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c36d621c-407d-4cba-ac31-7e7db03b5377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cede5752-23d9-4f47-9815-7101c231b1f4",
        "cursor": {
          "ref": "b7e8fc1f-57c7-46f3-93ee-34c99a3d5294",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f86fdbe7-d690-4250-b9aa-9201743acbf4"
        },
        "item": {
          "id": "cede5752-23d9-4f47-9815-7101c231b1f4",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2da3a7d6-6d29-499c-bc87-e4c2ed021b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caad12b7-c49e-4673-8b9e-ca082fb3bd34",
        "cursor": {
          "ref": "265fbe4e-8393-4acc-bf31-f418bc999d30",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a4fe6702-1144-4a79-a6f3-f9a6b4d78839"
        },
        "item": {
          "id": "caad12b7-c49e-4673-8b9e-ca082fb3bd34",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "502b4ef2-0c31-44d6-9546-d88561ab9d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3437daed-f539-4c9e-9ab3-6d8da41949e5",
        "cursor": {
          "ref": "227b580f-4338-4515-8ca6-aba83f9bbb74",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "fa822c8d-2a62-4b43-9d8f-a5234bcf2598"
        },
        "item": {
          "id": "3437daed-f539-4c9e-9ab3-6d8da41949e5",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "aec7c400-5701-4c4e-a10d-3c8ec748013e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e2b1db-8e54-48ee-9954-047b20b948b4",
        "cursor": {
          "ref": "0a907bfb-6cfd-46d5-b926-6c0330fa7338",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "596040b0-c2c5-4d10-a854-e2d670c90737"
        },
        "item": {
          "id": "70e2b1db-8e54-48ee-9954-047b20b948b4",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ca506b98-12f1-4fa2-abed-799221be8ef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c285d49d-ee6a-45b2-9fe0-c41d9bd9bf7d",
        "cursor": {
          "ref": "559a76f5-919d-45f7-9216-cc9f61b7b83b",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "70f6e0b5-4779-4d78-9fa9-53d7a183706c"
        },
        "item": {
          "id": "c285d49d-ee6a-45b2-9fe0-c41d9bd9bf7d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "96e2c250-87fa-4cf9-abcd-c0346a3c0a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e17e57ea-06c0-4c1b-8ac0-fc209d3aa8ba",
        "cursor": {
          "ref": "cdd60dd4-d138-4d2e-a44b-f8396ab7fb59",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "fc6bbfab-3fe7-488b-a2ae-aac487623590"
        },
        "item": {
          "id": "e17e57ea-06c0-4c1b-8ac0-fc209d3aa8ba",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "85e8cd06-6b4f-4cd4-bf4f-24bc5dfefa01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbfbbd54-0e05-47b4-b1b5-77e71014c1a1",
        "cursor": {
          "ref": "ca47a80b-a601-490c-b31c-e98dd5725452",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "64ff4806-6423-4b26-b9a2-3eb288a7bc0d"
        },
        "item": {
          "id": "bbfbbd54-0e05-47b4-b1b5-77e71014c1a1",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6b992995-2ad7-4226-b956-d1c42773b128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1125fc95-eabf-4382-9fbb-222ff9f7c30c",
        "cursor": {
          "ref": "3312f599-6d99-410d-96da-9247078909dd",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "91eb5e00-0dc7-41ad-89c8-5b7341afccd5"
        },
        "item": {
          "id": "1125fc95-eabf-4382-9fbb-222ff9f7c30c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "6b695ffc-9147-45ef-95b8-3f5a551f0617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b647c938-f614-41bb-9529-d772f08f91dd",
        "cursor": {
          "ref": "d103520e-7664-4d72-bcd6-b052bc9fb235",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "aa12edce-a845-4b01-abe9-4956af36a095"
        },
        "item": {
          "id": "b647c938-f614-41bb-9529-d772f08f91dd",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "af14ef98-f84c-4ed6-bbae-80c4465954d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcfb40c1-167a-4e5c-acd1-ca110bf5edbf",
        "cursor": {
          "ref": "e559a0ed-6018-4d94-a5d4-cc2bd2df0149",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "867acc9f-5471-4cfa-bb86-dd45cff98740"
        },
        "item": {
          "id": "fcfb40c1-167a-4e5c-acd1-ca110bf5edbf",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f54a69e8-ca3f-4a68-ac42-7422e120fd78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7dbc6ac-ec1d-4a0f-9b14-529a934ea25e",
        "cursor": {
          "ref": "5fa335b2-b5d6-490c-a553-cc82fb9cf3dc",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1c4061f4-cf96-4914-87de-2be24b72e8e2"
        },
        "item": {
          "id": "a7dbc6ac-ec1d-4a0f-9b14-529a934ea25e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "114f210c-1e96-434c-8cf0-d640e2e28c7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f6fc96-1e96-4d99-89f2-18cd92301684",
        "cursor": {
          "ref": "64d037f5-d491-4a52-bdfe-63e43eea4a34",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b673869f-2462-4c06-a07d-16ccbba9bfa2"
        },
        "item": {
          "id": "d2f6fc96-1e96-4d99-89f2-18cd92301684",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b8dcc8ac-abe4-4c6b-94ac-9b31e4e9ff4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e903833f-c753-4a41-be34-b3709b671d96",
        "cursor": {
          "ref": "e0f72e0f-2721-4595-b992-90f3cdcdb876",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "832f673f-f04c-40a2-bddc-9b922dde51e7"
        },
        "item": {
          "id": "e903833f-c753-4a41-be34-b3709b671d96",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d6c0c131-d8fd-485d-bed7-b6cd0b6056ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e302420c-078e-4efb-8c79-cd3b41788ae4",
        "cursor": {
          "ref": "f209f752-c059-4e86-9c90-3082d47898bd",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b2f81dea-a4cc-4514-b118-ac63c7ac9c61"
        },
        "item": {
          "id": "e302420c-078e-4efb-8c79-cd3b41788ae4",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "71c93218-bad8-49bf-842a-5cbc69294f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6019909f-9ab5-4712-999d-b5f4010962b2",
        "cursor": {
          "ref": "c00f1421-d3b5-4129-855c-bef0ff6f0fc4",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "dde7fc49-6660-4ec5-8bcf-5546c9d1b6ed"
        },
        "item": {
          "id": "6019909f-9ab5-4712-999d-b5f4010962b2",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2a3e856c-b484-48a0-b0f7-1050ae82c84b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 157,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "132cccac-d5eb-4d54-9b20-b83df8602102",
        "cursor": {
          "ref": "d8f79803-bcdf-4f37-a44a-8e7f02dbdcd6",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ad396bdf-a166-4cf2-909b-76885a7d2774"
        },
        "item": {
          "id": "132cccac-d5eb-4d54-9b20-b83df8602102",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f26a46f7-1415-40e7-9c68-956c1c2661c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de21077-33e4-4136-9d0b-d6023fe84448",
        "cursor": {
          "ref": "72fdab2f-ec6e-4d2d-b3f3-16115d0d444b",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "4ed8409d-df3d-4cd0-9068-be421bbb31ca"
        },
        "item": {
          "id": "8de21077-33e4-4136-9d0b-d6023fe84448",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "8a0392d4-9b48-4a5a-9a5a-b9c799f1cb72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c90f10-84e8-47ce-acc4-c4c0d3e8d6bb",
        "cursor": {
          "ref": "c43aecf5-04a4-4880-8a5b-4625843de48a",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5a22d24c-8d00-4052-ab59-f085e866fd42"
        },
        "item": {
          "id": "e4c90f10-84e8-47ce-acc4-c4c0d3e8d6bb",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "cdb95d1d-3f2d-4a43-bc30-23aad74eee00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "248577ce-9905-4299-87ba-b3fa364484d9",
        "cursor": {
          "ref": "5ef9ce7f-39ae-4a54-9bab-338ca5a93b1c",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "6f0f73d6-ede1-47e2-8945-74afb4dbaad1"
        },
        "item": {
          "id": "248577ce-9905-4299-87ba-b3fa364484d9",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "04cf3045-1bcf-485b-82d4-c056590623d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b4c4fa-a9dd-46e9-a2f4-c8e38a13d0f8",
        "cursor": {
          "ref": "c023dcec-c97a-4162-bb76-23cae080a438",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "becc2e51-b89b-4025-a4a7-bbe0d038ae90"
        },
        "item": {
          "id": "20b4c4fa-a9dd-46e9-a2f4-c8e38a13d0f8",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d6aa4eca-6487-4ba7-9abe-66aa1ed170ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf423856-808d-4de1-ae5c-a7d4a147262b",
        "cursor": {
          "ref": "0971ad0b-b926-4467-bce7-ccd9a5beb7ef",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "12c7554c-0dd5-41ed-a024-774939c1fc5a"
        },
        "item": {
          "id": "cf423856-808d-4de1-ae5c-a7d4a147262b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "0bf7db45-55b3-4ef7-8342-66f084cc1773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "458f9f51-17ef-4d0c-ace8-d94fe9a97622",
        "cursor": {
          "ref": "16aea293-bec8-4e39-abb7-367b1f13241d",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "191717d9-48d8-4781-bf68-190da06b6eba"
        },
        "item": {
          "id": "458f9f51-17ef-4d0c-ace8-d94fe9a97622",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d1aa2327-6ae7-41db-b5a9-d49d1d53e09f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6543a359-8049-42d2-aa28-2bf045aa99ec",
        "cursor": {
          "ref": "7167c8a9-61bc-4373-bf17-0a98c53f11e6",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "6a3dd748-ba23-4ed0-b18f-c0dfd45353cc"
        },
        "item": {
          "id": "6543a359-8049-42d2-aa28-2bf045aa99ec",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "31b48792-da2f-430a-a306-7557917e1717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f9410f-c2dd-4f64-b7e2-52613c7d596c",
        "cursor": {
          "ref": "2e421cb2-a6cc-418f-946f-d513111039ce",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e66f2578-45ab-48f8-95d3-9de0685905e2"
        },
        "item": {
          "id": "a6f9410f-c2dd-4f64-b7e2-52613c7d596c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ca37701d-686b-45e2-997c-4ee96161f6e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f4afc9-516d-4be8-a51e-b9516fdb3459",
        "cursor": {
          "ref": "83fe66e5-bf57-4912-a066-a2d92045f695",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "107e4af8-3a39-4090-b8bd-aea174230da2"
        },
        "item": {
          "id": "c0f4afc9-516d-4be8-a51e-b9516fdb3459",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "4b3ade8e-eee6-40c4-96a1-3a9066a417d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a70cba-34f9-4600-aa47-7f87f52fe22c",
        "cursor": {
          "ref": "fa0e4f10-fbec-48d9-b9a2-f24c056375b4",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b94e7ac7-5e07-42bb-b0d9-53f37eb6af8d"
        },
        "item": {
          "id": "17a70cba-34f9-4600-aa47-7f87f52fe22c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "3b2f6312-28a2-4f14-bf83-c51b5a909ac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe4ff5b-7264-4bb0-b889-3815329ef2f1",
        "cursor": {
          "ref": "7fdeed61-f7ba-42f1-afa1-51037341abed",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3454ce1d-8830-4692-b262-8539dc75d840"
        },
        "item": {
          "id": "cbe4ff5b-7264-4bb0-b889-3815329ef2f1",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "cbdb7b6b-7a43-4484-9287-4c2df8ce2eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "880e6d29-387d-4cce-9932-07f6427f3f6f",
        "cursor": {
          "ref": "c37249dd-372e-421b-ad87-c346bfca0a51",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9e6139f4-56ec-4740-9e43-e06d35184fad"
        },
        "item": {
          "id": "880e6d29-387d-4cce-9932-07f6427f3f6f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0c248502-1171-439a-9b47-1ddb03b062b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3a01380-c7af-4932-941f-ae61747d7758",
        "cursor": {
          "ref": "8be573c2-51fe-48da-ab22-05be19b4a4fc",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3388a9c6-c2fa-468c-bf1d-d7dc4bb7c797"
        },
        "item": {
          "id": "f3a01380-c7af-4932-941f-ae61747d7758",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "41368208-86d8-48b0-811d-4a2140c7d14d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddb61873-1d81-4c54-bb74-5ee8a1f97ebb",
        "cursor": {
          "ref": "39b80bd2-f8fb-425f-85c9-0c322033e407",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f4dd18a6-0d60-4fc6-bab9-a75694081e80"
        },
        "item": {
          "id": "ddb61873-1d81-4c54-bb74-5ee8a1f97ebb",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "72f6f559-31a3-4191-b6ee-7206b294c20b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6180d0-5dfc-4acf-b4ce-bd990b5d499f",
        "cursor": {
          "ref": "4a73f6ac-b158-47c8-b785-fe5b783e8b71",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "9bcde09f-a5c3-4fc7-9789-cee459901bb5"
        },
        "item": {
          "id": "9e6180d0-5dfc-4acf-b4ce-bd990b5d499f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "9a5ec4fb-67ed-4a9b-8d3b-baa8311797cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d285aeec-e601-4073-acb1-f92880f177aa",
        "cursor": {
          "ref": "32f59fda-5c95-48e7-8723-eadd4f6b94d3",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0cf2e249-59af-4321-ae15-ec7c3305308b"
        },
        "item": {
          "id": "d285aeec-e601-4073-acb1-f92880f177aa",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "55b792f7-ea46-46f1-8422-d3e6f01fe6ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c5b4894-ec79-4970-8f8a-f2ea463e3cdf",
        "cursor": {
          "ref": "fc9a2154-0a6f-4edf-b75a-00fc5975bb9f",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a7819e4d-9390-41b8-b620-b04823890ad5"
        },
        "item": {
          "id": "1c5b4894-ec79-4970-8f8a-f2ea463e3cdf",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "46cb63db-a551-461c-a756-418ab3b6541a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c597c88-9782-4992-9fc1-c7690be18843",
        "cursor": {
          "ref": "e68b152b-e33d-4731-b46c-59fab4873a99",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "27582b2c-0a38-47a1-a20c-5659978da9e1"
        },
        "item": {
          "id": "3c597c88-9782-4992-9fc1-c7690be18843",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9f60633e-d9f7-484f-a7a8-55e305991a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7e2a85-ce35-4d49-b742-4d18aaf576e6",
        "cursor": {
          "ref": "0a61b882-047d-427e-9242-2dfb93ad70fb",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4ec994e1-96c3-4385-badd-4ea71d2e4119"
        },
        "item": {
          "id": "ad7e2a85-ce35-4d49-b742-4d18aaf576e6",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "01021005-0df1-4f36-9b64-bcab4a82630f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c0f172-6e41-4d2a-ae56-305aaf625bfc",
        "cursor": {
          "ref": "32774fdd-fbf3-406a-85e5-611ee75b1198",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b764cfd6-14d7-4a42-8eab-e194c6776460"
        },
        "item": {
          "id": "a4c0f172-6e41-4d2a-ae56-305aaf625bfc",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6b30a40a-e193-4515-93af-d6a668e33a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84721900-a8bd-475e-a65f-78e29384d0d4",
        "cursor": {
          "ref": "54be1921-a4bc-4a40-b601-320c64b760d2",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "0b2d7c96-d703-4d52-8df6-acaea44f65a3"
        },
        "item": {
          "id": "84721900-a8bd-475e-a65f-78e29384d0d4",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "935f8877-5287-43da-87f7-c67ad0bddf72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb5485a-2929-4929-81f0-af86db6eb416",
        "cursor": {
          "ref": "8aba2458-9381-48c3-a9cb-eb0aa6616194",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "0fa5fe69-bcc8-49bd-9c88-6e6ffdf34ced"
        },
        "item": {
          "id": "2cb5485a-2929-4929-81f0-af86db6eb416",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "7c104801-1581-453e-b89c-39af8754d297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d44b80-c325-4d39-81d0-2c0eb0af68ab",
        "cursor": {
          "ref": "e6b8534e-a50d-48fd-bf57-fbea20da1142",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "19668baa-77c7-4a51-99da-0512259c5149"
        },
        "item": {
          "id": "43d44b80-c325-4d39-81d0-2c0eb0af68ab",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a245ec6d-7dbc-4dd4-a4dc-383293b652b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b32ae8d5-fb8f-4048-8e17-b0d1667108a4",
        "cursor": {
          "ref": "62d938e9-8e0b-4f9f-9d44-d8f10912dfd3",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4346cf03-0fe2-4cb4-a6b7-effe224638ae"
        },
        "item": {
          "id": "b32ae8d5-fb8f-4048-8e17-b0d1667108a4",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ac8f0dac-a8c6-4ead-841d-e903adcbe92a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a03250-c5c1-4f0b-ab9e-60f8ddcfb1ce",
        "cursor": {
          "ref": "314a6914-e28e-4d3f-8e9a-991e55505dec",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1d657ac5-a0ee-4bde-8cca-1e480ebcb42c"
        },
        "item": {
          "id": "06a03250-c5c1-4f0b-ab9e-60f8ddcfb1ce",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e444a597-fa29-40cb-9970-41eb6912cf67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aad2bda8-4960-46b9-ae2e-8edc7ff8581d",
        "cursor": {
          "ref": "8d681118-520c-439b-8395-9d4494c35234",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "5d4db6c8-91f0-41e7-a4a3-8dfff7a63e84"
        },
        "item": {
          "id": "aad2bda8-4960-46b9-ae2e-8edc7ff8581d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "74c5d18d-40ef-4f1d-b302-2b62d8928746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1144c2d-4334-4058-887c-bfdabf2c10a2",
        "cursor": {
          "ref": "f2cf5aee-a6b9-4caa-a660-0c28907ee8b0",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "45e2250c-e480-4c41-bebe-2f963f19b80a"
        },
        "item": {
          "id": "c1144c2d-4334-4058-887c-bfdabf2c10a2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d48fec2c-c76a-42f7-9208-c49061b02ac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148a353a-dda9-4268-b26d-b4f24c0a72e3",
        "cursor": {
          "ref": "12c3b0ad-80b3-42de-aa1c-57b561a731e7",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ab94f902-9cbc-4eaf-b67f-100152fbf953"
        },
        "item": {
          "id": "148a353a-dda9-4268-b26d-b4f24c0a72e3",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "3b345ac4-edc9-4ead-98a3-1d8a68aaa7f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "817e2c7f-e923-4cd8-89a3-1250fb10d812",
        "cursor": {
          "ref": "e86a8d77-ffb4-41bd-b614-bc0756167aa3",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f5373481-5a1e-4a6c-8c19-42c01e7b1ef1"
        },
        "item": {
          "id": "817e2c7f-e923-4cd8-89a3-1250fb10d812",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "7f3b1c7c-fef4-40eb-9616-545a3d6ad92d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e464e952-bd2d-4d5d-969c-7f9bd4249566",
        "cursor": {
          "ref": "f29197f9-c205-4a27-a9a3-c47c8addc2c8",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "0054d9f5-c832-4de0-986f-7a0c18555f6a"
        },
        "item": {
          "id": "e464e952-bd2d-4d5d-969c-7f9bd4249566",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c4ef1e05-db03-4c1f-91e3-ee2e90baa005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efbcebe4-abeb-4f38-8053-6a1d57f92c68",
        "cursor": {
          "ref": "3eda8f4a-84d1-4b43-b1ee-468880c9b879",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "647ff319-714f-4dee-b367-33c93d680156"
        },
        "item": {
          "id": "efbcebe4-abeb-4f38-8053-6a1d57f92c68",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "05af599c-ef1a-498f-bb55-5b43f50a7566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e95cd3ce-f62e-4344-8539-5ab08611873d",
        "cursor": {
          "ref": "15328f01-fd63-4055-8838-fcbdec3a0bd3",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "4541aeb5-6382-4f69-aa40-12a64b49a381"
        },
        "item": {
          "id": "e95cd3ce-f62e-4344-8539-5ab08611873d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "57d178c3-69b4-4a43-b701-3ad5f8cf6925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a9c6aa-510d-4980-a8a5-2b0888188c6d",
        "cursor": {
          "ref": "5a1bc389-e0fe-4225-b51b-e85c0d7704fd",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "3f7efeb0-124d-4213-bafc-945e660eb8c4"
        },
        "item": {
          "id": "52a9c6aa-510d-4980-a8a5-2b0888188c6d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "89063f2e-5760-44a2-ba4c-109bdaadba8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e735228-846c-4933-b434-d97eb32b9cba",
        "cursor": {
          "ref": "8b3abe78-8f70-46fe-93b8-ec32f053292c",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b27ba480-748e-4ed0-bcad-59886e410295"
        },
        "item": {
          "id": "3e735228-846c-4933-b434-d97eb32b9cba",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "47b6f709-76c0-4448-921e-91797d889fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d365ef2-6a09-45aa-99f8-9bfe46cf5c78",
        "cursor": {
          "ref": "8753e33d-46f4-45c1-a71a-76ec5729cf8c",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1f39fb1c-54f6-4a2a-a17b-c12d212783e5"
        },
        "item": {
          "id": "7d365ef2-6a09-45aa-99f8-9bfe46cf5c78",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "37ae113f-ce76-4f3e-b0e5-99e4b2e842e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e1fa46-db89-4503-8aa0-0a5f8a90bd5f",
        "cursor": {
          "ref": "a6e579e6-f12f-4137-9fb8-03e2b8b2887d",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "24d59e72-c39f-4949-a19a-63cb2a3eb6ab"
        },
        "item": {
          "id": "a9e1fa46-db89-4503-8aa0-0a5f8a90bd5f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1d4850ad-93af-4ffb-b803-b56c4ad04f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eff8b5b-921e-4bc7-8a83-932d150e90ca",
        "cursor": {
          "ref": "b707255b-7b57-4e60-9217-e33fcd7c8e5a",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "439964a6-7a26-446a-b410-64a7db6ffd5b"
        },
        "item": {
          "id": "9eff8b5b-921e-4bc7-8a83-932d150e90ca",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e6791f31-440a-4de0-87c3-44490cdf8220",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2160ae3c-7539-4ee2-a05f-9a4b3ae95ed2",
        "cursor": {
          "ref": "37b1f605-89d5-4e0d-a3d6-6f2dc1c9ffe9",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "4b04c6cd-123f-41fa-b84a-7978a9cf6fad"
        },
        "item": {
          "id": "2160ae3c-7539-4ee2-a05f-9a4b3ae95ed2",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "a9466b6e-272e-4eef-97b9-5c4e35ec64a5",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 8,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d63415af-0d98-44be-977c-62858c8d9b83",
        "cursor": {
          "ref": "cd526a11-1adb-4a20-912f-e72201c541ec",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "426c5345-6bcf-457b-a5c9-51a30e9699d3"
        },
        "item": {
          "id": "d63415af-0d98-44be-977c-62858c8d9b83",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "6dc80177-d3c8-42c9-9267-474b75aaed45",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f55747-f2cc-42ae-b70f-366662abe979",
        "cursor": {
          "ref": "299cc314-7130-4c2e-8848-5d8a4323e3e1",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9a180329-4008-4bef-9372-9b023be2e7d8"
        },
        "item": {
          "id": "d9f55747-f2cc-42ae-b70f-366662abe979",
          "name": "credentials_verify"
        },
        "response": {
          "id": "346abe18-6c23-4be6-a62b-e8642d321579",
          "status": "OK",
          "code": 200,
          "responseTime": 23,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "625867e3-be3b-4d74-8cd8-c60c4ed87bd7",
        "cursor": {
          "ref": "9ef2bbe6-3e8f-4e6e-a74c-ad5acf915430",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "7d58af22-1975-4ded-9729-5ef330a8339f"
        },
        "item": {
          "id": "625867e3-be3b-4d74-8cd8-c60c4ed87bd7",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "93397a67-e66a-46de-9ddc-ce869088d62b",
          "status": "OK",
          "code": 200,
          "responseTime": 25,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a24870b-e5a5-49ee-8941-6aea957abcf5",
        "cursor": {
          "ref": "ea0dee3a-74fa-4c11-84cb-b3ccd1832184",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "726b57e5-3ffb-486c-a7f5-957572088fe7"
        },
        "item": {
          "id": "5a24870b-e5a5-49ee-8941-6aea957abcf5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "47a3b913-8e11-45ac-9144-ff8b0b3d42e4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a24870b-e5a5-49ee-8941-6aea957abcf5",
        "cursor": {
          "ref": "ea0dee3a-74fa-4c11-84cb-b3ccd1832184",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "726b57e5-3ffb-486c-a7f5-957572088fe7"
        },
        "item": {
          "id": "5a24870b-e5a5-49ee-8941-6aea957abcf5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "47a3b913-8e11-45ac-9144-ff8b0b3d42e4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a24870b-e5a5-49ee-8941-6aea957abcf5",
        "cursor": {
          "ref": "ea0dee3a-74fa-4c11-84cb-b3ccd1832184",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "726b57e5-3ffb-486c-a7f5-957572088fe7"
        },
        "item": {
          "id": "5a24870b-e5a5-49ee-8941-6aea957abcf5",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "47a3b913-8e11-45ac-9144-ff8b0b3d42e4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8180bf7b-bf12-4374-8cd5-7b087ba98a72",
        "cursor": {
          "ref": "1dd8d7ef-24a9-4349-a75d-2d5ef8d41f6f",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d57d0bee-aff8-4345-9d1c-aee8fb85f465"
        },
        "item": {
          "id": "8180bf7b-bf12-4374-8cd5-7b087ba98a72",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "d9da268e-4ba9-4277-b3a6-d4ec6a7aed5b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 9,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8635db7-0a9c-41db-b6bf-2b9c4ea20722",
        "cursor": {
          "ref": "5d4135f3-f46a-4e97-b347-f36294834e04",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4baf53a9-8211-463d-b282-e248efff401b"
        },
        "item": {
          "id": "d8635db7-0a9c-41db-b6bf-2b9c4ea20722",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2d023955-0141-4248-b05c-46a27b2b3767",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8635db7-0a9c-41db-b6bf-2b9c4ea20722",
        "cursor": {
          "ref": "5d4135f3-f46a-4e97-b347-f36294834e04",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "4baf53a9-8211-463d-b282-e248efff401b"
        },
        "item": {
          "id": "d8635db7-0a9c-41db-b6bf-2b9c4ea20722",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2d023955-0141-4248-b05c-46a27b2b3767",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd8e6e6-2cdc-4810-a1ac-585fcae0430b",
        "cursor": {
          "ref": "31d38fda-c197-4a15-a24a-a0f789b62d2d",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "11faa613-4bf1-4ddc-ab9d-183c2b29dba1"
        },
        "item": {
          "id": "0dd8e6e6-2cdc-4810-a1ac-585fcae0430b",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "8dba886a-1f7d-45bb-9114-36a70abbe1bb",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 9,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c374a4-5a92-4a7a-b2db-694c3c0f14bd",
        "cursor": {
          "ref": "1c3d5fb1-cdc0-4de2-8513-c537e3abba19",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c4233d35-7aa0-4abd-84b6-5bc4f0faebb3"
        },
        "item": {
          "id": "93c374a4-5a92-4a7a-b2db-694c3c0f14bd",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d4f3f758-2b1e-4ccc-a921-d136d432b3f9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c374a4-5a92-4a7a-b2db-694c3c0f14bd",
        "cursor": {
          "ref": "1c3d5fb1-cdc0-4de2-8513-c537e3abba19",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c4233d35-7aa0-4abd-84b6-5bc4f0faebb3"
        },
        "item": {
          "id": "93c374a4-5a92-4a7a-b2db-694c3c0f14bd",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d4f3f758-2b1e-4ccc-a921-d136d432b3f9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f1ff5a-a5a4-442b-900b-2b6cda82fcf6",
        "cursor": {
          "ref": "61587345-3467-4777-b260-9913ddfe5e9b",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "d060099e-4146-4fa8-ac5a-08d0e9ebfcbb"
        },
        "item": {
          "id": "f9f1ff5a-a5a4-442b-900b-2b6cda82fcf6",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "25b7046e-3546-4c55-a221-850e72853d77",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 9,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}