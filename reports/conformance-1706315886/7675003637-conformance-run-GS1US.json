{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "18357d2a-129b-49b9-87de-7ab2235ae23b",
        "name": "Clear Cache",
        "item": [
          {
            "id": "4e262823-921c-4e49-bd89-a95057a0080c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9fcfa0b9-f1cc-438e-84b4-7aee5f92115d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "88383510-7b89-4993-b105-8842f63d6a6a"
                }
              }
            ]
          },
          {
            "id": "11ea7067-9fa0-42bd-bd9b-b6ef76e76e5b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fb343517-379b-4089-b4c5-2d21df796de6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e09d4034-f6a2-4983-9990-ef28a67299df"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "903e8eaa-cef9-4cdf-8028-2a284e6fac9f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "81e5f513-9f9f-4bd4-876a-2ee394aae22e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "38cf3b21-98e7-4ccb-ba63-2df721299e5d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fcaec413-1a32-4d68-a52f-1c190211de2e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c4cb5203-dfd9-4955-817b-7458a6f5e36f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2e8c16ef-e471-49dc-9677-fd9aeb192847",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "187106bd-7e64-41ba-9aa6-25aa7e30ca19"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "412cebf7-9d49-4df6-a993-48f75de9fb55",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e790e352-5c0d-4025-ae1a-db91ab2874d3"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "96463e24-34c3-4a5f-94ff-f966c58c9551",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "0ba0de10-68ce-4bed-8b13-36638baf3a15"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d2ca0d6d-1658-49d3-b0d3-51f930051256",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b0293f86-25b3-43a5-bf8b-a487dab6e4fe"
            }
          }
        ]
      },
      {
        "id": "3e441bb6-d17a-49fc-a7e1-5e9b65043134",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "2605d2e5-9d4a-48cd-ae27-84930d284988",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7ecfd39b-621b-435a-aee3-47d1c64a3bdd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7f939ec6-f018-4b7e-8fc0-7009de193f6a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42717105-cbb3-4b66-9ccd-023548b3b164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "14c35870-f0d9-4f69-9846-f559e7d6269a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28cdb589-9d0c-4fe5-bb76-eae50dd50c65",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d029f5-ea2b-441c-a4d4-2da8f1258e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "401b12af-fa55-4dc0-9745-0516a884967c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc38c5bc-9cd2-4546-b5f0-00a8885e8a1e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d826e6d4-3f97-41bb-a074-b5255527ae67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3eb19763-c7a5-4348-b2b6-e9bf67c7e656"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f7b8f684-8845-450e-be0d-89eb3a82614d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "912d5eac-6cb0-46c8-9177-3da33f422d6f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47cd769d-d1d3-49a1-823d-f4a10bafd41f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d9ea460f-6a32-4250-a437-cc3b7e7db300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6742eeb-9f23-4ade-b696-b443c4177480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc7f98b9-3f8e-4f0b-ae53-d4e290dda811"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9df17fc1-cc68-4847-b050-d0f02244c5e6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "565844b5-b3ef-404b-87db-562832faced3",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "21c96c38-96b3-4ca1-87c6-0ae4450fe600",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "0ac27dae-9829-47de-be52-ea7f2d9e3b86"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "041d6916-c9c3-4429-81ea-c00153042a4d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "fc022bb8-82cf-479a-acf7-8e1d2860164c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4dffd395-6a86-46f7-9944-578883bc1647",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4d12e756-da8a-4509-a8cc-f1fa83e186dd"
            }
          }
        ]
      },
      {
        "id": "933e71ec-2e42-4feb-a021-85908b0a604e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "77ba50fd-c691-494a-90a5-2b9bdfc376b4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cc3cc457-773a-4a5e-bc48-240cabd675bc",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "3943d167-d405-44bf-b7f4-6db51ee3fd90",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "609074d2-65bb-442d-85f1-d8eece26ab67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52f7b4cb-d7b6-46ce-a229-c0bc9f9f0ac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9587f2cd-6af2-4ade-bcfe-de424d1a371f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "147fa898-c288-4660-a8bc-212a6f0154a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f5fdfb-1d11-423d-b2dc-f62a09e5c1f9",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4838a79-dc5b-431e-8242-24f35435d1df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dd65cae-c5f0-4c99-a4c0-d3a4b720059a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c84d8aa1-9a44-424c-a965-d8c5edb56e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62449fd1-f581-406f-bcb3-9f0082ea17db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e64f290-c83a-4834-a698-a86c01ba0d2a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c337e6-8821-4086-8c71-92131e0b86b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9dbbe42-65fc-4a4b-8277-dddbe3e1aea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1848d8e1-1593-46f5-ac2e-7ccb406cab94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d582b4a-acec-4609-9206-4ee821cdb6c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6312cf54-2724-4cd2-b0f0-a69c269655e8",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45480c23-c363-41d2-811c-5e89eb496c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1a091a3-3555-4f78-bbe8-d1264be9d2c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83bfebd5-ed3e-4a41-b345-00542ff86352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2be2a9a1-428b-4d2d-9236-1560145379c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1137fa4-bde9-44ff-9f0c-875a2bd1e418",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce7f026-521d-4a94-af87-9ca7e05b05e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09691883-f079-4747-96cd-40998eb7db4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f79e4b-fb60-49cb-8323-73a99fdc372c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0e99734-384b-44d6-bd62-a54bc942a46c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ba181d2-a74a-48de-885a-0036e559d8fa",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e49996c3-e6df-4b2c-a968-b505a723e83c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9bfc484-d960-4cb2-9844-2b479088b574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7001d63-019c-4fa1-b023-bc32a9a460af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5132a26c-0fb5-4de4-8e0f-bcc4bc0e57eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7674ddb2-dadb-430d-bd60-4a56652fecb3",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84edd7b0-2103-4327-bf45-fe172ae37270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1db51c13-824d-4836-8825-8f7d9fe2a9da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e10a549f-6b89-4040-ac09-5057f1ca41c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "793a3b8c-8e5f-496b-9924-3f395ecf3524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fee8e5b-95c9-40d9-8fbd-58b777d3f39b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0592aedb-3a47-4532-b163-c8fe9d4ab860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a19c9f8f-1b2c-4e3d-9fd1-3ad333c18e5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "573eadf9-7a69-4a42-91a8-5584ea17cb62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "052d6675-27df-40a1-a349-9047376d7bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eebb2838-ff00-401c-8c5d-7daecca3af3c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b8e881-1536-4075-81d0-3c05029a0af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c42ffcb-d540-4c97-8916-020f61e34dd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e71675bf-4743-4761-8fcd-fdb341dd1103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8843e90-c315-49bd-83b7-762fbcd706bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da04c864-27f5-4166-8c67-716468a2115a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb485dc5-cd9c-417e-83d0-ba4f6aa58cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bbc2674-787d-4e4c-936d-6482b4754ea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27dc1d3d-2d1d-49c7-bad3-91790e01bed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef8b2aae-4a73-4422-8ab1-a370f70d9a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9db8c09-699e-4c48-8681-6eb6b9ccdc74",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e38f10e2-98a6-4af2-a1b7-ecf62fae7cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18b47b62-aa87-4668-9f06-7bfa3b5deff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0898c09-5574-488e-aa90-ec3ea4524597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "082834bf-d0da-40f8-893e-13bb2535c0f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6fb1f2e-bba8-4bc6-9c43-5690897867c7",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab3618c4-aaeb-4bdb-93c2-1c6b81c2c770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dd98b7a-88a9-4e1a-b4ba-740fc567f3dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82415bc0-ffe9-41fb-906d-aa21df9a7c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46002c01-08eb-4a08-a82a-7291e62f315a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9a3203-cb16-48bc-bbcb-330f713d2008",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9181089c-d0b7-4665-b3f2-d6250d4a113f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b4a7010-412e-4746-9cda-cd8149a6f459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd207925-baea-4d1d-8565-5987b3a71af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e071aa60-11b3-4395-ae44-1c69255ed1a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "100d3a55-4d71-4ba4-ab38-61ca2654eba8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b5ab400-f690-49d2-bb72-a9cfd5a6e6a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4623bdd-67c9-4218-86e1-74f96a0e7a8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36af591c-37af-40c4-95c0-a9875d99f681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2eee45e2-cf68-4ee8-a449-55775034453a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d30115-01ea-4050-8ace-eacd31187699",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c1e836-5e40-456e-9ce9-8280a5a234ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efd98c6e-f178-44ee-8f62-1416f78b7dd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e652b077-2f37-468f-81f8-cc0d2f85d325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0bebd4e-43e8-4e82-a85a-974f00f06cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59966a81-8d6e-4861-aa0d-8ee99897a3c2",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d4139a-19e6-40ff-b6e5-d466586de7ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f360ae0a-9375-41fc-b995-3ee3d809620e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f26df96f-f263-4266-a212-04cafd6a1b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8fddc17e-6bda-42a3-9c42-ebaa5c51f1e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d2749ca-e7de-4aa4-ba4b-f1e390356470",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "442fbd8a-2f68-445d-b980-d94f3af6c242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5896093-7160-4bd2-a51c-7f7d360eb58d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d534a12-39ff-4a88-a493-89e1da5290af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4af21d9-bb5d-495f-9c71-1e591d153494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be18ab7-6127-4992-ab4a-4362d0cb0835",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf006aff-923f-43a7-90f2-965a2e7a1dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c231bd7c-5638-406d-8a27-ff37b83621c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc554e7-a1f7-4ac4-bcf2-f5a2ce22aed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf7cafb0-14b4-43af-bd82-969a87e15422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a18f53b-4bad-4a51-b9d7-23b0853f4730",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b7c234-1661-438d-a6a9-7f43ed3a6056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6c87294-7d66-4282-9304-c76853e00a28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae52afa-5bd1-4559-a1fb-473689be6f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b913480-a370-4b2b-9092-c6e38b17ed18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cbcd58a-be72-4e8b-9135-c5aaa7d35d3c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e5d58b-df38-4a62-9b58-9dbcbfc8c80b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b437284-dcbd-4fd9-866e-9def734c16be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd749ac2-395b-416b-a661-1c97526a92c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "53a0a229-bb34-4b98-99e1-664b144a0ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f7ee23-e312-4d1c-90e9-be656eebad4a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8938291e-e1f9-4ec0-b26a-e126048f1113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22e67464-a735-45e3-b909-621e9c83076e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb0438c9-3eca-4ca6-802d-458a1684cdbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8dd21354-e45a-49ac-bffe-abc4e509769d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34492840-2d31-4bf9-bbbf-29aac4851a90",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc7b187-e6c1-406f-af57-64fe4179478c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e93ee7b-2b91-41a4-ae86-23b38f8851a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1d8c8c8-4e00-479e-a0ed-e06821042600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "46d4b4a5-d57e-44c6-a885-635444f5a838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b83aa0c4-7503-4927-af1e-f0befa972a39",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c2945cf-cb84-4791-84fd-040b7a2898c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3f79209-fb7b-41cf-a747-6452607f3dc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c35463-92ce-4e4f-bdd3-0886d40dcf2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7f4fa885-5411-424d-a210-b97999fd7097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b56a6fc-ffbe-47a8-b094-6f21a634e7a4",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4dc2ab-96c1-40b3-9885-e8568aac2dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72351f6e-075b-42f3-9568-66ce9231ab92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf7fa39-83c2-4857-92cf-28eb1358315a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce464f3b-9fa0-47f7-add8-c935f35b1129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8267006-7b3d-4244-badb-8a39af36e53d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd3c76ef-adbb-426f-b397-88301c14ee32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ddbb8a2-4c96-4fd7-99cd-06e98b8ac26a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55e4604-eedc-4801-ae7f-40f4337d05b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e09ba5a3-ac41-4587-9a56-3b967283672e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4333cfdd-5bd0-4fc8-a173-d74544b7e7f6",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe1fdeb-57cf-46b8-b136-ac5ca36f657b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0b10344-e3ef-4903-a9b9-e6598f274146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7968af3-8129-400c-ac02-1a397e84c40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3b96e89-7c1c-49c9-ae3a-ecd0d3092e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab8ab609-5c75-4da0-ad40-6d2aa49f33b4",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f736801-d725-44b3-b086-ab758bf677f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e146c3b-bc44-4aec-a27c-94ca0105358e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "765c97ac-5a5c-4e87-bae4-a7280f32ef71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "79596a82-403c-4309-bf3d-2680893c3ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb7b3bcf-ef0b-4d6f-91ed-b185e739d5b8",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7462d0e9-095b-4e4b-8725-3117de238d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e94bb9f-3143-4ec7-930f-f591a3b6a4bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42548876-c343-49a9-847d-30479f087625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e00d6150-466a-4ecb-b74c-223c85ec77c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b8f91c4-86b8-40d6-b03a-a6040e98edb2",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3600e79-d65b-4713-9d26-72c968d5c0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d6cab9-4b3a-4be5-964b-0af3fe9e3f11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad45a5ae-c6c9-4333-ae5d-8b550d298adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "952dec70-f6c3-4055-91d4-51f21542d90c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "652a33df-06cd-4231-b409-565ab58ec0ea",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be8b9ed-cde9-436d-963f-018472623faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "226f5459-5cf1-4a76-ad98-a36e71f4c186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c3a981-fc89-4cab-93c6-85ad44d35737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4db6ceb-6d2e-4120-9baa-78bf19f5147c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc29aaf3-053b-47eb-8135-db42ee0f122f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda02c37-8982-4230-9b01-a6cf0ece4c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b836e7e-2a51-40c6-9a06-57a8920e5036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6fd8947-7a23-4f24-ae87-488c753582b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ac5f22b-2aee-4f24-9387-8a5b2bdb4b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e5d7bf-5c0c-4586-9a41-a65a6b1c109f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4437ad28-15d3-44ab-88ee-68a1d69361ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd8f3137-6b90-438f-a488-97f12b79a957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622ecf6d-71f7-4235-97bf-9b4ab8261274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fb2304d-7681-47ad-a642-9c656539b21a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5d4fcbe-a84b-4389-b042-74616b3c148f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca2a928-c931-42a9-80a5-555e2b670a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "525f1260-5513-4e67-9e50-0a82d732dc89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bbbaed1-148e-4d4a-83f1-68d3c77e3b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e776716-3134-493c-8583-7ef981027ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd7fb679-1469-4672-9a1d-89315638783c",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc39c16-2c4d-47e7-b688-3e9e2291b390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1be9f9e2-f556-4907-b81e-3da78829ccf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "706f5ad4-1492-409b-9bfd-e9959d71bb7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "46952620-f52a-4926-ab97-633cf036faf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "311f7bcf-5f76-4454-8ba7-e5c57112c068",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2380abe-3d6a-4cec-bd0a-dc116205f837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfffd8a6-14f3-4d16-9249-a88bbdc2b699"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a862f53-a88d-419b-97e8-ee327edc799f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "fbaf5cdc-041d-46ff-8a99-cad67cd6c4ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "577a65b6-b604-498f-9d9e-cb93c3a35790",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd841a56-f163-4510-9b82-0acf0c085426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c0827cd-6720-49f6-8d92-d2842f12b08d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee2e4a0e-ac3a-4d42-9ed8-1c1d0866f8e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b57cb009-e3de-43ad-9111-d37214c87544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0641f5-48c2-4178-86c3-5d6a80996f9b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f0818c-8b09-4210-a0b6-538c09255f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44a8bd5c-d75f-4703-8b2c-9d1de99e1427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "833a7c1a-a299-40c1-9461-8cb9daf25e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c43c612d-548d-42a1-8d11-61b66065d21f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b562d144-f60e-4da1-b81a-a657274bcf16",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e07ef287-eb73-4e18-b53e-29f28d340a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2696c690-08ea-4161-8439-5b16d15e8b9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b40b11c1-abb4-48e6-81fb-120b95b6adcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "01b418b3-fd86-4395-bd1d-198d7395893b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "173f3d6d-9449-4fb4-9ff8-91e3f885b062",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae0ed8d3-7eb4-448b-936c-50e12c364cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dd022a6-5c6c-443e-aef2-1227545abd5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1209059f-55fe-40d3-bae0-de32f2dd82da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "596e785a-6314-4432-9a8d-7387f6c94c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9387b7f-c745-4c0e-98c6-031cc755fd6d",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc10a38e-9527-4810-b681-cea5af4acb26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eb2c62f-0c84-4ee0-a2ad-e6831b995abe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ddb8f9-6b27-4d93-8e20-fc4fb105c229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "12a527b7-f485-483c-875c-7fd37c866208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2161d67-77ea-4189-bbb7-882cc2a44aa0",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f864b3-db29-42f1-a53b-b65150fbdfef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b777ca3c-e560-4e62-adcc-569ab7b27c7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d003b08a-2821-41e1-bac8-2290d064ae15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3c2ef1f-fadc-4d01-ae22-a266040036cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "185c9152-8c5b-4f6b-8d92-0b56a8b45951",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e12cf7-1a56-4ba9-964b-602775dff4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13bebf85-79ed-45ef-8772-c7074569ddfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9afe845d-6526-4cf2-9ad7-9195617bc241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3fbe3873-7960-40c7-8472-056a59493625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bcf0e05-a71a-4580-8d10-85ddd377c6fd",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "614dd9b4-baa0-4502-8ed6-4544766b05e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b146ac14-806b-425a-a39f-a9aeb77b5512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c3040bd-4a6d-4b4e-8a49-a5694403db55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8032c4b-2199-4e27-9977-e91e6216246e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b5c27d-853e-400c-adb5-b981510d325d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56053b1-ffcd-43ac-b76e-72ff03399631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c03d3da-9a0f-4c1a-8ab2-992b6514b1d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5590ce9d-c24d-4ac7-b60e-12228bee3b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "84b0b47e-8ed0-4539-9d6e-67f2f486b6c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "880e0af9-24db-43b7-bf35-4fae35c7db5b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad71e852-ccfa-4ec8-8831-aaefb2e6b691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3922913d-cdea-47f8-a918-2cd8bf469f61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1132549-4a90-4878-82b7-ad770000acf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "73497a52-3336-4a2e-9f32-4ebf9d7992e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50870844-56dd-4a02-a858-0d0ec5779007",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ec1f6e0-b087-47a8-aa15-cdb8a372bcf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a2e3d9b-b035-49ae-b90e-b58b376a0f9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1020c205-3440-49e9-adcd-734a8f998a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b99efa58-3b99-413c-b438-ad1f1d0dc85a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f224b52-986e-465a-a9dc-ccda7731b62d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d1e76e2-cc62-4656-b529-c1a6c589b1ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad3a924a-fbb8-4cdc-899a-2880ee935fc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45157b51-35b7-424e-8de9-8779f03d4572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "17f6d414-d6da-421a-bfc2-69f238b82fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a18922d9-d842-410c-a474-2d1f9f68edb1",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb14d935-46fa-46cb-bdf9-a90de0e1c454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e1381a9-7305-44f5-9f02-65cee006d5a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de4d9115-97c6-4629-b6cf-bf10e2eefaa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "60956caa-ed22-4d83-a064-0eb46a7b83ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16dd9cab-b8e1-4d29-87d4-04d90b629548",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1a2a40-bf0a-4f48-ba2b-8235038147d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fdba911-7d6c-4b07-bc0a-052ff5691b07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78813397-dd60-4bdd-88bc-050aa111a523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2871c751-48ea-4fa0-a380-6c89a1eec31b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8355ea16-dc35-4dc5-a9e7-a69be42d07f1",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f66ecb45-ebea-40bb-9091-1c4abd6f2d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e163f92-2269-440d-9448-aba86f03d65c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b29583-60b6-4ce5-90ca-039dcf08163d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "456f9196-a728-457a-b32b-b09e91fbafda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4fe186f-e85c-44a4-b4cf-1e465e670985",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1706273-1959-454f-9712-98a65ee367f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3341eb03-94fa-45c5-8356-b1561b6b787f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "409c4141-bc1a-4268-b313-501fbd3780eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d9b78aa-eb7a-4585-912f-9cbb23536210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f70d0a9d-640b-4eb0-a0b9-792ca8ec53e9",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec6664b-9dc3-4aa6-958b-2f4e01c78504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1c2a8a9-d07a-43d3-b48c-c6e7a823b7f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd132eb7-3270-48eb-a3a7-3e7f3037ba46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cf925af-adab-493d-b740-3990101bc53f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c945820-6e0a-48c9-98e6-0fe027d584b2",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2250f4cd-9b4a-4ee7-a696-39efff83de33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f69f7e9-5290-491a-a5b7-1be61a7dd36e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063e85de-dd1a-4d68-80e2-e51db5673df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "839341aa-94c2-4e85-b70b-dd12a21d5303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5afd0a3-91f8-4412-b04c-ce73066491af",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "999c1ec8-5961-4100-a9db-33a897e2baff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2128d5f2-84aa-463c-8a14-99b7ce27e98b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9603b1-d65e-43b9-9267-adc23d24ee2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "05b13077-e3de-4cdf-88df-0ef77df6d979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e72fa6-eb1f-4137-bff7-47657bbac5f8",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c39f56-6f65-43ab-a3f0-3911fae8c976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "065fc039-99aa-4ed0-b13c-f782d8511a12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f46be7-7e49-4f66-995d-ec15595c5cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2a9f371-e61a-4053-a7cf-87f7a1955758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b796846-350e-43a5-a91a-6206ed600882",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f179c21-1b40-479b-8274-a28285325e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c3b80f5-2061-4663-a339-285de495b20f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f06e4355-5623-4ea6-a320-54d780a8b28c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "75b7e9e5-72a5-4805-b32a-5a65785334e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d764f7-9c3f-4f06-a0c9-e490e2c806a2",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e295e9-d247-491a-975d-73d34e85ad41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab0de853-e3f7-4854-a52a-d4231e6528eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0547733-cf57-4226-b0e8-14fbbc65ce56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d729a9c1-2fdb-4c59-a2f8-3384740111b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53dd2428-4542-4712-a748-deed0965f5f8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d7f3ed-a708-484a-8f48-5f4419ee8ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26728606-285d-4c12-be59-929503d71f8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec00a3e-b5d2-4581-9689-20d6994f5ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d44e127f-be68-4ad3-b90f-507dc07eced9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08050038-1aa6-4c61-8828-ad3480ca3866",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45fedd90-0abf-4151-b8f0-158aa05614c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a52ef8a0-b8a9-4832-9dae-3e69dc41860c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d1043f-0809-4753-ba1f-a1a31bf7d5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "22ae01d2-b775-4aab-b692-7c1b099f58ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "170f2fd7-bf7f-42cc-aa4d-522f33e69084",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ea0c8b-eeae-46ea-97a0-7709b231c616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a1b8284-d64e-40c1-88a5-a6f96c6124f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17422189-976b-4913-8a41-8a369656a6e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3e44912-d369-48ec-81d5-ce9cbef3b5de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4900f6eb-e489-4357-aa99-0d0f1b484d58",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8211a9a5-b5d3-4eed-9625-8c82df7d1f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efa44b86-6c65-4314-a5f3-c7f9be23a188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5241e0b8-2b67-4eaf-b040-9a9c7d0928c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9cb56833-c071-4e6b-9eb7-0f485c812b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f0efef-38d1-47f1-821e-c369e3d956dd",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce572c55-719b-4e80-b9eb-f50b15a82084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aede72c-cf64-407a-8abf-8c717edaa552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a9e2e0f-0764-48d4-b8a0-5566ea6b89db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b539df8e-cd5a-40d2-b71f-15d313782ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "047983cb-7b2f-48e7-b4e0-7e7df506e4b3",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bcc5121-e89f-49a1-85c5-b214aeb84460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d373272-1bd9-4f45-9c00-f5161fb211bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb560f2-5b22-4d6e-a005-550b1efb8bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "325d3d67-44c9-4ef6-af8d-8419a1a15974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab8a434-b67c-44c5-91d7-e198de4a565d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02460dff-40e7-4186-b883-c67a9c73c8a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae5896ad-9146-4123-b0bd-09d3f9450645"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dafc59c-e627-45f8-97c2-70bb23a088de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a8bd8ed-beaf-4f78-ab57-699886fc69cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a44c45e4-7ccb-417c-b192-6a89b2faab02",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f7ebbb6-89de-4ece-a8ff-192d6de12c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "933b0c51-bf6d-4815-a1d3-77c97a0479b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc79722-e4df-4394-8a12-88a3efbbefe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d89252c-4248-4f3e-a75e-2cbf8f9390e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ab4257-2657-4e0d-8975-761dcf5147a3",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b3dc59b-5923-4fe8-b764-beac0874904f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6993c89-9423-4a10-a44c-27a1cf0b46d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4972605f-15a7-494b-992f-2ced2ee18b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "621d18e1-e5d2-4dc4-a158-889da8a98178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc19a76e-b471-4c1e-87d5-c56f6b972ae6",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00cfc40f-2a61-4882-b10c-c90a6b87fbfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78a7f445-df8c-4b1e-b76b-df5682f16449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef0f539-2bf7-4108-b1bf-acd1a82ff782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ac726ecb-4348-4476-91cc-5590818dd8fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "975bce55-263d-4957-a2f1-466b33376573",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa4be3d9-340a-44fc-b43f-d2bf6c58163f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "907f033f-99aa-44e5-bdec-231c148b9b53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69cb09a3-c5e2-40aa-b56c-01ab00d2d9c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e79aa19-698f-4f06-8bc7-19b1df898299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d70312-e6c5-4263-bca3-c52b1e0c277c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8d31fd-3568-4978-8bdb-f18250f7d0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8f78f03-e576-472c-b1e6-151f983604b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce7627c-a53d-4f28-909c-17135b047e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "414c161a-86bd-4a30-a766-e164b48b7d33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f615036f-1581-4ba4-9663-9e85a4e298a3",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8774e0-6d89-4d78-b85a-f75e28f98000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c73c40a-d78d-4932-860c-821f8be5b216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0f2a468-d770-4328-a068-f36b432661ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e191c756-5508-49c9-8463-57c2bb0c18ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1efbe87f-5230-4379-998d-b8f53c8790b3",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a751d1f-d79d-456d-a804-f1bcd30e1f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99120669-a4e9-4edc-b6ec-19e1e3f3d2fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54baccbd-a288-4055-af10-9d74026b3d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "23640c17-c3d6-418b-8f1c-c5403f19a3cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37115e33-e6a9-4b24-8294-c63f6dad7bd5",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9dfa910-50ff-4ba8-b67d-c4efe985c538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "babcd962-3d20-45a2-9047-87e83712be6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf84eca-ca88-4fc0-ab7e-67ecadf1dcb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2838ac07-a5a5-4d9f-bb97-8738cee5bd5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "437cc446-b762-4ef8-af19-83f52cdeda47",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b857b13a-ceaf-46b1-a8c1-d2124c949626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4247002-33a8-42a5-ad37-349239f7ef77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a763928e-76ea-47f7-b121-dec284104dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a861fe5d-e01a-4ca5-956b-fc79720fffba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7783c16-1bf6-47f0-8acf-143d746d63f7",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6530d1ab-5697-4214-b2fc-ae91e2508d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8149eed1-f1e4-440d-85aa-a266b8089228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d147ed13-e6d1-4516-b4a3-1dff876ba536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "36ebd512-7b90-4dcd-8b14-75f4f0135678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "822088fe-1c9c-453b-af1c-6f4fef8034b6",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a36fdd-5d86-49f2-92ca-9341aaea5b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0304d1e-e634-454b-a6b6-6e3813e22a16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2416b0c8-4a33-4fc5-871a-3567c15e59e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5f62862-dc19-4339-b506-4938bb6107d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9490edc-5fbc-4acc-8a76-05fab8e01365",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede73656-c4cd-4cf0-8309-6c751825961c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c14abf2f-383d-4103-9cf2-e18f4a673ee1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ffb1b4d-3fb8-426f-8937-b2c16eb17ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "beb26274-9f93-4271-9e9c-ab08af6ed5f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba55b070-19b8-4c1a-b24b-be16f79a4cbf",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c109382-eb15-4b66-b4f7-a69acec71738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0de180ad-1c3a-483b-819e-811440210b70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05bd8a1e-5e59-40a6-a1af-d2e1eb484093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "05c52758-33bd-43f5-a8cf-026938a35646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50264c6c-f665-4c49-ba66-de9f36a1e6cd",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2feef46a-61ec-451d-9f63-8d6589c51d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "012a2cd0-3c06-49ec-82f7-aeb844306582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "029be893-69d6-42c7-a5b0-1b873619255d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "933c7eb5-befb-4213-a2d1-4b68d4e5ed1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a43eaf3-5462-4303-8994-56eca3ae8cf6",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "388dba9e-411a-44fe-b406-7740d2de2981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc4c48a4-172b-4107-aa71-37ee31e0f397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db7ae75-729e-437b-aeb6-5d8fead19996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "22047a92-eea6-425c-8c87-63048aae8d9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e93c24-62de-428b-8e93-34cdc8cfa50e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddbd0b40-4893-4163-b3e2-0aa8b5d01d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a71283b-8466-4abb-b5c6-9b6eb3922b30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b78106c-154f-4d46-adc2-ccbe96f85ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9be3c7a3-3178-40aa-bb3e-8c99ccc83596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe89a26-cba8-4d52-88da-7623828306ec",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa31827-a1c7-4246-aa52-529c2e3e769e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be8a6dd2-967a-4f01-9739-8f07c75faefb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec517ac-2287-40c2-9cb9-d7e9271438de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa225d7d-9af3-48bd-8bec-ad8d2d30e0c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d0fc794-aef1-4346-b7c0-d846b34542d5",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1d3969-8662-4344-969c-5dca6d3241b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09c4995a-be68-4b11-be3e-04d0fa85e2b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "447b2d38-5c45-44db-8986-72258ca29653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "65f22465-1d7b-45b2-abac-5807938a7d44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "593ec211-724a-4fd3-930e-6a3681c09fee",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e57992e6-02ba-4e0a-8367-c81b924ae73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3e0ff82-059c-40ce-bda6-c8add2ff655e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0455c520-ef1f-4db2-8814-b6b31537fa71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "268f7f5f-4574-4b7b-92e4-b7f52a93aece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "655a4c39-a3b0-4d44-b87f-711a278f28fd",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98cefab2-c215-4880-bced-f24294fb9ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d877caa-4f57-4b6c-861b-77858665a8ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8087dbfd-4ff5-401d-a54a-6e35d89957d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "331508ff-0b0a-4d84-a9f1-148acef55245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f932c103-9f6b-418a-8418-34d180fdffee",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60f9307-76e8-432e-ab6d-85c7611b46c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39c794f0-3e5f-4ece-bfb3-56d95aec40ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adcd9a29-3bcd-424f-9334-d1adcdb3d313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1225f881-7449-47f6-af84-ebc195d922e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb12d89-ab35-4e72-bb25-3ca63e258bc2",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff52623-8a85-4dc3-930f-dc90682726f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e07f741-f5a7-4952-95cc-dfba146ed4ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d05e78-1ad4-494c-90a9-39a0d2c70cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "227d09db-a583-4465-8474-cf6b7cd7fa42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d79d2c-261f-4264-bb7c-083b79ed422a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a8c3bf-0f74-4ec5-a8a6-3fbf956a99ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35d71ae2-3e7c-48a7-a576-699c0e4a7773"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dfaa8f3-ab17-44df-91d2-1280534c2878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "485f9c12-e8c3-41dd-9e42-62a37edb2b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "808c0776-055f-44ee-aeac-9fee6f0570b5",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20375bd4-4c56-492f-89ad-db56a1058d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b17304a4-698f-4678-b048-1e7c9d609258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c7bc029-8b45-433e-bac8-e84fdc0c8b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9b3abfc-133b-40d3-a4c9-9b83a81c5a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2da39b7-3aba-4590-b2ee-a4253047541d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd3c844f-be40-425b-b891-7dbd0134b432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc7f8221-cd73-4664-b54b-d7f845f3f1b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ae91bb-7bae-4c7e-9a2c-475162563e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "be200d8a-1acd-4e66-8a3e-1255c8604347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d77a11-7d47-429b-b764-1a1a220e1a7f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61fbdc4a-7950-446b-aaf3-decf97c77efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9985da3-2e18-4a2e-8274-14a6b7885fda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9a91ab-574a-46b2-bb7c-63069af2c91d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9daca40-0261-4fe2-979c-ec12352e765e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e78ce1-204f-49bb-abd4-a89e0aead1d8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a03af50-5137-4487-b203-b4dcb1c07664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f17aa9a5-2caa-4ded-9c69-1ea8687cc458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f21128-7690-447a-92df-43dc30c6fc5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2191444-c782-4b59-bb9e-e5e9985d9161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac66bdb-6c8b-4967-9bf6-19049e5fa63d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99bbd546-fd5c-4203-ad03-96af1d39b4a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b43b7820-d9ec-4b75-b0bd-35069d48bcb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad56a64-abe4-44ba-a6ad-62be5b4aab5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "258d5cea-6606-4b8b-97f6-2a60f43ae7c9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "19c64030-12fe-469b-981a-2f64c0d89770",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d9e1d106-5de8-4228-85c9-8b6157d129b6",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db33b68-aa6b-4231-87f9-48dd5d678ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb9cd3cd-3c58-4e23-8560-d65b4226c320"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f09e23-c801-48c9-b46c-ce4c5031a27b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe0cc296-efe3-4817-8a98-a24903da73f9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f66885e-2e6a-4076-b67c-373eaec6108e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b93e11bb-d740-4f04-90a5-e13ce138f1b2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "13d1610b-3e14-4bb8-bcf0-6c530a47bcd6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0164bef2-16b0-4c8a-a4bc-6c7cfdc0e421"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "18dd4182-f68b-4e51-9157-bb6fa639c326",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f136337d-a068-4ee4-87fd-9482d84d09d0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b30c08ec-ac1b-4dfb-8d50-2804f22180e3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5b771d7f-8257-4dd2-8e2f-48fd3174de45"
                }
              }
            ]
          },
          {
            "id": "c13c0560-8c14-43fe-a121-6c172c78dd1f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "052f9cb7-7ef0-4d7c-adc0-db5380307d21",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "b88ecc74-f640-4e4f-8515-c99334555bbc",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5139e7-53a7-47e3-96a5-30a8fbff3f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d4ed91f9-ae19-40a9-a798-0f3d96eb2c0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aec5c0d-28a2-4c88-a551-95f48cf4b5be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a113e1c-a9b0-44d0-8788-df2794a1a22e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f8f03feb-9232-49a6-ae54-6f9a4b35e41a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "81939e95-e9e5-4732-8790-49923be9e8d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "05783079-136e-4778-b0f0-f46838ecd80e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "53d98d3d-c571-47c6-bdb3-27baaec15369",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0ca7308b-ad36-49ec-9437-d80a6f9f68ab"
                    }
                  }
                ]
              },
              {
                "id": "62ceb754-111e-41d7-b58b-ca67637cb101",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f24edb7-71d8-4eed-be79-295214dc0aec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b04a92df-8b50-4f62-af81-d312f40a7b9c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b744e183-e5b8-44c8-a571-97e615d9d99a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5fd73422-ec1e-49ad-a13e-eff587d1fd94"
                    }
                  }
                ]
              },
              {
                "id": "0e26ba2c-d1f9-470b-a6e5-2028fbc8d8cb",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e48118d-0a85-4cc1-80c6-2cb8c5190f6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "592c806a-61c5-4f23-b7ba-4e5d94b1ea4a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "69c785d5-4544-4a79-b282-c5750ca8427f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "875a695d-d406-4e4e-aba3-ca9c68289530"
                    }
                  }
                ]
              },
              {
                "id": "b04d3364-c389-4cbc-a292-192f90a588fa",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c6783340-0fd2-44a3-9be1-aa28b06835f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1ff0d21d-0010-47c5-a264-c96e2b0c3fb1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d781ec20-184d-4ac1-8ef4-a5eb0d274d8b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "eca57ed2-f21f-42bb-b54c-04d1f5b50e14"
                    }
                  }
                ]
              },
              {
                "id": "8fab49df-617e-47f2-8117-5a9c55db070a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "958249b5-0f45-448f-a0ad-911767d4aec7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d22eb894-af8b-4231-8526-dc6ef304d4c3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ef82b43-d150-4aff-afc9-7e6407acd4a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "90a79e2b-e0c8-4770-9141-c5ab0ac7a3ec"
                    }
                  }
                ]
              },
              {
                "id": "ceefce7a-35ae-49b9-ad31-aea8f86446c8",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0bcaea1-199c-4e34-bdb7-4c6e94573b8b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6f59d636-3ff6-4c38-9ac2-7c7c7f606b45"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50c47b91-8fa5-449d-9cc9-508ab38c967d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "638745d6-1d97-46fb-98dc-36c0f23ad213"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0f9d0dec-9d26-4c7a-8037-2181bd7d6033",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4ad59f81-e73b-402f-90f7-c4f993c8e05f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "adc51ecb-aa2f-4535-9b56-a9cbb58f610d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d869cd43-9e05-4fb2-8dbd-c300b2b0f4d6"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "01f583c8-f272-420a-8766-61d0f27791c3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5f8ada88-a9b6-4499-ae1c-1fd398200d61"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "88cc114c-bccb-4e41-aa0f-ffd1f6446fe8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "21b59628-fdca-47ce-95a9-ff79e66151a9"
            }
          }
        ]
      },
      {
        "id": "7b701984-d958-4cac-a6ae-486ba2fbddb4",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ccf56f3e-0664-416d-b926-35c69f43cee9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ced57e3b-dca0-493b-a35c-ef1429df9a03",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d44f80c3-7b0f-44a8-b2a8-e7c3e427f014",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9537b2f-63e0-40e0-ada0-22ae9d071323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3794e7ab-cadc-4aaa-9692-49e9144afbb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07fda4d0-0a0d-4c5f-a5f0-1ec088ea02f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "faf44c6a-4b06-4ae8-ba79-80c2cf11ee7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db6bd07-87a7-4573-88fa-d46f0f121153",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb2353c1-93b1-4214-b25c-f647bd43f095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b9f8fec-c0b9-4134-b4c5-cd5ffcb8e018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bdecdc5-3c2e-44c9-b546-4ceb883518dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "db261bcb-7852-40e6-ac5c-ebac394ddaa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362a3e87-1c1b-43d8-a2b2-25960544d4f6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3c757e-9cfa-447c-81a8-b96243869818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff360773-a6a1-4850-a788-e86dc1ea734f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec7192f5-7751-45d6-adb5-af09ebdcaf4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a873fa0-3db7-4079-8b01-9275f32fbfe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c14c8d-a30e-458c-b86a-fe7013d6393f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b79508c0-59db-4cba-a570-0792737d7177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a2c2895-7b08-47a0-8146-f66b72c0b570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f956082a-9df3-4282-b4bd-78bda2424bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e6707dd-2613-4cb8-9f12-f0468b8589aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b8154b-47ef-4354-8217-5382e25c1353",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "674813db-bc74-48be-9770-86ce49d7277f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adb5b469-10fc-4ccd-b771-0660bef88003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92600734-15c0-4176-bb84-c4ebb44f900e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "10b079aa-c618-4abb-a48f-0af615205ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6399c91-f654-4d26-8117-401d88a5bc9f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac88a8d-85ce-4960-a26b-668fe7a209b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d634031c-f2a2-4c79-b707-e0c35d7e07e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987af39d-b265-447c-be7e-505b95a9d0ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce930212-c3d0-41be-a506-f83b2f0e3a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e3491e-fb3c-4679-accb-c35997963f9b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e98ac37-c80b-4414-829f-0c9e6ed3721d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "973ddca2-8897-4934-864c-a305621f73a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cbd7eae-53af-4f61-a43a-a67b883387eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0be8051a-7c15-4bc6-b3a8-63ba713b52a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "152a400d-e882-43f2-8313-24f2e15713e2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b7c270f-b841-4fdc-ac22-0426ce38427a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87e5efbc-f607-4d63-9ffd-dda65a98513f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b14213ff-bb42-467e-8fb9-2ff60e552c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3bf88f7-d4e3-4008-8140-7be0f4d3feb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8acae69e-1eb7-476b-b1be-021b954c6ab3",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb8402e-a723-409b-807c-e5dedacc4faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b6a4149-0ded-4e05-8801-c032f9e2a91f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e24ad2-f76c-453a-a7df-0806af149d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f394b710-8e78-4f18-ad43-78a00468595d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9246be4-d1ef-4584-b327-2e3082ed5752",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d03b6ae4-8487-4232-9e12-85f1ca83939d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20393255-bc71-4861-bd6e-9c524ac7c925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e9c45c-8f38-4d04-8051-69b44dacadce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "83669b3a-fc61-4021-8d24-78eff1ccf146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c444f0a-8b4f-485b-ac8d-5228afa75d1d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db8250b8-8a70-452b-8f89-bc874b947dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b34a8e0b-3c63-47dc-accc-03c6ae87fa83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee097735-2234-4080-8721-4d7e352a9641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "221e9a80-8202-4851-8136-1665cf406543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3220b569-5c6c-417d-b833-89e028151ae4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a147b64-19b1-4f00-8dcc-bbae422a3eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcf5768e-1490-4455-9690-08a59b8dfdcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee307dc-41a5-4f38-aaa4-c50d646fc05f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "08af0a63-8435-452b-936f-c1b9e55c85b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11af6a79-b4ba-4e80-8bfa-0bbf4522ea1a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e1722c-dc8d-44a8-bc77-3c84d88d7177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c3c9767-20f8-4b32-ae3a-b6e10ef1d8bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "392c7c19-5563-4f0c-9e71-be3309023409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "27a3a137-f8c3-40d3-bdb2-486169ed483e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c31594-7669-46d4-8dc2-891b8b5b4ef0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c97d0440-4afd-41f9-a4fa-133650c1436d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b286d3bb-87bb-41e4-9859-209736cbbce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5933441-ea3c-403d-ad61-5367fa38df86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "706236ef-c174-468e-baa3-b405d562cce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ead28a-3365-453a-ace1-cc4a23816f72",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a0b7d20-6403-4214-861b-df4798b0b400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7332f0d3-44da-4ea6-bc98-3817439c8b4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5244f7c4-3f98-4264-84d8-be3113641cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a0ea1f1-d8c1-421b-8489-f0aea798d8ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51481e18-8f24-4d2d-87b7-98dd593a736a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c96acba6-ad82-40ad-a6dc-d8ac6185fd06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fa1a193-c3ff-4fee-9ed8-1f3b801cb721"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "604b1afe-3a4c-400f-b1c0-ab241b4c758a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1940907e-e533-4f0a-bf03-8da50bc95fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2491c64c-7a88-42c0-9bab-fa0ed9285c5e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2072a82-ab5a-4454-b700-480336134859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29fb3f59-54cb-4122-a014-0d2ffbb4f202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2eb099d-72cb-457f-9f88-efbbd2ef2f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2d2e0dc-d423-4bb9-a8c9-48ca0b273dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3596908b-a6ae-4263-a44e-ff38025fe5ea",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a7d28c-3e91-43a1-8c09-54a853155b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57cac314-0c98-41e1-b35f-2dbe984e9c1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce037104-89b0-4c7d-92cd-803957f162c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0a256f2-c5a0-49b4-ba6f-099efd1b8ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b80de1f-6eec-4ae9-8b9b-584b24cfe362",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fbb5f2e-37c1-473a-ac8e-c732e8464f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5f62e72-4a01-4c06-b566-2de2f0db3943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f11f30-9691-4f52-8506-2f5feb4af18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76b893e6-b191-4d81-bac6-b74f78561e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031ab40d-74d6-47cb-9286-7d6c6edd9be3",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03dc8a3b-f4d8-4fba-b849-886dc9046c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e267e4e0-bd13-425f-b805-c89dfedaca1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4fc35c9-0d04-4398-83c5-9604d3d9b520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bd50088-f34f-4cfc-b3b7-0ff9a35e83ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8489690a-e620-4f88-b94a-0c0d7f0ae205",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "652f55f0-d7d2-48c6-b55c-b93fa4bc4048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d06bafd-9812-40a0-bb92-bd9df0a18500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e2f5e2-7a9d-4b8d-9310-2b433f007941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d70ae414-5d03-4cc4-ab99-9a688f695237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af3e8702-5866-4835-896d-4b62ddd18d31",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba85e23-4f97-49f1-89a0-502da8389d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53741f07-cd73-4baa-995c-7664c4dde992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1076c2c-80ea-4730-ac2b-c3d71ca2cb66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c168a441-6f65-4f59-8e3a-d4660fe7f271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f4c4b4-03c1-4ede-a1db-f3358ae495ad",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a8d7af-c901-48c6-9b93-18a25ff46e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2aa05d1-b11f-4589-bcf9-8191ca28ab04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a5c438-e7ce-4ec1-a052-828f16eea364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5af65f3-700d-4b2d-8f75-7aecf43c4947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "114d2f1c-43e2-4928-8c48-dbe2e6728cc2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27677273-124e-43de-a9e9-9e35bc825709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1efc478c-e6e9-49b5-9065-6eed013c1394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2678cdad-266f-43ee-9df7-fbae5d2d9995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7a32d02-b7de-4c45-b0da-193c76792588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f1b6df9-6149-4c20-ad13-2ad09b5f882e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d06fbd-174b-43a7-bc9c-b4a632c49e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bdc00b2-0b69-42b8-923c-a570d45649ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e583fc7-4a44-4407-8da4-f4b6ddc1043e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b6fb369-811f-452b-9e11-91ccdbe060da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a84e53bf-899e-4132-b8f3-49570b90b04d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8c447e4-0bc7-4806-89db-716bace3438e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2a3ef29-5624-47bf-b3dc-37eb5d9a75b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ccd034-eb74-4390-9f4c-2ce144171046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60c535e1-d797-4121-8f1d-8f16c952d9c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a07c4365-2a5f-490a-a2fd-006073bc1788",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e744afb0-ab43-4de9-802d-8e7bb58822fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bd39a2c-5a29-415f-b1e1-8c060fa91a59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "468a2408-fced-42b2-9beb-887ae96160e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6cb0779-8f6b-48b7-84fc-8a5ced40fdde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e27dc97-b9d4-4a95-9f68-1a660866e54f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d4f870-2c46-445b-a8a6-b3e9e5d35d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0067c92-acd5-482d-bf75-38241996b9ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c81718-27bf-4db0-bdb2-0a39e7a17fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c60cc09-2ecd-41f5-8d68-a70145dc4332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cdfa433-1ab7-4c4d-8fbd-d94cefc2abf2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "130d012b-9408-480d-9669-c44137b660af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6323d5f3-9b74-40aa-aac1-8ca86483fa02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a9392b8-013e-4e39-8f43-6d11989ba786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95eabd7c-23f2-4827-beef-3c025f88756e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc05090-a7a8-4f64-ba04-8f3c35e4d7a7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44df15e7-196c-426c-bad7-e800ace8ed58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aff04ed-a8bb-4048-bd30-e98395c5571a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11cc918b-b47b-4594-8072-ee3b056799e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de72fc0f-3876-4f41-b88b-72f1220d1cf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a1111f9-6af1-4eba-b75e-e5887924a14a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b99d305b-7a78-4f3e-aceb-76794340f686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e8107a4-da58-40ec-b59d-e757849b17d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6d3e42-939c-4f45-ad4b-2114daecafe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "329ad5f7-13d7-4aa2-893f-08b2cb84ecd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e00a8a-01b1-4f73-ab46-21aa1db03e18",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b5db7b-971d-4925-8ef1-9601a6627078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5ddcec7-7184-4333-bb4c-1fb3aad61bbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "869d805b-76b1-4e80-a7f0-30b1dc8add30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e68aff4-e1ba-4675-8902-4a103c603ba8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "068e42f0-295a-4cb6-82f6-b6de7a76ce67",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f4e10377-d36f-44c0-b09c-23a5733757ff",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "021dfe93-8372-4a92-9937-ecbd900e022c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f1e982f9-05af-4775-a8bb-e8f0e039c027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2171af9b-397e-46ea-ba9a-0d3d62ac1532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f42d48a9-9fb1-4e33-a530-f2cbf3efee86"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4aeb17b2-3a0b-4722-9814-3105f96db76a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a81a7568-fb33-4864-8138-5c6b2ebc8c68"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1425f77d-c1bb-4b18-9204-dbae09265074",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc8e538b-25ac-4f53-ad7a-a6ea54dc5ba0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "be7951f7-4913-42ff-bd23-5b491c8f782b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "698643a7-ae47-4d42-b8fa-05d6e61a7133"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d52b3fb9-aea6-4316-8efd-4a3b08bbed7d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3e4373e6-effd-4de7-8ab8-90cb21cb1c22"
            }
          }
        ]
      },
      {
        "id": "b75a1248-638a-4205-97db-ca4b1b5428c4",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "a8d993b2-9703-4f90-9cc2-f4835436c888",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c80fe187-418d-43cc-b657-2d39bbc1aec7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fa5c7d37-dc0d-446b-b2ee-e78575994048",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3f2da5-920b-4a58-b93e-e21d477c2346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f2f6ec5-ddf1-43ce-823e-f9b47f84c111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "592bdcd7-faf2-472a-bcf9-4fb16276b2a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb04ec8c-9377-4b23-91fd-28b81af163f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efdf8a8c-3da3-40fc-bc41-d7572eeffe9c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "395c298a-80a0-4a1f-a3d9-9088516fbb7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cb450c7-868e-4d3e-aa0c-ee6eb8165b3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f0de165-957c-44b4-9e18-076a5b47ad3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d28e8c24-9a50-4ad4-aec8-fa4e9d0b6e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efacec36-9419-46c9-a47b-fb4ddf8c4610",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "020c3a1f-4ad9-42d5-8e89-acfe45e872b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfbb424d-504a-406d-b397-44809a19fb2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a1c771c-bd44-4d2b-b365-e80d21fbb0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3226a2fc-21d8-42b7-b6ee-45f9951652b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f32fcb3f-4f9e-4338-b289-67342416fd78",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc561b0-62a5-4e33-9218-1a09c4acea6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e9679c8-7c54-4c72-ab76-af37e8d83895"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "878908b4-9429-42b4-943b-b3e8d449e031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9d17dba-8bbe-487e-b365-6ddaea41d310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "991e2935-3ade-4731-b8d2-a6ee8b643d03",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e358d14-98eb-41e5-818f-4c6108d32547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32154cb6-9873-41c1-bfd3-f11dd607144c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b249e38a-483a-49e7-85d0-ef5427962749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "064c256d-7a48-4c1a-92a0-62cc30645e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f91ddb2-3900-41dc-b264-968ed4ca18b3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84df3852-07c5-4c56-8594-4eeb8adf62f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "230c3b0b-d580-4615-8eff-861d227b81e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d8cc841-5814-4bce-8348-4bfc0aab9d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "459d156b-d1cf-4e6a-8b63-538b9b89b3bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "380ef4e0-d2b2-4655-b190-9e81aaabac5e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d253e974-1f15-4f08-95c0-a42ed697b8bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5db090f-1813-4e85-9910-8f172493272d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd115391-3caf-4f41-869d-f46d213c0b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "de0fafc6-2f4f-4547-afe0-b9f900609e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a0d3c4-4058-411b-a9e1-683961a53282",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c9339be-bfff-41db-9161-0d570f02087d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6198c55-3d61-450c-a6cb-a988cefe94a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb5a7883-3875-4054-a8f8-8f64979476ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "26ee28c0-f84f-4bf1-9ea3-e7ffbfc27aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa2b670-2010-41f5-85ef-401679c5cb50",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7395781b-3dea-4571-bf9c-9d26659ee313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "697580d0-7f21-4e5b-b5ad-4eced6023f62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd9fc909-05e5-48ff-92d9-fc3b111985ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7a8b103-6678-46e3-99e7-a63c756aa68e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f2c827-d288-479b-bc58-1d7b3cb451d9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "362bdea6-27e8-4706-b0b6-3cfb4716c5ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b2c1b9c-a0b5-4192-a590-24ba11e7108c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcfd5b26-35c4-45f5-9545-5704dae7d4d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "adda7af3-26eb-4f95-913d-24d39656e963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "852b9a30-f9b7-4472-ac0d-79a39130cb6a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de48416-d6b5-4974-aa4b-149683c8532e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc1ba4bb-bf68-45d1-8d78-cdec7f926d46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "022b26f7-334c-4d04-8044-266975e6194d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "be3b94e9-1d24-4b85-9646-a459d9f76bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5eab761-7e9f-4e4b-94d4-c2540f3a2520",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d6b18f-cac3-4a82-85e7-361f59730144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fb55789-a78a-4a3d-a139-a1fb94e47cfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6cd5e76-2470-46dd-b57c-265e4b9c904c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6ae7eb76-125b-4cfd-ad95-bdec8c812c2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8e91b6-633b-40ca-8bbb-941cd646d00b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f14e98-b929-4ea6-9fc0-f1247b0d4aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5ad4d8a-fdfb-4ea0-8184-c32c86209893"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca227bce-fd04-4e03-898d-3c2a4189fdd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cd729fe-bf34-4471-a401-076f2f918aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41b126ef-31cb-49b0-ab18-cc29ecc92fbf",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b4da6a-9a59-4ea1-a828-e17dfac0ae1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7259c01-8d5a-41af-9044-8e5e25320898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8141a46e-b353-47bc-ac96-322f5116694f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6768b3ca-d60c-484d-9b16-1dae500fd5cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8ff702-7245-4413-afba-29051e9fad90",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62b8022c-cb6f-4838-b328-cf5dbba81694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd000838-61fc-4251-a194-c2d421807e8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1bc537d-89f9-4806-b0a5-860d45f506d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "66e1cbae-761f-4553-bb3a-d7c5dd1c1802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f5bee3-f4f8-40a2-b784-aea072dd0d9c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56bb9844-002e-40d6-b07d-4e042126d4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "435d5a59-bdb5-4d29-864a-0c6b39104d53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a486cccb-1f45-4e23-bd0f-76f1ed90c4e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5761545-f60c-48f8-a67b-4514e42e2307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37552223-9e76-49c5-bb3f-22a8ec1a1276",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8153dff5-8914-489e-82f1-ab2b53b27bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4afa1381-45c7-49f1-a325-7b1c5f60e8e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "460aee32-8a88-4f23-8af7-6d71b3c09abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d7be0da-baa2-439a-a0b7-3e87029fe4b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "133b0784-9727-432d-b989-2da6876c1298",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79eddcde-260d-48c3-9a8a-bb2b215934c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35c6ba36-d806-4394-836b-17d0dbcfe349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd3724c7-c3ec-4962-a22b-ed8cb4ac5637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d446cbc1-7900-43fc-a070-f88a188b6aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48083f3b-8469-4190-af94-a24ca68629e1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6035d595-28b4-41ab-b08b-57ff4eb132e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c509295f-6b42-4898-8317-09916cdc54cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "833f0b82-790d-4188-a8e8-9ad58c1172db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fef7bc89-88b4-49ff-bffd-366f71402d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cdb2b3b-8262-44ea-9376-ce675558e140",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d69c28-e89c-4f08-8874-4aa4b5163f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45f125cf-c6c2-4810-af35-25be2387959b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d4a8a1-2ab1-4af5-af80-2eb4d520a180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3214246d-41be-4798-b0ae-00655e17dba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef7f89e4-0649-49c1-8490-0976a665ef87",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ded5c4c-b8e4-4038-a2de-513b867bbe17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d112772d-fe37-4a81-9686-082f0780ed0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f0be4a0-bfc1-49b4-9a12-1a8dd956093e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15913826-8eca-43dc-81dc-19fb064807ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91e87b7-b74d-41fc-87e2-f20d39891963",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b7094b-6838-43e0-b7cf-e059496144e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0e918e1-5626-4b04-bb10-8e7e014e1e19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c92c7de-2416-4ae3-8dcd-af7bfb417b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "914a34ba-0444-4811-a6d8-733f6f6dc91b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb08cb07-788e-4a7d-b772-eb9152243ca2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a2cdd78-e8ed-40d9-a11b-cc4ba5490d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3536376-3196-4bc8-93cf-fda47d31d467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb8d24e-e86a-45e2-adb7-7e72b623776c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5da947dc-cff6-4c2a-b848-f474cea06f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd567343-102c-44ee-a736-539816e5dd3d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b322ab6-5bef-4e41-81a2-1e7eed454452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae004ff6-ae31-4fdb-89e5-e3dc6c80cf4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a0dffc0-0596-4f3a-a9e9-615490615cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b28b15fd-1fc6-4839-83b7-68162b10c117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc622a4-7b0a-49a9-b795-f6dec9959603",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17deca3a-cf4c-4249-adf3-b4b1a1023d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe05b415-e6ae-4434-a6c1-9442d004ded9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e66f2d-5be5-464e-b625-a461687ac0cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c098e5f-7184-4512-86a6-090de9950e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ac511a-de0b-45b2-b8f8-c8c44d958ee1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d7c8dd-91dd-41da-8fdb-94d3fdcace7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59486f41-1601-4882-9a3d-e857024a9ae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee833065-a89b-420e-8a9f-456b8b573686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fa6d60b-f4ef-44cf-89ae-42a7ea9458a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "135ff786-fed9-414d-a9d4-1330153de75f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb7ce01-f714-4b2a-ac4b-dc945886307d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f938119-3d7b-4d3e-907c-8e1331cab7c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c04ce49-822b-4b25-bca3-aff0d81372e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b729470-737b-43d1-90fb-5def948bc4a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ee65398-98f8-442a-941d-b3e1c87f4d55",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7321dd-ce66-4525-8e46-b75249c78db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84f39d0d-7d13-4c2b-945b-d2e93a3a6d0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6297073-4428-4d73-b77d-8d39ffcd5717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "afe3270e-645b-4243-b10d-58f9a0ac3ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348c7b7b-22bd-4017-9f07-a38d30555aef",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afcab4f3-be05-4f6a-8b83-704d37a903dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40f0fa68-1ef5-479e-b6a6-889872cb46cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca6b71f-3353-45ac-bf3e-20724ece02f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0491755-9810-4617-8283-22758aeddc02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd84d79-57be-40e9-b27f-9d68d7ba0be1",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d1457fa-5e57-49cb-898e-1797e5901727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70a22117-5a0b-4ed6-9149-77bdc32711f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfad0bec-67dc-4794-876d-9817e3d596b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b88d35df-fc7c-4e37-8047-d9156dd1df3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4fd6d7e-53c5-4fa5-8cfb-000a84dbc79e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c1cb17a-7b5f-4515-9f41-87b51d3882bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e35e8801-a0c3-43ac-b87f-69ad8d19b033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf15f17-5459-470e-bb1d-ff0b6bc6ccc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "538c9e82-7122-416e-a48d-2dca90d48dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7374d2f7-e53c-41cf-8097-d37628112192",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c6fb3d-05be-4562-a065-a7f319f13483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39efebb3-853f-49cf-b894-7c02a9a54a14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba11c51e-f8dd-452d-ae3b-f16f7d3c43d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdb67baa-15b6-44ec-a862-22e703e54c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e8821b-a2a2-4beb-8c6f-d9ab249afce5",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2746e534-f930-4cbb-9303-193fb621e0ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b903aa2-0a98-4fa0-b718-9c45496b1b8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c6c7f31-3750-46f5-8360-d2278072897e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d1c51aa-0b60-4820-a714-ab84e6968530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c20f9bd4-6149-4c03-a5f8-61ec06f6282b",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7861c864-7f83-45d5-99bd-92ec68fdc34b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57077f56-97bb-4994-9544-181b01d9cfac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b13e50-440e-423c-b3aa-1589b8702055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42db7d27-89a1-4b34-b725-a6765027b10e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79728fd-a422-421f-99e6-9d7611f3d982",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad880f58-8d4d-4152-8cd6-a1cca7ada4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1339239b-85ea-43ca-96e6-0bd884ae5b10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b495a49c-83b2-49f6-a95b-1489d52021b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "caf7d2bf-8620-4fd5-a858-adfce3834af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b93422-f133-4d51-adb1-aea7b033cb31",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd6065a-c37d-4e51-adf8-c999c0265da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fe0ac76-0feb-4ee2-aed6-f26998dd1304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2fd127d-5133-4ca6-809d-bf84d648b590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8b7fe97-d984-4da8-8c39-9d5dca1c3b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0805a40e-8982-423c-b7f6-815a320dd3f2",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89759975-e9f7-42ca-8fda-39fa9a44d43b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97ab9d28-803b-4519-ad8e-22f10344f3f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e803fa62-bdb1-4983-9921-61731c641b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c75f825c-1808-46c4-a4f6-32b1c88a0e8d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bf0b1f88-2e12-46dc-804d-c632a611db10",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "df1fc140-a0b7-4558-a409-ed2fe0f1b649",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1584f0e5-64ce-4c34-b0b3-9ce439558296",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "56c387f7-c85e-4cfe-874c-5708949a81c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9329c1c8-97b8-4445-883b-63587285c955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f57a8ab4-7391-44a1-805b-abcba0ca5c8b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b166e36-887f-466a-a317-be74c778e368",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a2a6af4b-406e-424f-aab0-0931f1170551"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "31ce1575-7aa3-474a-a100-79a9b7e04f2e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1187d9f2-6d63-4e19-9e1f-e1b0cf52438d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "853f624f-c65d-43bc-bf94-b16f02a15b06",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6a131751-ad3e-4a16-b458-f0b80b005e1e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed72996f-8034-4777-a7ff-ad4f1f73e8b8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0d0fe077-53ee-469e-bb74-29c4c36c18d3"
            }
          }
        ]
      },
      {
        "id": "864ba227-b058-4ee8-a358-0b29cedbf184",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ca99112f-eaae-4f96-af84-57936f9b08a6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4b196d16-408e-4e72-8ddf-293c80bcba6b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "41e617c7-40c6-4ff9-9deb-064dfb9ea3d1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee9e8c6-98ad-4be3-9fb5-d97fc19993fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c87ad9c3-a495-4101-bfcd-953950d098c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7408288-9888-4f7b-b232-34518ad52d17",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16416a06-bd60-438b-aeaf-bd8c9337c951",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a785ef06-366b-4390-b584-c05ed4adabca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d709e8c9-63b7-467e-b373-f0ce99260bdd",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f65c85fb-def0-4248-86d0-1ef37da290fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dfdb2ff-52a7-46cc-a3e2-0b719372c7b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04729a9f-4666-4245-a636-b140e3d3a8ec",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f74404b-2e77-4972-9214-4426a4615cd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4fc7c16-80c2-424a-97c7-a65e52e75f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c866c60c-2776-4047-b1c8-2a2c1b6885e0",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c1a667-d8c3-4e9d-8bf7-0d10cc9b52f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc5cb543-8315-4320-af7b-5b015747a00d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e9cde8-0f3c-42c3-b30b-e84fbd6de2f9",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a28f2ccd-5b43-4833-ba78-d4b93017c516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15c5a46e-eabe-4630-99f5-c18b8cd52e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5a4a40-abe1-43f6-9d60-00239bb24b60",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce012a9e-fa7e-4dc0-b1ef-35fcd181c814",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a744857-e91b-463e-ab0d-8378c23c1c50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f4824d2-0150-47de-8d07-49c9b175abd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a22ba349-c28f-46b5-86da-4bc551b5a64c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ecdeec-36d9-486d-8eb1-06f15dda1c08",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad3953b-45c6-4fb9-a97a-e3027fd8567c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be88d755-17b2-47d2-93ca-441b9177380e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0b61dd-fdc5-4b6c-950b-7117d60ae057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2822f6a0-7c3d-4e52-a897-9d4a47e7e770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "720409da-ecca-4e35-a411-50d17557d1bc",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c88698-df5c-4c94-9632-45d78bb4855d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c10a22b5-62e8-4d30-b942-c025bf390960"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c9ddb8c-3b1e-4944-b64b-413967c17e55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c675e57-2ba2-4950-a6f2-7600dc9d9905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478b196d-7e2b-4f8d-8218-833e55e762ec",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b60d85de-8ce6-4cbd-a788-a0e9b099b913",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d00dcf37-474b-4e43-8b93-3f5f4a394647"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc2f021-7592-4910-91c5-90470aa7c5f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2da0d568-59d1-48ff-abfe-5d16deadef25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a39941c2-f68d-4b49-9b7b-58cc5754de3d",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a35156a-d868-4b3a-8044-d8f2c8bec34f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bc158f6-ce64-484f-8586-8ae10eaa2a2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd55be5-0b10-40ac-9858-2d0ac01bf866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70127b41-85ef-4b00-8ca4-95d6a8712547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9048eafd-b925-4eb9-af75-976250d9fe35",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b85965b-633b-4729-ab2a-7396785eaa0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39cca69c-29eb-420d-8c1b-d554e931de76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd71e12-4f9a-4db3-a92a-63ef5a13c84c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e4ca65b-6739-45e4-ae3f-57c7ac58ff6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8146670d-f911-4092-8c94-4c3fa43b672f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "981d8c36-5d94-448f-93ec-4556621fa691",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e48ea05-7812-47e3-8761-b81f691eb534"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b04bda3-9642-49c4-ae06-a50b1f518419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "529b675d-7c4b-4c4c-99db-d7461b1d64ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f169350a-b634-4354-b0c1-de01c054fce7",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21da1b9c-d279-47fc-8219-178862e3f7a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cde2d82-bbea-4ede-a8bd-69dfcf33d033"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf72746-af7d-41da-bd65-f5826a9014cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "867750f7-acaa-431f-a429-789b374aa8a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11dabf4-20e2-47ec-a1e3-2105caae2091",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c68752-8d2a-4a88-a16a-2d59788dfaa9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73140345-f78c-44d9-a58b-972aa0ab9579"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f0b084-4688-4be0-9b21-1e0d4bb65f17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b5b225c-b131-49fb-bb6e-6dd0a0818eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03f790b0-fe42-41a7-9f39-d1536e9915cb",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8507425-9e7e-43a3-aa47-718297a867ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60ebd725-4173-4d30-b58a-b56803571609"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ddbaaec-c84e-443f-8df0-9e7b9fd7a17f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0673799-3567-422e-a276-ccdce16a5dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60d7bac-3845-45a0-854a-899e5cf3a54e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b878683-505b-41d5-8eac-74cd15379c1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02ef1a78-69db-4dc0-a76b-17d079d3cf95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef8a1ac1-0140-471e-a4b7-044c05e8d0ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51b9cf59-677c-410f-893d-b4bf5ee7d5dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7683f43-467f-4c03-9abd-c6f2576f0661",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c899b494-8a10-4339-a356-9ed0cb302093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4bd4865-e9bd-4b79-95b4-d4955a2c6585"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "969e31fc-283d-4207-80cb-be6165b03e83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c64c11f-066c-4855-a399-9ab2b9d5fa00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16379d30-b5d1-4ffe-8119-071fa9d69f73",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ed4d08-6d8b-4168-b00c-ad13836d85fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6863b3ef-1424-4761-a323-a341bb1dce50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a5e7c7-9448-48fa-9341-d914b2f353d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c58f84a-0ebb-4413-b9c4-85a3405f4364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a7fee42-6307-49de-99a1-eddc0c78bbc0",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0365cfd8-4ce9-4191-8217-9de1bc9e0f5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b1cfd6e-d262-44b3-a5ee-e6d8cba2dff9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ff1705-c310-4600-92f9-3f0a02e09f27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "808ad3ef-057e-4f44-a4f0-51c43b1ef210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b62aca0-e198-4b4c-bf05-de95ce4db706",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b7e635f-0977-4cd2-a61d-a6d6e1395abb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f10f826-5540-453b-9d69-655f64f54cc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d129d99b-9f79-45ad-8ad2-c807ce0822de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd3392e9-1f3f-4272-a130-60a5957e2e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7600802-76b1-43b1-8366-b1f2d2bb4761",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709a104b-0e05-4f03-a9fa-401790ddfe72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5be395d-fd1f-437a-a04a-99ff7c016235"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b1b769-2851-4d09-ad04-c7e6ceaa9ec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f39124e7-9136-418e-b540-451a7d935914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d9d452-ed47-423a-ae04-5a3d86594aaa",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba1dd0b4-866f-44cd-88ed-e5445f671406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ba389d4-29dc-4e47-933e-33f2edc9d582"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c219330c-c9ba-4afe-b359-4bea80b2c12d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1bc8de8-9ef2-4490-ba7d-c97654ab8927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd9c36a-7683-4e3a-acd1-039870032cc8",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "862fcbf9-57d9-4634-b26a-0fabbffad080",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3ec65aa-3370-4e98-a4d9-3650d64d2768"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db4151fd-5ece-4cdc-a322-585cdacd7023",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23ad7b6d-2ddd-403f-af8a-e8c68f22a53f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "336c610f-1427-4f3a-b64f-d6ac586ba1bf",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc389434-39fb-4961-b0bf-2bf20302bfa1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b343c895-e8d9-4b9e-83cc-6e0a431cf059"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1eb803b-a426-4ac1-851f-9b5a4daed207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c68050a6-6d80-4ed0-b24c-ddf62a9f8988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a645aa8-936a-41d5-ad7b-daa01a3f8215",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "239b3d28-7c6a-45d0-b0e9-c7043c3d5434",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9fffcf7-70d7-4dc8-a6f9-b6b4ff449ea0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff87fae-f43c-4675-a7a4-cd3ae6dbf9e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94aa29df-cf16-43d2-b3ce-8032a413978e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203db880-4367-4a44-9b71-e0f1eec90a86",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1593f076-84ec-4dc0-a3d6-6fad28397e03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e0ac284-7b28-453a-8582-f2e47952b68f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a72d8a-9808-47a2-a0ba-37bc0a87578f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffa7a438-9105-46e2-8e3d-8c3f35fbabf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f5775f-1b0c-44c1-8087-fae1847132a1",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "482d6a7a-60e3-4c12-843a-e72703a84aed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "388207e4-35e6-424a-8ecc-23d3f36a2893"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2712df0c-1fc0-48ee-afd1-429a569a89e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eb9ccf3-bb6c-48ef-8257-37be99e87c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20228014-9485-4c26-8dc0-8aad90d4436f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f06c6e82-b589-495d-8654-47a1a0c1c8b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0986d6a-87c4-44c6-ba16-005bd03c764e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0702188e-c042-47e7-b176-1a37ea235751",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef4f3f51-db63-44c2-9ab7-5c8e62fca489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c967ba75-91e5-4f83-81f4-ffdd12b47002",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfbeac06-e71e-498b-ab78-4d8b35ae93a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f224d231-8de8-48c4-914e-947119f2a414"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f3b0031-1b5f-4917-952a-b148d25a2b71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4880124e-574c-4a41-a314-432c733eab35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00f16149-b044-4796-9b2a-ca292e0ec0f8",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a6f3aa-b952-4744-918c-a2d15dba23b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72f0cb22-71e2-4974-9a45-9c44c0a12359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8733f3b4-d00e-44a5-976f-a56aec74783c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "920b89d2-cdef-4a8c-aa11-e723a7219edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a282a12-beb2-4d0a-9b3e-452a98b93060",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc84fdf-1445-4cdb-8c71-3865cb9fe439",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "beaeafaf-19c6-4b82-8056-465f479fea53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca94ca92-ac3a-4723-a3da-6de1ece514a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fad7882-4780-40ef-8c6d-bd710ac9b8ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a2c6c8b-eb13-408a-ab05-0e175a8ceb4b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f801a10-6203-473b-a6cc-302786bd0ed0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0b4b8de-0227-48a5-afd8-cc43b83c6955"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4bb47b-3ffe-4c70-9cfd-75c2ce56dced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4858d68-d010-42bc-813c-2c6aa889f9f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80577453-883b-491f-9342-9b68180f8fc1",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6269e45d-eb8f-4719-aad9-5e0d8f939ad0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1badc0c1-5f6b-4354-9bff-32735b5d7631"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f17473-504f-4345-8e19-5554d9013c9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47db38ac-1cd3-4930-81d2-e12ed6ae5b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "477070de-6d5f-4e5e-a74f-8ce5c4ab4ff8",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8b7551-4830-46f8-bf68-31ac12ce74d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a34e9f8-3441-4a26-a022-94924320cf87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bbc0873-d27b-42c0-b642-b9df1faa6c6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c8d9e07-5509-431d-b9d6-48649ad3414f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9561361d-f953-48ef-93be-2cfe9b10818d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c103c7c-2da4-44fb-b220-bbce1243da83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61131943-7240-4db8-906e-cb4bb4c1017e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c141ad9d-1ff2-4255-a36a-0de76fac8e4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62e184a0-dc15-4886-8f4b-29f760a62a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f286347-cf7b-4814-99c9-09b2e3daf319",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65825597-7ea9-43f2-b9ab-95c18b44e779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7dc08da-7676-4c71-b930-57508b06f182"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3de0d53-0b28-4bce-a706-cc045807f752",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0437590d-929d-47a0-9259-68a8229ccf78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc13768-981a-41c5-918b-2db82106cd8a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fbcb109-e7aa-4a53-96fd-9ca2d834f12c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ce0556b-927f-4eca-a011-9639e29860a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "444d893f-9a84-4ea8-93f7-2aca210328f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa2e2ee0-b92b-486b-840e-6b9150edd266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6956e1e-44fe-4201-90ad-eaf097041722",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f36e17df-2472-438b-aa67-04398d4d5ec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d315aaf2-91cf-4cf1-8806-81ac2f2359f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eaeb74e-e195-4d1c-bdbd-ad4836cc4b62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93eab133-d599-422a-88fb-a32d368fc94b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a133ed40-d828-45af-817b-bd13ca5b3c51",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa8a43c-3b54-4c53-8205-490d6179cc11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ab3358f-75d5-453d-83cf-e4b6c595b1fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae81e61-58a5-46d1-a4c2-4b402baa4b2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "269d635b-d6bb-4122-92fe-c766e4c2fb1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1dc7030-2f40-45a8-8130-d9a0a748aa9a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d49dbbe-1610-476a-879e-8af5ce235f9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f673017-6ef6-4e02-acf6-632d652a4fbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf6a077-5155-4623-a5ec-0392f0ecd141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e11028bc-86a2-4b52-95d9-3591d692e5ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c440659c-8203-4841-be25-4a4e05928f76",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f32a15-7bf9-4bfc-a470-0fc065106208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f630bd22-fcca-45d1-a03f-f685fdcee0a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac859b33-41a0-449c-9626-93db9528b7a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ae63f52-0a0c-423e-839e-890ba982f532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a03f1f-4d13-4a10-b721-28aebfee647b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a168c37-f2cf-4d24-94a8-ed2f29010fe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "723e88ec-290a-49b0-8655-c4e27494a1ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81553c33-2df4-4ff6-a2b1-eaf03c8c16b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36f3b07a-a613-4ea6-be26-63b4107926b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e4b70a7-415f-4611-b0e8-6f0c0fbfd08d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1fe343-3aef-4bb9-bcfd-42d0cf5f8055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aabffc4-aa24-4253-8d31-6f8a25de6d1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f3eff77-9a06-4857-bf50-a98e37969295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43ec8cf2-5c60-449c-8748-7a8cc80449a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea343dd0-d6ec-475a-b88e-c9c86359bade",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9813cfae-8866-437f-8b7f-a9c77796cab5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "305e0367-4d6a-47d3-899d-5b9adfef41ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3744716a-067a-451e-8414-95f7dd72c2c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b285098b-4189-4767-9eaa-ce874a123a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4022d92f-f122-4ed3-9a2f-906a321d6bb1",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9550a4dd-c1f4-47ab-af39-41c64f7f52fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88663490-93e7-4e96-a8ab-a04c23c951f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4c163a-6580-4a82-8684-8fc7e3600434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22404e67-c6a9-470f-8e8d-18749437d435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c34edea0-ec49-43eb-8c84-e864d3ffc048",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bd1d051-5810-456c-a1fc-47cf02731e0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11da393a-03df-48f3-9cfb-a7ccd7ebe99f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "721fc94f-6dfb-4b94-a4f4-82dff331cce1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff72bc94-e12a-44d3-946a-15b69207115c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcdda7cd-1852-44f5-8510-89fc8de548b8",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e231cd-9c49-44dd-b901-5a87d02e4575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9c56473-7535-4ef3-aeee-f5955570edc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "937a5e40-33a4-4281-bc41-f39b71cbee8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32accfb9-6f54-423e-a84c-af7460aa0319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6958018d-20ec-47e7-bded-a1049f5316ae",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c72442fc-8389-4bc5-b913-09348c03d0fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f56074e-bcf6-4fcf-8c36-207d3d89da20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5947c129-e953-4e98-b314-eef981130acf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "577bd5c1-2e76-4170-bb21-255deebd24ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b0a7366-7995-4013-b75d-e8a328086c4f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a2b4b0-c7e9-4fbc-a20e-8510251500e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c29171ac-4189-4213-9912-b5bd6af2ed2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa04bf4-a416-45c7-9449-058b3ef0afad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be3cfa63-7d96-472f-b041-3cb34a0babe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed13545-cdb7-4f11-bc4c-0e9428d27883",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aafd5c8a-4701-4c51-9364-d6e728ec632a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3975eb51-89bc-4e73-a259-af2b47928a9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7878f0-fd1f-4fe6-9c51-a0f0f75b42c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c229bbd-10cb-42ff-bd7a-9a78330d1050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3952da96-0247-48a0-91a6-fdc9aa7094f0",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b49af8f-5287-4b1f-b40c-b56a3a438f7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a29f7c96-d512-467d-8155-9d01fc0c45fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c724a7-093b-4754-8250-a757c53df4c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d255075-2729-4498-9825-34e327edf809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7aa5598-17f7-4a86-910f-658f38fdab42",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d24c1d41-dc51-469e-b088-1f3713ec5af1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eea16593-5bc2-4447-973f-c75f898bfa1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be55267-d7ca-4af5-b606-cf6ad6a9b544",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00a0845c-c6a2-4fed-946e-6290e222266f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52b5cde3-51fb-4f54-881e-301ec3813da3",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79aa75aa-9936-4877-85cf-6afdead2bec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fd36497-04ec-40ef-b76e-9dcf7bfb0131"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af1a13dd-6c5e-40a0-8c1c-5a480f21ef14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39a9fca8-c2b3-411d-a945-6adf18a14e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed119fa-2852-47de-859b-8df37436fa80",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "898bd833-950d-4043-93c1-3b990fa9c96c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20848cec-06c0-4794-8fb8-9a2d337cea44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f63baa95-8265-45fe-a078-3f552ddbe727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d545fcf3-e26d-4ac4-87d8-2cc2639319e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d9a1606-5300-47f5-b196-0608173348f2",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44bfdc97-dc38-4115-b07f-f41c1a659f65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f433bd8-96bb-4bb8-8d31-81916688f32c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0beb1139-2a52-473d-81e0-0913472e49bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95d1a6f6-2cb7-437b-89c8-0c95cfd3bde3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c81a61-2708-47cb-88c4-7bf828d05fff",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "584b29db-52d9-41ed-a67b-88722736149a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4158f62-e3d6-4c56-bf94-c4d3cb28b681"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "842121a9-ca15-4c82-8bb3-8ddcc3323d7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1b18662-6220-49a0-b15e-76b84d76c114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d03a4a-e43b-4d63-9f3a-5fecce5a88e7",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b9089e-c9ec-4428-8cb8-01f80aded94e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3c438ad-7b73-4014-bb61-b2c9d3be341c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cbeff5b-6cad-43f9-9894-357825b17435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d8bcd52-83e6-4ade-a2f2-9c4d598e4d05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f5924b-9e77-4b54-a78b-00f44def27b1",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "831b32a8-4a67-46a4-9277-0e3b1a5a95ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8093c8a-b616-4ee1-bb00-a23784ccd2d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db2d906-10d0-4eeb-8553-256b1ac5c469",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0c17c81-1096-4fd2-b867-e94efd464727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e237ca-f2d1-4820-864e-2b66aa0e1e05",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e085dc33-5a39-4195-8cdf-d389dbdae92c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc54741e-392b-4a6a-ac7b-faa71f9cbaf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50cc6be-fffa-4136-80ed-62324fd9ebc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e6d10a4-29e6-4f2c-93e1-fe0eb9ae399b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb410c4-4c1b-4a55-90bd-9555e67a393d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "290c7c72-45e0-415f-b27f-3c26f4da3aa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b442f73-c588-4f8a-9d34-9b85a46a26fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe95dc28-7aba-4341-80f4-0538af91ab7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b39db5f-60cb-493c-99b9-6e5e3c71d63f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "097c6afe-2611-4316-abeb-05a0f0fef18f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37753872-fa62-407f-96e3-eb19936628ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ab6473e-844d-4e2d-adea-2e0967478379"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "710b2e3a-27e0-41a6-96cc-030f92d27780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1ed3756-9afd-45e1-8916-f08cc14eefd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2c57f7-38ad-4f10-9012-4e81a2440095",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e637e6-9c13-443f-a0b1-88cea6215325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efb971fa-f576-419d-a366-f8e896ebb52d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f659e2-7a92-49f6-9da8-8630179fcd8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd1116b6-b6a1-4be2-b46f-417799f31173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e559bb-eef3-47fd-83c1-05ed31dad947",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0da217-3d3a-4479-8372-35aab75b10a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8419d26e-484b-4261-8d7c-7e7f983dbc3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41863f3-6a74-488f-a768-8752715b757e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3454f340-6825-4a59-83d2-9f67f66ba059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a774c3-d954-4194-b2bf-2eec60e78536",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b72ad08c-33db-434f-8078-2ec5100344bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbe593cd-2396-460a-8cb0-9b2474f53314"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a173c48-b904-443b-bbea-4394ac4e80f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa3f9f11-1b88-4d89-9117-90dbf4040514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ac2c6b-be64-4fa2-a29c-57d3baaf1ad9",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb0f36d8-07a2-476a-b39b-7fb3f5ae37c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ffbcadd-f152-4450-b7bb-1f55d98677a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b5569c-37e4-47d7-becc-0b233e370dda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "023d6dfe-a39c-4ec7-8b71-bad3b1aa5772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "493fd051-6987-4ecb-ae9e-c34a736be628",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd58443-8776-4508-81a5-e118f24a3608",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04d74b23-1e3c-4275-9bf5-42c5d3dd56dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38dc2142-4a02-4da3-be59-57481da065ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac34ff33-24f1-481f-a3d9-e0b6ad1215da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea0782be-ea7b-4efa-82f8-d7edd804aaf5",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d1f672-46ff-44b3-ab89-a0cbb39c5c51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15a10e5b-99fd-4b9f-bb57-c1e0f38a9f54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b13acf-beb4-49d1-a231-ad628d067ae4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cad7ae5-36aa-4a67-aba1-c096a4c4b621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bcbda67-42b7-4016-9895-8d4e7422c0e0",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a06bf93c-fe70-4b65-8abd-f7b7bd11960a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f9dcc5c-024c-47eb-9af5-1b7bf3b704a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5845b66f-4194-43b3-8f52-aec639bf9bde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d36bf61-145c-4565-a15e-464d41110c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f2dce1d-ee99-49b4-854f-80b6c9621cd3",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b7452d-5847-4aec-b322-eada76bfcd07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b95672b7-7464-4ef1-8297-7415cee464f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd36855a-757d-40af-b6ba-fb315e45c7ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99dda01c-736d-4463-a486-f1e58c68e539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e718080-363a-4640-aaab-225bf92a0fb5",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c19e86-ecba-44d7-a590-a68f936e16fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be0fcf42-9f9c-4170-afe3-933d0383cdf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e94bdc4d-8a4c-403a-8dd1-f9a1d9d40fb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8701dd7d-895a-4f31-973f-00d9c9624c26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6312b77-b5cd-4bc0-8c48-efd3672b1cd4",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "132d4370-1972-413c-a310-8f2466e2650c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d4b43d2-dab8-4953-a3c5-7a23736a165b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea6dca2-22c7-4eb9-91d6-e413e56d010f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a7b6403-66be-4920-a81a-f497ffb2d06e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ec651b-cc01-4c97-957c-154d97fb0876",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ceff2d-8912-4a17-bf8a-975d30871e8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "760a47cb-c62f-4f54-88cd-b160739876b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b45c52-054f-4d24-9798-75aae43a4e42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f37e892b-a743-4316-9f81-3b262bd2c853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f306898-3fa1-48c3-ae21-0b620f535f6f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e8a952-85f0-4904-8078-b2c08a9f1404",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "115ecda8-791f-447b-9e63-97b47b2bff8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9badf84-3c03-4d3a-9943-53f1c3ab1fbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bda8539-8151-4f80-878a-a8fb7370a921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22cb6d63-7515-4296-88f2-c5d48b8a3583",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b5b2e1-2f6b-4b86-bca0-bd59f94a602d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f23b72cd-95f7-4a7f-ab49-66dacf5620c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf16958-199a-48be-82fd-f825b6077a38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83f920b8-8cc5-4ac9-a5d7-56b4b461e644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19b5751f-cc5c-41d2-a74b-1dc3b0ece289",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f2c625d-be31-4e4b-9945-4b34cb1a2ee0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b586333-3d35-4274-ae28-77d220695bad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a311cd77-cb00-4008-bd29-b781d0b1dc3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d043b04e-569c-456b-9287-220ef12a40bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784cacfa-1115-4bac-9b0a-7b5d5557918e",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b00b6c28-93df-4c4f-bc6b-99812a634442",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37435a37-b12a-40ca-bfff-7c18ddf1c1ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cdbb9c9-8df9-4ba1-99f1-b3d7303a6c2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93123437-1d29-40eb-8abb-541370f013e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb56342-16d3-47e3-8737-4b71d67cc0bb",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8437d81-506a-44b2-a097-b157058713cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e07990a8-9997-4c78-8a09-7317479f1231"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86aa2463-3cbd-4ea9-baf7-faef855562c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18b5f571-a853-4a6b-aa5a-51600fcb3c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf671bc2-eef0-4a6b-9e78-261a4814a1be",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c1d333e-01dd-4799-99ff-95bccfba0ae3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51f154bb-16a7-4684-8f31-67964b9fd1f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23e7fa9-d73d-45f7-bbf1-e09b38b194bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e9a8c62-263d-4e43-a6f8-d6b3a20be5f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40eff7b5-1647-43e5-872b-1f60f3c9d730",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d32c0768-b488-4d63-9108-2a5e71e2917d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d7f41dd-4c24-4525-9cf8-fc09a23da0ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba5e3277-1ba4-4c9f-919c-d1e15c3b9f5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dfd2e74-d668-4b74-aacc-bede4d081d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3b8f43-6724-4245-a2b4-1b5f54f86c04",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f3406bc-b161-4172-9925-73b864a858a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a89b5ec-c8d5-46be-9d80-ff49f70fa997"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1fd4663-d2e7-4c29-8f9b-2162f70501c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e87a9bc3-e69f-4811-b1ca-b8f19013a3cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17972ef1-d923-4dc6-8cd6-6a9047f4db83",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3797d3bd-b784-400a-8cf6-77fc3796590a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02af275e-2add-4539-8ab6-0b102e57dbdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a2c917-f4a3-4539-9d8b-3f8dc77748ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6ca3222-719f-4728-9393-dc8dfb470bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9842de58-f860-4e4d-9a03-47b68710e225",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d15f764c-96de-4262-a2b6-13af3bc073b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c62c77e-3c63-41ce-bea4-f9a0e4a5e47d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fcd48b4-1665-41c1-8474-293ad2c58d72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daa524ce-72bf-45e6-bc29-33b24bf30f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d7a7b1-16f4-486a-8929-c7067e8ac72d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daaec3ff-79a2-4ac6-8c99-10de3c823d3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "736aca3e-8e71-4cb3-ad88-8145c3954dcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ea576e-81d6-450d-939a-59e98e8fa49b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8c92864-9474-4097-8215-60f690857d91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98726824-f2a7-49c6-a3b5-07d1860ad1a7",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd5859f6-26ae-48c9-97e9-e740eafb5923",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "542ef207-0c10-4f98-b4d7-8dacf27c7e92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ceafc1-cf55-435e-8684-0e3f906a2ad3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d841c1f1-73c9-425f-a461-37340c03262f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d34c29c-b0d3-41d0-bc9e-507a5bbe6aec",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c16518-d361-48b0-8432-5ce67ec7e829",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "466b97d6-313f-40e0-9fe9-845411a870a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d01a2fb1-9033-4fa6-a477-1dc7d10ed5f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d010f329-1a59-4a42-b5e4-623344fc6240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b400d08-b1b4-4d9a-8b8a-7e531eee446f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ee5631-906d-40c8-b9e6-1504cb25eab3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e93b2fc-2046-4afa-9196-ba39f2a2d1ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "183c1c75-50f0-4cea-831b-74447e0d5a66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aff2533c-e269-414c-83e8-d9f971b53661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6009e246-3fb1-4063-8ba3-016368d4289e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "570910e9-6b78-48a1-a634-4f720b221fc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe1bbf20-d80b-4cdc-8b7b-48857a417eb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e7609c-1bcc-41a1-b901-1295d472b109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab50529a-5dd6-4f85-8cf3-b67d5fc5ed8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1b1d62-9c1c-4446-a18a-d9163fbf308d",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5035ec79-8248-4b35-8ebd-7fc09e0f60aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "950d5e29-35da-4279-83c0-b5ed61c3b606"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2fd3ee5-711e-4528-9bce-368a330f1f19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0447658-a5cd-493c-80a9-cd5ffb3423ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7246b3b6-3cef-47ef-8eec-49c84d381819",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57dbbfdc-4090-4b67-ab7d-6aa14d41d3b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eab8618a-c04f-432b-8479-14a4852bbe2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "742911ba-33b6-46d5-bab5-fe824d109de4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5819432d-7743-434d-a5b7-55d93d5b6411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f63d67f1-f090-46ad-90e5-3f85e62a5b81",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "427bbad2-1472-4ea0-ad29-89310e33ce30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68434226-c196-486b-8a73-6cfbad1b8288"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd41bfa-bdab-4ada-895e-1fd6e68f514d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87b385fc-1495-4db0-9be4-1c2ccf3847cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33eca42e-d17b-4da6-9cd0-4e82a5ae474b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fff0f9f-0755-4713-a2d5-e01e3f147ef7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "361431ab-c080-428f-9283-bc05712cc6eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1f0673-22c5-425a-8047-1e9a3d95802d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e30c2414-e841-49c2-a7b4-109a79b4a592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff7ed97-57eb-476b-aa30-a6194b799db2",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ede508-e191-4a79-a9d6-4799d209c4bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8741560a-4dc1-43d1-8c7a-3b35726307af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db52dc59-5124-430a-8f88-75419eb41c19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fff64165-a49a-4b68-b152-d109e1414183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26fe8d0a-04ad-43bc-9b6d-5ad1677c35b6",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a904672-13c7-4ac3-8a4f-7625d50ef43c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87efdbf1-8fac-4f17-b0f2-6bad4651184b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0110e4c-586d-457e-84cd-464009419583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8df730f5-5d99-4f64-af0a-f4d982b0222d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660ae3a6-9b7f-41ad-be2d-761f4cfbeb24",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c9c5b0c-fe6d-4620-8ae9-3f2ceae64a2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f7a13e4-9006-47a9-8fc5-b343bfc41866"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da30f59a-d57c-4c96-bde4-322b6f4de247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3a7e992-77be-40a9-a957-58a5005682e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd5d2a3-4310-4f50-87f1-bbf8525d20b1",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7bbd491-ae9e-453a-a7b4-f9322a1da936",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bc0f872-0a89-40d1-b607-71d8fb62554f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ebdde30-a11b-4f17-b879-0935d00a0225",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26c18f6a-6ea4-496c-8a44-33a60eb80c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b075215-3d01-4e10-9965-03beb8e6805f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb0d8e51-8e0a-45db-bf3d-622cf0b4cce8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5eb69b5b-a159-48fd-af5e-59b74199d37b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66203b9-7505-478e-bc10-c4f3c99cb14e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ded2350-a5af-4bfe-a9f9-e02f56946bed"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75b2ec5d-c341-44d6-9671-68924b1fac6b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cde77297-a413-4694-a130-bc7682e6da21"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eafbf4cb-5979-4c03-b21a-70926fa0d1f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "57133805-aa0f-4b5a-9ddb-1bb2eccbad87"
                    }
                  }
                ]
              },
              {
                "id": "953ba4c6-f854-4db9-a892-9ab14d4f59d7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "93703be3-6a80-4d59-9911-bc8995de21f2",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e161c46-7e73-4065-a82c-947624306a3b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ebdde710-d691-4c7b-a5d1-a149bee1aaf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d492c402-ea98-433f-9d53-708738ac289b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8380676-2b30-41b4-bdd0-536d6aba8b48"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73eb3a1c-cfe3-4278-ab86-89727e154112",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a8c1089e-b1df-4fb0-bd6e-9b9ddee73caf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "94404356-f64f-4b05-8426-ddc754dae9d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5da3664-c291-4c6d-8afb-bd1ac5418142"
                    }
                  }
                ]
              },
              {
                "id": "f6c24b3c-0b36-4ede-9d11-7396fbc58c51",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "436f4c95-1a8a-4e41-9710-50f1946f0c0f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bedb1dc-de39-4f0e-a5c7-dd9083c221ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f362a5ea-f07d-4989-a79e-a841722d4817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc8afb24-1939-4ea0-813f-f13765a23f98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3270d4be-e9e3-4205-9812-256ecb2d3d73"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a9c876e4-60ba-4636-ac78-a69f87becd2a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "343167c2-3b08-419a-a753-b1baf1ce86a5",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f735057-c29b-49cd-9ae1-44a5b5a2b3cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1d77fd8d-329a-40db-8704-75d9e9e7134b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "19447e55-3153-4817-a8fc-3af7f376ce97",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80cdb0cb-dd96-4da4-a609-097082f74969"
                    }
                  }
                ]
              },
              {
                "id": "f1dd45d7-0dca-4ccf-9efe-7d0fcc3147d7",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "245ae172-e74a-4253-9b92-f892cc8b6054",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5558cf60-6e7d-468a-9198-aca35def695c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "584e1462-08f5-45b7-99ba-d2f1d2a120d8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6838f8e7-2bdc-4bc7-9ab4-bf63f68fa43e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2a82d3fd-fe30-4f71-8f3c-23e4b8e0c81b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "14d5e413-b5c7-448b-8ea3-68094f1bb38f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "81d5fb7a-845b-4e09-8204-fd30fc7e6e85",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3d201035-850a-4686-bcb0-e0b3da4d054f"
            }
          }
        ]
      },
      {
        "id": "4636759f-4561-4469-8294-5db3cff6330f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0ac3f5e7-d105-451e-9fe0-a0937aaa4373",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d5772ac1-1108-4a8a-b3d6-d761ee4b9cf3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5c5955a0-886f-487f-8ccc-2ebf7da3deb4",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d33c9d-462f-456f-958c-9ac374625bf4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1f5076b2-e7d0-47f1-8373-a5a1322fb7c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b76ac1-00c1-47b0-8fbd-1db2a1bd4b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78aec324-b74c-43cf-8f06-ff2edac0dc42"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db2a9f55-5938-432e-b963-7d50aabbfbe4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42bda133-006d-490a-a1aa-5051f8890e35"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bcfdbd16-25e7-4fbf-b806-ffbbf9ec9f23",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "53d836e9-69bf-4d74-a469-4c7996e0ff35"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "547a2dc0-7502-47bf-86d1-c0a96a887886",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "24cedc9c-f265-4262-905b-50fa3c3f163d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a638f66d-3bdc-4652-9141-62addd5f63dc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a778d405-17ba-42be-9c2b-80e88f1db95c"
            }
          }
        ]
      },
      {
        "id": "81b2ad60-d54f-4fc2-bf8c-9aa1c373c229",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "68a284d6-1fa2-43cd-9d8a-0fe107a564c7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6cc288ec-ee55-4386-ad5e-fa7525bb5bdc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d192b52b-97fb-427f-bca4-756c2463c2c7",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4faad91c-d8ec-464a-a3a0-c76b11228d09",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60397c70-87ef-4396-96d4-5240368bf18d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "674591dd-4286-40ab-a300-6ad26d1db2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "778ffdf8-8e08-4be0-a47a-b9c3715a7d6e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa7be139-8ba7-4f77-87a5-ab8c1d7f79ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d62a443b-aebc-475a-b10c-3dc7b5c0c09d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "be9b4994-2627-4812-9d92-09d8b6d71b28",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96c0a459-26c8-4e8f-abee-e725cff364df"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0a78680c-30a5-4b46-8462-bdc8fe4a9439",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0ed06195-a6d4-46b3-b762-4396d601ab52"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fdabc52e-09a0-46e2-b352-3417d1a7ec3e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f85060bc-24e5-4a24-80d7-142ec3823133"
            }
          }
        ]
      },
      {
        "id": "184395a4-9401-4df2-9354-df929b012c5b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b129c408-e1d0-456f-9ed7-0c74fe0ffbb6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "65e655fd-9fd3-4411-aae7-c3dbe0b70475",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "77421d4b-f1cc-457f-b5df-06774b206621",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279c9139-34c4-409b-8240-ab030f635a9b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "75cf6dff-fbc6-49c6-bf0e-f0352f409269"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ce9639-f3d8-478f-a753-9008a6aee2de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0cfa1ff9-ec5e-4f3a-a1ae-1ed53d604ddc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0145bf4-20b6-4f0e-97cd-bb90db8b1ea9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ab2a701-16e5-4469-8944-87a563bc9c48"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0bd548a8-8a8d-49bf-b956-5618cc5c7f07",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2065c6be-d727-4e2f-a1d6-4a771fdae26d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8b3dabc5-17c9-4c62-8b2f-4dfb7297c24d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9941b7df-7125-4014-afdb-5cebe101d850"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a072fa0c-eb2b-4a1c-85cb-bfb2587f8f3c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "722e136a-cd60-4afd-b83a-c06cf543e427"
            }
          }
        ]
      },
      {
        "id": "b3a99578-ac36-405d-9976-315385650879",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "71b614d5-1374-400b-a189-615a52707f29",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9c654aa5-b5c2-4819-8193-024ca9d15318",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "9ef57024-1990-4b1d-ba03-5ae211cab1c1",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a39c01b-fefe-4724-b4e1-f7c81a064b26",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "67de4f25-900f-48b0-b893-d47b67558843",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 78.78947368421055,
      "responseMin": 4,
      "responseMax": 7339,
      "responseSd": 501.7537851793732,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1706315656922,
      "completed": 1706315688909
    },
    "executions": [
      {
        "id": "4e262823-921c-4e49-bd89-a95057a0080c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5c853988-a6ef-413a-9cef-46319a1e8d91",
          "httpRequestId": "ac98e27d-3e1f-4877-b3bb-fdb3ca38df63"
        },
        "item": {
          "id": "4e262823-921c-4e49-bd89-a95057a0080c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d319b5a8-ddbb-4dd6-a25d-835146bf00f6",
          "status": "OK",
          "code": 200,
          "responseTime": 69,
          "responseSize": 0
        }
      },
      {
        "id": "11ea7067-9fa0-42bd-bd9b-b6ef76e76e5b",
        "cursor": {
          "ref": "9d4ce617-9dde-49cc-932d-6c24789c18c4",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e0420508-329d-4799-ab22-8e8c77a7ed2c"
        },
        "item": {
          "id": "11ea7067-9fa0-42bd-bd9b-b6ef76e76e5b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "3148b84a-cb0b-40d7-8fd8-365d2df2bec9",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "38cf3b21-98e7-4ccb-ba63-2df721299e5d",
        "cursor": {
          "ref": "713ba5fe-c708-48d6-87c5-7ad35efe1096",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c1fc517d-8ac6-4121-924f-c0aa90833d38"
        },
        "item": {
          "id": "38cf3b21-98e7-4ccb-ba63-2df721299e5d",
          "name": "did_json"
        },
        "response": {
          "id": "0993700e-69e5-4cc5-b56a-f2ffe73bd837",
          "status": "OK",
          "code": 200,
          "responseTime": 257,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f939ec6-f018-4b7e-8fc0-7009de193f6a",
        "cursor": {
          "ref": "d138c144-e6a6-4486-adea-c0a3044628e8",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4fb2f0f7-34f1-4aad-b073-0e75fe0eecb4"
        },
        "item": {
          "id": "7f939ec6-f018-4b7e-8fc0-7009de193f6a",
          "name": "did:invalid"
        },
        "response": {
          "id": "1e596d9c-58ce-4f56-9817-8d2b4550edc3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 717,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f939ec6-f018-4b7e-8fc0-7009de193f6a",
        "cursor": {
          "ref": "d138c144-e6a6-4486-adea-c0a3044628e8",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4fb2f0f7-34f1-4aad-b073-0e75fe0eecb4"
        },
        "item": {
          "id": "7f939ec6-f018-4b7e-8fc0-7009de193f6a",
          "name": "did:invalid"
        },
        "response": {
          "id": "1e596d9c-58ce-4f56-9817-8d2b4550edc3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 717,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28cdb589-9d0c-4fe5-bb76-eae50dd50c65",
        "cursor": {
          "ref": "2079e380-c913-40e0-9a33-c83e7b41c3d4",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ba631f13-49ed-43eb-b1b8-72c797e05d9d"
        },
        "item": {
          "id": "28cdb589-9d0c-4fe5-bb76-eae50dd50c65",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "e00f7b7d-9cdf-4706-b8d0-c9fd2acb96d4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 15,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc38c5bc-9cd2-4546-b5f0-00a8885e8a1e",
        "cursor": {
          "ref": "6db3e4e1-704a-4abd-905c-534e8310cd21",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f135d256-f48c-47c4-bed1-8ee0624ec43e"
        },
        "item": {
          "id": "fc38c5bc-9cd2-4546-b5f0-00a8885e8a1e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "fb0ac347-a1ce-4f01-89ae-965af0d5de7e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 33,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912d5eac-6cb0-46c8-9177-3da33f422d6f",
        "cursor": {
          "ref": "a434eba8-6a57-4cdc-bc13-f1693dd6c37e",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "dc9bc641-d772-4515-921e-971f297d5254"
        },
        "item": {
          "id": "912d5eac-6cb0-46c8-9177-3da33f422d6f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "0237b072-cd2b-4137-8ecf-76431ced4275",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 17,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "565844b5-b3ef-404b-87db-562832faced3",
        "cursor": {
          "ref": "f40d659c-2202-44b7-b8c7-ccdd3542ef59",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b3b3cb1e-833e-4dc6-bc54-26d982b96e3e"
        },
        "item": {
          "id": "565844b5-b3ef-404b-87db-562832faced3",
          "name": "identifiers"
        },
        "response": {
          "id": "36ed4795-b553-4078-9518-02e67a89e5c7",
          "status": "OK",
          "code": 200,
          "responseTime": 23,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3943d167-d405-44bf-b7f4-6db51ee3fd90",
        "cursor": {
          "ref": "b0d1ec2e-aeaf-4342-9960-8be14c7537f8",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2f9b9f48-8880-43f7-a645-5b6732b1abfe"
        },
        "item": {
          "id": "3943d167-d405-44bf-b7f4-6db51ee3fd90",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7eb79b2a-9766-4333-ad39-79f70ea958d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f5fdfb-1d11-423d-b2dc-f62a09e5c1f9",
        "cursor": {
          "ref": "300aeec3-f1eb-4afc-b3e9-7168a2c65c71",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "94f2dc0c-55f9-4f54-b9e1-47b91e0e0a2e"
        },
        "item": {
          "id": "90f5fdfb-1d11-423d-b2dc-f62a09e5c1f9",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "5fee333b-e823-49a9-8714-97b43d0989d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e64f290-c83a-4834-a698-a86c01ba0d2a",
        "cursor": {
          "ref": "40134df8-dad4-4810-b136-36490b0e4e5a",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "19935d1d-b558-4c8d-80d0-2583891a3bb0"
        },
        "item": {
          "id": "3e64f290-c83a-4834-a698-a86c01ba0d2a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ebc99c8c-5de7-421b-912a-bed24089f9cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6312cf54-2724-4cd2-b0f0-a69c269655e8",
        "cursor": {
          "ref": "68482afb-3e5b-4fe7-b7e0-45930503e1c2",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "9810fef8-8969-4266-bc85-2a421b696b7e"
        },
        "item": {
          "id": "6312cf54-2724-4cd2-b0f0-a69c269655e8",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "093a0abb-016c-465c-91a8-6e1a26d6a8d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1137fa4-bde9-44ff-9f0c-875a2bd1e418",
        "cursor": {
          "ref": "5bf838c8-861b-47a5-ac1a-c55507657192",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "40a785af-80a3-42e8-9f82-d6aec03558dc"
        },
        "item": {
          "id": "f1137fa4-bde9-44ff-9f0c-875a2bd1e418",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "cc30c51c-a270-4902-861d-3fb3bd21d8b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ba181d2-a74a-48de-885a-0036e559d8fa",
        "cursor": {
          "ref": "67d58996-45f7-4901-86b0-1fd8c6a02e6a",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a6b65cb6-1471-4bb9-9687-24c07b5e5629"
        },
        "item": {
          "id": "0ba181d2-a74a-48de-885a-0036e559d8fa",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "4e075225-6f07-47f3-bef8-2c404dbdece9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7674ddb2-dadb-430d-bd60-4a56652fecb3",
        "cursor": {
          "ref": "c3083d38-db81-4a9d-a95d-7c751440551a",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a06acb29-fca7-497e-8443-1f381ed6efbe"
        },
        "item": {
          "id": "7674ddb2-dadb-430d-bd60-4a56652fecb3",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "108b70be-b318-4f7b-8ae1-e5dd654da7e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fee8e5b-95c9-40d9-8fbd-58b777d3f39b",
        "cursor": {
          "ref": "0bf86907-ac56-4f31-b1d9-89e9a40ae9a3",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "053c359a-f919-4cf5-abd0-a5a5cb3b8c1d"
        },
        "item": {
          "id": "8fee8e5b-95c9-40d9-8fbd-58b777d3f39b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "6f66a543-1f5a-4090-bab9-c76b982597e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eebb2838-ff00-401c-8c5d-7daecca3af3c",
        "cursor": {
          "ref": "90843154-0fd1-4a66-89bb-7c091ebb7c88",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "907d2a76-82b5-46f9-b611-fdcf62a12f3a"
        },
        "item": {
          "id": "eebb2838-ff00-401c-8c5d-7daecca3af3c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "222161b2-97ac-4df8-b44f-98e7533c5b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da04c864-27f5-4166-8c67-716468a2115a",
        "cursor": {
          "ref": "05a051cd-e92a-4f4a-aadb-c8c9e4088322",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "22648288-608f-4030-af3e-3046c5da24d3"
        },
        "item": {
          "id": "da04c864-27f5-4166-8c67-716468a2115a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "45ca31f4-45c1-47a8-b2a6-6764f714b119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9db8c09-699e-4c48-8681-6eb6b9ccdc74",
        "cursor": {
          "ref": "d5e4028a-2eeb-4dd0-8106-1c37b808eb0e",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "55722ccb-0159-4b1b-b848-690e5796bb57"
        },
        "item": {
          "id": "a9db8c09-699e-4c48-8681-6eb6b9ccdc74",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a4ef824a-466e-444b-874a-906effb1fa3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6fb1f2e-bba8-4bc6-9c43-5690897867c7",
        "cursor": {
          "ref": "b99377d5-35cf-4c3b-a8c0-aa3da018eeda",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2917d1bd-2de7-407a-bb70-dd33e50e60f4"
        },
        "item": {
          "id": "a6fb1f2e-bba8-4bc6-9c43-5690897867c7",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d225c176-433a-477a-9a2e-72e17af6b7b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9a3203-cb16-48bc-bbcb-330f713d2008",
        "cursor": {
          "ref": "ac6d6bea-8025-4351-af5e-902198e9a78d",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4b8cb069-8e83-48fb-aa14-e8395171fe98"
        },
        "item": {
          "id": "3c9a3203-cb16-48bc-bbcb-330f713d2008",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3e4e1d58-880b-4fc0-949b-cf1ef7add11e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "100d3a55-4d71-4ba4-ab38-61ca2654eba8",
        "cursor": {
          "ref": "bfda7d75-cc95-4989-9e63-af86e40e82f9",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c170a38f-1082-48e9-9803-a3a26761a727"
        },
        "item": {
          "id": "100d3a55-4d71-4ba4-ab38-61ca2654eba8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "60576a91-7a38-4072-bf59-7bfa19d2db0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d30115-01ea-4050-8ace-eacd31187699",
        "cursor": {
          "ref": "d36c0490-6709-4603-8f8c-736fc357651a",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "9a2f06f1-e693-4d06-a246-7907b586827b"
        },
        "item": {
          "id": "59d30115-01ea-4050-8ace-eacd31187699",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "39add407-53e1-4b8d-99fe-1c05c80bb2e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59966a81-8d6e-4861-aa0d-8ee99897a3c2",
        "cursor": {
          "ref": "b8fa2099-f4d0-41bd-a0c5-7ab74f36f4e0",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "716204a0-5621-4616-9f26-92bdde01ded8"
        },
        "item": {
          "id": "59966a81-8d6e-4861-aa0d-8ee99897a3c2",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ba28b6b3-2db3-46ae-9a36-a2e1b728dada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d2749ca-e7de-4aa4-ba4b-f1e390356470",
        "cursor": {
          "ref": "43a66f11-71db-46b0-90fa-697dc33c8b55",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f42f40c6-fc04-4b75-904a-5a6b1c59ef08"
        },
        "item": {
          "id": "7d2749ca-e7de-4aa4-ba4b-f1e390356470",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7854e762-01be-41b2-bd51-fb2980622aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be18ab7-6127-4992-ab4a-4362d0cb0835",
        "cursor": {
          "ref": "f1f11944-b17f-4fd2-865f-b06cece3230c",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a5e090fa-8278-4258-beca-7e326ec61464"
        },
        "item": {
          "id": "7be18ab7-6127-4992-ab4a-4362d0cb0835",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "fcfebe77-237d-4f5c-a16e-77514fd9d41f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a18f53b-4bad-4a51-b9d7-23b0853f4730",
        "cursor": {
          "ref": "f203a23e-1995-4121-9823-c108f69dbe08",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8195ccb4-6003-47d0-ac95-b17a80d98c88"
        },
        "item": {
          "id": "8a18f53b-4bad-4a51-b9d7-23b0853f4730",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "94b893c3-a0d6-4ca4-a337-179de216d1c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cbcd58a-be72-4e8b-9135-c5aaa7d35d3c",
        "cursor": {
          "ref": "816b8d8e-0266-4f69-ab15-cd754bd03fcf",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "74c7411a-a1a3-4875-95de-31d4e0f0d10a"
        },
        "item": {
          "id": "1cbcd58a-be72-4e8b-9135-c5aaa7d35d3c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "33209b85-7f2f-4ddf-b9ef-8ac8d0d47d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 178,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f7ee23-e312-4d1c-90e9-be656eebad4a",
        "cursor": {
          "ref": "a818a14e-767e-453d-80c4-92f58ea2a277",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9948c0f0-f3ba-4556-aefc-39f77da82277"
        },
        "item": {
          "id": "c9f7ee23-e312-4d1c-90e9-be656eebad4a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "55419341-e7da-4dfe-ae53-5172f352e593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34492840-2d31-4bf9-bbbf-29aac4851a90",
        "cursor": {
          "ref": "7b714bcc-0b75-49e1-a4f7-71d9f9250584",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "75260b55-61d9-4ef3-b10a-d56ec6207004"
        },
        "item": {
          "id": "34492840-2d31-4bf9-bbbf-29aac4851a90",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "16ea2fc2-dabd-4ae7-b406-e6312a454ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b83aa0c4-7503-4927-af1e-f0befa972a39",
        "cursor": {
          "ref": "af21b14f-5cda-40f6-a09b-f928f4435efe",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d5abba57-b7f0-4968-bc3e-0f384b70e116"
        },
        "item": {
          "id": "b83aa0c4-7503-4927-af1e-f0befa972a39",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "ed489769-6218-494a-8868-630b431641f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b56a6fc-ffbe-47a8-b094-6f21a634e7a4",
        "cursor": {
          "ref": "68df9f4f-79cf-4c0b-ba94-047856313a0a",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b55681be-0b3b-45a7-abf4-b8c9ce4b66f6"
        },
        "item": {
          "id": "7b56a6fc-ffbe-47a8-b094-6f21a634e7a4",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "55ec2e9e-1489-4962-b603-5546f240f0bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8267006-7b3d-4244-badb-8a39af36e53d",
        "cursor": {
          "ref": "a6636bb6-7fef-49df-9154-acc71df25f79",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "5b945d0d-426c-4693-aa4f-06d7c06a8b1e"
        },
        "item": {
          "id": "d8267006-7b3d-4244-badb-8a39af36e53d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5f9473e7-73f8-4167-acec-dd338a5c0341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4333cfdd-5bd0-4fc8-a173-d74544b7e7f6",
        "cursor": {
          "ref": "1e7b515f-e4ed-40a3-b071-5724de913506",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e48a43fc-70aa-4d58-9810-a0a9705a2b28"
        },
        "item": {
          "id": "4333cfdd-5bd0-4fc8-a173-d74544b7e7f6",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e161b608-5f49-4a42-87ac-fe219450807a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8ab609-5c75-4da0-ad40-6d2aa49f33b4",
        "cursor": {
          "ref": "15e4e814-00bf-4d9a-905e-92a17cdc84af",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4baa4c14-69a3-47a2-8563-1c71adcb0df8"
        },
        "item": {
          "id": "ab8ab609-5c75-4da0-ad40-6d2aa49f33b4",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "dfaaeee1-0432-4191-9338-4a769f3b18fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb7b3bcf-ef0b-4d6f-91ed-b185e739d5b8",
        "cursor": {
          "ref": "db5848c1-396b-4269-9087-38c8c8882e8f",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2c2e9e13-c72a-47a0-ba27-d26a3a79daec"
        },
        "item": {
          "id": "eb7b3bcf-ef0b-4d6f-91ed-b185e739d5b8",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "613f7e8c-e0ef-42ea-a607-e10f50df268b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b8f91c4-86b8-40d6-b03a-a6040e98edb2",
        "cursor": {
          "ref": "cba37d2c-bb49-4638-9954-b003124d1d91",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ddb10aa1-b64f-4427-8962-89ea2d48ec0b"
        },
        "item": {
          "id": "1b8f91c4-86b8-40d6-b03a-a6040e98edb2",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "baf45a41-8b38-4dbf-be71-bc2b4c74be2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "652a33df-06cd-4231-b409-565ab58ec0ea",
        "cursor": {
          "ref": "fe407712-d88c-4b1f-b1b9-34385f23a655",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "60efd2b8-159b-4061-8259-6bdf440ff931"
        },
        "item": {
          "id": "652a33df-06cd-4231-b409-565ab58ec0ea",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ee90cffc-88b5-4954-a698-c80e5bfd98d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc29aaf3-053b-47eb-8135-db42ee0f122f",
        "cursor": {
          "ref": "2e8c010b-d67d-4d0a-9fe0-de3e002c3b15",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ceefa1a7-e47e-499a-9696-215b945cf6bb"
        },
        "item": {
          "id": "dc29aaf3-053b-47eb-8135-db42ee0f122f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d05dd3bf-5c5d-4cd3-a263-3fd60102589c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e5d7bf-5c0c-4586-9a41-a65a6b1c109f",
        "cursor": {
          "ref": "4a1938f2-52d3-457e-b6eb-bc9723128bec",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "72a4d5a1-6c4b-4e92-a4fe-1fc870db9ddf"
        },
        "item": {
          "id": "f7e5d7bf-5c0c-4586-9a41-a65a6b1c109f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a6379fb5-7170-4f4d-95fd-201c9e1284a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5d4fcbe-a84b-4389-b042-74616b3c148f",
        "cursor": {
          "ref": "ead2a349-ffa7-485e-8049-b45cd1fa17a8",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0d6c24e3-5f53-42d4-9036-a6b94e001d39"
        },
        "item": {
          "id": "b5d4fcbe-a84b-4389-b042-74616b3c148f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d9412673-2365-404a-b180-8c581b3bfeed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd7fb679-1469-4672-9a1d-89315638783c",
        "cursor": {
          "ref": "dafa1251-bbbc-47bc-a222-8a01e424f8f8",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8bf8d2ca-95d6-4da6-b741-327372a12489"
        },
        "item": {
          "id": "cd7fb679-1469-4672-9a1d-89315638783c",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "9c9d115b-12d6-4e54-beb7-f5d033c1a00b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "311f7bcf-5f76-4454-8ba7-e5c57112c068",
        "cursor": {
          "ref": "1bbb3411-936e-4235-8fd4-49f0778a864c",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "4fbb8416-a0a1-45ed-8416-68f01d5e750c"
        },
        "item": {
          "id": "311f7bcf-5f76-4454-8ba7-e5c57112c068",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "12eb9061-5798-4e29-86a8-b83d23e7cad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "577a65b6-b604-498f-9d9e-cb93c3a35790",
        "cursor": {
          "ref": "1a468c4a-d02a-4a15-9dfa-d6315b9fe653",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e2a8cf30-d2f0-4361-901b-6915fda50904"
        },
        "item": {
          "id": "577a65b6-b604-498f-9d9e-cb93c3a35790",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "950afc10-db96-4251-a0d6-b00c60b5b5ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0641f5-48c2-4178-86c3-5d6a80996f9b",
        "cursor": {
          "ref": "f6a7261b-9048-479d-b1c9-8252df5b87fb",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e553b3c8-b630-4ce4-96e7-12edfd6f9abb"
        },
        "item": {
          "id": "cc0641f5-48c2-4178-86c3-5d6a80996f9b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "177194da-6dca-4c24-909d-b88007e764d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b562d144-f60e-4da1-b81a-a657274bcf16",
        "cursor": {
          "ref": "343f73f4-8394-4319-9a27-ba7915bd387a",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "49155776-35e1-4b2e-b91b-ac95dfe13574"
        },
        "item": {
          "id": "b562d144-f60e-4da1-b81a-a657274bcf16",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c004debb-7541-42ae-8a6c-ea3125a548d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "173f3d6d-9449-4fb4-9ff8-91e3f885b062",
        "cursor": {
          "ref": "0bb28ede-6372-4385-9b8c-033e589f69ce",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "7cb927d9-5024-46ef-9989-2a2dcae963a2"
        },
        "item": {
          "id": "173f3d6d-9449-4fb4-9ff8-91e3f885b062",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "350395a5-fe81-4943-bd63-a19cf7907c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9387b7f-c745-4c0e-98c6-031cc755fd6d",
        "cursor": {
          "ref": "ac94900d-822e-47f0-a1ef-02bbe67cdb9c",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "728845bf-d97e-4bed-88aa-c4544ccf4204"
        },
        "item": {
          "id": "d9387b7f-c745-4c0e-98c6-031cc755fd6d",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "2d9c430b-0e6a-4e33-b145-fe6c75405de9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2161d67-77ea-4189-bbb7-882cc2a44aa0",
        "cursor": {
          "ref": "3376368b-5f1e-449f-af1e-cb1b496e898c",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "b42e914e-c843-4acf-8ce4-9e80046aed82"
        },
        "item": {
          "id": "e2161d67-77ea-4189-bbb7-882cc2a44aa0",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "cb22be02-8d58-4d35-87ec-6af2aaad1df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "185c9152-8c5b-4f6b-8d92-0b56a8b45951",
        "cursor": {
          "ref": "ff33a711-be13-4278-9200-0a0521c6ea36",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "eced5b1d-239b-4eef-ba0f-130e0f9d703c"
        },
        "item": {
          "id": "185c9152-8c5b-4f6b-8d92-0b56a8b45951",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "3ee77882-b662-4c06-ad59-c2da73f58129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bcf0e05-a71a-4580-8d10-85ddd377c6fd",
        "cursor": {
          "ref": "bba552ff-d6b5-495f-9df8-9f276412cfd0",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1460698f-4542-4381-82ff-a4db8ba6d1e2"
        },
        "item": {
          "id": "2bcf0e05-a71a-4580-8d10-85ddd377c6fd",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d3d7891a-d29b-471e-add8-279aa8ecb8ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b5c27d-853e-400c-adb5-b981510d325d",
        "cursor": {
          "ref": "76292aff-55dc-406b-88a0-8ccfe85009a5",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "e7432d98-28d3-469c-8336-c79a5e1ea707"
        },
        "item": {
          "id": "48b5c27d-853e-400c-adb5-b981510d325d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b4fe6c22-1a7a-4333-b7fb-c924c1c4cfe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "880e0af9-24db-43b7-bf35-4fae35c7db5b",
        "cursor": {
          "ref": "594ee35d-f3dd-46b6-8611-bce7513ce2ec",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1149e9a9-ea7e-4e9a-9511-8d4ec6a36d0e"
        },
        "item": {
          "id": "880e0af9-24db-43b7-bf35-4fae35c7db5b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f6cdcffb-5624-4ef1-9396-736abac7391e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50870844-56dd-4a02-a858-0d0ec5779007",
        "cursor": {
          "ref": "2e562c77-dd93-4302-a944-8307d8fc7a4a",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "748bca49-1b69-418a-88df-6c8793c2a50d"
        },
        "item": {
          "id": "50870844-56dd-4a02-a858-0d0ec5779007",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8ebaf18e-fd9f-4401-b3f7-53b44271c45c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f224b52-986e-465a-a9dc-ccda7731b62d",
        "cursor": {
          "ref": "8b4d0b78-27bd-4c80-a624-718b4013ccc6",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "71528f88-2a3d-4498-aa3d-685517642784"
        },
        "item": {
          "id": "0f224b52-986e-465a-a9dc-ccda7731b62d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "79664e5f-0cf4-4553-82d6-856baf1a3f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a18922d9-d842-410c-a474-2d1f9f68edb1",
        "cursor": {
          "ref": "a0a8cfee-0a61-4b23-824d-8a6b48988292",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "5ac7e60f-0fb5-4d43-a7ca-8d4e702ced27"
        },
        "item": {
          "id": "a18922d9-d842-410c-a474-2d1f9f68edb1",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3a7e18e2-2bc3-4f34-952c-9a7923011bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16dd9cab-b8e1-4d29-87d4-04d90b629548",
        "cursor": {
          "ref": "3907df8c-69e9-47b5-9ba9-0d7f81b5ed8e",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f0d11456-4901-4f23-979f-97f24405d485"
        },
        "item": {
          "id": "16dd9cab-b8e1-4d29-87d4-04d90b629548",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e5ef6946-6321-4121-b973-7d74db102749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8355ea16-dc35-4dc5-a9e7-a69be42d07f1",
        "cursor": {
          "ref": "b6396095-5cf6-497d-97c5-b3f7c63a1dc7",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c441b99a-d843-4b00-994f-c65307f66967"
        },
        "item": {
          "id": "8355ea16-dc35-4dc5-a9e7-a69be42d07f1",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "be607169-7301-4710-873f-ede24ffbc0b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4fe186f-e85c-44a4-b4cf-1e465e670985",
        "cursor": {
          "ref": "9d02b8a8-3f60-40e0-a5a2-d170606f6574",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e0eb0a36-7127-41f2-b314-74d3b1bcbf0b"
        },
        "item": {
          "id": "c4fe186f-e85c-44a4-b4cf-1e465e670985",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6996013a-8d0f-4ada-8a07-e70fb5fd8f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f70d0a9d-640b-4eb0-a0b9-792ca8ec53e9",
        "cursor": {
          "ref": "3b407448-43e8-4e9f-81f9-fdc52c36a49f",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "1a68c13f-eac6-4aaa-a844-7cc2b243f890"
        },
        "item": {
          "id": "f70d0a9d-640b-4eb0-a0b9-792ca8ec53e9",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a98646b1-aa33-43cd-8fad-15e5fd842704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c945820-6e0a-48c9-98e6-0fe027d584b2",
        "cursor": {
          "ref": "5c0a1d36-1950-4533-ad01-acf07cedc68d",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "36939e2c-3478-46e9-80fa-bf57f1c536e5"
        },
        "item": {
          "id": "6c945820-6e0a-48c9-98e6-0fe027d584b2",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "55b35252-9346-44a3-a055-727ec34e8192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5afd0a3-91f8-4412-b04c-ce73066491af",
        "cursor": {
          "ref": "9f203f25-86b3-44c9-bf4a-b9925726f215",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "bfde80f3-6825-4bdf-80cd-f3c14655db53"
        },
        "item": {
          "id": "b5afd0a3-91f8-4412-b04c-ce73066491af",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "5926e338-ed1c-4ab3-accd-29f6587e40b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e72fa6-eb1f-4137-bff7-47657bbac5f8",
        "cursor": {
          "ref": "adc8673e-09b7-4890-9878-46b7c378398c",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2210810b-946c-4847-9de2-1cc1358cbecc"
        },
        "item": {
          "id": "66e72fa6-eb1f-4137-bff7-47657bbac5f8",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "5f0fb0a6-4db6-4aca-a988-0da9b4b5f109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b796846-350e-43a5-a91a-6206ed600882",
        "cursor": {
          "ref": "e47ac68c-8b7f-46e0-a35d-5b3fc95992a0",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "1674b4c7-25a9-4309-a607-9826a67d5637"
        },
        "item": {
          "id": "0b796846-350e-43a5-a91a-6206ed600882",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "713f808c-5624-4449-abad-5050a8e557d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d764f7-9c3f-4f06-a0c9-e490e2c806a2",
        "cursor": {
          "ref": "a11c7426-6788-4a37-940a-285c485d8fb7",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "dd78f46e-7cd8-4dc8-ad5c-cc3c4ab3ca80"
        },
        "item": {
          "id": "42d764f7-9c3f-4f06-a0c9-e490e2c806a2",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "8aa615dd-16d7-42b2-8e5a-20d64903b644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53dd2428-4542-4712-a748-deed0965f5f8",
        "cursor": {
          "ref": "473f4f78-d1a9-4c20-bab7-5d101801131f",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6a059b4c-3450-40b4-b3c5-27ff8462e254"
        },
        "item": {
          "id": "53dd2428-4542-4712-a748-deed0965f5f8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "466fec19-f23f-4d6a-88f4-2e6fc494ee67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08050038-1aa6-4c61-8828-ad3480ca3866",
        "cursor": {
          "ref": "f204a81f-f0b1-410c-b490-343089093f70",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4a8e071f-cb0b-4b91-a269-60897d83a7f2"
        },
        "item": {
          "id": "08050038-1aa6-4c61-8828-ad3480ca3866",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "cac14d19-245b-4dfe-a070-1394dd5e8e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "170f2fd7-bf7f-42cc-aa4d-522f33e69084",
        "cursor": {
          "ref": "3bbc4bd2-b2e4-49ef-81d1-9d08ac21eda7",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "414c03b7-b9bb-4edb-a7f0-a590bed80c3e"
        },
        "item": {
          "id": "170f2fd7-bf7f-42cc-aa4d-522f33e69084",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "62c9b2ca-6b16-4446-bd9c-5b0c202fc73c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4900f6eb-e489-4357-aa99-0d0f1b484d58",
        "cursor": {
          "ref": "00bb9cbc-44ee-49ad-a1a9-f7f436841c4a",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ec9e03ab-c3c4-402b-be65-406794346abc"
        },
        "item": {
          "id": "4900f6eb-e489-4357-aa99-0d0f1b484d58",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7345bb2a-ded7-4b1d-8177-954abd6b04bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f0efef-38d1-47f1-821e-c369e3d956dd",
        "cursor": {
          "ref": "1dd8db53-aa89-4caa-b9b0-e112355f0ba5",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "bfd1e98e-8a79-415f-9c10-ac1df5a7c74d"
        },
        "item": {
          "id": "33f0efef-38d1-47f1-821e-c369e3d956dd",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9059f98f-23f7-4142-9b62-10f37e66229b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "047983cb-7b2f-48e7-b4e0-7e7df506e4b3",
        "cursor": {
          "ref": "484b8a2f-4b7b-4e4d-8ba2-ed866a140a07",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c4b24e49-a3af-4dee-8c25-f8ec954567fc"
        },
        "item": {
          "id": "047983cb-7b2f-48e7-b4e0-7e7df506e4b3",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "4accd565-502f-4a2f-b365-39a07d66aa37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab8a434-b67c-44c5-91d7-e198de4a565d",
        "cursor": {
          "ref": "2a82b7bf-068c-41b5-bf76-8090669f788f",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f95d700d-f6cd-4c37-b03c-7632a6594284"
        },
        "item": {
          "id": "1ab8a434-b67c-44c5-91d7-e198de4a565d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a77b0d2b-0774-4ac9-8da2-d6bc7630e2f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a44c45e4-7ccb-417c-b192-6a89b2faab02",
        "cursor": {
          "ref": "a56f0db4-7185-420e-a149-26aca3b2dc48",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "bbc2de9f-4839-4027-ae12-01569ac7473d"
        },
        "item": {
          "id": "a44c45e4-7ccb-417c-b192-6a89b2faab02",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "7e346998-f3a2-4766-966c-5246f7124848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ab4257-2657-4e0d-8975-761dcf5147a3",
        "cursor": {
          "ref": "16825d74-0d36-49b6-b93a-36c2d698b1da",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "87014ee0-79ae-402c-9934-a8c5bb85fd6c"
        },
        "item": {
          "id": "60ab4257-2657-4e0d-8975-761dcf5147a3",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "609c344c-9a98-4610-960e-61425455d7d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc19a76e-b471-4c1e-87d5-c56f6b972ae6",
        "cursor": {
          "ref": "e51f3ec8-d76f-468f-ae24-5dea8a42ddbc",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "6d950a4b-160b-4e62-950e-3eb644420abe"
        },
        "item": {
          "id": "dc19a76e-b471-4c1e-87d5-c56f6b972ae6",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "261a0bf0-4275-4120-9e45-945e31731d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "975bce55-263d-4957-a2f1-466b33376573",
        "cursor": {
          "ref": "2303593f-62b7-44fa-9e15-5569e8582738",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ae4f4023-8fdb-4a9e-8d5e-df1499296d1d"
        },
        "item": {
          "id": "975bce55-263d-4957-a2f1-466b33376573",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "17a8ae1f-6b14-424a-b6c1-802e5f811f60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d70312-e6c5-4263-bca3-c52b1e0c277c",
        "cursor": {
          "ref": "3bc787b9-857f-4df2-b585-4627b0087f62",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2a4bf18a-a4c6-4334-8b95-6fe73f8dad89"
        },
        "item": {
          "id": "a3d70312-e6c5-4263-bca3-c52b1e0c277c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2faf8b8d-9a88-4fb2-9adf-9a8171e94ebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f615036f-1581-4ba4-9663-9e85a4e298a3",
        "cursor": {
          "ref": "1e6c134d-5615-4f7d-b189-1db7e66516ab",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "48389080-682e-40d6-a2c9-b391ce742023"
        },
        "item": {
          "id": "f615036f-1581-4ba4-9663-9e85a4e298a3",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "7bc33209-7b96-46f7-b9a2-6ebfef544319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1efbe87f-5230-4379-998d-b8f53c8790b3",
        "cursor": {
          "ref": "e1ec03cd-b9a3-4dc3-9926-fa61c9f9a5c4",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "96766527-47b1-4c7e-954f-7595c47ecc48"
        },
        "item": {
          "id": "1efbe87f-5230-4379-998d-b8f53c8790b3",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "85517892-633b-4dbf-af5c-0662a5bb6c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37115e33-e6a9-4b24-8294-c63f6dad7bd5",
        "cursor": {
          "ref": "00babab5-5538-4f66-b34a-61a49ea0e1a4",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "424b779a-3790-4fdf-ad54-8ca5226d61d4"
        },
        "item": {
          "id": "37115e33-e6a9-4b24-8294-c63f6dad7bd5",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "4a7f3aa8-c001-48d2-bfed-9ebe09fcf44c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "437cc446-b762-4ef8-af19-83f52cdeda47",
        "cursor": {
          "ref": "003422e2-7f8d-4658-9d83-77e2626001ae",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5b6b3606-3a8b-439d-9ec4-ac3d4adca291"
        },
        "item": {
          "id": "437cc446-b762-4ef8-af19-83f52cdeda47",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ebebadfd-f6a5-4487-8ef6-b0c8179394e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7783c16-1bf6-47f0-8acf-143d746d63f7",
        "cursor": {
          "ref": "0512e255-ae41-4dda-909c-154ca781540d",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "51f9cec0-ad9d-414c-b960-3b1806ea6c58"
        },
        "item": {
          "id": "f7783c16-1bf6-47f0-8acf-143d746d63f7",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ec3f1f21-6df2-4edd-be3b-8cab6a7d4613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "822088fe-1c9c-453b-af1c-6f4fef8034b6",
        "cursor": {
          "ref": "82287b88-0c77-40ac-b664-b30a9b826421",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7e02cac0-73fc-4a73-9500-a1f8ef3aab5a"
        },
        "item": {
          "id": "822088fe-1c9c-453b-af1c-6f4fef8034b6",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1bffe15a-8d95-479e-850c-ec108236fd42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9490edc-5fbc-4acc-8a76-05fab8e01365",
        "cursor": {
          "ref": "c0e90378-fc91-46b3-9805-15ac0c0d3f0f",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "398e26f2-8537-4dea-994e-26d5c23c652b"
        },
        "item": {
          "id": "c9490edc-5fbc-4acc-8a76-05fab8e01365",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d4228996-291a-4595-b175-c552e1caee10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba55b070-19b8-4c1a-b24b-be16f79a4cbf",
        "cursor": {
          "ref": "fdb0eeac-6c71-43fa-a8b7-dbfeeda1094b",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "6574ae45-1c05-49a8-8d41-ffafac229333"
        },
        "item": {
          "id": "ba55b070-19b8-4c1a-b24b-be16f79a4cbf",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "94c169fe-d5b2-48f2-bd1f-457a06540ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50264c6c-f665-4c49-ba66-de9f36a1e6cd",
        "cursor": {
          "ref": "f9c3305d-f152-495c-b707-326e79580fa5",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "531196ab-a841-47e5-b808-60334f66af2e"
        },
        "item": {
          "id": "50264c6c-f665-4c49-ba66-de9f36a1e6cd",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c106345f-8a79-486a-b951-3844fb0e35fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a43eaf3-5462-4303-8994-56eca3ae8cf6",
        "cursor": {
          "ref": "88d554a9-a225-4a36-b8af-6056fda9ee89",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "10229806-f96f-4bdc-85b3-18db351460da"
        },
        "item": {
          "id": "0a43eaf3-5462-4303-8994-56eca3ae8cf6",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c7c67881-61a7-419e-b2c7-8c49022fafa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 786,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e93c24-62de-428b-8e93-34cdc8cfa50e",
        "cursor": {
          "ref": "a6788f1a-8e31-45bf-a584-4321d9bc59b3",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c952ea83-b532-49ab-9564-1eee3e7457ce"
        },
        "item": {
          "id": "26e93c24-62de-428b-8e93-34cdc8cfa50e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b0fc5c41-c5b6-4767-a88b-80cd37b73902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe89a26-cba8-4d52-88da-7623828306ec",
        "cursor": {
          "ref": "55f7f41c-5868-46d8-a9bb-a0129bfbb53b",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "bac99447-c48f-4331-bcd8-8c3a97322cd1"
        },
        "item": {
          "id": "4fe89a26-cba8-4d52-88da-7623828306ec",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d73caf4d-1c36-4563-90b3-666afb88034f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d0fc794-aef1-4346-b7c0-d846b34542d5",
        "cursor": {
          "ref": "9b0d9309-d8d3-4a8a-ba06-f8489d5df1f5",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3f6c2b8f-c805-44bc-9d3f-b203a2976823"
        },
        "item": {
          "id": "6d0fc794-aef1-4346-b7c0-d846b34542d5",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a1502d4a-3e37-42d4-aadc-7b4ca905688a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "593ec211-724a-4fd3-930e-6a3681c09fee",
        "cursor": {
          "ref": "a5c98c9b-db2b-47b1-afe6-5cd15fe0798e",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "9254249c-3b2d-485d-b952-06be917b99a0"
        },
        "item": {
          "id": "593ec211-724a-4fd3-930e-6a3681c09fee",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "9b0596da-5a3c-4f2a-8b6d-a5f1f113f058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "655a4c39-a3b0-4d44-b87f-711a278f28fd",
        "cursor": {
          "ref": "ba59939e-ba9b-4878-9f1b-0dbd7dfb05ad",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c33649ef-c4f7-4a0e-a91e-128d221c12ca"
        },
        "item": {
          "id": "655a4c39-a3b0-4d44-b87f-711a278f28fd",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8e0ba8ba-be2b-4211-ae2f-87a7de5e83d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f932c103-9f6b-418a-8418-34d180fdffee",
        "cursor": {
          "ref": "aaf7a1f6-1c46-43d1-a573-75ee416ed18e",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "28a4a2ad-d7c5-493e-8581-d1dadaa02d96"
        },
        "item": {
          "id": "f932c103-9f6b-418a-8418-34d180fdffee",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6e80b1cb-29f5-4833-bd4b-4023a9e16c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb12d89-ab35-4e72-bb25-3ca63e258bc2",
        "cursor": {
          "ref": "944be660-8eb4-424f-90d1-03c41d795df1",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "b2c5e5cb-efd7-4c0f-a5cc-64b40c7a1a00"
        },
        "item": {
          "id": "2fb12d89-ab35-4e72-bb25-3ca63e258bc2",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "757064b1-f839-4232-9c46-f5cb3df50ec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d79d2c-261f-4264-bb7c-083b79ed422a",
        "cursor": {
          "ref": "ad141f76-7cff-4d8a-9248-2974731c181c",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "fc580bb7-a817-481e-9242-7d5314679329"
        },
        "item": {
          "id": "a1d79d2c-261f-4264-bb7c-083b79ed422a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "bae30dbc-ade4-4f8b-80da-2653511348f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "808c0776-055f-44ee-aeac-9fee6f0570b5",
        "cursor": {
          "ref": "c6c65087-ab36-4dfb-a21e-b7e220125a97",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e986d235-bb46-40b2-a038-1736176ce042"
        },
        "item": {
          "id": "808c0776-055f-44ee-aeac-9fee6f0570b5",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "631adf98-1930-4281-ad10-cd3c0d63acd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2da39b7-3aba-4590-b2ee-a4253047541d",
        "cursor": {
          "ref": "fa995b41-e201-4baf-875c-860d363680df",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "93dfe8c4-692b-4cae-964b-c5233cca4a84"
        },
        "item": {
          "id": "b2da39b7-3aba-4590-b2ee-a4253047541d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "12e6c8a5-dd42-4e5d-98d7-f35f1f617580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d77a11-7d47-429b-b764-1a1a220e1a7f",
        "cursor": {
          "ref": "b67d55ef-0785-42db-b853-74c2756384c8",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "fe5f67f9-ccd0-4637-905c-7883d7394df8"
        },
        "item": {
          "id": "44d77a11-7d47-429b-b764-1a1a220e1a7f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "4a63bb83-c3b8-4af2-ad28-8c4a0c896029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e78ce1-204f-49bb-abd4-a89e0aead1d8",
        "cursor": {
          "ref": "3367ecc9-1c3c-4336-88a7-a5372281a2cb",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b379dc6c-e130-4dca-84b0-7ef026011ce4"
        },
        "item": {
          "id": "86e78ce1-204f-49bb-abd4-a89e0aead1d8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "cede34f5-eb3c-4b2d-ba44-15ef67a85bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac66bdb-6c8b-4967-9bf6-19049e5fa63d",
        "cursor": {
          "ref": "fba4af89-e442-4b00-8e94-027b4cb26206",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "08ecd235-a8b8-4935-85fb-2f89bb60eda1"
        },
        "item": {
          "id": "1ac66bdb-6c8b-4967-9bf6-19049e5fa63d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "afe82e49-4246-4b0b-b2c5-239174ce2a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e1d106-5de8-4228-85c9-8b6157d129b6",
        "cursor": {
          "ref": "5e030a71-63e1-4e2d-98e0-75b8c7fa9172",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "31428a1e-a3ab-4e54-96b8-0dfa54a8560c"
        },
        "item": {
          "id": "d9e1d106-5de8-4228-85c9-8b6157d129b6",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "05adb7fa-5f5f-493d-9326-99c3f3d13a8a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88ecc74-f640-4e4f-8515-c99334555bbc",
        "cursor": {
          "ref": "3a7a7fc6-d7d2-46f5-9cf2-1128ada1a7f5",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "3c31dce7-7629-4d1e-a321-359539ecb799"
        },
        "item": {
          "id": "b88ecc74-f640-4e4f-8515-c99334555bbc",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "512d48d8-5691-469f-af09-002908730dde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "f8f03feb-9232-49a6-ae54-6f9a4b35e41a",
        "cursor": {
          "ref": "50a45e60-a6d5-4a65-a3b1-6c98ece34993",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "2d51a588-634c-45f8-9da1-d913bb35037a"
        },
        "item": {
          "id": "f8f03feb-9232-49a6-ae54-6f9a4b35e41a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "cacde1ec-17e0-4178-bd84-058d9d0eb1ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "62ceb754-111e-41d7-b58b-ca67637cb101",
        "cursor": {
          "ref": "b483f67d-569e-4bad-859b-40e05ce887e1",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1da7dc48-7159-40cd-8029-48d334b8e5d9"
        },
        "item": {
          "id": "62ceb754-111e-41d7-b58b-ca67637cb101",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "8ceb3def-bffe-4df4-93b4-e83c89f3dca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "0e26ba2c-d1f9-470b-a6e5-2028fbc8d8cb",
        "cursor": {
          "ref": "27d4f694-7f70-4fae-a7f9-fe5cacd7fa9c",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "159911f3-5106-4051-af50-bef3b2b84ed6"
        },
        "item": {
          "id": "0e26ba2c-d1f9-470b-a6e5-2028fbc8d8cb",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "596f2041-7e56-4e28-bcfc-63afc520c1d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "b04d3364-c389-4cbc-a292-192f90a588fa",
        "cursor": {
          "ref": "1a74112c-1550-4abc-b733-e3484715a565",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "bba11028-9a20-4a70-90dd-29c6071ffa8b"
        },
        "item": {
          "id": "b04d3364-c389-4cbc-a292-192f90a588fa",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "84831291-a718-4e97-9822-fd8c6fd98b98",
          "status": "Created",
          "code": 201,
          "responseTime": 7339,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fab49df-617e-47f2-8117-5a9c55db070a",
        "cursor": {
          "ref": "fc315c74-823a-47ca-bb15-62a526722d82",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "caba2a60-5e66-4ce0-a1a4-880afc45f448"
        },
        "item": {
          "id": "8fab49df-617e-47f2-8117-5a9c55db070a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "65a5f625-da14-4e6f-a837-d47e41db284e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "ceefce7a-35ae-49b9-ad31-aea8f86446c8",
        "cursor": {
          "ref": "90c88dfd-25af-43a6-9480-80eeb685e603",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "2a6f33e0-9f40-43ea-b19a-0f821042eb63"
        },
        "item": {
          "id": "ceefce7a-35ae-49b9-ad31-aea8f86446c8",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "9efe79c4-9506-45dd-b747-84731baf53e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "d44f80c3-7b0f-44a8-b2a8-e7c3e427f014",
        "cursor": {
          "ref": "38535498-6b64-45a8-b202-c06d759d8b72",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a12f171f-c531-43fc-99a0-36eaa9ac72d1"
        },
        "item": {
          "id": "d44f80c3-7b0f-44a8-b2a8-e7c3e427f014",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b15783d9-1dab-47a0-98a1-220a165cf950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db6bd07-87a7-4573-88fa-d46f0f121153",
        "cursor": {
          "ref": "16b819b9-8255-4cbe-8c11-875c20610390",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9de2fdee-d69c-4b36-97d4-bdb33765f7b3"
        },
        "item": {
          "id": "6db6bd07-87a7-4573-88fa-d46f0f121153",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "49dcd715-c4cd-49e5-a6f0-a0c337559453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362a3e87-1c1b-43d8-a2b2-25960544d4f6",
        "cursor": {
          "ref": "ec047502-8556-4b3d-a676-1165dddaf626",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "7ec3df45-3c92-463a-a33b-d8c58cdf7735"
        },
        "item": {
          "id": "362a3e87-1c1b-43d8-a2b2-25960544d4f6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "09a64f41-8bb2-4d96-ac3a-5d9a1c68b536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c14c8d-a30e-458c-b86a-fe7013d6393f",
        "cursor": {
          "ref": "0223c24f-ee87-4e51-a1a4-3d78ea7b38b2",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "8db0f8b6-5664-455b-b64b-1fcab9b42005"
        },
        "item": {
          "id": "a9c14c8d-a30e-458c-b86a-fe7013d6393f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e5fe7aa1-b753-4e8e-bc86-538767effb38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b8154b-47ef-4354-8217-5382e25c1353",
        "cursor": {
          "ref": "def8cae1-a117-4e61-9538-588f9f62759b",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "6c7e6ab6-d48f-4502-b876-d11cb7136e15"
        },
        "item": {
          "id": "65b8154b-47ef-4354-8217-5382e25c1353",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2b30f330-7114-496d-bc8e-418950f3ecb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6399c91-f654-4d26-8117-401d88a5bc9f",
        "cursor": {
          "ref": "208269c6-f1b4-4dbe-87f4-41679d2090e9",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0bf96688-512c-4f26-864d-4cb9e954422b"
        },
        "item": {
          "id": "d6399c91-f654-4d26-8117-401d88a5bc9f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8cc0fb8f-70f0-438d-8432-86cb97ecf3fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e3491e-fb3c-4679-accb-c35997963f9b",
        "cursor": {
          "ref": "a3eb4665-b202-43b9-8b52-3b08c73b80a4",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "835905d7-7cdc-4bfa-94ff-065ff9c90511"
        },
        "item": {
          "id": "30e3491e-fb3c-4679-accb-c35997963f9b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "42d07d76-bb12-4a0b-b8e4-7d7c33c55076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152a400d-e882-43f2-8313-24f2e15713e2",
        "cursor": {
          "ref": "bebd5790-be86-4468-acde-aaa12efeaa21",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "223cdb00-e493-4d62-a59f-92d3c57b09bf"
        },
        "item": {
          "id": "152a400d-e882-43f2-8313-24f2e15713e2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "09193f30-937e-49f4-ba8a-cab6408d5772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8acae69e-1eb7-476b-b1be-021b954c6ab3",
        "cursor": {
          "ref": "84ea1b88-bfb3-40e4-a01d-76b7cb7507e6",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c4859b74-2f70-4a7f-a1a4-5073a1bdbbcb"
        },
        "item": {
          "id": "8acae69e-1eb7-476b-b1be-021b954c6ab3",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a537f255-4a2d-48a6-95ea-cffe33d0f013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9246be4-d1ef-4584-b327-2e3082ed5752",
        "cursor": {
          "ref": "b24328db-5b70-4082-964f-c84d7c433b69",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "4c9e5062-24fc-4a52-a8ab-fa547c120bb3"
        },
        "item": {
          "id": "a9246be4-d1ef-4584-b327-2e3082ed5752",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "52de5b95-8e33-4643-b2d4-9cc4b2fc01c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c444f0a-8b4f-485b-ac8d-5228afa75d1d",
        "cursor": {
          "ref": "3b808c69-8b70-4f96-8313-0ff55ab75ec2",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "50224926-7864-45f6-ba57-e8d79206d01c"
        },
        "item": {
          "id": "3c444f0a-8b4f-485b-ac8d-5228afa75d1d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f5e83001-426d-4661-82b9-b2d493dc8bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3220b569-5c6c-417d-b833-89e028151ae4",
        "cursor": {
          "ref": "dee367d7-5605-4931-8120-2d35f96250e3",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "8b8656f6-4002-4a2a-980e-c8cf30b33925"
        },
        "item": {
          "id": "3220b569-5c6c-417d-b833-89e028151ae4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f4fe62c4-684a-4366-9c08-6f931ee43df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 167,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11af6a79-b4ba-4e80-8bfa-0bbf4522ea1a",
        "cursor": {
          "ref": "47b1389e-989f-416c-92f4-f63044f08b5f",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "76cb03c1-820f-4e6d-abbc-29d4279965b5"
        },
        "item": {
          "id": "11af6a79-b4ba-4e80-8bfa-0bbf4522ea1a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d9304abe-aff9-4126-b783-92a5b1a34d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c31594-7669-46d4-8dc2-891b8b5b4ef0",
        "cursor": {
          "ref": "132c1e2c-444c-470a-a083-655de03b613a",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "14e1bd83-d13c-49fa-8f7a-fc3fe5e33fbb"
        },
        "item": {
          "id": "13c31594-7669-46d4-8dc2-891b8b5b4ef0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4b628b2a-55ad-4a52-a474-4544d4137710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ead28a-3365-453a-ace1-cc4a23816f72",
        "cursor": {
          "ref": "04c466df-c4ae-4d0c-959b-091e0a5959ad",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "2ac27f29-73d7-412d-8baf-b47b1ecf338f"
        },
        "item": {
          "id": "14ead28a-3365-453a-ace1-cc4a23816f72",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "dc98cfae-a583-4950-b320-c48e90f1c64e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51481e18-8f24-4d2d-87b7-98dd593a736a",
        "cursor": {
          "ref": "49ba4594-24be-4d9d-87d7-d37e3182893a",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2c266486-150c-4615-b755-a26176a37d9c"
        },
        "item": {
          "id": "51481e18-8f24-4d2d-87b7-98dd593a736a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "08d9282e-4fa4-4f2d-a68d-341ffa203f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2491c64c-7a88-42c0-9bab-fa0ed9285c5e",
        "cursor": {
          "ref": "4bcb96f8-cd98-4492-a88f-915f47e0699e",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b81326c4-ec9f-44ae-be8c-7dd7f848111e"
        },
        "item": {
          "id": "2491c64c-7a88-42c0-9bab-fa0ed9285c5e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "20c76586-fa8f-468a-ad55-ec9237d494fc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 17,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "3596908b-a6ae-4263-a44e-ff38025fe5ea",
        "cursor": {
          "ref": "0735f72d-e46d-4c87-b1a5-dd9a012cf66f",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6a7b03f7-c3d9-4950-85d9-049be9d506d9"
        },
        "item": {
          "id": "3596908b-a6ae-4263-a44e-ff38025fe5ea",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6fc9210d-d108-4f01-bcd4-70e9bae158bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b80de1f-6eec-4ae9-8b9b-584b24cfe362",
        "cursor": {
          "ref": "ce637179-5fdc-4612-a294-d8cceeeb8c63",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "4339d5ba-a174-4d81-90ca-f9b61a7984fe"
        },
        "item": {
          "id": "3b80de1f-6eec-4ae9-8b9b-584b24cfe362",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "85e54859-4d47-4aca-b305-76b1ed35b594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031ab40d-74d6-47cb-9286-7d6c6edd9be3",
        "cursor": {
          "ref": "c31859b4-9646-4405-ad9d-2678300951e1",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e587c443-e398-4e82-a97b-2befc8daaf99"
        },
        "item": {
          "id": "031ab40d-74d6-47cb-9286-7d6c6edd9be3",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6ce38ac2-9ada-4533-bdd9-3e4a164e3866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8489690a-e620-4f88-b94a-0c0d7f0ae205",
        "cursor": {
          "ref": "d231b5ed-640e-4554-84ca-0e313ae31e5a",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "53a67c21-48e2-4234-8449-3560cf7a5728"
        },
        "item": {
          "id": "8489690a-e620-4f88-b94a-0c0d7f0ae205",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6ed09207-7043-4e33-a8e3-d02047b919c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af3e8702-5866-4835-896d-4b62ddd18d31",
        "cursor": {
          "ref": "2887e6d4-6635-4436-80cc-155ea03e45b0",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8a33e366-b7b7-4851-bba7-a6b9d8415f9d"
        },
        "item": {
          "id": "af3e8702-5866-4835-896d-4b62ddd18d31",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "52608d4d-e83d-4d91-bbb1-e9a12745365f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f4c4b4-03c1-4ede-a1db-f3358ae495ad",
        "cursor": {
          "ref": "e1639390-ac5c-47c3-9e87-797d8eff4e59",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f4c24863-8169-4db8-be56-3b2cef420beb"
        },
        "item": {
          "id": "a0f4c4b4-03c1-4ede-a1db-f3358ae495ad",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "31e30b43-d474-440f-b9a1-050e58ce724c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "114d2f1c-43e2-4928-8c48-dbe2e6728cc2",
        "cursor": {
          "ref": "5d95cc99-1891-46e0-a422-cc3970d3fa44",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "cef831d8-5be3-4a7a-8503-2612407339fb"
        },
        "item": {
          "id": "114d2f1c-43e2-4928-8c48-dbe2e6728cc2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b87af83a-6b8b-4bdd-be75-f29c40d62eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f1b6df9-6149-4c20-ad13-2ad09b5f882e",
        "cursor": {
          "ref": "ac1f099a-e96b-41e9-8559-06d0a0c8da51",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "3a62fcfd-8a0f-4e4d-aeb7-4988135d1a48"
        },
        "item": {
          "id": "2f1b6df9-6149-4c20-ad13-2ad09b5f882e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4296a219-b394-408c-baf3-2aa5702599d1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "a84e53bf-899e-4132-b8f3-49570b90b04d",
        "cursor": {
          "ref": "1cec23e8-e44e-473f-bb06-7cfa4e328dff",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5e6a34c4-0145-4a15-97b2-c9e80fecfa6b"
        },
        "item": {
          "id": "a84e53bf-899e-4132-b8f3-49570b90b04d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "75d543c5-6be6-4fdc-a345-4fc84fbef468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a07c4365-2a5f-490a-a2fd-006073bc1788",
        "cursor": {
          "ref": "ee27152c-b222-4a4e-bb54-c8de335003c5",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2ade5a87-3d7c-43cf-9c04-75c7e4153bc6"
        },
        "item": {
          "id": "a07c4365-2a5f-490a-a2fd-006073bc1788",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "25e15afd-bcf5-419f-ac36-2f143a7e2567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e27dc97-b9d4-4a95-9f68-1a660866e54f",
        "cursor": {
          "ref": "2dd38ef4-c880-4f2c-ae35-657e97c18c6c",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "40ad0ec2-66e4-43e3-ac84-f0d95e6e4597"
        },
        "item": {
          "id": "1e27dc97-b9d4-4a95-9f68-1a660866e54f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7b347257-ebac-4394-bd8f-4c6b76a03180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cdfa433-1ab7-4c4d-8fbd-d94cefc2abf2",
        "cursor": {
          "ref": "6511a2a0-8b14-4bf1-bc84-d72ce513b317",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "06a11241-0a91-4a14-be52-bfee009b5f0b"
        },
        "item": {
          "id": "4cdfa433-1ab7-4c4d-8fbd-d94cefc2abf2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d52a6b53-d0eb-4ba0-802c-a08bbe79ea84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc05090-a7a8-4f64-ba04-8f3c35e4d7a7",
        "cursor": {
          "ref": "9257d01a-d635-4de2-8100-a54eb62df6a2",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "de7a6fe0-b7eb-49bd-acee-82e77231c6c3"
        },
        "item": {
          "id": "efc05090-a7a8-4f64-ba04-8f3c35e4d7a7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "cb3b65c6-31b9-4cc9-b674-a00786160ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1111f9-6af1-4eba-b75e-e5887924a14a",
        "cursor": {
          "ref": "85c49252-9502-492c-8485-082a957f4c1c",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1a53d2cd-1227-47c0-9bd1-abe04f69dab8"
        },
        "item": {
          "id": "1a1111f9-6af1-4eba-b75e-e5887924a14a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b897931c-928b-4581-8b48-f83811c96c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e00a8a-01b1-4f73-ab46-21aa1db03e18",
        "cursor": {
          "ref": "0b5a35ca-720b-4c18-b71c-b03f18d54904",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "dd3ffa90-f72a-4601-ba24-0d5f46797cc9"
        },
        "item": {
          "id": "02e00a8a-01b1-4f73-ab46-21aa1db03e18",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "74a341c9-0a8c-4b3a-9fc0-11ae5cc2672c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 61,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "f4e10377-d36f-44c0-b09c-23a5733757ff",
        "cursor": {
          "ref": "60963737-c5c6-494a-8c65-1bb91625335c",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "5a83a130-1455-45be-b642-b529a7409d73"
        },
        "item": {
          "id": "f4e10377-d36f-44c0-b09c-23a5733757ff",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2670eb9c-786b-400b-9c66-4123cabcd1c5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa5c7d37-dc0d-446b-b2ee-e78575994048",
        "cursor": {
          "ref": "09b3fb84-3750-4225-b743-5791e827aa2b",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f2a471f1-5c15-4813-a4e6-5471a3fa71c1"
        },
        "item": {
          "id": "fa5c7d37-dc0d-446b-b2ee-e78575994048",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9209f636-ce49-4f0f-b989-571a16d37478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 170,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efdf8a8c-3da3-40fc-bc41-d7572eeffe9c",
        "cursor": {
          "ref": "1a90c3db-f449-4633-92c5-316ebac9aa95",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "4ad078fb-2cbb-4a6e-ad77-050e10a9d6f5"
        },
        "item": {
          "id": "efdf8a8c-3da3-40fc-bc41-d7572eeffe9c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1fe90e5c-89f6-4247-9363-30b0924f5a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efacec36-9419-46c9-a47b-fb4ddf8c4610",
        "cursor": {
          "ref": "04a02cbe-d10b-43ab-ba75-04d045427efd",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3b6044c0-b927-44f8-b50c-fc698e9dfd3f"
        },
        "item": {
          "id": "efacec36-9419-46c9-a47b-fb4ddf8c4610",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7dccf293-1d07-4bfb-a6d9-5f33e8939cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f32fcb3f-4f9e-4338-b289-67342416fd78",
        "cursor": {
          "ref": "eefa85c8-df5e-4a36-931d-3ff20196b18a",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "69119f1e-68c5-4df1-baa2-bc98cbb071f2"
        },
        "item": {
          "id": "f32fcb3f-4f9e-4338-b289-67342416fd78",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4d9d05ee-6662-4ddf-a681-3460bf3b78c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "991e2935-3ade-4731-b8d2-a6ee8b643d03",
        "cursor": {
          "ref": "dd9ce10c-3032-412d-b37f-ff3a957be0ef",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "937570c4-fa65-48e0-9053-bfd3b2c78179"
        },
        "item": {
          "id": "991e2935-3ade-4731-b8d2-a6ee8b643d03",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c6c72418-7afa-422c-ad46-85e2669e6ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f91ddb2-3900-41dc-b264-968ed4ca18b3",
        "cursor": {
          "ref": "0e56eb5d-1c07-4096-84e0-4f2ae695660c",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "56665835-abf6-483a-a1c1-241497046a16"
        },
        "item": {
          "id": "4f91ddb2-3900-41dc-b264-968ed4ca18b3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "775cc5e5-08e4-47be-bd25-052387068f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "380ef4e0-d2b2-4655-b190-9e81aaabac5e",
        "cursor": {
          "ref": "6044eb1e-60e9-4d3b-a241-5f92709fad93",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "afe512a5-742f-4479-8eae-705892ed2233"
        },
        "item": {
          "id": "380ef4e0-d2b2-4655-b190-9e81aaabac5e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a315fb15-0d0e-4aab-99c7-3cf89fec1971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a0d3c4-4058-411b-a9e1-683961a53282",
        "cursor": {
          "ref": "7e6f1bc4-17b0-4111-8afa-9d57547a3198",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "2fde8b5b-1dd2-40aa-9641-5d75d49483ec"
        },
        "item": {
          "id": "76a0d3c4-4058-411b-a9e1-683961a53282",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "26c810f4-559d-46fe-ae6c-87d0ff202b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa2b670-2010-41f5-85ef-401679c5cb50",
        "cursor": {
          "ref": "3f368693-b1de-4db3-9609-e2b5c517daf3",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "092afed1-c110-4ae9-85f3-6556cc095d3c"
        },
        "item": {
          "id": "7aa2b670-2010-41f5-85ef-401679c5cb50",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9f04ace4-b5a2-4296-b3c1-70cbf610284d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f2c827-d288-479b-bc58-1d7b3cb451d9",
        "cursor": {
          "ref": "fc6e1ef0-0ab4-4521-a48a-3c885f9dfd82",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "8ee5a251-2bb1-4a0a-b726-87572d340b70"
        },
        "item": {
          "id": "d7f2c827-d288-479b-bc58-1d7b3cb451d9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "391cc09e-583e-44e0-a671-9148df43cde7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "852b9a30-f9b7-4472-ac0d-79a39130cb6a",
        "cursor": {
          "ref": "3ef124b5-165e-4576-90ea-ceb030480ee5",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "be213c69-bfac-4bd9-9d0d-87635801dd5f"
        },
        "item": {
          "id": "852b9a30-f9b7-4472-ac0d-79a39130cb6a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "cb7eb91a-b4fb-46a3-a17f-9b2a6def4626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5eab761-7e9f-4e4b-94d4-c2540f3a2520",
        "cursor": {
          "ref": "fef51a39-85ba-481e-997c-037a9604e14d",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7337dc88-1902-404a-b8d6-d65295ddc2eb"
        },
        "item": {
          "id": "f5eab761-7e9f-4e4b-94d4-c2540f3a2520",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "05d7b27f-1bec-439d-9e5f-ecd90f94e618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8e91b6-633b-40ca-8bbb-941cd646d00b",
        "cursor": {
          "ref": "f98f50a8-b2bf-45c9-8771-cc51d7bae9c5",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "22886a01-34fb-4e7c-a04d-a14c33dc05e3"
        },
        "item": {
          "id": "2d8e91b6-633b-40ca-8bbb-941cd646d00b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "cd0a82f4-76fc-41a0-971a-d3ad79ffce01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b126ef-31cb-49b0-ab18-cc29ecc92fbf",
        "cursor": {
          "ref": "e6f85ff6-875e-43ed-9926-adeff8ddd233",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "fabf695b-dfd9-4271-bb81-0cdfd1f67803"
        },
        "item": {
          "id": "41b126ef-31cb-49b0-ab18-cc29ecc92fbf",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e9ba6e04-6aeb-4f1f-be83-d009b8121519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8ff702-7245-4413-afba-29051e9fad90",
        "cursor": {
          "ref": "223ba609-8e6e-459b-9900-f7c94d025c01",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e798798a-f4dc-4600-aff6-15c56065117c"
        },
        "item": {
          "id": "eb8ff702-7245-4413-afba-29051e9fad90",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6ec00521-136c-4ff8-85ae-0824c42e91b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f5bee3-f4f8-40a2-b784-aea072dd0d9c",
        "cursor": {
          "ref": "14c630ca-88d8-4dbd-bb65-cf122f5a4d15",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "eee175c0-1c23-4378-95c9-7e62f7107745"
        },
        "item": {
          "id": "92f5bee3-f4f8-40a2-b784-aea072dd0d9c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "22117f02-ac3d-4fd9-8de5-14679ce86ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37552223-9e76-49c5-bb3f-22a8ec1a1276",
        "cursor": {
          "ref": "2a0ea8af-127b-4b1c-9be3-e6a627d8e2aa",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "4b4b3283-7906-4b33-a31d-99c5cbeabc38"
        },
        "item": {
          "id": "37552223-9e76-49c5-bb3f-22a8ec1a1276",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "80c953a0-fbb2-43d6-b13f-de750b4b8cf7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 13,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "133b0784-9727-432d-b989-2da6876c1298",
        "cursor": {
          "ref": "d0c029bf-b965-45fc-b578-9fb7943feff5",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "6bb8bcbe-e650-47c9-8cc8-795da50c5e51"
        },
        "item": {
          "id": "133b0784-9727-432d-b989-2da6876c1298",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ec5ddb1b-f8ba-4909-af3a-19ecd79eed47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48083f3b-8469-4190-af94-a24ca68629e1",
        "cursor": {
          "ref": "531e3b5a-b15d-4633-9b87-00b8c8f45c9c",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "387634f5-564b-44ac-8658-636c9c20b172"
        },
        "item": {
          "id": "48083f3b-8469-4190-af94-a24ca68629e1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9c4ba9b8-80f0-4d06-8b03-1b423485df35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cdb2b3b-8262-44ea-9376-ce675558e140",
        "cursor": {
          "ref": "9bec957c-fc33-4b45-951f-644ef0902a0b",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "eccbac6b-5448-41c1-8e4e-587d812f417c"
        },
        "item": {
          "id": "2cdb2b3b-8262-44ea-9376-ce675558e140",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e8d2b7f3-d6bf-4777-ba09-8ad26013975c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef7f89e4-0649-49c1-8490-0976a665ef87",
        "cursor": {
          "ref": "d45ac2b3-8fe5-4eeb-8379-dd656de55503",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "3692ab0f-88bf-45ce-a29b-f9f79c00fdd7"
        },
        "item": {
          "id": "ef7f89e4-0649-49c1-8490-0976a665ef87",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2a3ac6a5-2731-499c-ac5b-df7375f14286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91e87b7-b74d-41fc-87e2-f20d39891963",
        "cursor": {
          "ref": "1ccedd84-197e-4d0d-8175-043761eb2500",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "95ca8ae8-2dfa-4596-adbf-9e3e91fe4999"
        },
        "item": {
          "id": "a91e87b7-b74d-41fc-87e2-f20d39891963",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "59ef0c4b-15e7-45c6-8b1b-c3e01f330433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb08cb07-788e-4a7d-b772-eb9152243ca2",
        "cursor": {
          "ref": "b83f49b3-7c11-45be-ba9c-07876f5ebdb7",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "0f8c6862-c214-4303-b634-1dc70a66df24"
        },
        "item": {
          "id": "cb08cb07-788e-4a7d-b772-eb9152243ca2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2262c2c5-8634-468b-b317-03c148b444bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd567343-102c-44ee-a736-539816e5dd3d",
        "cursor": {
          "ref": "c1fea6ad-fe66-4b1e-a7bf-338e1639a8be",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "075f4851-6fae-4a59-b2d7-d365512a9524"
        },
        "item": {
          "id": "bd567343-102c-44ee-a736-539816e5dd3d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6f2216d9-f330-4982-9352-b14bae57a236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc622a4-7b0a-49a9-b795-f6dec9959603",
        "cursor": {
          "ref": "95f10722-8c0c-4733-b9b2-da88940e645d",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d71c7dbf-502d-45f3-afef-4aecee9840a5"
        },
        "item": {
          "id": "8bc622a4-7b0a-49a9-b795-f6dec9959603",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "edda8857-5a9a-4083-8e2c-1291d0f3eb55",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 14,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "11ac511a-de0b-45b2-b8f8-c8c44d958ee1",
        "cursor": {
          "ref": "49724809-467d-48f5-b3c0-465403a93fa0",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d71d95e2-3881-4f8d-98b1-414be68528fa"
        },
        "item": {
          "id": "11ac511a-de0b-45b2-b8f8-c8c44d958ee1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "25a9c5c8-59fb-442b-a8e7-6fa50ea4cd88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "135ff786-fed9-414d-a9d4-1330153de75f",
        "cursor": {
          "ref": "f316639e-dabc-4254-b685-9154e1540e1e",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "3b2be43b-356c-4620-9453-de3401ead18e"
        },
        "item": {
          "id": "135ff786-fed9-414d-a9d4-1330153de75f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d538119a-bfb9-45cd-be45-1737fd58d6ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee65398-98f8-442a-941d-b3e1c87f4d55",
        "cursor": {
          "ref": "42bc71ac-c532-4511-a10f-c720c4b97c8f",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9be99ea6-c9db-4e55-814b-18b5a4bf1708"
        },
        "item": {
          "id": "1ee65398-98f8-442a-941d-b3e1c87f4d55",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "11d6fa58-9abb-429f-840f-8f2f179700e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348c7b7b-22bd-4017-9f07-a38d30555aef",
        "cursor": {
          "ref": "661ecd56-e378-42f7-9c13-4658a988c458",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a0fa1b8f-d431-4001-9c5e-baef96dcde71"
        },
        "item": {
          "id": "348c7b7b-22bd-4017-9f07-a38d30555aef",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "296e2f30-fc2e-4e53-8311-f396d0707475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd84d79-57be-40e9-b27f-9d68d7ba0be1",
        "cursor": {
          "ref": "adfbd745-5276-4f36-979a-07b3622184c7",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "efba4c3e-43db-4fcf-9a5f-068b2730a118"
        },
        "item": {
          "id": "acd84d79-57be-40e9-b27f-9d68d7ba0be1",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "033235ef-3649-4395-a020-26133e2df589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4fd6d7e-53c5-4fa5-8cfb-000a84dbc79e",
        "cursor": {
          "ref": "5912d7aa-7deb-4c6c-ac97-36f6b4185562",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "85bf6045-1e87-4617-aaa2-19191096f98e"
        },
        "item": {
          "id": "c4fd6d7e-53c5-4fa5-8cfb-000a84dbc79e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e85d94ce-0f86-4b20-8ff8-13a352cd8e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7374d2f7-e53c-41cf-8097-d37628112192",
        "cursor": {
          "ref": "6181ee9c-bee4-4b7a-a1c1-cb9c755e898e",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "996a58e5-884b-41c7-a169-d0b7bf006b9d"
        },
        "item": {
          "id": "7374d2f7-e53c-41cf-8097-d37628112192",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "16066c56-fec7-45ac-93ce-1c1eecc60747",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 16,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "a0e8821b-a2a2-4beb-8c6f-d9ab249afce5",
        "cursor": {
          "ref": "6a1b94ea-314c-472e-a74d-ab1fe57aaf54",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "afa56209-bef0-4330-921b-420b997647a7"
        },
        "item": {
          "id": "a0e8821b-a2a2-4beb-8c6f-d9ab249afce5",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "54e20feb-43ea-4ebf-8cfa-34bf2d28af47",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 13,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "c20f9bd4-6149-4c03-a5f8-61ec06f6282b",
        "cursor": {
          "ref": "42ad96c1-74f3-4ac2-becb-ce532664a550",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "dfb424d5-3e1d-468b-a073-400b5eefd5e4"
        },
        "item": {
          "id": "c20f9bd4-6149-4c03-a5f8-61ec06f6282b",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "be786dc1-0058-4b69-9af7-31cc066e4dc2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 13,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "d79728fd-a422-421f-99e6-9d7611f3d982",
        "cursor": {
          "ref": "4e5ae463-2615-4700-a457-c887a8c6bf76",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "62ff9a79-9d27-4379-849a-dc8e2eaf83bd"
        },
        "item": {
          "id": "d79728fd-a422-421f-99e6-9d7611f3d982",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c7a56915-ca20-4904-8931-68290c4293e6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 15,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "43b93422-f133-4d51-adb1-aea7b033cb31",
        "cursor": {
          "ref": "b5ec8939-6337-4492-9330-947722e61aa4",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "89513d2d-2944-4517-8b35-e691f00a5201"
        },
        "item": {
          "id": "43b93422-f133-4d51-adb1-aea7b033cb31",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0c3554d4-c43c-4829-8c35-d8a0643b0f16",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 19,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "0805a40e-8982-423c-b7f6-815a320dd3f2",
        "cursor": {
          "ref": "3897001f-1db1-4957-928c-bb7aebfee450",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "fd96d250-0fad-4586-8929-a44c769cb212"
        },
        "item": {
          "id": "0805a40e-8982-423c-b7f6-815a320dd3f2",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "23b12308-4ece-40a4-a2fb-c41779982d91",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 21,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "df1fc140-a0b7-4558-a409-ed2fe0f1b649",
        "cursor": {
          "ref": "429020cf-6300-4338-8dd6-777f7c1d9cbb",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "27c6aab9-1407-4b5c-bed9-720cb6977d11"
        },
        "item": {
          "id": "df1fc140-a0b7-4558-a409-ed2fe0f1b649",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3350b1e7-d125-48f4-a233-954557a6197c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e617c7-40c6-4ff9-9deb-064dfb9ea3d1",
        "cursor": {
          "ref": "3013f35b-44f5-4833-be79-c695bc1282ba",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b76df480-e4b1-4ebb-bb1f-5df19ec4c6bf"
        },
        "item": {
          "id": "41e617c7-40c6-4ff9-9deb-064dfb9ea3d1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "930fb134-076f-4194-a617-c3631fe00981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7408288-9888-4f7b-b232-34518ad52d17",
        "cursor": {
          "ref": "e41636e1-c459-4371-8f58-0da33c884148",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c7e0fa3c-28ed-4caa-9d78-847c36781fdf"
        },
        "item": {
          "id": "f7408288-9888-4f7b-b232-34518ad52d17",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "72f02dbf-c373-4ca7-aaaa-39964251965c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d709e8c9-63b7-467e-b373-f0ce99260bdd",
        "cursor": {
          "ref": "4f3cab1f-4f7a-4069-8e93-5352908f82b2",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e094f9ae-72f7-4385-88ef-f8dc8a3cb1ef"
        },
        "item": {
          "id": "d709e8c9-63b7-467e-b373-f0ce99260bdd",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f769ef01-8696-44d7-96ee-b2ef53f02653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04729a9f-4666-4245-a636-b140e3d3a8ec",
        "cursor": {
          "ref": "3460c9d8-1a96-4398-b461-c5eba6d778c2",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "51675459-d1e0-418d-acef-4c0a17dd690c"
        },
        "item": {
          "id": "04729a9f-4666-4245-a636-b140e3d3a8ec",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "1441a5d5-2f6b-47c6-a86d-f8412814cd77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c866c60c-2776-4047-b1c8-2a2c1b6885e0",
        "cursor": {
          "ref": "cc579627-1689-4c14-baf9-7dec3fd7d6f5",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "9d9c7761-9839-49b8-a78b-154de86fbc28"
        },
        "item": {
          "id": "c866c60c-2776-4047-b1c8-2a2c1b6885e0",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a4516709-7dca-4bba-adb4-c0752d768b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e9cde8-0f3c-42c3-b30b-e84fbd6de2f9",
        "cursor": {
          "ref": "eb524b24-05a4-41f9-9be1-ac8eb069a070",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "98996af1-8ba5-4efd-acad-36afa7a26b9e"
        },
        "item": {
          "id": "67e9cde8-0f3c-42c3-b30b-e84fbd6de2f9",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "4e34dbbb-ce04-496d-95e4-734f12836e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5a4a40-abe1-43f6-9d60-00239bb24b60",
        "cursor": {
          "ref": "9f978d3c-0024-488e-8016-e51d21a3bba2",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "228c0755-34c5-401d-a69d-e1c9687698f2"
        },
        "item": {
          "id": "ea5a4a40-abe1-43f6-9d60-00239bb24b60",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "888d71b5-a878-4e1f-84ff-072156f64fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ecdeec-36d9-486d-8eb1-06f15dda1c08",
        "cursor": {
          "ref": "4a564458-3e44-4885-a264-4ca137625bbb",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "01ffb857-086c-4ac7-98eb-df63b1cddac8"
        },
        "item": {
          "id": "a3ecdeec-36d9-486d-8eb1-06f15dda1c08",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a07806fa-bd3e-477e-94e7-33020a86afe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "720409da-ecca-4e35-a411-50d17557d1bc",
        "cursor": {
          "ref": "9c3cd2b0-89f5-4240-befe-93054b147546",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "0f23fc98-dc02-4f91-94c6-baa398ba17ba"
        },
        "item": {
          "id": "720409da-ecca-4e35-a411-50d17557d1bc",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0390832d-fe78-4fd7-8245-10fc4bbbe806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478b196d-7e2b-4f8d-8218-833e55e762ec",
        "cursor": {
          "ref": "a926edb1-1edf-43cf-8b29-8000856a69bb",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a1840a3f-c624-4c8f-8e4e-1e713c4b4203"
        },
        "item": {
          "id": "478b196d-7e2b-4f8d-8218-833e55e762ec",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "42b8fc2a-06eb-4068-aa17-35bc88ff06d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a39941c2-f68d-4b49-9b7b-58cc5754de3d",
        "cursor": {
          "ref": "2f0fd370-2a6a-470a-afbc-0d25de5a4d06",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0833b140-96b4-4de5-9638-a7a11c24a70c"
        },
        "item": {
          "id": "a39941c2-f68d-4b49-9b7b-58cc5754de3d",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c375430e-034c-4f57-8a59-bd280a1ac173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9048eafd-b925-4eb9-af75-976250d9fe35",
        "cursor": {
          "ref": "e78a85ba-14df-4352-aced-69582570450c",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "998c1792-1a81-4cdf-979b-d2a859fd4238"
        },
        "item": {
          "id": "9048eafd-b925-4eb9-af75-976250d9fe35",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5e78d96f-cf54-421d-b1dd-3d049ed6da72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8146670d-f911-4092-8c94-4c3fa43b672f",
        "cursor": {
          "ref": "6baa11b1-d564-40c4-b73e-f296de91490f",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "f587f416-acb9-4420-a379-15eb4a61a1a4"
        },
        "item": {
          "id": "8146670d-f911-4092-8c94-4c3fa43b672f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "09dd9665-e616-4ff0-a369-ae6b1c41b9a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f169350a-b634-4354-b0c1-de01c054fce7",
        "cursor": {
          "ref": "f2b775f5-30c0-4718-ba02-1210c3504687",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f3e73b97-41e1-4afa-8094-a883f7e1a469"
        },
        "item": {
          "id": "f169350a-b634-4354-b0c1-de01c054fce7",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ac7e3bc4-7437-485a-aac2-53fb89b68272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11dabf4-20e2-47ec-a1e3-2105caae2091",
        "cursor": {
          "ref": "6382aee6-fc21-40ab-9794-095042fbe6c3",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a7ba85cc-5249-4fda-9612-5bc14996f1a2"
        },
        "item": {
          "id": "e11dabf4-20e2-47ec-a1e3-2105caae2091",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a6d4b3c5-bdea-4b69-a534-bbf072e6bb4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03f790b0-fe42-41a7-9f39-d1536e9915cb",
        "cursor": {
          "ref": "6df6a374-c05e-48b8-8227-9e19918f3bf5",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "475823a1-d370-4617-b197-4855ff83439b"
        },
        "item": {
          "id": "03f790b0-fe42-41a7-9f39-d1536e9915cb",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "29a617af-79bd-4478-a421-e3f1f0972935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60d7bac-3845-45a0-854a-899e5cf3a54e",
        "cursor": {
          "ref": "32aafcd2-b46c-4756-97aa-7ffa62305cf7",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f5914e9b-1834-4175-9422-c9353ee2c134"
        },
        "item": {
          "id": "d60d7bac-3845-45a0-854a-899e5cf3a54e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "52b9d364-c75b-432a-8da0-8d1fdb387679",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "f7683f43-467f-4c03-9abd-c6f2576f0661",
        "cursor": {
          "ref": "d9e50503-a2c7-4b11-aded-e8b79dc7efd6",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f463e4d1-3c13-4a81-9734-55fa7c260375"
        },
        "item": {
          "id": "f7683f43-467f-4c03-9abd-c6f2576f0661",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4eebf092-a123-415a-a7b9-1b76255f3337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16379d30-b5d1-4ffe-8119-071fa9d69f73",
        "cursor": {
          "ref": "0e876118-6ad4-4ce7-a5f8-062610623b36",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "2a786104-75bf-4112-be6e-34b303df6c17"
        },
        "item": {
          "id": "16379d30-b5d1-4ffe-8119-071fa9d69f73",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d54593b8-3e64-44eb-9d14-da03ad46e17a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a7fee42-6307-49de-99a1-eddc0c78bbc0",
        "cursor": {
          "ref": "baf8f48f-e42f-47fe-ac85-2c5550c147d9",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "dfcb9004-2447-48d3-b74b-64f574c5e40f"
        },
        "item": {
          "id": "2a7fee42-6307-49de-99a1-eddc0c78bbc0",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "96e91c66-846c-4692-94a0-50a2a7afb174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b62aca0-e198-4b4c-bf05-de95ce4db706",
        "cursor": {
          "ref": "10b7ca68-580b-4428-9a2d-51142b08396b",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "569d4433-84a9-4563-b7bc-46f7b883d39e"
        },
        "item": {
          "id": "4b62aca0-e198-4b4c-bf05-de95ce4db706",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "fb5aefb7-66b9-4b52-8b84-2b2167204eb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7600802-76b1-43b1-8366-b1f2d2bb4761",
        "cursor": {
          "ref": "f278f17a-2b71-4492-84fd-ffadcb7b07d8",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "05534f24-1ac9-4d04-9f1a-385b5577818d"
        },
        "item": {
          "id": "f7600802-76b1-43b1-8366-b1f2d2bb4761",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "cdf6d4d8-436a-40b0-bec3-331cf19cc8b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d9d452-ed47-423a-ae04-5a3d86594aaa",
        "cursor": {
          "ref": "ae6b0f87-3d6a-4bb0-afdd-4fe53429a76a",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f14bd58c-cf82-4b2a-9928-a9514f2bfb52"
        },
        "item": {
          "id": "03d9d452-ed47-423a-ae04-5a3d86594aaa",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ed5221e9-b616-4b80-ac81-d66f8e280eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd9c36a-7683-4e3a-acd1-039870032cc8",
        "cursor": {
          "ref": "11b370c6-dcad-4acd-9a41-6f9aeba8f5c0",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "1021c10c-54cd-400f-a1e1-cfe5334b9d18"
        },
        "item": {
          "id": "0fd9c36a-7683-4e3a-acd1-039870032cc8",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "21448f3c-de3f-4d44-8640-0d3193260335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "336c610f-1427-4f3a-b64f-d6ac586ba1bf",
        "cursor": {
          "ref": "b778d1ee-635b-4877-8533-cf4d4911a97e",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9070b1c4-487a-4373-a860-0034da5c7500"
        },
        "item": {
          "id": "336c610f-1427-4f3a-b64f-d6ac586ba1bf",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "874ff984-837b-4a8b-952b-3c7fe65b0b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a645aa8-936a-41d5-ad7b-daa01a3f8215",
        "cursor": {
          "ref": "ee079f1c-781d-4c77-b0ef-3d4b73d1c930",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f3fe552c-682b-4539-845d-2728015362e9"
        },
        "item": {
          "id": "1a645aa8-936a-41d5-ad7b-daa01a3f8215",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "7bd70888-82f5-4d67-b6e1-e90df40d63ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203db880-4367-4a44-9b71-e0f1eec90a86",
        "cursor": {
          "ref": "61053cef-5fd5-4819-8be1-c44d6b79945f",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0519eccd-2c6a-4e18-94ef-d5c1f74ce682"
        },
        "item": {
          "id": "203db880-4367-4a44-9b71-e0f1eec90a86",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "73de965d-7951-4fa8-adf5-ceb200bb5c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f5775f-1b0c-44c1-8087-fae1847132a1",
        "cursor": {
          "ref": "c66cb70b-dcd2-4359-8f7f-1a95575cfb40",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f1030fa4-e7ba-42aa-b744-612f9d24cac5"
        },
        "item": {
          "id": "f8f5775f-1b0c-44c1-8087-fae1847132a1",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "ace6b800-d923-48a1-a094-3ab9f07ea025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20228014-9485-4c26-8dc0-8aad90d4436f",
        "cursor": {
          "ref": "4f4afa0d-56a1-41dc-a790-dc3868471be2",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "49a9fbe1-ec9f-4772-8d5d-6e2524079e31"
        },
        "item": {
          "id": "20228014-9485-4c26-8dc0-8aad90d4436f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8defa871-2239-425d-89b5-8b710dfe2a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c967ba75-91e5-4f83-81f4-ffdd12b47002",
        "cursor": {
          "ref": "5985b73a-8543-43a7-b99f-94a5e825cbab",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "51202c06-6d67-4ef5-98fb-5ad9d3df069d"
        },
        "item": {
          "id": "c967ba75-91e5-4f83-81f4-ffdd12b47002",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "eb3e0317-2e50-4094-9a86-e6da1c8039b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00f16149-b044-4796-9b2a-ca292e0ec0f8",
        "cursor": {
          "ref": "68a19ec2-be76-4906-8e7b-4ae3615b2773",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e812a429-1c78-4274-88c6-28bc742f194d"
        },
        "item": {
          "id": "00f16149-b044-4796-9b2a-ca292e0ec0f8",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f5d8563e-4276-49d1-b74a-40b7ab5ddddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a282a12-beb2-4d0a-9b3e-452a98b93060",
        "cursor": {
          "ref": "957f20ee-0489-4c47-b47c-02fac2c24130",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ea595039-e7eb-49c8-9d87-873f8c9a8736"
        },
        "item": {
          "id": "8a282a12-beb2-4d0a-9b3e-452a98b93060",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0d636d0f-8a04-4a95-976a-2ec4d8b6291c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2c6c8b-eb13-408a-ab05-0e175a8ceb4b",
        "cursor": {
          "ref": "d63d1c0a-781d-4376-be06-aadf938033de",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "399afb41-0261-4303-995b-0d1fccd38423"
        },
        "item": {
          "id": "3a2c6c8b-eb13-408a-ab05-0e175a8ceb4b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "17623683-5a97-4b68-9840-d51fcfdf2748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80577453-883b-491f-9342-9b68180f8fc1",
        "cursor": {
          "ref": "511bb196-c599-4048-8cd8-e6def51a1ced",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "975b43f0-ba09-404b-8926-013140ba8384"
        },
        "item": {
          "id": "80577453-883b-491f-9342-9b68180f8fc1",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9551e5d0-3be9-451d-b439-4c2258f56c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477070de-6d5f-4e5e-a74f-8ce5c4ab4ff8",
        "cursor": {
          "ref": "9e13f193-bfa2-4409-9342-24a10f7adeb3",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "782594e0-cf00-4900-b2ba-155dc40d8da5"
        },
        "item": {
          "id": "477070de-6d5f-4e5e-a74f-8ce5c4ab4ff8",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "63329275-abe3-4952-9a46-b3d573f550d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9561361d-f953-48ef-93be-2cfe9b10818d",
        "cursor": {
          "ref": "20093105-7d7b-4ccf-9008-e1d9030cc2f2",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0f2ddf0e-5a57-4769-8533-12a1143ed2f3"
        },
        "item": {
          "id": "9561361d-f953-48ef-93be-2cfe9b10818d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "684a6cd1-156e-491b-8aa1-1819a9f93e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f286347-cf7b-4814-99c9-09b2e3daf319",
        "cursor": {
          "ref": "30ae66c6-14c0-4fa5-9fd5-c72e0af1b1f7",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f986bd60-86df-48b6-8536-d17bac0b35a7"
        },
        "item": {
          "id": "0f286347-cf7b-4814-99c9-09b2e3daf319",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f759197e-d981-45e7-a9f1-cb2ccbd25f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc13768-981a-41c5-918b-2db82106cd8a",
        "cursor": {
          "ref": "179955b0-f411-49f1-8c32-c29028e442cc",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a02b7d49-db7c-46ef-b683-d14e6a3a8dc7"
        },
        "item": {
          "id": "cdc13768-981a-41c5-918b-2db82106cd8a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b4daeb58-f643-4bfa-b89f-8e5631f72b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6956e1e-44fe-4201-90ad-eaf097041722",
        "cursor": {
          "ref": "6084b8fc-5e6e-4281-8f9d-8eb7b47f49a6",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "0fb38730-1c43-4f64-baa5-946106bed3fc"
        },
        "item": {
          "id": "b6956e1e-44fe-4201-90ad-eaf097041722",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "db4d2116-3f92-486f-a747-66da03c68fc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a133ed40-d828-45af-817b-bd13ca5b3c51",
        "cursor": {
          "ref": "40816c03-a03c-4788-939b-ba9756112afb",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "68368e82-13c9-4f0c-817f-832e13c89039"
        },
        "item": {
          "id": "a133ed40-d828-45af-817b-bd13ca5b3c51",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4b0d8e0c-2f95-4d98-aa80-d76fdc81d0a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1dc7030-2f40-45a8-8130-d9a0a748aa9a",
        "cursor": {
          "ref": "666b6691-4b00-4212-9823-ebca731e3122",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "88f50609-8ede-4d4c-9b85-131f873cb16b"
        },
        "item": {
          "id": "a1dc7030-2f40-45a8-8130-d9a0a748aa9a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c695d43d-bd2a-4ece-90fa-f935af94d86e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c440659c-8203-4841-be25-4a4e05928f76",
        "cursor": {
          "ref": "4f328c75-30e7-4063-8c4c-7997316b9387",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "1f73538c-1c30-4cad-a3fb-de7a8a07d519"
        },
        "item": {
          "id": "c440659c-8203-4841-be25-4a4e05928f76",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f601a2e3-863f-4dac-9c47-f94c5bea3f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a03f1f-4d13-4a10-b721-28aebfee647b",
        "cursor": {
          "ref": "5ca1dcca-e39a-4c43-b014-ac1a60abda06",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "3a01ac1d-ba23-4d2a-bfc2-b997466b90b9"
        },
        "item": {
          "id": "49a03f1f-4d13-4a10-b721-28aebfee647b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b13164ee-c9c6-4668-bf9a-552bde93ece4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e4b70a7-415f-4611-b0e8-6f0c0fbfd08d",
        "cursor": {
          "ref": "59452bf6-f53d-4fd5-8aa5-f799548c8c06",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "5866fdd5-f7f4-4c4e-ae42-33b40a8cad6c"
        },
        "item": {
          "id": "8e4b70a7-415f-4611-b0e8-6f0c0fbfd08d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a998eb98-339f-4ccf-9775-a549c2057385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea343dd0-d6ec-475a-b88e-c9c86359bade",
        "cursor": {
          "ref": "fb9d30f7-60da-4516-8358-b41189c3fb0c",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "38235d9b-4451-426b-96f8-9bc0003e8f69"
        },
        "item": {
          "id": "ea343dd0-d6ec-475a-b88e-c9c86359bade",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "1849cca6-80d2-4714-b319-7e149ff4d316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4022d92f-f122-4ed3-9a2f-906a321d6bb1",
        "cursor": {
          "ref": "6f875df8-52fb-432e-ac5d-376bba8c1cdb",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "5f04756d-1331-4922-b17b-04d6aeb1e813"
        },
        "item": {
          "id": "4022d92f-f122-4ed3-9a2f-906a321d6bb1",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "4d50d9c3-08cf-4df3-9aa8-66521dbd2966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c34edea0-ec49-43eb-8c84-e864d3ffc048",
        "cursor": {
          "ref": "e355734b-3d25-4aff-b745-3cce15dbeb88",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "3c4ddc00-a248-4185-be4e-69cf62fcb0d6"
        },
        "item": {
          "id": "c34edea0-ec49-43eb-8c84-e864d3ffc048",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "1ce5e128-d222-4b43-954c-f050f0d59dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcdda7cd-1852-44f5-8510-89fc8de548b8",
        "cursor": {
          "ref": "8c38c485-4974-49a6-9bf0-20ec6c6233f2",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "bbebfd24-e478-4b60-881d-1bae19098ca3"
        },
        "item": {
          "id": "dcdda7cd-1852-44f5-8510-89fc8de548b8",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "78a46cf3-3bcf-4f9d-8681-3d2ad973846e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6958018d-20ec-47e7-bded-a1049f5316ae",
        "cursor": {
          "ref": "51459fe2-e7ee-47dd-a875-1511511c9176",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "0b9e14af-6189-4cda-9d4d-d8dde7b06cb6"
        },
        "item": {
          "id": "6958018d-20ec-47e7-bded-a1049f5316ae",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "64a69123-faa9-43fe-bc61-a470e8176cbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b0a7366-7995-4013-b75d-e8a328086c4f",
        "cursor": {
          "ref": "4ba42ba0-e2b3-4c0c-9378-80c656029901",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "715e8886-e671-47cf-bb8e-92b48ed05f14"
        },
        "item": {
          "id": "0b0a7366-7995-4013-b75d-e8a328086c4f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b2e84fd7-ed1f-4ed2-852e-c258ddcc2f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed13545-cdb7-4f11-bc4c-0e9428d27883",
        "cursor": {
          "ref": "7d4429a6-c930-480f-84ce-3795cb21c4f0",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b5d03634-8023-4e0c-a111-9dc7c13ee392"
        },
        "item": {
          "id": "5ed13545-cdb7-4f11-bc4c-0e9428d27883",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "71470322-9131-48f9-9f02-2abaa4546dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3952da96-0247-48a0-91a6-fdc9aa7094f0",
        "cursor": {
          "ref": "aea78099-ef1c-40c9-ad26-24911c8ed2b7",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "74a5c888-dc2e-475f-b6ef-c8e4a9d1524a"
        },
        "item": {
          "id": "3952da96-0247-48a0-91a6-fdc9aa7094f0",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "05599f8d-a2f1-45c4-8615-9d03d0b442c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7aa5598-17f7-4a86-910f-658f38fdab42",
        "cursor": {
          "ref": "e77d29af-9853-4f5d-993f-56ff66f323c9",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "88988bef-0236-4437-a75d-6f32d4032a30"
        },
        "item": {
          "id": "e7aa5598-17f7-4a86-910f-658f38fdab42",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f692e308-0827-4cc2-adee-e27119b126cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b5cde3-51fb-4f54-881e-301ec3813da3",
        "cursor": {
          "ref": "c5e506e3-84ce-4c41-bd5b-c5250cd651c9",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f152057c-7f33-459c-8796-db507eb74171"
        },
        "item": {
          "id": "52b5cde3-51fb-4f54-881e-301ec3813da3",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "28e01a1c-e948-4c6b-8b17-e406981892f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed119fa-2852-47de-859b-8df37436fa80",
        "cursor": {
          "ref": "bd7125f7-1d52-4737-8888-6d8f2dd0c243",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "9f64ae43-69c7-473a-a8c0-d154d746e27b"
        },
        "item": {
          "id": "bed119fa-2852-47de-859b-8df37436fa80",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f75321de-795c-4fba-9d35-8bf7baadef65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d9a1606-5300-47f5-b196-0608173348f2",
        "cursor": {
          "ref": "ffd1ecc5-2e81-485f-ac82-ef68f2c60d4c",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "4b0f4448-2149-4894-ab52-ee10f1b781ee"
        },
        "item": {
          "id": "6d9a1606-5300-47f5-b196-0608173348f2",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "78018d5c-b6aa-4271-a290-6976fd544ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c81a61-2708-47cb-88c4-7bf828d05fff",
        "cursor": {
          "ref": "ead363ee-eb43-4833-81bf-f1b949d8107b",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "7a0b1e20-e614-40cf-a5fd-f40cfa33f78a"
        },
        "item": {
          "id": "11c81a61-2708-47cb-88c4-7bf828d05fff",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c32e5b8a-adbe-438a-8083-31f463a4ae93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d03a4a-e43b-4d63-9f3a-5fecce5a88e7",
        "cursor": {
          "ref": "6db1a8d0-358f-4340-bb88-f05f66e48f3b",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b730aa17-e416-4a62-974b-95ad2a5967f5"
        },
        "item": {
          "id": "99d03a4a-e43b-4d63-9f3a-5fecce5a88e7",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "1517b202-7726-4176-af82-877ac8de0906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f5924b-9e77-4b54-a78b-00f44def27b1",
        "cursor": {
          "ref": "60d40c30-4724-429c-bdb7-930b8b701d41",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "57ccb27c-617f-4e47-bd22-dddedbe8d9be"
        },
        "item": {
          "id": "39f5924b-9e77-4b54-a78b-00f44def27b1",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "e031d73a-06d8-45c8-80f1-49bb42a8fd4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e237ca-f2d1-4820-864e-2b66aa0e1e05",
        "cursor": {
          "ref": "ccf0e5d8-5f8f-4c71-b214-82a8e7ebb38a",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "550f2a4e-9009-4735-a309-a486a9b4fb1a"
        },
        "item": {
          "id": "b3e237ca-f2d1-4820-864e-2b66aa0e1e05",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "dfba79a2-a7d8-4670-a94e-6f1ca71fd7ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb410c4-4c1b-4a55-90bd-9555e67a393d",
        "cursor": {
          "ref": "206fbfa4-dd4f-4dd3-a658-39fce5ab9b6c",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e417e8c3-3c4b-4f88-b2d3-f75e8867aea3"
        },
        "item": {
          "id": "9bb410c4-4c1b-4a55-90bd-9555e67a393d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8bbe9438-7790-4502-b82e-85e5d853b8d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "097c6afe-2611-4316-abeb-05a0f0fef18f",
        "cursor": {
          "ref": "e2a193b0-7e46-4059-b23b-55af73f51412",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ddc84765-fc52-4d64-8283-b9f2fdc37180"
        },
        "item": {
          "id": "097c6afe-2611-4316-abeb-05a0f0fef18f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "85c2e821-3de1-4f87-a420-c0b890e150f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2c57f7-38ad-4f10-9012-4e81a2440095",
        "cursor": {
          "ref": "28dd25a6-3c98-4a36-acb5-cd67b41fd20d",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "4c69440e-ed27-4767-b0a2-d43d9c6daacb"
        },
        "item": {
          "id": "1a2c57f7-38ad-4f10-9012-4e81a2440095",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "53f3b4d3-be23-498f-a93a-3a29f4e684f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e559bb-eef3-47fd-83c1-05ed31dad947",
        "cursor": {
          "ref": "4720c216-38df-49c1-8c05-763bd2164036",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c49ecdf6-fa27-4028-91ca-de5c2b16a190"
        },
        "item": {
          "id": "12e559bb-eef3-47fd-83c1-05ed31dad947",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "fcbd4509-ded0-4321-9c2b-50359b2074b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a774c3-d954-4194-b2bf-2eec60e78536",
        "cursor": {
          "ref": "2f18b9c4-29c0-4ba4-98c2-062cede9257a",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d2e83218-af44-4375-9563-823f08af79da"
        },
        "item": {
          "id": "f2a774c3-d954-4194-b2bf-2eec60e78536",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ac1335c5-7d3d-4b75-8f3a-00d7275b23a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ac2c6b-be64-4fa2-a29c-57d3baaf1ad9",
        "cursor": {
          "ref": "8ec781e6-f8c7-4211-8c11-7d982a96858b",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "48b9f11e-0dfb-4b52-85bf-afc48e8fba8f"
        },
        "item": {
          "id": "66ac2c6b-be64-4fa2-a29c-57d3baaf1ad9",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e7d53768-120b-4196-9d90-20ba42c33e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "493fd051-6987-4ecb-ae9e-c34a736be628",
        "cursor": {
          "ref": "91c76320-b854-4ea3-b31e-d19b1abb5bb0",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "31920b71-4c9b-42a6-a932-27c00ddc85c0"
        },
        "item": {
          "id": "493fd051-6987-4ecb-ae9e-c34a736be628",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e2795e49-5da0-412b-8630-7e970aa42e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea0782be-ea7b-4efa-82f8-d7edd804aaf5",
        "cursor": {
          "ref": "93d6a7aa-3165-4bd2-a5b8-214b8757828e",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "78a10578-fc63-4726-bfad-ce2e05eb98b1"
        },
        "item": {
          "id": "ea0782be-ea7b-4efa-82f8-d7edd804aaf5",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ad58aa15-bb38-4c55-9543-20bd72612d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bcbda67-42b7-4016-9895-8d4e7422c0e0",
        "cursor": {
          "ref": "78c91056-0807-496b-8bd2-768fc88632d5",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "522ecd6e-e933-4b1d-bf36-dc7ce082f7a4"
        },
        "item": {
          "id": "4bcbda67-42b7-4016-9895-8d4e7422c0e0",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "504a8d36-0c95-45ae-99e5-de7c234aa952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f2dce1d-ee99-49b4-854f-80b6c9621cd3",
        "cursor": {
          "ref": "964ae0e5-ba71-45aa-973a-5e996115ebf0",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "28c441b9-bcc6-4262-a153-0d6a758d7229"
        },
        "item": {
          "id": "5f2dce1d-ee99-49b4-854f-80b6c9621cd3",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ea7c48a6-9925-4b51-b6b0-c28461ec023e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e718080-363a-4640-aaab-225bf92a0fb5",
        "cursor": {
          "ref": "206e7a02-518a-48f5-9d02-1dd14453f3bb",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4dadd8a8-7123-4ff7-8989-351f4e330473"
        },
        "item": {
          "id": "5e718080-363a-4640-aaab-225bf92a0fb5",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "96153319-b1eb-4858-a828-3f3041d17658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6312b77-b5cd-4bc0-8c48-efd3672b1cd4",
        "cursor": {
          "ref": "310b64ff-5b73-4563-a826-24fc083c4071",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "62492b42-4e4b-4458-8f9d-7f594952ed1e"
        },
        "item": {
          "id": "d6312b77-b5cd-4bc0-8c48-efd3672b1cd4",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "23027093-7f66-4ccf-b538-e96558866651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ec651b-cc01-4c97-957c-154d97fb0876",
        "cursor": {
          "ref": "6ca98bc5-b527-42f8-8b5b-8cbf93c896bd",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "39e94cbe-07f1-4730-9ead-11908eb38e02"
        },
        "item": {
          "id": "a5ec651b-cc01-4c97-957c-154d97fb0876",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "badfe0d1-b0cf-4fcf-8c16-609384e0e469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f306898-3fa1-48c3-ae21-0b620f535f6f",
        "cursor": {
          "ref": "dd715527-dcca-4746-bff1-7a081d5add5a",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "a17781f0-e3ee-40cc-ab03-d79e7cde1cad"
        },
        "item": {
          "id": "2f306898-3fa1-48c3-ae21-0b620f535f6f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ee09efba-ce3c-4629-bf0a-22a03e5b4e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22cb6d63-7515-4296-88f2-c5d48b8a3583",
        "cursor": {
          "ref": "58bc3b6e-fd7c-4eb6-8ad7-f24e0484e398",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "4a9b7f54-8376-4363-84e1-5391a2fa3f1e"
        },
        "item": {
          "id": "22cb6d63-7515-4296-88f2-c5d48b8a3583",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "feb7aaa6-ce6b-4c08-a31f-f7c537eef02b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b5751f-cc5c-41d2-a74b-1dc3b0ece289",
        "cursor": {
          "ref": "6edb89a4-baae-46bc-8ff5-7f7b0512a590",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "1acbd186-11fa-4501-8262-782e0c4d6e7e"
        },
        "item": {
          "id": "19b5751f-cc5c-41d2-a74b-1dc3b0ece289",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "05c6bbf8-b00e-46bd-ae0e-14273a54be59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784cacfa-1115-4bac-9b0a-7b5d5557918e",
        "cursor": {
          "ref": "df8e5629-1cc1-4817-ac16-ab4dcf955eda",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "85e9f6bc-3077-41cf-9891-9477243460bd"
        },
        "item": {
          "id": "784cacfa-1115-4bac-9b0a-7b5d5557918e",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f098397e-6839-47e2-982d-b75fcdc77362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb56342-16d3-47e3-8737-4b71d67cc0bb",
        "cursor": {
          "ref": "6c4f6d7d-d87e-40d7-b793-d6aca028d146",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "8c762997-3743-4dc7-9442-eb3375a293af"
        },
        "item": {
          "id": "cbb56342-16d3-47e3-8737-4b71d67cc0bb",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "1a6ce255-5bb2-49ce-a085-f3d2377948dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf671bc2-eef0-4a6b-9e78-261a4814a1be",
        "cursor": {
          "ref": "ece9d352-3710-45d5-ad2a-8be5a1859ec7",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "3ed9bf4e-680e-4db3-a4ef-45f0f848cb47"
        },
        "item": {
          "id": "bf671bc2-eef0-4a6b-9e78-261a4814a1be",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e50eb6c4-57d5-46e6-8957-6b82a07ce458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40eff7b5-1647-43e5-872b-1f60f3c9d730",
        "cursor": {
          "ref": "711c99e1-4df9-4e2d-a1a0-5408e35502d5",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "2ab60ed5-6a90-4060-8e1a-2c645622dc0c"
        },
        "item": {
          "id": "40eff7b5-1647-43e5-872b-1f60f3c9d730",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "134a2c31-5fb7-40bb-b9c9-4c1b685d43ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3b8f43-6724-4245-a2b4-1b5f54f86c04",
        "cursor": {
          "ref": "95923b4f-6feb-4fdc-ab61-331d41a9cdcb",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "5b795ba7-d83c-4bd1-a176-6fd0f347e2d7"
        },
        "item": {
          "id": "2a3b8f43-6724-4245-a2b4-1b5f54f86c04",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "0ea43849-59e8-4b94-b59d-3b97610d4f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17972ef1-d923-4dc6-8cd6-6a9047f4db83",
        "cursor": {
          "ref": "3526a7f5-f4ce-4e41-9d0b-2051794f21b4",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "db8716cb-5e4e-4843-a1db-2755545d9ba1"
        },
        "item": {
          "id": "17972ef1-d923-4dc6-8cd6-6a9047f4db83",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "83db7ac9-463b-42bd-bda0-d658b72efa94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9842de58-f860-4e4d-9a03-47b68710e225",
        "cursor": {
          "ref": "6da10699-1913-47aa-8fa9-f3980889cd1e",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "497fa39d-2e21-4154-85ca-0d5571ae77e0"
        },
        "item": {
          "id": "9842de58-f860-4e4d-9a03-47b68710e225",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "84ade0f4-2cf6-48e6-b511-6e3acc784a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d7a7b1-16f4-486a-8929-c7067e8ac72d",
        "cursor": {
          "ref": "d550438b-de5f-4714-a405-e43b6968029a",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "6d01997b-dcf6-454b-93d9-66cbc2e1ce70"
        },
        "item": {
          "id": "84d7a7b1-16f4-486a-8929-c7067e8ac72d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "1b27b077-503a-45c7-bec0-85f684559b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98726824-f2a7-49c6-a3b5-07d1860ad1a7",
        "cursor": {
          "ref": "e99f4a5a-da09-49b5-b825-6992140de60d",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "df9cc171-7fd3-4ace-8698-dde199e44e9a"
        },
        "item": {
          "id": "98726824-f2a7-49c6-a3b5-07d1860ad1a7",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4bb15519-a442-462b-b711-992737229674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d34c29c-b0d3-41d0-bc9e-507a5bbe6aec",
        "cursor": {
          "ref": "e05d2f2a-eb15-4859-b0ea-875e8fcd0506",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "a5d89dce-163b-415f-903e-cc4382ef3baf"
        },
        "item": {
          "id": "3d34c29c-b0d3-41d0-bc9e-507a5bbe6aec",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "52132780-3d9f-4f3c-a84e-07dc2e45c3a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b400d08-b1b4-4d9a-8b8a-7e531eee446f",
        "cursor": {
          "ref": "dc7d208c-a265-4d4e-8747-b186b2a86848",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "6ef9df93-8ff4-4e2b-95f3-6ae9e568fa86"
        },
        "item": {
          "id": "7b400d08-b1b4-4d9a-8b8a-7e531eee446f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "62232457-f951-4d65-8dc5-ffc68b0bca58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6009e246-3fb1-4063-8ba3-016368d4289e",
        "cursor": {
          "ref": "f4b5a34e-d26f-4c97-8730-3fe450d50ccb",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "54e9c92a-45a5-4a65-ab4e-6ff1bd405d35"
        },
        "item": {
          "id": "6009e246-3fb1-4063-8ba3-016368d4289e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c91ce8cf-0f46-4ea8-8866-8ea9f420f01e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1b1d62-9c1c-4446-a18a-d9163fbf308d",
        "cursor": {
          "ref": "82029ebc-871b-4162-8397-885a5b9593b1",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "5493ccab-3fd8-493e-a942-40ab11eab3ca"
        },
        "item": {
          "id": "cf1b1d62-9c1c-4446-a18a-d9163fbf308d",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1a3785c1-ee9e-4213-9627-430d1f222507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7246b3b6-3cef-47ef-8eec-49c84d381819",
        "cursor": {
          "ref": "ea08510c-8af9-4598-9812-0593ecbdd47b",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "168b2337-8c8e-4e67-82c1-557be6a999e0"
        },
        "item": {
          "id": "7246b3b6-3cef-47ef-8eec-49c84d381819",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "472128fe-aec0-43c5-b5f0-1789295a4bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f63d67f1-f090-46ad-90e5-3f85e62a5b81",
        "cursor": {
          "ref": "7672f6cf-ff61-403b-a533-a5c66e1f6bd7",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "1ba71d36-44da-4a3e-b95f-081ec694a4bd"
        },
        "item": {
          "id": "f63d67f1-f090-46ad-90e5-3f85e62a5b81",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "78abff9e-455e-48eb-9390-5bf60d6d147f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33eca42e-d17b-4da6-9cd0-4e82a5ae474b",
        "cursor": {
          "ref": "a1151472-12c0-4d54-930d-0150af4e4408",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "3b01fe13-0443-4ecb-bc18-f9c1b58e19ef"
        },
        "item": {
          "id": "33eca42e-d17b-4da6-9cd0-4e82a5ae474b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d0f2b8fe-84b6-40c7-8039-9f8e78b87abc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff7ed97-57eb-476b-aa30-a6194b799db2",
        "cursor": {
          "ref": "ed1f565d-7f05-4d21-9ced-8d86b4a4d04e",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "ab046de2-5db4-4f65-ba67-30732a4e92b0"
        },
        "item": {
          "id": "cff7ed97-57eb-476b-aa30-a6194b799db2",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0bb083e6-d22a-46c6-a42f-53627b3ed044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26fe8d0a-04ad-43bc-9b6d-5ad1677c35b6",
        "cursor": {
          "ref": "8c0946b1-f69f-443e-a4d3-7a5923c37ee4",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "ee0cb16b-1253-4900-a583-78d7406773d0"
        },
        "item": {
          "id": "26fe8d0a-04ad-43bc-9b6d-5ad1677c35b6",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e87413fd-422e-4a56-ac67-ff253a714341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660ae3a6-9b7f-41ad-be2d-761f4cfbeb24",
        "cursor": {
          "ref": "c67e7f59-3142-4b1f-ba26-e736481adc70",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "1aac4ccd-4d2c-4fad-b602-0f54f0830a36"
        },
        "item": {
          "id": "660ae3a6-9b7f-41ad-be2d-761f4cfbeb24",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "29bcf8a1-04bc-4635-9c4b-203db818ba1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd5d2a3-4310-4f50-87f1-bbf8525d20b1",
        "cursor": {
          "ref": "0134ea82-6f00-4f3d-8b10-be073fbc19da",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "018ca413-985e-407e-9cc9-3ceead2bcaad"
        },
        "item": {
          "id": "3dd5d2a3-4310-4f50-87f1-bbf8525d20b1",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "23c0d154-4469-4c26-b93d-0f73a8218d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b075215-3d01-4e10-9965-03beb8e6805f",
        "cursor": {
          "ref": "44a4b8d2-a79d-403e-abd6-fd1fe62ecd99",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "66ad0b07-5b15-4a73-9368-03f165157f01"
        },
        "item": {
          "id": "8b075215-3d01-4e10-9965-03beb8e6805f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f61dfc86-3689-489f-81bd-38edc626e007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93703be3-6a80-4d59-9911-bc8995de21f2",
        "cursor": {
          "ref": "61826145-f153-4232-993a-5943c2de892e",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "acee69b0-9404-4142-8f68-bbea41a01912"
        },
        "item": {
          "id": "93703be3-6a80-4d59-9911-bc8995de21f2",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "831578b5-618e-47f8-aeca-86668520271e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "436f4c95-1a8a-4e41-9710-50f1946f0c0f",
        "cursor": {
          "ref": "8b230e0d-6511-484e-9f6d-54a6e3fed94c",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "a67af8d6-8292-4c85-97bc-2bac77ba1076"
        },
        "item": {
          "id": "436f4c95-1a8a-4e41-9710-50f1946f0c0f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "eb5f2916-d74e-4fb0-8a91-c80de59b57ce",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "343167c2-3b08-419a-a753-b1baf1ce86a5",
        "cursor": {
          "ref": "b6e38c6f-6497-4ee8-b44f-48789ec4c46e",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "eb55efd4-f4d3-4f19-8e4b-e60ec56171dc"
        },
        "item": {
          "id": "343167c2-3b08-419a-a753-b1baf1ce86a5",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c621e25f-22a6-40d6-89bc-208a79c7d6c4",
          "status": "OK",
          "code": 200,
          "responseTime": 2411,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1dd45d7-0dca-4ccf-9efe-7d0fcc3147d7",
        "cursor": {
          "ref": "aa9f437b-8623-4d7e-9f66-5664310261d1",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "54705b55-09fb-4dbf-a05c-0190ac2d9334"
        },
        "item": {
          "id": "f1dd45d7-0dca-4ccf-9efe-7d0fcc3147d7",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "2260c74c-c7bf-4423-aa39-816c35d5c253",
          "status": "OK",
          "code": 200,
          "responseTime": 3179,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c5955a0-886f-487f-8ccc-2ebf7da3deb4",
        "cursor": {
          "ref": "3493a940-1b42-419f-9aa8-8fbface879a4",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "7059ffea-6a4c-43e1-a07a-3a86d6e21df4"
        },
        "item": {
          "id": "5c5955a0-886f-487f-8ccc-2ebf7da3deb4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "161290cf-5c83-48e7-a970-8862ea2b0e86",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c5955a0-886f-487f-8ccc-2ebf7da3deb4",
        "cursor": {
          "ref": "3493a940-1b42-419f-9aa8-8fbface879a4",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "7059ffea-6a4c-43e1-a07a-3a86d6e21df4"
        },
        "item": {
          "id": "5c5955a0-886f-487f-8ccc-2ebf7da3deb4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "161290cf-5c83-48e7-a970-8862ea2b0e86",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d192b52b-97fb-427f-bca4-756c2463c2c7",
        "cursor": {
          "ref": "57d2e2ad-8699-42f3-9e41-5146afb7b097",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "0c479694-3720-4376-9915-95f74d874e45"
        },
        "item": {
          "id": "d192b52b-97fb-427f-bca4-756c2463c2c7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "33e387c4-66ab-4aa2-a26c-e2f7a82e24da",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77421d4b-f1cc-457f-b5df-06774b206621",
        "cursor": {
          "ref": "5f9f07f1-3dba-424e-9dff-a1c49c16ecf8",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "37c54cf6-940b-47a0-b070-22cf4290726e"
        },
        "item": {
          "id": "77421d4b-f1cc-457f-b5df-06774b206621",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c9f3ade6-4002-49ee-82d2-c783b4150289",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}