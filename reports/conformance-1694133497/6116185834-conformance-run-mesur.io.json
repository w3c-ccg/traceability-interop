{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2b3ccb97-0303-4127-a5b3-7be1bec69b47",
        "name": "Clear Cache",
        "item": [
          {
            "id": "96a6ae48-4549-42c5-93db-5db28e01464d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "971a99a2-aa74-455c-9ded-5cf9cdef24b6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fe978c04-83c5-4a6c-b068-5b833f9faa74"
                }
              }
            ]
          },
          {
            "id": "cdb4c058-7dad-4fee-ab29-7ecaba2872b6",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "437b0296-1769-47f7-9e2c-5b56188f5d09",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "73c1fc2c-5786-40f8-8c38-776f7f53e2f4"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "eaff5943-7118-4aa6-a641-e79644733179",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "7dd81472-e214-4237-b753-59f372fe79b5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1283603f-f696-42d7-bc5a-9ec383cf38d9",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7f99eea-ccab-4217-b6dd-4637cf43d01f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5afebb8c-54ff-492a-8428-2f8f22a7b13b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f8273e83-5f61-4cae-bb1d-bb93a7181da1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7459d7f9-f3de-4d6a-9ca1-106072ba7ef3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5faa21be-060f-4ae6-8e4f-fca4fc2e8d51",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4a38f878-802d-4bf2-8291-d0c10086f04d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6848a521-6032-49c2-ae68-f8cfd6baee79",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c60ebe10-1b88-4098-a14a-a015ca802ee3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "80a38dce-224d-441f-b215-af7f0dca71d7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eebe7483-3a4c-4797-a581-cc217b59fdf3"
            }
          }
        ]
      },
      {
        "id": "d1d86f42-94b9-465c-ad55-ad8f81301815",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "84848082-101f-4bfe-bce7-18cba6719b7a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0c179c1d-a13f-4056-86b6-67eee2e08ba2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8dd0b86e-59da-4a7a-bc87-5a86cf3ab2e7",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b79f5bfc-89c9-4112-a57d-9059c995f0d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "abb4b160-3998-4a1b-90a7-d7261643ebb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d85c33-f17d-4443-98fe-380e087eeb5b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d2b8ae-9b25-4638-8adc-3996c2d39ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7ebd31a-8a35-4973-9a56-fb41537a921b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "873c5131-bb6f-4b4d-917c-3bab54553db5",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3f87e1-45f5-4dbf-9ccf-8afe885e47d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6016f141-218d-4558-a610-ee5b5de0de50"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8c68782a-8c89-438d-9a5d-d6e9e2029537",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e1e6dddb-64cf-49cc-897b-3092669611b3",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d55122-6c29-480d-9a07-aafbef3895df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fef54ab0-8129-4495-bc1f-bf1035398bae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9461cd9c-9fc7-4828-893a-905a48f30af5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62265ebc-c584-4196-81b0-62b2b72b9dd2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "94095882-5e27-4491-add7-6eca5469c9b0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4bed67a3-3ff9-4daf-96be-c84d22c0fe6e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "360f80d6-5969-4201-af76-e8854d19e00b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "130d16e3-22fb-4b57-b166-2d394c98d12e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b7ccf32-d9cd-4a75-a798-68a8328d16cf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "1234d423-3280-4ee6-8f13-ac02a0d638bd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7c83170f-b186-4283-b968-95234b566940",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a83cd195-2fa1-41d9-8ad3-53b21b7e6e2b"
            }
          }
        ]
      },
      {
        "id": "f4e195d4-c038-4e2b-955c-41b47fcb47a4",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b67b06fc-0abd-4a38-af99-2faaf4527db9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "faa7d523-1bd3-4b69-ba57-4a0138d6d129",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d6592ef4-7e3d-4dc4-93c1-295ff3ae7681",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4114b51c-88e5-42dc-b7c1-48455ac0e313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dff0a6d0-7d36-4462-aa83-cce3f6b138a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeaf4741-fff8-4a50-8cdc-085f6f92e26d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef9a1ddd-3604-44bb-8b6f-284f4779dc91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2b4273e-9394-440f-8966-5f2313f672f2",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db6a348-4d3e-45e7-b062-d392998f9db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0f906cc-8aa0-45a9-bf49-65190ef24988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67afd239-e40a-47f6-9897-7d808ebc9168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18fa193f-4861-43a6-b0b4-6e4cdd21b612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96b47e2-0dff-4363-b18f-77d42d12b242",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1189df-cfdf-4899-9aa4-9bf6bacd7b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cec32e3-47c5-4863-8a8c-9a814c3fd5c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d303e561-f3fe-47cc-9951-0e1621a2761d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6289779d-c195-4e6d-97c4-73a73211e498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d98c8c68-17f0-4e2b-963f-045bcf9c9c63",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34270866-c1d1-46c2-9d0c-1c80e563aee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1805aaca-809d-44dc-84fc-60b72e0c2510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "031153cd-695e-4519-b2f6-f6893304ba27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eeded98c-5aec-4f5d-b287-86a084c70292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c4bb4f-bf6d-4076-855a-adeb01f1a809",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b62d2082-a33e-428a-97e4-dc07534c9885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa932e25-dbc2-4b00-878a-053d177cf29c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f81df68d-3248-4905-83eb-ce9d64d9133c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11147fd7-9aab-43dd-a307-ea4aeca60ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8014c41-0151-41bc-a2cc-90c9754ee198",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00bb5ce-dfe9-4f19-b5be-08e57b4bda87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f57cbac3-d4ec-4340-9fa0-62dc79334fae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb8b141-e233-47c0-b527-148d551bfba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63635d92-15e9-4fec-8c52-854d4cab4f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03bd1b45-32c5-47e8-a910-609d4bde23af",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba3dc79-9d3a-426c-86af-32307a674f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fdd99d4-d20f-491c-8351-9b9c6255053f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "188c3c12-4dc9-4468-b5d1-74b9824d5f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2387ede-040b-465b-a42b-1245b88aa88a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb60efc7-a04c-4c2a-bdae-7827e4a755b3",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e954e416-5a23-4f8c-b6e2-08cfceaa8ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b03daf2-1a58-4bd9-ad92-92e30122848b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75616073-4514-4a32-9ef0-591b34f958a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1848f242-6670-414b-8597-f7287001123f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbae9e27-d1a3-4507-a7a1-b214a0d55bd8",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed924081-595e-41f9-94c1-d128d709d25b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b421ef2b-981c-4c1e-984c-b28a3ac5a59d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39901c46-5683-4374-aea3-4eacb16b6286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6bf5df5-eb3d-4e09-95fb-af382ea32340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81958821-7f59-428a-ab9f-dcea8e5c05b3",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a49c0631-a339-447d-89bc-d9e6fee760cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2b34e4c-df39-4931-86f0-6ed115ea528b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de7a239-e57d-4ca9-9daf-edd38cc3aa13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eeeed282-d718-4fe1-8b9c-6d1d0159b9fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db6af454-dd9c-45fb-a27e-5ba3d1101d8c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c169150-4a41-447b-8f57-a17a9e733a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47b120b0-8265-4705-8e47-026528c4dded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608ad434-5939-4d60-96e6-41e9980f6c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f917351e-65b7-47c5-b9c7-205b0c768d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ec9ff4-b4ee-48ca-8660-fe6935917ca5",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd69f4a9-c5f7-4ad5-8f04-56a7e46b3f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "731bced1-d853-49bb-bea0-5e12a88be125"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a29e98-dc75-4661-a8ea-59d4fcc878bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3fbe9ade-50f5-4000-aff3-2648b03ff84a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3a00c6f-f077-4d55-ae40-c124bed747b4",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cafb55be-164b-423e-a06e-bb35b1158428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82059407-f5e6-42bc-b53c-bc3440ae547e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d877ae3-1b9f-44a0-91c5-d9a53c48101c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2969daf-fd68-40ab-8f43-4e0edefbc68b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cfd7c23-5fe6-446f-8c45-dbc6c8c72a60",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2787e5af-f5da-4ff1-a1fb-a7ee93da7442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d69b5998-620f-4ba2-b256-9fad1f1ae678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "208a6093-1ab8-41e1-90ed-582384fa124a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5cbda846-9e2c-4e7f-9999-cbbd4a564d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c89fb9b2-c813-4b61-b745-2ec81c3ce706",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c36ba116-7092-4900-b2f5-fbe5ee04dcd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c863896-ff66-4096-8196-0a0f0495fc9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "422cb356-b67a-44f8-9623-00acd5a9d955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f136939-0c7c-45a1-bd73-f4f716be5d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e39d1b-2b1d-40b5-a3c2-7b154854b78a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e49a3e90-1664-4eb4-bd7e-a4b1190db8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34a79a4f-4be6-49f2-84c1-08858bdb4d23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b34a4669-33e4-4919-a32d-1834d0f6608a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f7c223b-7384-4591-bf06-e50bd106469f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d5ad29-5207-4fda-a5eb-93e74315b3bc",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1339ab37-7816-4776-af4a-85e0498bd770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c6a24b1-3a4a-4f3b-8c46-514fa6cd403a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d11f55d8-2297-410e-9cc0-1b6b894699bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db0113fa-2cca-4d59-a98d-2cbfe9be9eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "513d0af8-0cef-49db-bbb8-bac97d9fa9b5",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc1e0fb-60a9-4abf-8215-49c962a328fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd722ef3-b6bc-4b84-b472-4d1e5437bc18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68189b54-2f7c-4b4c-9b08-3f0fd5d91c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7465edee-092f-435b-aad6-3667dc707e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b53987-42d5-4886-b38e-e32597fb642e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e78c9d54-6e34-4f19-ad59-87feefe77918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09110719-314a-4dbf-ac7a-713bc1770dd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3659980f-491b-43ee-84aa-65f65d3bc714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d97508f-f2aa-4b49-941c-34268747fbed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8834a25d-b2d1-4ca8-a079-20d30c517f7c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc84979a-a8ee-4bad-9cdb-0fe1a8d14733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89b905bf-8b99-4c73-be0a-b91dab92c5de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d0c68b-7e9f-42d9-9b34-a4137e751fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f757db19-99e6-4ff9-b859-7f970d49ee1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0817ec32-c2b4-4474-bcfe-868a8c700d82",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d296de6-0768-4294-8711-73538cdda309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ef809a8-3f5e-4ffe-b65f-230f53fa7a51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e665c3a-8f36-432e-b048-de81a2dc2ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e33802d6-4569-4ed8-b76d-67f295b75e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76bcb490-9288-4f75-aed0-efdbfbddaf65",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17e1615-d1d6-4001-87d0-6227046fed58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea69a08b-ee79-4a5c-b350-f728ab05de36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e3ecbb-d79b-43b8-ba08-2cc71c666493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed326a5b-e85d-4d94-a4a3-66693f77d49a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcb20ae9-e918-4e89-b31f-74a68cb2d995",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5fc330-93e8-4f55-989f-f38270ab6014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf317ff5-0f2f-4280-8b1b-3b93ec1cbbcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0ce2f2c-b8af-4eb8-93e8-a22e141ba4c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9dedc12a-c050-4549-b20d-d3b76d4a59c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ff9d6b-e008-4b21-a56f-20af3d6b40b7",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc66a3d-f7b1-4042-a3aa-5368f5d3bd50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ed8914c-c354-4651-9b78-b202f876a1cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec5d8c5-564f-4230-82be-72a586c7f304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6a9a730-9d53-46c7-9507-17b4887a6dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8703358b-b00f-4e21-b019-5071093eba4b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c782a2a7-8ca2-441f-82a2-e2295557c92e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51fcee11-4135-4b20-ad2d-a7d46d35edff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b25bcf8-4836-4671-bdbb-e6363f0a1473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "58be3161-94ea-4444-9807-8d2898f4ee2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec45e46-85e3-4928-b001-b51daeea0d40",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "585ec97b-2bce-454f-9183-e1096c8d6e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62f2ea6f-5c69-421c-a7ab-c5ebaed9845b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "208a6450-15d4-4bd0-8c45-913a0b3977d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3080d9b3-1aa1-4e6b-921d-c80717c33c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717eeee3-c2d0-4cc4-8dc4-59e01ad47b33",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "057e35be-2888-47b8-bbf7-c7fb22e1c33c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56c42e54-d7fa-48ba-b24c-90ed1370c770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13a6ddd2-b46c-415e-87b0-2d6776cfe91e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7b5d44e-33e8-4568-9c6c-8a16fc7151c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5470e7c8-4c92-4eb5-bc82-40d00cc4ffa2",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c01b6d6-89d7-463b-a727-e92a7c4bdc3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be297f19-59c6-4e8c-b995-b3a1ccb7f42a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b0fc0a-7a9a-4fc3-afc1-5783389596f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1473e976-1f89-4ddf-bde2-b4dbfbf45419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b17c96-02c5-4141-9f13-f530ab7c6546",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d34d7b54-e906-4369-8b2f-a5613e5d103b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dbb8007-5d6f-4ed9-b2a0-3abf0d32d08b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c33b73-ca9e-4c2c-8ffb-226a1d8f75fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ebe6dcb-4b31-4120-8d17-295d9da9792d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f34d03-bc9e-4fac-af23-f7bbe85be049",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "989b2182-3b7e-45e1-9600-9c82ce54438a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b91761d-df74-43e4-8397-02fc3e9c2c3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fc3954d-1df3-4efa-9fab-0f25a9019f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f068459-9bf6-4bc6-bcf2-462b7506580f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7eb774-a59e-4b5f-a13a-f085acf6a64d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3642d5ea-751b-4f2e-a10f-27305a71c70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29ce655b-7bdc-4e80-908b-bb9deedca19a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ab9043-6086-42cf-80dd-99632e4676c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "feba0635-3f0d-4b40-8e5b-3b2844ff5fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b7a1df-5591-42c5-b934-7836c32e06fb",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d6a062c-a9fd-45c9-8c4c-2d24fa04c07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2747aba-6655-4616-8633-dc33616e19b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef2e132-3428-403e-a1e4-41af52d13f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "43dd6f47-be76-4a70-a68f-cfe4c5f9109a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce34c4c-09a4-4b24-8ee5-7928a5cd20d9",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a6c232a-8bb6-4fbf-8d11-c8d69472e7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f39811b-a01c-4265-86be-6ab2a7de1e09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ad3526-0f7d-4eb0-93f1-ccd351b2a3bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbd3cc5d-7a03-47b8-b6c3-f055f5d2407c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a13c015-1015-40d2-a2d6-a80d7a9b3a17",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f36ec62-4fa1-4d3c-b110-b9a3e4737082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6f50da3-4d3e-4223-9501-c29e2aab9301"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1b8fbc-8180-40ec-8803-3826f1ab1f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8dcef2b1-8587-4826-a328-f38b35e6da87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a2cd73-2cf6-49fb-a9ad-34292cea9abb",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a695740-7903-4461-b068-35f3871d5e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2582782d-e195-4f2c-89b4-e2323094a985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b12982e-c9ea-4d22-91cd-1789a4222e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "9e810049-79f8-418d-98ed-b2a462353ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fbaed1b-3b8d-43af-9472-0a658f77df16",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cef01e1-4edc-4224-991c-6d6e5497d495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7536ed91-2783-4c01-b473-9314e1491724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce1c200-8460-49f3-b01d-5299caea38ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7f2aa51c-4ee2-4392-b673-77b9910f1db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f293a33-b9c7-4e26-bf2d-f0c51dcd6230",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "816a17c3-a21b-4f6b-ace1-811b45fe55b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86ea5999-086b-4c59-9634-7ea9155e849c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "625546d0-c891-4371-85b7-17bf4acf601a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fbf47f88-4494-4a68-8013-d6783bbbf513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35593817-7b3b-4638-aa2c-3bcd9cf23a1a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84bedee7-2e19-4e9a-b790-b85026eda23d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41c86ca2-584a-4b5e-b8ba-a007b523897e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1901825d-b541-4b5a-8d9b-c32a350bfed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b1b419f-5468-4f4a-9a7d-07b30b21ed1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f9c4288-4057-4b13-af8f-1676e5ecd3f2",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0119608-fd4e-4e76-9d1d-8cc57a15f393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfb3e732-64be-4cb5-819d-3ab650bdf120"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd0a998-a3e4-4007-83d1-da131ca2b0c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "601e2997-58b5-46f2-ab0c-8b8585953ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53fb598-a4e6-4857-9a23-3a7fafc679bd",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ace7c4-feff-4ca3-845e-e61ed6e63c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c2639b6-c02a-4349-93a5-da4cf1010cae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef462be-f170-4585-a741-53fc549dc607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "59d12405-3568-4987-b5f4-fea71c8b2947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be5a7eef-6958-4d08-b5d9-71703ae7701d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f03c9616-6731-4df3-afd0-b93507d3657a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "433a5e85-1f13-4fc4-81d4-0a2ed66beedb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6395d792-346a-4b2c-8470-0f35e5e0325d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a2c7569-43ef-47b3-8147-3193eca437ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fadc85c-6cf9-4fbc-842b-ba7226d0f7a0",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87cd633e-706e-4d6d-8ccd-0f1e0499f919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "876b349c-d58a-4102-b387-22d795e65405"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bdec03f-3f23-445a-867d-371f04709a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "92412b06-6f91-4fe6-af8f-70f56fe22672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0062890d-c1e3-4849-92c0-6845d30b76f6",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "164293b0-1e93-4cd7-a25a-f5541002bc48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27746110-f713-4812-8ac5-2eecbc6d7b59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "701e5161-af92-44a8-b8d2-cff87f9daa98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fcd9cb2c-963c-4ed7-9689-ca9696b11b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a6b70b-3269-495d-9c92-5866d2c42b7e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "618ae04c-6d3f-455d-bb5f-02093581d006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65927aa3-8543-45b2-ac38-bfd8adf07e8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b4b562-f77e-46c0-a8cf-a4ea492ab3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed82dced-66a1-4b10-8b53-7150276f4e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d889b312-7ca9-4ca5-a135-8016f13580c5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2bc3640-ee58-4ea8-9971-60b2b31cc4d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c03ff634-7f10-449b-8b73-421a63d92455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1742f383-bde1-4c4b-a180-83f583fbac72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3231a7a-9d87-473d-81cf-8b1219484e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1dae4c2-82ac-49db-bf68-b40662501c30",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f695678-cbc8-4e58-9798-2d61b9657206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f5f4a26-e94b-44c6-9840-194b870ceb75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab630c1-2527-4d9d-9283-e9ccdf498546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4538503a-6a33-44ca-b2cc-0528df220cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b2bf71-1ba4-4475-81ec-c1e6d2c3a062",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86bdb6f7-7f72-4b22-9bb0-9ac05fc6fa10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc601646-b3f5-41c7-9dc0-e8365cede476"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68104c1a-e3a1-42f0-84ac-577bc3c7414a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bc80939-2e8e-400d-adc8-ce3b64d610e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f9315e7-43f5-48ff-82dd-b80d21d7e2cb",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61813c70-1a60-4351-9b4c-3c07faaa698f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4122b025-d5ed-4482-a45a-7cf9aa08374f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de0ea70e-1d8b-45f7-925e-9c1f5c799292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c562fd16-5525-4fb7-9a1b-59fc72784ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4106a40-f9da-464c-ac2a-3b5f9ec9b0d7",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b96abefd-2bc8-4e46-8fa7-9c4e4db0737b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4efaad67-a242-4423-ab93-e94a108b5ffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ca523c-68c0-4cbf-9b84-c742911debc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b2727d8-c463-4de7-9f70-087e6bd1b901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa61de1-12d2-4f97-a1e0-560c4ca22e6d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c03547-38eb-4741-815d-c91a59d3f351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d27f2b6b-2467-4886-97e3-424e9b8a5dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b8049a-bb54-4285-ae4c-1c152f6a3d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0cad5d4b-b14b-4ede-b5e2-ae0b219807da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f660f9c-4da3-4309-9df0-5f229ffda7d8",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17979e12-d4bf-41dd-be81-8c697fa31009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4864634d-70c2-4902-bc0e-e7b80743eed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "733ff7b2-8d54-4c27-a63c-945c1f99871d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c716243-70d7-4f38-89b7-4d88e485dbda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ec2ce2-5fdb-4c56-8e58-7727fc16206a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "479144a9-9387-4e50-aae6-28dac13d2d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d611a36d-b09f-40b6-9587-759f801e9938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c321f0e1-fe90-47f1-9b8a-8991df1564d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd6d7e80-103c-4fd2-822c-72baaaaf40a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e22bb89-06b0-400b-9f4a-ee423815f0e3",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2177923-0728-412c-8b29-b38d98c0f5ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1989dff-d170-4679-855f-d905e2c443c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19ab43c-680b-40a8-877d-e97dfc0699a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "759fe765-8edf-42c7-a485-ed2b70efdea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c056fa43-1736-46eb-99c4-3fb879559800",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3014d63c-2e69-4a02-82b9-01797829204a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03575a05-dd8e-4760-90f5-7f57a51f7ca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eff9e16-321e-42a7-8ea0-9cf21f869206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ed8739c-e777-4256-b0ff-b252ee8be995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e370007-02a3-4f69-bfe7-fa9dd27990e8",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e8fdc2-db5d-4481-9bad-23f8f0c02c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eba46e34-16ae-4a0e-831e-53de0f37771e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee71ffcd-b205-44d6-b734-6bcfd2812b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b4b2784-b4e8-4b46-ab07-8c65ef5e08c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c00e4d4-b783-4d30-ac7b-84a7ee7bd51a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a58279be-9e0f-4fef-85c9-f9ad43241227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fc916d8-639b-482d-b680-e43c72f95f6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6209a721-f229-42c5-a7ff-c74ac1a445be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e3175982-a0c7-47e8-8b3b-a5ea14976ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "785cb126-eb6c-4b95-8a83-4ab56d59ce51",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2457cfb0-e1e9-48d7-bffc-51fa552f9eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee2b4f88-01b8-4ff4-a1b4-f8bfb83e1fc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49169fc1-2597-4f30-8636-2df9296cb076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "26b329b3-9a90-40b1-a45d-8488debb26b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6de155-0e77-41ff-b9f3-a8472f733155",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3516239c-ad90-4ab8-8e49-4f257c728611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e3ed1a3-1bff-4e91-901a-f6444b5ad69c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f73bb637-64e5-48b9-8cbc-8385a89483c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "59742de7-88e7-4be9-a6f0-7f7a2ec5dbb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce6b8c4-75a3-4d45-a52d-b990a3250e6f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23915d8e-05c9-447a-b7ec-77fea1241b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24983421-bad2-4b0c-930b-38642456dc41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07956a74-5bbf-4ba8-8660-dc53e163b1f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "38af12b6-69f5-416d-b2cc-77f4ad8a08f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0fbabbb-d0ed-4133-8632-91665bc65926",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "982999ea-bac4-4b4c-8c5b-8cfcdf7b9d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d972b304-7104-407d-9235-31e554750359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05bce259-8930-41ff-91b9-d186558102b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6112ccb8-0d00-4b22-8c7f-989b91da9daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ee16bb-0931-420b-ac51-3d58debba61b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d0f00f-a62e-419a-8ad9-bad2f4280367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db1e059c-6b35-45a0-9d7c-5d1a02a0f5bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65157a14-4660-4418-b66c-0d27cdbf83a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "547210dc-aa3c-4baa-9443-4c0f09a08f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e42dcf1-b667-46d1-8e23-7261858c9396",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14e6cf0b-b3d0-4444-95b5-8bebd00555e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b69ac67d-9294-47ff-8ea7-50c44eb3b9d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b161bf-72b4-483d-a79b-f736b41d4a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c14a34d-8d6f-4c76-b815-a70c018d0ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67eba03f-9825-466c-bfcb-3026478913c6",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7785786b-61bd-458a-bf41-17a259ef3bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "415c2630-df5c-4e07-b92c-9b69b290b898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533f82d3-9506-4777-b106-c8de3d6d4c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8559450f-5758-46f2-b954-231fa9dce73c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61ff445c-22c8-4790-8938-73aefcb5f4ca",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7486400c-e25c-4b4f-a6eb-9621fd5967fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5c2fb19-855c-4962-98cf-70959a51e7fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c266a78-0c48-43f7-a557-f3caf40325a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed73d1a9-3de7-4bbc-acf0-76a7ce36cb7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b534c817-3deb-4c9c-ae0d-e95d885aadc9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df1d7db-4c3e-4ab1-9a8e-4fc98fc3577c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e6e750b-e5b7-4f31-86b8-b837796eba89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47fd93e2-82b9-438a-800d-1b8828df599c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "66eb3e13-51e0-4c7b-ad40-640bbef1447c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2b046be-55b9-49d8-bfc7-4bba0b785953",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af16ad1b-62b7-4898-8d27-3b59cfd6c5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e5823a1-0fc8-4481-9385-2b68ed0a96ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b2037d3-b132-4d23-ba71-face2b53f3a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4ea6050-775d-47f4-bc47-b04652e7097a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6265fbf-a7ac-42b9-9ee0-d3abd76750f2",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d1e803d-1e9c-4e76-875a-e9c1d36e8b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eef7f94-32ad-468a-875e-a519e2cf66a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36fb15ec-79b8-45d7-8dce-e7b0f9581f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4ed21045-6781-4d56-aa26-eeaffe2f8436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5682cf64-0a57-4cd0-8724-276b38b9e350",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a7727e-94f9-4e46-8381-b1de34ee17a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "714950b3-5e1d-4b08-9fa4-da2245f902a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b234d395-73ac-4b92-8969-36d3a10800bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "781dbf82-6080-4bf8-a00d-186684f6bef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dcf6176-e57d-4d27-adea-b6a7e8c0814f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f21ba0-8127-4b15-be86-12841995e587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ba72af0-1315-47d1-a7a7-eb5d4a0e6a05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1519e7ff-dc36-427c-8175-01df77ea6b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5bd7d69-6f14-4760-bf1f-6136597c4dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec64cf2b-cd25-4c3a-891b-6659ff1644fc",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "647feb58-d181-4af4-8f3a-4d751598216e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c7665d9-b3a5-46ab-b1b4-37d79203b55a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c2f04c6-e351-4943-88f6-2785f6a67073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "081a9bd6-8636-4c47-b8b3-3e7d446fbb5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "345adfe9-2bc8-48ce-b473-6e2b542acdde",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8333bd84-3369-41d8-b945-a520b5a1c666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b959a2a2-9022-436f-b02a-e326a5ab4c0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e74d7876-be64-4ea7-9508-663a99e90268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b267760b-b845-4548-9d2a-e8ce8c213744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665d3aea-f1fe-4695-a69d-abf96d883a38",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e030aee2-03ba-4169-bf49-4e055824e579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "271fc12e-0131-4324-9660-ccc9d9424b68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14336420-84ea-4f37-9062-f764bf78275f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5b1c0ad-a596-4017-8ebe-9af4317ad350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088d806f-7d99-4540-8ffb-32696b724788",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86aed174-3103-4aff-aa54-95ff2eba4c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47903b5c-2693-431d-83a8-0988e0b2d0f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9d87cf-f850-4e6a-bc80-cc72903c06aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f09164f4-fe7b-4dc8-a4b2-c5290b7d95ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada83732-e8ff-4153-b130-d856f19876bb",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f497e32c-8e6c-4003-8e12-ba2b415555e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c97ccc7-d8ed-4b4c-a806-c2a0c6417019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb731e1-35f4-4b75-99ac-2246999fad37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2607ffa6-fba5-4d14-a51f-0dca44548a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eeb1311-4cea-4b80-bd65-ea49a59efcfe",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab619851-da37-406e-a7ee-95df5b2f74be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d1009f8-841a-4460-a30b-dcf003ffa2e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db576e9-751a-4420-baf7-ad0356141b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9e1d2be-9ce0-4b78-8a04-b9a7360885a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55abaaf7-8a4d-49a7-86d7-adb8019a6e63",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7528c92f-ae78-4a7f-bc35-e6a1f7fd6616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71007095-318e-45b9-8573-76c661a178be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc2afe4-b3a2-4a46-b909-1ba4e717cd7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1d44d58-214c-447f-b7b3-df483b8a9c30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c8d5dba-67b0-4bf0-8374-2a41a1bdf411",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7f8bd3-dc06-43e0-b866-80cd1a84a84f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26a16a22-d524-4f1b-8ca1-5689e432998a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e785e24b-3eeb-4619-ab9f-2424b261f4bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "db61f0d4-cc40-4699-a2f1-c0734256bf7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197d68eb-fb3b-4f5a-8843-8aa760e4d992",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ecc475-bd3f-4f01-8823-2d2c81f6dfca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd21908f-7fbb-4fba-8c8f-2dd715f135ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ec9059-9c3e-4151-9944-26ce1d8d23fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f883641-7138-4575-9c1e-5520016b75fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98ce4b8-71fd-4b85-bf12-99b1a5ff948f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0014bb6-18dd-4269-bee3-18d739c8e3fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f2f13e4-4945-460e-89d2-eeff985f7dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f7a15e5-eb8a-4a0e-bc07-1e1074544a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "92df1e63-6d50-4399-9b37-56eee9372d27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe6a9c3-0bb6-4c40-bfee-dcfeca164920",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e36fc317-2aad-45e3-b415-2d392f43a115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae5e50f7-0c39-44f9-83ac-971554df7236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810dc1d3-74be-4c92-8108-2d042661a7eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ccc30876-c4bc-45f7-9123-52a7089ce318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e6ea875-3c33-45cd-b198-6331ef766cb4",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2861fb9a-5905-413f-9cd6-156bf69daefe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce44ac4c-78c1-41a1-a6fa-3c9327b56ebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28f5268-01f0-468a-ab40-6a617155c8e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b1ba32a-04cd-4333-99f2-fb57be49a574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "466047c8-e54e-4c7a-87e7-c474bc42da22",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2767262c-e2a6-4155-9946-23f13c55fdd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30f1b6bf-60b9-4b47-a8e6-c549679578be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4328e301-ef3c-42fd-b09b-b904c4361b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a166e93a-a5f4-4652-8263-892445cefd8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b21c8238-73e2-4222-bb07-27ec325b5dc2",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c71768-0989-4ae0-a554-38bd61e635fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d13b5b21-0968-453a-ac10-86694a4a9fa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb62d8e0-d0fb-47b2-89e1-3e5da587afaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e400129-9b0f-4171-ad8c-aaa4a997277b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2542888-b404-4ad7-a878-e42895152f0c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ee86e3-7d32-4399-b7f6-8246fe8ade6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "258114d1-68af-47a4-8f7e-c82e356a2fb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d19e5b2e-e86e-4827-baf3-5cf7f6e809cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eff8baae-a997-498e-b35c-dc42479eb547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ad25cc-00bc-4b88-98b8-ab687b223c52",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6a2024-645d-4713-ab81-f5605fd8f6bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15e2171c-1201-4d33-ba82-341980d3a0d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8aad135-5cb9-42d6-aae2-06a3a0ade7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "07233544-6b65-4c4b-a46b-22f7278fbd30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c6702e-67fd-4213-8e0d-289a6441f800",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f3efa9f-36e3-40a7-9400-8a745eef4083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99fc5073-c09c-46ab-b429-2ee4a3bc62b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3017fb0f-1051-4b35-805e-e6ca68424875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2bfef146-66e9-491d-bddc-792f55c616b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee979e31-d447-4d8f-95de-b1254f04de3f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0df61de-03b8-47e8-a092-972e7403a814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7fbfde6-076c-4e71-89ac-22edaba25db7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "965c0943-5eab-4b5e-901e-c6a3ca036c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd4706be-bf5b-4b08-aed6-45a3426a4d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc798fd5-e782-4802-8880-4eb0b5014ff8",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f98f775-e28e-491f-af2c-4b3732cc1a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44066757-2d84-401c-a6b3-87b7c60bcda2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06837345-a17b-42a6-947a-9bc0fd95b231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1ec4905-c32a-471a-ab5d-1dec9c2590f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b393c9fe-34ca-47f5-8991-1307c7a50aa1",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55261e6e-6ee8-4254-b8b7-8216ff269d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef0c3afd-1cd3-4d14-b6b6-6fd3054cfd8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef5cb2a8-7c91-41f8-9ecd-8f3508f57125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4277bd81-23ea-4eb6-9851-8e69b137cbdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0114e65-21ae-4627-8c5d-ee06a4a97c00",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8803fb1-10fd-4801-9ab4-b453d58a0599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47ee140a-219b-4908-9d49-3808ab78463e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db724ee8-6dd6-4a6d-a938-8cdfe2bed6cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5eb2ed7a-ebc9-4dfd-9628-8846850798e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f797ef-3a46-4a4a-ac5e-b92abc3f4b77",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c1547d-9408-4055-978b-67bd29447cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e98fceb5-1bc2-4035-ac7e-9287973c8152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83260d3a-ad6f-4a77-a290-25a1d7d67e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6d71977-48d8-4d7f-a29a-f8aa0e89c891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7911cbe2-5a24-4497-acbf-d9492c1a6ce8",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5081789f-6811-4f8e-89f0-8c6767289ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "68c79275-8522-4891-89ca-ba7dd5eac062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caca472c-e742-4ac0-9f1d-ac030d94c2b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a40943d-e596-4c91-a451-0fd996f73699"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1f5e39fd-886c-453f-a760-d721c3c7f463",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4db1a858-75f7-4075-9b2c-dc70a9fe9a03",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad262d8e-f622-4114-b80d-f349c0b89573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "60895983-261b-4f26-9da9-c9fddce0e587"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c8214c4-a357-4195-b6b0-23e6c214037a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a8d8f51-b184-4a26-9708-761aee2aa0c5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bf7b9712-e743-4b84-9bb7-9868df27d457",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65609d15-953b-43c6-bf62-f9abb9a3fb5d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c37da4c-f3db-45e6-ac9d-80fa4f1c49c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "481bb6cd-b8ef-4f65-a19b-69ea088e24e8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "82ac8ed8-a23f-494c-b4e5-a52b0d39ebb1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a5bf975a-271b-4054-8098-752def094d9b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f549aeb4-a06b-4677-95fd-9353ae376942",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "59dd9799-8eca-4c24-a2cc-9c51138f6acd"
                }
              }
            ]
          },
          {
            "id": "15c3e875-26ea-4401-8232-d98182bcb354",
            "name": "Positive Testing",
            "item": [
              {
                "id": "afd26e9f-2d47-498f-8058-d913df611fd9",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e626bb1d-e44d-409d-80d9-9813fd652a11",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aa661e70-0c2c-49a0-9423-7ad4c8ed28d0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd8cae87-11d2-4b46-842b-01c57291efaa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "58c0d7e9-8971-4ea8-9c01-b4d384706743"
                    }
                  }
                ]
              },
              {
                "id": "812becb8-4eb0-432f-a558-5be8077309ad",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f683cea3-e660-45db-930f-266dab57d0e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dbb86ae4-3a87-4653-b0b7-81e3fd2a7ee5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e97ea432-0aca-494b-9ab7-ca753de0023f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2be088ca-06f9-45f7-a456-117f90007d43"
                    }
                  }
                ]
              },
              {
                "id": "78318286-4b0e-4c54-9030-0017bc78c771",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d7572ae9-4d80-4cfe-9948-20f6da2cc59b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a8b0b34a-078e-40ed-aed2-520215655331"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "764447f1-7894-40d3-97ef-c6982cf3e19f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6ab99033-3ade-4772-a022-72089d3cce93"
                    }
                  }
                ]
              },
              {
                "id": "dc8c2faf-1ad0-4deb-9ca8-63201c0ece1c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0548023-76a0-4f44-bafe-5bf750c08ff0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "157b9a1c-40ec-4a93-bf78-f6d982376a96"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0849d8de-ba2d-4c22-9a88-9c9d0bbc0934",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d291d439-a20d-4e41-8cdd-641bd9939f4a"
                    }
                  }
                ]
              },
              {
                "id": "c040eb92-7948-4b81-abc6-413581d49f06",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1b22104-d20d-4924-9c0b-d2f5fe097030",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "75e57cc2-126a-4a86-8dd5-a229d6605d68"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "43f9f75b-a958-488d-832e-6465cccbedf7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "62866547-782d-462c-ba79-5f930b1de6bb"
                    }
                  }
                ]
              },
              {
                "id": "9f691dd3-c790-4190-92c5-10eb3bb2edde",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e8c5517e-d8fc-4e5e-ac27-38dfd8e2ea27",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "df211188-d991-4a51-8b63-936fe3b5ec33"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10d85210-c90f-4c8c-b9bd-e2eee8d341d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "068e58c4-f2b9-4612-9cf6-b3074a2e92bb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7128889a-ddd8-44fa-9de7-6621c87eeb9a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "49af6f16-e43f-441b-8b31-071cbe571792"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cb31cfe7-eeed-4164-9263-841e05b480f5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "30f932dc-0ef4-4a00-8775-a5a055a812bb"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a5cc320-e48a-43e3-a0ef-1dda1ab075af",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "30af7e82-c844-4d96-b637-3f54f5a0250a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d7491680-b93b-4a39-b76a-29416c3189f5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "da9f73e0-2a30-42ef-ae7a-2f80cae8e0ac"
            }
          }
        ]
      },
      {
        "id": "dc7ae157-d590-4675-9570-f062e5491e5b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "33ba64f2-9d27-4cc8-80ab-9064f5f0a1ee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "028d8646-d018-4b46-9d31-0f7aba59d2f1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bd588f2f-309a-4883-ac36-e481580b0a0e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89a75b09-52e7-45bf-9160-ef687e0f199c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cecc4e9-965d-4445-ab95-07efb071f85e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "769d80d0-ce93-4d52-8031-70d7e70c488d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "872e5229-f789-4d11-90f1-d5c8d2a121f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9187e377-04b0-40a3-991d-012893c689ec",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d07951-219a-4377-b66a-f1caf9fe840c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95d44261-0263-47a6-8787-949d31eb6612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46889802-a1da-4815-ba6a-49de83aebc1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1257be1-0bc8-4fd1-9fd4-43d5c0a74357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "827f0ba0-d8e2-419a-849e-9aca997d163f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c37c8a1e-f1f9-4783-b528-19c16b6cb483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ecf123c-d0c0-4cf3-bde0-61bb6945a367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9faf307-4326-4739-8bca-c523c6d35480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "51f0de89-d66e-4c9c-8610-3fd4297fb9a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f3018be-24b9-4667-b497-527fb92cf777",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e57a7100-670e-450a-a34c-13417ea40a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6347760-6f71-461b-9c5f-1768d3df65a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7c33df-fdc7-453a-93ac-3774bca4f194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf522bbb-4fe9-4ea0-bd4f-52e414ff0320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "643d6235-b2f3-4cd0-bbe5-29fd8155716a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc40740f-160c-4c53-9bda-012a0dfc4f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0a63134-1d7f-420e-979a-ace8f69cc9e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdeaed14-9d08-4995-9da7-d18484b2de25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9c5c96e-b151-4650-ab50-06aa9a305ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "915aa145-b411-4ce5-a96a-7a510ff1bc52",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "279ae614-4a50-4fb6-92c1-ee1f1cd89e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0421bb26-d535-42e9-8c57-a5ef9f475cfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "378e29ba-36c4-4708-8bd5-9fbe65f36599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "27d43324-c6ac-4b72-b194-efbb9937ffc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb604a3-b931-4bca-be79-1337eebe617f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1127dddb-76ef-4415-aa51-9b31876acdfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72a19624-72be-47ff-978c-9c7a1f0de468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "177870ee-cb75-418c-b618-49f81c85b35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "be37f6b5-014f-4dba-99fa-a04942f88e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5dfca7b-c4ee-4203-911b-ace2f2d0c88c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e71ffda8-fe13-4a8c-89c6-812f4efed926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b37734fe-b7d1-400a-9074-05c34d7caa12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ddc7f7-72f0-41dc-8162-4862976db481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "068a388f-9a26-48d6-b9a3-0755235112f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659af717-f7cd-4acf-906c-ba79f7b4def4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c78882e0-ffe0-4022-bec3-4e86b6a0922f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "911adc36-6eca-4c0a-8457-5dce022878eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e96783ce-945c-4ada-9b7b-36efec39d1e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "efb6acc4-65d6-45cd-b8c7-b2a5b0084449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c28b8d0-1a68-4258-9fe8-8bb5a8e6ae05",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab91b93e-606c-4ca4-8133-c6425126e4c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b0d2b8b-d908-4035-b8e2-6a5cf3b5a1cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0daa4dd6-18cd-4e90-b7b4-706d5e173e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d89c9083-d2bc-4264-bc78-d594d010760f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b405497-b92a-4c3e-a2a2-93af632e30d2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8f7968-c0db-4bb8-9f77-c6cd36c7f1b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adeeaab5-a3d7-4520-b478-07f187cb0f2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "974e3454-d828-4b59-89f2-4b75fc1473bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "756562e4-125d-447a-9b05-3aaf4357557d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f96672-7ffb-4fb7-b70a-562423c52fc8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed8cc35-09f2-4767-9207-9a70722d0606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac2b7ef5-0045-4f34-8d1e-57456c19c6da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4712effb-5209-4093-996c-b38ce37b6c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "efe10b39-6ea5-44f4-8a13-9309f57d2fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7eba835-ff36-4761-afa7-990c7c9537fe",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19da1003-ef68-479b-bafe-af1405349183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "190ed80e-f5bd-4b82-830a-1d9213afd4e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7985bf33-6522-443a-b7a5-cacea55f21d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4aa2f50d-67cc-4ef5-9182-1384dc578b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc608a06-6018-48f1-a947-29dfd42e2d7e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57136ac8-0652-4cbd-b32b-1e86e526cf15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a13d2baf-b0eb-4660-9871-494c0324c808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6507f29-052a-4453-b753-f556308cc8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d81962de-7831-4027-a0bb-72d7672b3a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8202e4-5aef-40cc-86de-3d0c5ff43519",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e6efc2b-67dc-477d-a4d5-9b0653c280df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0df058c7-654a-4a45-90cc-8891917aee71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc073abf-ca73-4aa1-8eb2-7101898fa9bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "76504d1d-d912-4a6a-a65a-28a318a108de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee81375-d137-4420-b98a-49212cb2d127",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "406c7ef6-b5ff-4a03-8a76-1ca25c7cd278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48bf6dde-3f0e-4cc9-9b17-2e7199bf2021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f8472f-2c0e-48ed-a8c9-fa479e147df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ad60525-6f74-41ef-994b-f69d2bf4b34e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09831c31-214e-4c1f-a53f-ce8a967553bb",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "160c7711-a029-4664-af90-3847b46e2afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1ed192c-9c28-4fac-860f-74a7fbad7752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321f8164-c6c4-4128-9b5c-ca31237b9b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "291b1f0f-e2ee-472c-9480-760b6575257b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de36905e-6d6d-4b7b-a2c2-be41e8eb847d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb0f9571-4a04-4fcc-8601-55dbd6199189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f881a19-68f5-4afe-ba1b-9a1158a5857c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6832d23d-f901-4705-ae09-cb85beffb22b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8145e56-b163-431d-9124-11783dcb4e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf6718d-f6da-4b9f-b199-717e6dfba471",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d5f279-5fe1-46c8-a4f9-2d10a202005d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fe8b0da-8241-4c43-8692-5084da001520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a43070-b026-484a-a061-fc3893714eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c612fc8a-ef00-430b-9fe8-fe6141414595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c56da8d8-b586-4385-939f-66669b896628",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b520703e-2705-40e0-914b-8bd8be5b28dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23226bcc-de8d-4346-9cd5-5d205458475b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c4911a4-685a-4107-8e59-fbbb0fe2de27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af107da8-730b-47bf-963c-56d85416f201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cfcf391-ea43-478e-b85d-d458cd3b42f9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25667e23-d57c-4cf6-a690-d5b9bfb1da9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bdfc3f5-f0b9-4848-a03f-f29c8fed77f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e608351b-c266-49ba-b10c-992eaa891b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1290fc92-52ca-44da-acf3-d046d6824850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9161b61-2c92-486e-bf1e-cbba32c7140c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be212c86-f6ef-4daa-871d-56bbd68991b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5733cb3c-2bff-487a-8315-87d2428a2ac3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8647055-e9fa-4f53-949c-c95202b56d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5c1598a-33fb-442b-beb3-b823bb7fd85b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0832bc4-03a8-464e-b4e0-2084df4b0386",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "752628bc-3c56-44e7-94a3-7d96477267b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11b5480a-5b95-446f-a247-35f7b6e9830d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb4cf21-16e1-402b-a688-6dca5c271fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "016ac60c-ed89-4889-b3a0-98de8b7e1ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8819c37-72fa-4c07-8426-99c3bc7a350c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "644f3e4b-d049-46e9-b27a-5b52f848aa4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47a98ee6-ab48-4cd1-9084-2f868db679c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8f8f03-070e-4e35-87d0-5a42bfd39b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "615a05c8-ca4b-4c02-83c5-99f13e3c2bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d4b47d-0e2f-4cf4-a7ef-7029123b344d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a68574-0d34-452c-ba28-0aeb13cf947d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4a385e5-e4bd-4363-9180-ff13816a8242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "173ab773-1f6b-4527-a2eb-a40bc22cd030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69a8ab2f-0993-4923-ab44-e3c9789b11a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae7190c-c1f0-4bf6-8503-34b267e86c36",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a88ca386-473c-488a-abcf-52fb822516f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bae71ef0-f0a8-40f6-8eb7-6e5a217f4361"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315a1a05-cf31-45a4-8ecf-736f1d0b67b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb9c07d5-ce34-4ea8-a499-1e48c7052ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e3818ee-7ccc-4dba-94ea-cc261846c57d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4e7471-636f-44d9-b687-4b4d447330ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8862c5d7-b074-4d3d-80c1-fffe6182040b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfca9585-4609-43a1-973a-34e7fd4a2d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79233cff-59c7-4286-b7fc-de240151fdd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc33dc40-8944-4d5f-9003-51db0c14eb80",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af9a6d75-74d5-4433-849e-e6ea3f80a667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "331ce5b1-ae6b-4320-9aab-7b91c37e1953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f224a12b-3efa-456c-8858-c9b0051358d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "640ae727-806d-4750-81aa-1600ce3ebb15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "473dc774-35e6-46ae-bd2b-c9fd2e931ddd",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b114673e-b0b0-4b16-b22d-782332ccbfec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5112db02-0327-4324-b05e-054fb596cd00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847911a3-59d7-4564-9d56-494107bbce7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d06066fb-7f5c-44e6-b494-e5d649009205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c3396e-f01d-4a5a-8046-686dd0de9cbe",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "447ecbca-4a5a-4abf-a1eb-c23b701fe1cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0bec932-444a-4cff-93ca-c2367e1fc87a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32771601-c888-4548-973f-f207e687c11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f43cdb3-7618-4e96-b49e-2cc852dc74fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350bea8a-2583-4d87-b5a3-8cc8a005ce38",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "465d8773-3239-4396-b221-cf47dfd97e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa18ad73-dcc8-4f30-be60-a0f8077d06e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd747050-030f-4433-a6be-85b6414788a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b0eadb4-00f1-4967-a379-aaf0a89e38a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e12f7ed-c470-4f57-9e64-43bd6744ea5b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09df68eb-6750-49c8-8db3-2b564d53198d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaa0b572-9d18-4252-9f31-ee63c85ce13a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3299b72f-3828-48f5-90df-193a247a64d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f757bd6c-a560-4102-a3dd-85726fb78032"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e5edd23c-f881-4cad-807d-24757e5d1521",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cff7825c-a6f4-4e33-9e7a-df4eca5f0199",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "920072f5-6134-40bd-841c-03865d21b335",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d6246d58-fd9a-46e9-b444-b8b3da1be517"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28eda655-b32b-4c5d-aa4f-dbb1a6525be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8919615a-afdd-4238-95df-f919ed5529ce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "467d5782-56df-41e5-aeda-63d1d08e3ec9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a60e6e49-075a-4a55-9184-b19e4f71d19c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "774fdd01-1cb8-451b-978a-3e20aae577c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94b690e6-ad35-4d1f-a428-e7a5303b7e42"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1e00abd5-f71b-4500-bb5f-a9ed74c2b560",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f67103e0-361b-487e-ac8b-9b2a00c736c4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e45ca432-470b-460e-a6ba-85afca1667d9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0fa255e0-a919-4917-829e-e8993098927c"
            }
          }
        ]
      },
      {
        "id": "19980990-9d2d-45e0-8a42-8c755fe00a29",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "03b670a0-21c8-4552-b63a-fdc10f739c3b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "732a1e67-1723-4107-8116-c08cd061da94",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "82ff6008-434e-4b9a-bac2-69a085a919e3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3918e940-1889-4a42-9d8b-56f9fcbcc231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d4db854-f052-4854-9d82-5cab01b98813"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df68f190-a9b9-4680-a831-25434c443bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c01eb94-2653-4168-9a1a-69bcbdfad759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a538560-bf9d-42f9-8e92-9f053045c463",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "267221d6-5974-48c9-9a30-0ba0dc84bd7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1621ff6-40a7-46ba-81be-eef9e7232859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd1be33-ef4b-407a-b22b-6d62c944a859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6eadb507-edfa-4e17-a6fe-e2f9da57f082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8764b304-215f-4e81-8067-4b684b0af519",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7052ec-5fea-4d5c-bd7c-d0cbdb9615e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3179bcf-43af-4787-941a-281f842680f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db8c891e-9dc7-48e0-8ea2-930e13bcd1b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "02c52f82-0f43-4a5e-a055-a5cc42ee1dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41cb5aec-d9f0-46b2-bd9b-cf6ed9726ab0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "931f2710-9f09-4d7f-b850-aa44effd4326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97ee81cb-7f0c-49d7-842c-d5e5bf1d5e98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f5478b-3d78-47c3-8eb6-508f6237a5f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3403a76b-e087-47cf-a238-11d6855e1eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e6166e-f42e-42de-ac9f-5a121dd88ac5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00382ad3-f73a-4b57-944a-119393a5c02d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6007b65e-a407-4b0d-b65e-e7bd879e4688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e87060-4b6b-48e4-9b2b-605a8f69c378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2047fdc0-02ea-430c-8894-86b85ebb1cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd1ad0d-5cd6-4f8e-8248-4fc9acb55da2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c27520d5-26c3-47fd-b28c-f36b7bb9893b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c1c3199-9129-4b17-9013-2aa4ab4d613e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ad680c-cbc1-4249-8aad-19d5b90f02af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3065bc4b-3fc2-4f1a-a978-b5f471fb0cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7996393f-4cd0-4cfe-96f0-ccd3a332d631",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4673ab99-3551-4f56-bd0c-171e9306006f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f443919-aba5-47c8-8315-8b7797bc8cdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59722a93-5a0b-4832-8d4f-3b61f4ebd7d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "421ef673-bfb4-4b9b-8d23-f741b6b0c946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccce7239-aeb5-4e3e-8711-2ad5898e8ee0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f1c7e73-ac6c-495e-ab2e-3ba8c4e98f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b31bea9-ead4-4072-9e1d-20e8e7c810e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a724c79-831d-4599-ad1e-3070e17d4459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2138808-6cc8-41d0-ba0b-f45694c688a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b473d47d-46b7-4ccb-a05c-cc55884b8063",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abfca5b0-052a-4daf-bd12-e0407871d070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f59ac1e-418c-4877-96b1-4454c546517b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1775853d-7477-4d91-8139-bd4fc3cd4f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "32cb1ffa-c65f-48e9-afe7-05dac91273d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "756fb3e4-e360-423a-84f6-249ee82485aa",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f99e064-f4fd-4bd2-b31f-fa56b0b844ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2ffb8df-2127-4c90-9da6-807ee6159bf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1118546a-6d31-4df0-9e97-420189542f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9308c5f1-7b05-4a25-b7e0-0fb27b3e2cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27e31711-10a9-4cc0-816f-b95eb3f91c8a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe0601ae-73e7-4f36-970e-f8a5353d752a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6b751cc-a6af-4099-ad14-bd0d9861448a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f271e93e-c277-43b2-9d11-5ef54f4172a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "df3c85b0-cfd6-4efd-a198-0eee0b3da037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb649e01-e449-4d86-a150-c131f4da4b0e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d932c82-a9a8-41ec-abd9-7694fa09da93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbca6f6a-e0b5-4265-a76b-8332d2b36236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d1b264-8c37-4500-a8b5-907afc07a11e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "21493431-6ef6-4682-b7d9-f768dd8ecb6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8280a01-f458-4ac2-941a-78d80846ac06",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "865c6627-2973-4b1f-a933-0bc40bf03842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6f94d33-5cb3-4e86-9603-e42600f83fc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc68dd1a-cc49-4051-9eb8-dba3436eb5af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0085950-b747-404e-bcb7-1702359a894f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ae4e4c-65f8-40c7-bbac-5562623a3f93",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a30d569-294a-4e77-ba90-e3d8a9ddaa31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f39a7bb-4ddb-4800-bf70-d563c58ee2ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0fc65a-2903-4cb8-a126-93800501c44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ccf2079-c265-42cd-b063-a7e071d47af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b423b35-6e77-47e4-890c-aa1863cc7922",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d8fbe9-371d-4645-8c69-32f8939d6152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aa74e60-6fca-4746-91e1-4a7416b5bf31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e49aac54-94ba-4063-bd69-d76448806d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "14406109-3b5a-41d7-961c-529fd126f223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85992a83-0f7b-41ac-a7c7-e896f8fecbb6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "013f4a0a-6fbd-4dce-a2ba-b6e2d6da9bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af55c40e-3e54-468d-8355-d056cc7ca3a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c577d437-3cf9-48ab-ac14-24015598ba6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ed597fa-542f-46bc-9def-0dda1fa7eee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9476de3d-5610-489f-9478-a326ad244f49",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e4aeaa-aae7-47c4-9e9f-a0149708acad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "580241b0-d965-4517-82b2-cf2088504c4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d518e5-e738-4ab0-81dc-fc4189d6c2d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b47c8f9a-b4f6-4286-a798-19cff3505857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "218b9580-63bf-4820-9e4a-7afa97968952",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3dfc65c-6bb9-4fef-82fc-eba29a03199b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1fb1097-6f48-45d2-ba5d-133dce7dde02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f6b5ea7-1231-4c76-b5cf-24c8965072d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b33b606b-92f3-4f65-9086-f89ec562e21f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7827b40d-89e2-418e-b71b-576656e81249",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1648e1c2-863b-4264-ac4d-e20cf7df5de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72b22897-4cd3-4966-a338-6f88913c0465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6513fb-ef66-4af8-81f5-5b2c82f08091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "508eb34d-a18e-4319-8b19-6e968d0130d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f80d4f-a751-4f52-abd5-422e7acb32c7",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f23943-9031-4990-b425-7724a2c2f66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e138c6ac-5b22-4aa2-a001-ee447066b0af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c012675c-bdd2-4c44-8590-6b9c08930788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "846c4e35-071b-4ca9-a1e2-fcf29687e661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a9f5a5-b72c-401b-bb4e-ec3be241d659",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a74e8b80-66e2-4bd6-b226-4b8b42683803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42b67414-b9c1-4c4e-afb0-8cc69dedb013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2c8769-e250-48c9-9460-dd46cf0e07b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b284cbe-8caa-43e5-bb38-94b358695fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d647b37-39b6-4e0d-b6ce-3353f21305a0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc63225-4dcd-412d-b110-2676c8fb7338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "132ae441-ad77-4c26-a4b1-d015b00a8dff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "797962ab-9d8e-48eb-954c-b6221e3f9a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50a5ecbb-caec-4819-a309-1ba61bd0e1f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ed12c0-e568-49be-a3ba-312ca8bd5f50",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c35d2e-05e3-4bfd-b45c-531232c067c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34a8192b-f065-473a-b846-d29b3ef50519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24dbc1cd-78a6-4556-ba6a-ac1478b7c348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53ec0130-36d9-4050-beeb-851d1cc3e47a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c30c6c-0a3f-4c90-bee2-2d707723e978",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5881c7f8-5d4e-414b-8c34-4fb948c51d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f72b9629-b6ef-4b19-925a-bb6b5026ab0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c5dbbb-a6bd-4766-950a-561ed34d4964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83b51e19-5386-4968-9f97-fc00fc9e32c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc8d69b-0cfc-4262-9d0a-057afb847d1a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d150e44-9deb-4286-9fda-78140b450181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed41aeb4-ec25-437b-aa63-eb90206f2c43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb2091e-0aec-41c6-aba8-77d618ff4c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "429b1993-1e2b-4ce9-93b8-e18bc57922e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcfcbcc9-54a7-4b59-9baa-6462dfd2edef",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3798d690-2fce-4f75-a73a-ac5075ae9768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfbceda6-b19d-4f38-88d8-83a765847056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc97a3dc-725a-4bb8-937d-03eef1fe06c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50ebba9f-ef94-4421-a78c-b4ccac2db4af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ea0f1f-b098-41bb-abb4-d6f1d6ef229a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24657b12-9a18-438b-a17e-599143c28bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fbc87d4-90f6-4434-915c-cdc023687d95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a604f0a8-35b2-4986-95f9-84b396a6b51b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2955597f-b296-4778-9f8e-f933add8ef1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf5ed9e1-8862-432f-b6af-b6dacb82d8c1",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33363fd4-7fc1-40a3-ab6a-b1047ba27d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d30c992c-6637-4e8b-a0f3-e24675ceb994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ca3eb7-e507-43a9-9338-3067c582f367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bda4fca7-c102-489c-a5da-49209dbc0d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f93998b1-719b-4b3b-ac1c-a3be7a026608",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bed6d6b-df45-409c-b19c-99cfe06aed3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b65960d-765f-4e21-bce7-1f8f2547d6e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b580dc-1c21-4d40-b924-3daad8b0c3d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15ee5d9f-32d2-4100-ad31-e014f6e2630a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ffdc32-3c74-4835-b6be-ff6b4685368d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d115d5e-c859-4202-8e64-1f2d8bebd1ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f69c8b1-1fea-4096-a40e-bd81fcde6a13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33999c1e-d801-46b8-898e-20bde0ae83ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d9a2855-3a08-4f1e-8359-67a96940e84a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b10b669-32ef-40ee-b8f0-17bcf5e688b8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "950bd2b2-09f0-45d6-b6fc-da51da6bd748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4551ffad-bc90-4eef-841c-c439d12076e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0fac242-71d6-4fcf-83a4-3c8d9ffd7a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b85a5d19-70ef-48b5-9cd3-adf9f7dd3c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0ba6d0-da3f-48b5-a8a1-f8ff8288297c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30272d76-2505-44ce-8233-14771fb10d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3078f3a0-291d-4dce-9016-886f5e173979"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "654c532c-a264-4337-a854-c11846314658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75f0fb20-b2d5-47dc-bdd5-5bbf14dc4b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "502b1a76-2e7b-4cf1-ba68-c86644068cd5",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e867daa5-ad64-480f-87c2-d7f34b6fa55e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b2fa675-9ae9-42ef-8ee4-5bda79ea0502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58aaf6bd-9efd-47c1-b568-3143a424c7eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ff97e3e-6377-4f10-9820-d213a0615ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc306b8a-48db-464d-b2a5-6bd82f666502",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc72528f-8dd6-4779-acee-75da26a070c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a949f49-e85a-4f32-861d-056ddeb2656d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4c1f276-42bd-4e7e-9a96-e8d3bc6730ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47ca0fbc-3d89-441e-942c-f9662670cdfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99331232-c5e9-4200-97a9-09e29fc8c3ad",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0026957-0525-4b8d-8372-f1efe69925c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7755500b-d7ca-4642-b4ab-2ee5d0ea9b40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5dc1b3-3140-4935-b182-4c9fe0e5899a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7afb1301-1e76-4348-9e48-a09612be4b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64c2e13b-727d-4af0-8234-2f5e00a1696c",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0d8dbc-4cee-4ecb-8568-c9678f6c23de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b50f7c9b-0560-4c1c-9fd3-cbd138f2600d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f71cb42-4477-44d1-bb44-6e54acd06e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33eb88c0-1b7d-4409-a7a6-1e771555a3c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a348d4ea-98e1-41f7-b39e-5739df9bd99c",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc0c2e2-b92a-47ef-9209-926b2d398bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3a8f7b9-9462-4326-a28f-3425c6482ae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29103b71-bd79-455d-ac32-95ba6988995c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4da770bf-51a9-4c4c-897e-f0703f8047e8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "03d1c584-0378-46f9-b922-7eb02e04f484",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0f4b106f-b476-46b5-ba17-843730dc6a4b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "244a574b-a157-45f1-92c2-3e2009cbd157",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f05d5ba2-0590-4fa4-b20a-c461417f7ed3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73066a4-f1e6-43d2-ada9-276678d370e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0da70258-6197-451c-9537-dabf9e8c7a82"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fee93e1a-75bc-4b22-b3b9-8d1dad6ee4d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e4aabe1-e719-4933-b08c-470443ce5039"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2767d6a8-3614-4316-8752-467a3abdbea0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59e5e775-bd52-4956-b872-caccd620ce77"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1103878f-d446-4758-b7f0-335e70941a05",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "549e6fc9-402b-4d4c-b47d-97cf5a0c0e22"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "34a7ad1e-afbc-4095-8ad3-119affe07d22",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "29873874-c60e-447a-8c8a-10733bd054bd"
            }
          }
        ]
      },
      {
        "id": "2252c24b-bb0b-4ec6-897e-325e3f193c4d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "cc2af4a7-8e84-4541-a1ac-515b7a34b208",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aebbea9c-ca41-4ec0-8609-eb2bb72d6b63",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a6af82aa-4816-4227-8ec6-1bf17bc3c177",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccaf03e2-db38-4940-9a65-bb32e086954d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dd3925d-3208-4d36-8ad2-db2b7af92c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b604d299-49bd-4b7c-b04c-0cd8ec0d64bd",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "883349bb-daef-4989-ba4f-2735f4e540b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2757854e-ce90-4261-baaf-f136c878a84e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad47161-2471-4db3-a236-ad5056f11a8c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3487943d-6337-41f9-bb8b-c37aa0ee24bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29c05e01-65f0-4c19-bf7e-0d1df302890b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a161bcf-5f05-4e2e-b235-50d88d29f7c8",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b507d03-2970-42a3-b2fd-905dcc72ce4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a56798d1-b9e6-4ff3-8d18-589c5b1196ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3cf6288-0927-48e6-8f8b-c6510ef9dde2",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7ecaf95-045b-46b2-8224-35e88839be83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd8babc0-7f51-4b28-b364-ed8656274ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f6ed8f-f72f-41a1-84b9-7259adf57fef",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "579a83ca-426b-45ea-8af1-65d2a85a3d7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87016fae-26a1-41c0-8b9a-f3cba10f0318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c079b281-50a2-44f8-80de-2d882610c4db",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fde207d-c9b9-4f80-8d68-06c3d7c21d7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "854755cb-faf0-4546-8213-f0612175c643"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7269bd-273c-420b-9371-5c0cce1adf52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f689ee72-539e-45d3-8009-7030ddc7adc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d983970e-8de1-4416-b87d-1ca1d6f532eb",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080f9d43-02c4-4303-9694-83f1e4f8a44b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87c09982-c8b7-4745-a40c-c10120bc8368"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "877ffd21-b8d1-4de4-b9a2-985a33de2a42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2de5d9bb-7fc2-4a26-ba4e-d15a7dc672bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "101f2525-089c-4d62-8b85-1585f7258a54",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e22be59-eb36-41ad-9f42-f231c15722c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6450aec-869f-4029-a83c-00f386512865"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3889f4f5-4410-4e3b-b9e9-339425593d1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "982827f4-8a08-42d7-bfb5-5eed834d5ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce3a8f1-da5f-4fe0-b1ac-958b24cc8278",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9243de3-9c5e-45c9-b251-3e2432d3e4f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e47038cd-6e54-4df6-8d1d-3b5e0a6ad511"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23ade20-32b8-4ee9-90ce-83d3abf1b0bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "211de4ec-c353-462f-84a9-4f8abbc97319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d58888-03ed-4bc3-b583-9edd25b0030a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb7a9bf-5e1b-41bf-9d6b-97352e2435fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f026d574-ffac-4145-84ab-312da188cd8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8823ff73-f7df-4cc3-a777-408af5e696c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b805b12f-453c-4a50-b274-4c0473728e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d0709c-bca3-4ca1-a35d-85b47e9356ef",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0269f4a7-3a70-4cc2-a5d2-1f5efbb843c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb825c50-d874-4f82-a6a3-2fa0f96352c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49191b65-6ac0-4a65-9034-2c3cd6f29e83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8495cfaf-7f18-4c27-aaa4-382208984f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b48760b-1802-490d-a1c0-19e305bb168f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db73f003-1b8f-4941-be8d-42f724076809",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bff2d190-dc56-410b-a5b4-7e4bb606b6a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44944903-bafe-4276-878f-375caf3ec28f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d69c5326-e6d4-482c-90a8-217ff4bd139f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad630c1-b258-4f3d-b32e-21bee92d351e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c34dc6-5379-40ba-a26d-90b7e3f223ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60ad0e6a-66e8-48cb-a10d-e7395fe270fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32226d7f-fdd0-4f0d-aad9-dbaa1463e56e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d607d8c-077c-4227-9cc8-d8bfaab0e4f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "705f1403-e9bb-4d9e-9e37-3b0a98430cb6",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8703992-2863-4b73-827c-7b4c5c772057",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ae3c73b-66e6-42a1-84b7-b70a01294208"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a3e55bc-b282-48c7-9e4f-25088678912c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb00f42c-f46d-4787-922a-9da41957be19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73bb8654-7102-4fe5-a17c-e4416204a6c0",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "109168c3-1ed7-4596-a76c-d15aad5c7e1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da754bdf-b459-4d9a-b159-849994f6b638"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecbe908b-35a8-4c2b-be01-f484994b93f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2f783b5-7fa8-474a-8f70-5128abdb4295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc60a84-2003-4182-adbe-ac7dbf19c2b0",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7fdba23-8298-4b83-84ff-d626e00ee422",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "add82bce-8d05-4a63-a98e-b508871e39cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90be79f7-cb2b-4977-a98e-921b2734a85c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e26b6ae-fe3a-4522-9205-3c602db941c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c0a370-bae9-4a8c-8211-965ed1e5b32d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e63c0fd-647f-452c-9728-7151e4f4308e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fe5e998-1a73-443a-9ffa-18a112097351"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "113891fa-f301-49a0-89fe-f73eea09cfa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4839862d-1f4e-4f51-8943-6ea96d6d0ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb5ce11-20fa-498b-bb93-82903f80d686",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e5f32cf-7aee-4948-a54b-1a2582bb0aa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11c9dd76-c48c-4110-bb14-6bc50826cd34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "711c1058-0512-483c-9a43-cf3fd159a3f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5d8a5ba-7000-4dbe-8ddf-34bfb53803e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c2fa26-ec76-46e6-ba1a-aa954ff055a8",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7c13748-2776-427f-b615-78b94c8b3d2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e809ddcd-87f6-4abf-bf09-db8ba4efd982"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b39b018-395d-4e5f-8768-08c80ebbd968",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed10810a-9117-4305-a68e-4a21daa69103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eae32e2f-5a27-4f0e-80a0-a7b918e52fe5",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b24714-d11e-4e28-a1f6-1e191fd83fb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac28b29e-3a1e-452b-8b69-a073e5e8972f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f47b74-78e6-4b56-87cf-08c26468b9b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31dfa546-8781-4e71-b487-c2d4feae80f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c00a877-f14f-4965-b38d-697961adcf86",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09cc64e0-c8cb-4519-aa51-35b325d9bd6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "169ac02c-fa0a-4ed3-928d-3872fcf546fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b816fbb0-b911-4de6-99bb-d0718b4ee473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95ecdcbf-5663-433b-b063-226baea52ff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd55efb-91ec-4366-8af0-daf54ec683fa",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2215f708-cf09-4f44-8d39-0b537a3aa8e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7d6c87b-097f-476f-af26-e7c390d33bde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "254e5461-a78b-4118-81c5-b0448c34b7ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9e39819-1340-4a08-a639-9ca5ac395f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9612a9d8-5899-4a2e-8b1c-93c36cae58d4",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2592a1c7-bed6-4d79-86d1-1f255c28df2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a97bee30-4c00-4332-bfdf-aeed6982d7ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ec69b2-32ee-41c3-a195-6f0ad9735711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "976d8ab6-1b57-4962-a12a-9704a8a58d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ecc646-cd9e-4e74-9f93-3a4f5a5ba627",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66667667-37d3-4c8f-95b5-3297f1e6dc55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88d3a1b6-0962-45ce-b48f-55d629df233d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfca1a3c-7536-47b8-b138-b71b0a34bf30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84b38ce5-fd2a-492f-be55-07414b71b605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ca1654-4836-4f2c-9892-572034d0931a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc4f490-c33e-4232-8709-535a9e525b16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8be20b2-5a8a-4863-bb66-b9a60aef5d15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a8995c-bdef-4a39-b8f9-4668b03ea0e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9ce13b4-582c-4602-baa4-b59b1f716644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f848a0-44f0-4b3f-85d7-a7efef3b1b09",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b4122b0-a6c2-4e86-8337-ad429ad1fb64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76559b71-2805-4a4e-a938-798196c5a71f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1038d175-ef29-440d-a649-9e134f2eed0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7ca63e3-2a13-4605-a1df-8a5c2b6a7870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "011bc8ee-211e-4ac1-98a6-5f152f46428e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc806d64-4821-40dd-b32b-3b8560f37eea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71715f4e-5195-4b85-a7f4-177aa6555888"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c65088d-d70e-44c3-a225-bd64845a5960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85b2b073-a21c-4395-a1bc-6f8dfa3f5d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33c630b-0327-4265-97af-43fc0ec0d5b3",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa6f2bb-710a-4137-8bb0-30a1d14ccbb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "631af642-7e02-47e2-be10-a0a99fbe2002"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a532174-111a-4284-b559-0376eceb4221",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fef01765-7b65-402e-942c-e2da5ec6c3ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b627b686-45d7-4003-a7a7-504b932f308e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f4a298-3b06-4f3b-8dc8-3615b242cb0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05ddb6be-80f8-40d2-b149-2245c53c0f1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67bba02a-bb5f-4423-96df-513da0fc5ac7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27d62198-e752-4fcb-aa7a-276fd3e2bc3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a56628b-5764-4c45-b083-1d438aae59cc",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e650fa97-c606-498b-aced-9565b2bb60a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce0b5d8b-c21f-4557-92a1-722fd555c89f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce63a7b7-167f-4134-9036-8c528571fa3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0811a6f8-52c5-4aad-be98-8bf5a8a95ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9094d9da-537b-4074-8424-061e2f2f09f5",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43205be7-d26b-4a31-8e66-57a7166276f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24f2058a-68a8-4d62-9b7a-5dd7431094cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e8375f-84d1-458f-b383-48eef3677b1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61eba1ab-eb78-463c-96ae-6bd231b16823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb6396d-2479-47f6-86a4-f09a0c75f656",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e8d7a8-59de-4e6a-a95d-dca44f88c363",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68b7c119-6f86-49de-87ee-ffa79eea30cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5df558-3a98-445c-b937-4a4b7bf1e521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5682fe35-8e1c-4506-9ecf-f7a11126b969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d56e359c-3372-453d-b66c-8459e9b9de92",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0932a319-e4b4-4885-a534-79d4b153897f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12b01c3a-bc7f-46ee-84fd-1741164e7fce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef2f317-9eac-4aa5-9cc4-2584d78af264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3040532-546e-4c72-844d-26002d60347d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a48ad09f-0049-4dc0-a999-57700645eed7",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "021cb32d-077e-4738-9dc8-c7a5f4300689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df8aefe8-4951-4114-a725-a4b474a29c9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "243f84f4-a64f-4ca8-ad8b-ab20e84a7911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35037f75-4e80-4657-98de-4f8018f4a468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e436fd3-2611-4c1e-aa00-33405129935d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ceef8d-9426-4baa-b18b-cd8534203267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d3f1666-69a4-4473-abba-75a0e95c06ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29eff9ec-c63a-43e9-81e4-ea0eb4679318",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80f652f8-d042-4b79-81e2-1a6aef993633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "426fa9e3-9673-47a8-bcb4-625d67bf2248",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b36e671d-efe6-4914-a1ea-096e215363ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4bf90a1-fdf1-4d70-a7d4-ab1523f534ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5489f4-740e-45bc-8f19-a186db035dd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f63d7fe5-1d0b-46e8-81cc-a957d019627e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "167a761e-cee2-4b84-9808-fc602a18da63",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d0a522-dfc1-4cda-a5a7-616c705e4638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e18579b-af8a-40f3-b7ca-0f520b7323a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25daa1ff-3d68-4b51-87e7-004911363cf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "919d6ba3-a8b0-43de-9d98-65bce442fbf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba13508-c5de-4126-ac01-41c0fcd805fa",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab1e44c-b85c-4842-9b8e-2d754ee45f0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7701be91-6590-4ba5-94cb-f1c4c4504606"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "517d5ca1-df82-429e-be4a-dbe46c4e742c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ffc9e15-7dbf-458f-82c3-cdb9239f079a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab6c55e1-0736-4b67-a8a0-1c8502bc5476",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "199cadaf-9f04-4f83-bea6-1df32b24b51f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87d0ace9-9e3e-4fd9-860f-a022b2cfb88a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c81c78e4-b41e-425c-8034-2703af916c95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "772b313a-9900-4afc-b1ee-9548c1d8f326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4538e20a-ace6-4f2a-b439-ae8a2b1bad8c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2ccd91-8d0c-49d5-b2f5-ccb5ff1df725",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb2fdc86-8be1-4968-a11e-4137eb0a2e44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c233067d-23eb-4beb-bf4d-128e343e3721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74153fea-01a6-4148-85cf-9c12f6792d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78eb3160-05cb-4b4e-846a-32962621efd3",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a16b63-82d7-4648-8ad2-7075ca494098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f79e92f-32b9-47ba-9e1e-a6fa971c9a9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc9cf17-795a-4c2a-ad78-79497d0d5774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b8e9e9d-111b-490e-b222-c43419aada44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1edd7189-b7d8-42d1-8612-20b3905b93d4",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc3047eb-b745-4a7b-a2a3-bb389c5b1a69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74768c5a-8635-44b8-97a4-56ea61fc4160"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e83cb4c-651a-4858-a46d-24cba2dcf2ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad53581c-a4b0-407b-b95f-873dac55ed0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deefd92a-2c20-4619-9a82-4a1b789a9f42",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d288fb70-47e0-49be-8324-42564a7bfa39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65e1e962-e8b1-4c13-852e-539e4aff657d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2173f5b3-0251-4f78-a852-af41fdd9260e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de88df1d-8869-49e8-988c-136fe5b4c7c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38705a12-a83d-4635-b2bb-9b4a7a9b7da6",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc964e5b-6cbc-4ebb-952a-5074106f5e67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54b0e184-be4a-44ad-a567-9e1c5395ac8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39eda262-cff8-45a6-bbd4-5e7d9607de9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "052bac61-3b73-477a-ace7-caef06288d26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c6d3841-4e08-44ad-bbbc-4f431f5025b8",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8efabcd9-d8f1-4e27-abfb-84da60df0257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4df6bb80-7a48-4f9a-ac0d-adb99bb67da2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8027455e-22e6-43a6-84f6-7752ec2f349c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a7a8c02-834b-4987-9e88-f77030fd0476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05d93ef8-1125-462c-9a12-20c665c629d7",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4c4543-0d53-4c59-b99f-6778d02d0546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf575dd0-b90b-4c49-b398-41d8963e2349"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9818b87b-5e36-4932-a01e-e7b38edc8f35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bed8064-68f7-4cbd-bcac-9963adf7f38f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741885fe-8a42-4ac2-baf6-f942fc8c05e1",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad00148-e5d1-4a4f-b67e-153d46b70db6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf02bb0a-6b76-4254-be9f-50b2d71de316"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb86cf6d-c5fa-4012-a3ec-6da6df986a7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8d228a8-a697-4968-bef1-3f046e5cc897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d9854c-8c71-4c96-b211-c117fca95d6b",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d8a3d3b-0e51-49ea-bf3f-239c43b6fdef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef7588c5-293f-4d93-bb4a-403665df7b42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48fecfdd-2447-401b-90df-e78f7ac77721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e605a1bb-5fc6-4ca8-ac1e-7edeb84a4abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f76aec8b-575c-418e-a2eb-d799b3af8dd6",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b70147b-ffb7-49c6-b665-db4d1c1740a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18dd980c-9c8b-487c-a498-49c3d7681547"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "879845f0-47a1-4ad2-b01e-761a7ad04245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79125a65-5f9e-438b-b9ff-caa8020b4f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a7702c-53a0-43d0-813e-42c0b3e1ad5c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb3a8b9-bac2-4742-b6d6-efee5651b4e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "042f27a4-1f7f-4935-a1a6-4b2bcc7d1350"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e12437-c9b3-4e18-a70c-3ddc8f412ff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee36b73a-158e-41c4-a112-030a2aac14b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b31120f-0cb4-4449-aad9-690ab51f46d2",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1efd3ffc-c63c-4017-9769-948a65e361ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5984e00-b291-4ba1-9f4c-b5da6c84e205"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "560e82dd-318b-4ec3-bda2-922523e135df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32aeba3a-b0d3-4d34-b7a2-147841431422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96eded7-651e-4bd8-8f89-b1853a17b72b",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f327a7-1ab6-4f44-a9fa-29b726fcda6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6caf3d22-546e-4c86-a552-ef97a234200d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31730561-4475-46cd-b7d9-c94ad51e945b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9385aa5-68e0-4082-b41c-241799da194e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e0550a2-93be-437c-a8a5-3eb847abe2b9",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b20afcce-5449-4cc0-86a2-71eb395e5672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "614af7f4-4995-43a5-b31d-fd97a44bbc20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45056b4d-f7ce-477d-aa49-d407f219936d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d81989a6-56fb-4d8d-b58e-b0ad14c092cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa1b7b61-71ae-4d49-b1ed-61baf8c2ca46",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a35f244d-ed85-4ae3-be24-b889cf2e517b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80e9d0f0-b8c7-4c53-a807-eb71a6d4de02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "188ef645-19f5-4edc-930f-79da07d84e96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "793872e1-3128-4ac1-bea6-37ba03672b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f5b59f-91cc-44ab-92df-9e42e09f45f3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22cf7a6b-a896-41cf-8ff1-3b105d280614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "928caba1-e4bd-46c6-b791-125e1b6fbd6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db088694-021b-4e85-b8f4-6f44b989db3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c6fc9d9-920e-4744-b8ea-92deff43e9e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a96aa18c-52e6-4896-84ad-0e01e2f2107e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f25d27-e56b-414c-b63b-b2b78d1de623",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "002b4291-5cfb-4009-977f-5f5a216f8511"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b24322-2a59-488a-a5b8-c6029d27aefe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cef76752-85e7-4392-bde5-9c4308151b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "932a397c-85d3-4855-8c36-45b78b54729b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d98c63f-ff33-4be5-9bd9-84fe2730692e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3743a8f-5dc0-44de-9ef8-b3b73869c863"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "999b1c27-397e-4b3e-92ac-77229dfa99c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aeef33c-b744-4b8d-9cfb-2b356db65f77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10899f7d-da5b-4e0e-bd5d-5a8c37c3b3a7",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783f6393-f742-4bfb-9fc9-cca2b0f690f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd645a19-e710-4aae-829d-73db695e6cd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c76d01c-1981-415c-85fb-7a3dcae41cbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1057ec93-6291-4243-ae89-8e704df34ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe6242a-512f-4af3-8a02-ea9911c467c0",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2cda64f-3f38-4b1f-9103-64ec49b0b3fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bde18448-91d4-4902-8f49-5d1e9813e82c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9ff5d4-8360-449e-85e2-7b34906056f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4c97532-5d17-416c-97d4-68e6c564f174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69435d10-8e38-438f-bf3e-94e0296412c6",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa138352-a520-45cd-8a61-cf7a7883e380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a2dbed5-983f-4915-a2d1-65597ce1fd03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93472c10-6f46-490f-9232-68c2473659de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60bf1802-0a38-49b0-8216-ddb511cdb6c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e37927d-03d4-438d-8c50-ece0021ad858",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97d0800-1b32-4218-8c6a-93dba2051a59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bb5badc-45c0-42bb-b762-d369252577b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b60b828-349a-4afc-b9c0-2024f5c83cab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55ea1619-2fba-4af8-b830-61532c5167a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a000e38-6f1e-4d77-82a8-1425a590e9f6",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b23e2d79-5d17-4fab-a9a8-f442bdffabea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "078288b3-b6a9-4019-a01f-0840df1a3de3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b497e4-d87a-4abb-987f-a4a02c98625a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dc5943f-a07a-4ea5-b575-3fd0faf9acc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d21e42-4fbf-4243-b014-d86a73f08588",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da9d1b37-0ced-4610-8712-dc1d88db8bbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c020a93-1754-4f27-b6dc-f3c81710a965"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d0a9d9c-38aa-4620-852a-eb4622f42a5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45dfea62-9cfa-4741-a3bb-33fcad5dca51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0fcfc6e-ac62-4530-872f-68bd51613104",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ace686e-551c-4227-9984-f91f8b33d787",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7e65708-a5d3-4854-a6d4-780f54c133d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d3de67-dc26-4ad6-8391-5e3b7b46d0df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d03c2645-1651-40bc-899b-7c719022ec12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc447c0-bd61-48ef-9bd7-4db7fb0b27f9",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1241a56b-ed6d-4b83-9126-ac54e904dff3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2552528d-2191-4b30-96ab-c4d507705e8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4596b804-82e0-42b9-b6d2-e97c0ead402a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fc4aa1b-de5d-453c-b001-e7ece3c74dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af5dd213-dac1-40f9-b178-f575774ca80e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca27ad1-db93-4b9d-b93b-f23c4223241b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1b4838d-24e0-416d-bf4c-780402f02482"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae9ab8b-5d27-4a3a-8bec-8a60a0a6cf0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "210b544f-2bbb-4bdc-a90d-fbf208efed9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df420e10-fad0-4458-8952-4c2d5de4f7f1",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b743f9-6efb-4226-bbf8-83741d66347e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb74502a-ce50-4eb9-9375-e234a63e273b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "884d429f-4162-473e-8220-f17a1f7a07a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "914fb605-1917-4c73-bbbd-c5b32034721f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07866764-5dfd-47da-b641-81b0e920b59b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb086fdb-566c-44c5-9f20-fc4b1aba31a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da7f31f5-dc57-4bd6-ab23-25457c9ec566"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "175c1918-4fb6-4af0-8bb3-df038ced8d9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "174791e0-b924-4fe8-a5c1-2e8965741385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ceb5a7b-62ed-4b00-8252-7c438aeb2ea0",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8673e0-1b8e-42ff-9589-14092ce7dc73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d927fc8-fac9-4b67-9f3c-7eba32646d13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a2041f-3682-4c99-897a-b5fe81c84c01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53099942-bd9f-4b7b-9843-c04ad030afed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "861282a6-4b38-4d40-9b98-a85b794def9d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb77a3f2-1ced-40b7-9da5-53a5b2a718b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81712be1-adba-4f4e-8974-3e4db127106a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8397187f-1bf8-43d1-8e9a-e71b1044f7f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fb62944-3bcf-422b-9f1c-42f99db41e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a5b61bf-78dd-494b-bfaa-90f0b6dedb3f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed5651a5-7f35-4077-ac44-8e1622057700",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bee65c6-8fe1-4521-b438-b89a64631fe7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8351ce3-e41e-411c-a48b-2bef63e1c78e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df7e62ca-991e-4f14-bd1b-c630306e7749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364ecf99-a8f7-4a54-bd51-9ba6ad1fcfb4",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7dcda6c-f343-42e0-9a24-40a184417afc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cde03477-cf2b-4171-8806-972cffaf2ffe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b53d101-e1ad-4573-9f5f-4858b04051b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "163b7693-c84c-4fb2-8f69-c924ca8cbbdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd87de7f-430b-432c-b398-bcfd978a5558",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f526ccce-058f-422c-a7ba-ad961de8cdcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a07053f-d67b-47f0-9fd2-32c4cfabf632"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "168c878c-a1b9-4a17-a2e5-8be87051c548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7fadff9-ad44-4cb1-8c1a-4aa6fc22a726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71926161-acb3-4307-9603-f520be9598b8",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab0927d1-f86b-4199-a0d6-0c85b95937ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f00c5b38-3490-4eed-83d8-8126751b0a70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9fc748-6710-4535-8835-18322105af01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99928ea2-5781-4303-8a03-03263344915e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f6af37-0dca-4fbe-8fae-b6585161c581",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968f70f7-6428-4ad2-8265-0a75d5666106",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7a3b58b-ea1b-4b46-80e7-8f36b8689ec3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "320721aa-6f41-4f39-b934-569885a6d586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d05554be-d59b-40f8-a2a3-32714d236c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "638d5d14-1751-4881-923a-0a0828ac6c19",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebce89e9-4487-4322-b951-ac5326fe66cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c006e66-a6bb-42c6-9418-ceb6199684e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba337318-ccb7-4ff0-b012-31389f2ab900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d81df3b-52a6-4033-aae5-91904fd04750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05989256-7e4f-4722-8e3c-e07acc427160",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eee43e9-6e3f-4a0b-901b-b1d3c3484a6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2eb5cea-a4a7-4b9c-b88b-dcb95b2022d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2beb6e0e-26d3-4da6-8c3d-98c77ea521f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90033919-35b4-4650-b324-79f176b36d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7829dbd2-e503-46a4-9b0d-0b0ce60241ac",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fcb098e-9bbd-427c-b76d-93fc4455b85e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db123b6d-de4c-471c-b9f0-972bcd3770c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a89d125b-9094-4451-bf35-781dfc429868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37b83b14-bd91-45a1-bb18-7a1121b7412f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec1af39-f994-42bb-ab71-f0586f15f8f6",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "762db665-3bb5-4ce0-b98a-ef7e287a3668",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b156bad-46ca-4cb1-987d-63f40f830e1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db4395ce-d0ea-4d9c-b81e-d59db28d056f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5d6faa8-e3bd-4b76-8154-b5b59d01f8e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dbf306e-c9bb-4f17-a4e8-fd4c29a1e558",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "977ed942-11f2-48bd-8f0b-8a49f1a0a122",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c7a3366-ec8e-42de-a9b2-338e5ab4cdf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2267427c-1d4e-45b0-9217-33c9b833033d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6aa05d8-8f26-43c9-bc47-74be9bf4cdf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd92da9-a4b7-464f-83d6-54483915ac26",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b44393-2eb1-482c-917b-6919dcb36f64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e2a08c5-a3f1-4c1e-848c-ec2888c6ee58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf8626e4-026d-4c7d-9846-cc32568b2fc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0459f548-1003-42af-aef6-e52320790f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4627912e-ace1-4c5b-9f58-cb6713139f8a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6334aef-3711-4568-a002-16bd667d3700",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "517964b7-5872-467b-849d-02ec320ef142"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c0fb3e-dbd3-43fd-8e5f-9a0cac9b542c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a779dcf4-6588-416f-987e-623135f1bd5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "725f4922-dfda-4657-8a74-3a1483ce0a2d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7beb7108-04f1-40fc-b2b7-80f79f80f49d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a0ef57f-11af-4897-96cb-51677f33944c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40ad81f-8a5c-41fb-8558-c2408da8961a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb49b40a-4fda-4f4f-9fe0-034af798e4c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190e9ccd-8a41-410a-af96-1acc74c5603c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d96471-850f-4c7b-b5ca-74e73df7bc63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26fa44d5-c807-4bba-b7d6-31d268db3e14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc8f46b4-132a-49d4-bd3b-f3a02579e8f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a51191c-af0b-4f89-8337-0a8f60c3564e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c743e4-ca00-43e3-9fbc-edbab124b211",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f479ccda-6498-4afe-94d6-a03d67b7387c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7682327f-e167-4586-ae80-9c4f1937c573"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ca1e77-76bb-47ea-af0e-b7647648ee86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdb87d80-2900-4a27-ae28-65f63718917f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf429e6d-afa9-44fd-ae39-dc8206ee3ffe",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df75faea-d49e-4d62-a85e-5f4d153791d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d7e33c6-9c50-47ff-8237-02e805df7142"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c61c124b-5904-479a-b917-7e1ca3cb96e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fdd57b7-183b-4a69-8899-e64cab163e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8332890-253b-49d0-87a2-eb1c25188cb4",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db80977-d771-4973-a363-ca596a62fdd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00c333e6-b099-41e7-b994-7b2ac80c7973"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f5184e-309a-469a-b1c8-b2257d4f52d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4d5e687-9651-4f16-affc-1a976a9d4320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a79e4f45-24c7-45ab-8d89-db9057c6f8a7",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69925300-2a90-4715-9ed4-95c4fcbb7cb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "265eba6a-b6f9-43e1-a7b5-373f3da850d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52cf4ce-b257-457e-a719-6cf7a3e80288",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89f4ddfb-7c35-4b3b-8845-ab018b64ffd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdbcc4d4-835b-4727-96e7-325d68b063fb",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56bef152-d710-4fd5-ad88-72169feefc05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd55bc0f-9ce6-4362-ae87-ffe24208409d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4521daa7-3df8-4eb4-970f-3cc41c1dfaa6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1261c356-118b-4c6a-8712-667a1e4e5a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c97063-9f85-4e58-adb8-c49485261652",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7290fb4d-2509-4b4f-943f-dc5a54e771c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6e519fa-b991-41ba-bb45-0f5a84dec84e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbcad4f0-ab0b-4a0a-a93f-eb60e9608769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a11a3479-02bd-4b1a-a5c8-ce6cfb1367da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52bba9b7-d777-4e40-8c2e-e444b34a023f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab101c6-2f18-4a07-af81-41e6ba6406b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e193fff8-895b-418e-8ed4-06c50c4e157f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e0ede0-8f69-4fbc-9389-4b4d2f9220bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2a8f649-86e0-4b78-a5d1-6a440e28cb76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "677756b1-67c3-4469-941a-e2b01762998c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a292f632-89a1-49c2-8329-16d95411d330",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5db5ba95-c4ed-427a-bdf3-e23de2a21f42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1074c5c5-aa27-42fa-9494-d75241351de6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a77412f8-c2ae-419c-b774-7064adaba22b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21019540-1c67-42b8-9cab-6b7a65244fea",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe1a1d3f-50f0-4448-8c06-24088ee5e38b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cbe18aa-69a7-4acc-98b2-991cdb8b98f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95936033-34e3-423d-8bb0-17d94af55404",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35c43988-872d-4fef-9721-448941144b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f77ef3-2afa-41ea-8daf-0354c5d22faa",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dfd5922-2a0c-414c-8a04-23b89c75cb95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "426f44d6-2a04-424a-9058-e06142cb7b6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3582547-76fa-4b16-8c8c-6ff1c4c55eb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dea6fda9-3106-486e-a509-4ec540b13137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a78cbe8-43fc-4e34-aabd-e75e777c1311",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e88d82-4b6c-4ddd-86d5-a5b24dcbcb89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "276bcbf7-3413-4bd7-9864-e83aef5af418"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ab56e7-5582-4ee5-8b1e-145518ad22fa",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "430181f8-fc00-4c81-9834-407ced0df325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a93ddf8-84f3-4f72-928e-10296946ddcc",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "125ddfce-2d69-4c97-9ca9-07b498ae4f1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63f2bba1-5e24-4d4a-8728-f92e9cd53a48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9b3dbe-72de-4c34-8675-791198d129b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01a1e5fe-0dda-447d-ae3b-a207f958113a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f18a5de-a90d-4386-972b-9edd92675454",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fae0f276-16ac-4fd4-8086-ca72c2365aad"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "585ccc02-d9fd-46b6-84d5-4237ae1745db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b072c449-69d8-439c-8da6-1b7c764e68c4"
                    }
                  }
                ]
              },
              {
                "id": "cacb4e1e-a21a-4439-835c-85cb09b64b19",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4fd3bffc-f251-484c-a16a-8aef5ca1c7a1",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c757e3-c651-428f-b10b-daae36fc9785",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1d4d4674-c5a3-4da5-8bb5-3c0aba08209b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b2259e-5c83-47d7-b2cb-64a0ab1ad7e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7e7685d9-a5a9-4f93-9829-432387137c4c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4a784970-097a-48cb-a5f9-1dfd036f9869",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb4d9209-3225-486b-aee7-0014e0786247"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4164ccc4-9b43-4e78-a4d7-bb1bd94ddbb3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "56c5ae11-0c44-4a22-903c-89f3b4f5bced"
                    }
                  }
                ]
              },
              {
                "id": "305f10a8-12ca-496b-aefc-996b43e358df",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "38a7c814-0143-4bac-8874-40b25a7dda99",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf2f97d-2925-443d-bd9b-5715736d689b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e35a777c-6521-4ebc-a0e7-fc4e5897cc7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97752f30-781e-444d-a1fc-6469c7c4b663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca313ed1-c32c-4b3d-8bf9-23936dcd2956"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a07bcc12-dffb-4a1d-ad1a-86c31207c310",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6ab773a0-26bd-439b-88d7-9822ec565938",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cafd3b9c-59d6-4467-a5fb-2da219d16020",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "197aa153-96db-45bf-8c66-fe7913db5b6a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41614631-3a63-4209-b0eb-33ff2f1b31cc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20cf52a3-fe25-4f7d-bacc-ae402af04434"
                    }
                  }
                ]
              },
              {
                "id": "26e090d7-9ba4-44bb-940b-fe5cadbb22a0",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd932192-5e32-4fa7-9394-58debcf9d20b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9013b179-a636-4d90-be31-9fee84344fd1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03eb16c8-a618-4c54-8a4c-14db6179cfa3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7d819b3-5a90-48b1-b99f-d032aa1d17ae"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "565158fa-ed8c-4c42-8721-6ee5d39fbadf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "764e0db3-699c-489e-ae0b-89adccf6d920"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8cd8d355-11df-4727-a540-50a2447b09e9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3712f600-e902-45d7-b88c-ab16fd23d8d5"
            }
          }
        ]
      },
      {
        "id": "6f24c044-d3c6-464a-ad22-2775fea22628",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "898b945a-47c6-4c7d-a013-85191c3abfb5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "15bda006-0ce4-4102-8ae1-23aa99ea971c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "105a25b2-1f97-44ca-a6b9-4e72803c319e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63612907-8fa4-40a7-8cc0-88ab305ce2f8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e24b6011-3233-4088-b7a5-f77880cc682b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dbf9491-7a5e-41a4-b8ab-30d33072fb1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e42293f9-1715-4945-a400-e98d58d8f268"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e803ed6b-1b15-46b4-885e-8e7d7ed8996b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d07aa2cb-ba49-4015-a74c-d1927ed2641c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e13a1ac9-5833-4202-bd8f-aff96dbf0778",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e434897-e702-47b4-9ce3-b7563543d181"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1ea7edc5-49b3-4552-9986-b35a93111282",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "077da320-3b19-4ec2-8c53-01ae18df8bd5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "99a91c04-a105-4bec-8b78-6cb12cbec17e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8083f3aa-6742-49ec-859c-16dbedff3132"
            }
          }
        ]
      },
      {
        "id": "5d66fa62-ae57-4787-8a6c-d621d7467493",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "3b95a166-b541-45d7-8edc-d767fea62877",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eae8ed0c-a062-4a55-b727-fc2abf3d6015",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ea6176de-7aba-438c-8677-fe101917d678",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97545643-d654-4c86-bd26-42aa2edc5420",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80ebffa1-d379-4ec8-881e-311556e1509b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ab6bb7-3b39-430a-892d-880de2a70c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ca5fcdf2-c68b-44f3-a826-58e51692425e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72b96ffa-df21-4221-8a91-6d96ef7dd631",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d93f9d8-71cf-4378-8ca4-cec24e6d2063"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "136918f2-0d97-49d2-915e-7d5a2a7a810b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70c368f2-6545-4cb7-98a1-d5ad519edd5f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "df54a6ce-4e8b-49a8-a65d-e89ddff52220",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ea1a69ce-9b8e-462e-a6e5-53ebd063bc36"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "133ead05-e1bb-4539-ba48-2bfb91e81585",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d63561c7-4d29-4494-b390-b347c88690c3"
            }
          }
        ]
      },
      {
        "id": "ff33f59a-4cf9-4c52-a54c-dc672bed6ba2",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "eeca82c2-5f22-4568-a6e2-d077e94ddd19",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2fa14f3f-1ae6-4392-9c35-5d2970eecd07",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "462bb5e1-7d5e-4093-b8f8-54f7af27f08b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e2dfb01-e1b4-479e-ad04-17091d217f24",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87ee7bb1-f52c-4a0d-bd22-7ee72b687e4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec5765a1-4c2a-4efa-b0ff-fce63bdef812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb0f925c-1446-4f60-9fe7-18af0548fa65"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "061cc112-740e-42b9-8157-5d022cdc43c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf52866c-fb20-4f10-ae81-cf3f29de2fd6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc417ff0-7f35-4d12-a383-82ff0ff94223",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31aafdf0-c21a-4b3c-b5f5-efa855996081"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d4e84bc3-2d14-4790-b483-5f2bee57271e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0ba5e46e-aade-492a-959c-763c6fc9051d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2364ae02-0041-45f1-9a2b-4db01367d062",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8e7ccc65-ebc3-4f94-99e2-fae09f8c1a7c"
            }
          }
        ]
      },
      {
        "id": "ca19642c-b716-4ff9-b512-035d139f5f62",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b9c11df-0d94-4c01-a14f-1b261f5fdeb7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "638d0994-9c6d-4a9f-a015-48845903de1e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "98ac1112-789b-47ce-ac0f-a047f76485aa",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "79661859-c7ee-4a49-be55-37190844b177",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "109f0073-ef66-4280-9233-bbabd0e58fef",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 69.08450704225352,
      "responseMin": 8,
      "responseMax": 252,
      "responseSd": 23.579351481885404,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1694133154483,
      "completed": 1694133189445
    },
    "executions": [
      {
        "id": "96a6ae48-4549-42c5-93db-5db28e01464d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9390517b-4a48-4501-9142-873e0a8cacc8",
          "httpRequestId": "3e097053-1d58-4608-a093-c33c2399069e"
        },
        "item": {
          "id": "96a6ae48-4549-42c5-93db-5db28e01464d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "429b7c56-dddf-47ed-992e-aed0edb3f162",
          "status": "OK",
          "code": 200,
          "responseTime": 75,
          "responseSize": 0
        }
      },
      {
        "id": "cdb4c058-7dad-4fee-ab29-7ecaba2872b6",
        "cursor": {
          "ref": "68b4b99c-154e-46c8-930d-50569883aa1b",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6199b38a-d940-4d93-9e2a-4208325a61a4"
        },
        "item": {
          "id": "cdb4c058-7dad-4fee-ab29-7ecaba2872b6",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "2ad5f890-9b6c-4f17-a08b-9fce3beb3100",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "1283603f-f696-42d7-bc5a-9ec383cf38d9",
        "cursor": {
          "ref": "2543b854-9f9b-4860-ab2e-9d93e50f1826",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6e41d779-6ef3-4cf2-9d60-d856410df71d"
        },
        "item": {
          "id": "1283603f-f696-42d7-bc5a-9ec383cf38d9",
          "name": "did_json"
        },
        "response": {
          "id": "6ba17d6f-49ca-477d-905d-42ccf8e25358",
          "status": "OK",
          "code": 200,
          "responseTime": 229,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd0b86e-59da-4a7a-bc87-5a86cf3ab2e7",
        "cursor": {
          "ref": "395c7c47-d62b-43d1-9895-b69ccb9a032d",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8a73cef5-34fe-4dd5-9ad2-cc3038a2a9ae"
        },
        "item": {
          "id": "8dd0b86e-59da-4a7a-bc87-5a86cf3ab2e7",
          "name": "did:invalid"
        },
        "response": {
          "id": "85a3b8eb-a67b-4326-b295-5ee6db77e91e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd0b86e-59da-4a7a-bc87-5a86cf3ab2e7",
        "cursor": {
          "ref": "395c7c47-d62b-43d1-9895-b69ccb9a032d",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8a73cef5-34fe-4dd5-9ad2-cc3038a2a9ae"
        },
        "item": {
          "id": "8dd0b86e-59da-4a7a-bc87-5a86cf3ab2e7",
          "name": "did:invalid"
        },
        "response": {
          "id": "85a3b8eb-a67b-4326-b295-5ee6db77e91e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d85c33-f17d-4443-98fe-380e087eeb5b",
        "cursor": {
          "ref": "3d4af086-65c6-4429-ad2d-5f314ccb4418",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f8511261-01ee-411d-b19f-00935f887dce"
        },
        "item": {
          "id": "e6d85c33-f17d-4443-98fe-380e087eeb5b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "5b435e1a-37a4-4956-a645-85e011191512",
          "status": "Not Found",
          "code": 404,
          "responseTime": 108,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "873c5131-bb6f-4b4d-917c-3bab54553db5",
        "cursor": {
          "ref": "0468b620-b1b4-4f67-9340-ce5a8133fe28",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7b480190-64e1-4c64-9edb-bbda5f61caed"
        },
        "item": {
          "id": "873c5131-bb6f-4b4d-917c-3bab54553db5",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d924733b-996f-4da3-848c-cc8d44579d51",
          "status": "Not Found",
          "code": 404,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e6dddb-64cf-49cc-897b-3092669611b3",
        "cursor": {
          "ref": "dce5b33a-014b-4df6-86c3-fb2b9bd67666",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5fa20e99-31ad-48e1-adcf-f41a65bf41db"
        },
        "item": {
          "id": "e1e6dddb-64cf-49cc-897b-3092669611b3",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3d46de7f-bbe9-4947-8f28-648e40a5743d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bed67a3-3ff9-4daf-96be-c84d22c0fe6e",
        "cursor": {
          "ref": "aee958b8-4666-4dda-8f42-63e32a46f67e",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "60637718-6bd6-4626-9219-4706befd2f7a"
        },
        "item": {
          "id": "4bed67a3-3ff9-4daf-96be-c84d22c0fe6e",
          "name": "identifiers"
        },
        "response": {
          "id": "c2fc3894-f58a-4290-83d3-683d84111d7d",
          "status": "OK",
          "code": 200,
          "responseTime": 115,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6592ef4-7e3d-4dc4-93c1-295ff3ae7681",
        "cursor": {
          "ref": "ec6d9e8c-b13b-4fa7-82a5-a2c874bb49e4",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "25129545-bb7a-416c-99c3-b0d3e75f639c"
        },
        "item": {
          "id": "d6592ef4-7e3d-4dc4-93c1-295ff3ae7681",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "526e1f3b-0bd8-4c77-9868-cb70f75a9458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2b4273e-9394-440f-8966-5f2313f672f2",
        "cursor": {
          "ref": "826b4b44-8b32-4825-adef-8bed948fa6f7",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8f59f418-d5b0-47fe-a418-25e217e6f7c7"
        },
        "item": {
          "id": "e2b4273e-9394-440f-8966-5f2313f672f2",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "902dbe09-553c-4421-a81a-f3c4512769af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96b47e2-0dff-4363-b18f-77d42d12b242",
        "cursor": {
          "ref": "5c8f1056-51a3-469a-ad0d-6edf830f7e2c",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "686d3abd-1eb4-4c9f-b875-480c4a4347c3"
        },
        "item": {
          "id": "f96b47e2-0dff-4363-b18f-77d42d12b242",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "db399e59-3c6d-4af7-bab1-7a5035868b9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d98c8c68-17f0-4e2b-963f-045bcf9c9c63",
        "cursor": {
          "ref": "bf0daf29-20d7-4590-b10c-6cd14e9bc330",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6e4165f5-4e7f-45ab-91af-5102d9ca9f8b"
        },
        "item": {
          "id": "d98c8c68-17f0-4e2b-963f-045bcf9c9c63",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "046c9078-c8f3-4358-a25c-0035a43f85fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c4bb4f-bf6d-4076-855a-adeb01f1a809",
        "cursor": {
          "ref": "bfb9fa4e-6c8b-47bf-b01c-7429f5b4b1b9",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f7bc837c-ae65-48e8-b81f-75619afe15a8"
        },
        "item": {
          "id": "50c4bb4f-bf6d-4076-855a-adeb01f1a809",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "52d51a5b-06b6-4711-8f25-691862e174f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8014c41-0151-41bc-a2cc-90c9754ee198",
        "cursor": {
          "ref": "1fc5da5e-a861-4a25-8d28-b0f535119788",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "7cc8b11d-7ae5-4321-98cc-22cdcc776870"
        },
        "item": {
          "id": "b8014c41-0151-41bc-a2cc-90c9754ee198",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "cb2cd6ae-1440-4321-ae14-6edee9fa145d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03bd1b45-32c5-47e8-a910-609d4bde23af",
        "cursor": {
          "ref": "16158d89-4d3b-495d-98da-530a9e1dd544",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "4ef37759-0512-4884-a6db-1b0b185ee0d4"
        },
        "item": {
          "id": "03bd1b45-32c5-47e8-a910-609d4bde23af",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6ba63e57-656f-4d34-aa21-9b1f3e3150d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb60efc7-a04c-4c2a-bdae-7827e4a755b3",
        "cursor": {
          "ref": "fcfe64e2-edda-4d93-b7f7-d0652e3d9a28",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b0e1409d-a655-48b7-8854-bef33a1ae29c"
        },
        "item": {
          "id": "cb60efc7-a04c-4c2a-bdae-7827e4a755b3",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d324e517-ada0-4b89-86a1-846cd63f84d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbae9e27-d1a3-4507-a7a1-b214a0d55bd8",
        "cursor": {
          "ref": "ac094218-0436-48e7-bf75-c69724453089",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1cacd324-1a0e-4a60-b7c4-ac0d285825e7"
        },
        "item": {
          "id": "bbae9e27-d1a3-4507-a7a1-b214a0d55bd8",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e96a5bb0-2dd6-4f5f-85d8-d12c81b5f35b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81958821-7f59-428a-ab9f-dcea8e5c05b3",
        "cursor": {
          "ref": "20144d31-44f8-4628-b8ee-699b75270284",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ce994d70-882a-4775-8822-a1ba69e3a2bb"
        },
        "item": {
          "id": "81958821-7f59-428a-ab9f-dcea8e5c05b3",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "1a626c95-f20f-465d-9866-5245166685cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db6af454-dd9c-45fb-a27e-5ba3d1101d8c",
        "cursor": {
          "ref": "ebfd6001-f59a-4c8d-9f69-f1c0a2dfa2b9",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2b99ed68-22f2-422f-ae6d-f414bdbd90b2"
        },
        "item": {
          "id": "db6af454-dd9c-45fb-a27e-5ba3d1101d8c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "bab15942-891c-44df-adf6-8b81c07a9641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ec9ff4-b4ee-48ca-8660-fe6935917ca5",
        "cursor": {
          "ref": "a84b8a18-db5b-4484-bf79-5ded060b4c74",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a8e13805-e1f9-4f76-a38a-86500a473fa4"
        },
        "item": {
          "id": "42ec9ff4-b4ee-48ca-8660-fe6935917ca5",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "07b8979f-6a82-4938-b0cb-66cfc81d3efe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3a00c6f-f077-4d55-ae40-c124bed747b4",
        "cursor": {
          "ref": "844c9a4a-63b6-485b-a3ea-ab029f004ab3",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "2f87d14e-0cef-4f31-a460-7654cb6338cb"
        },
        "item": {
          "id": "f3a00c6f-f077-4d55-ae40-c124bed747b4",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "9619fc16-220e-4fee-8dd9-5737f8705fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cfd7c23-5fe6-446f-8c45-dbc6c8c72a60",
        "cursor": {
          "ref": "e98a1406-2402-44f5-ad21-d8d761470eca",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "edb54fb4-0df1-45ee-bfb8-159c5fdc1367"
        },
        "item": {
          "id": "3cfd7c23-5fe6-446f-8c45-dbc6c8c72a60",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d4072ba5-9840-4e7e-9426-60c7a8341521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89fb9b2-c813-4b61-b745-2ec81c3ce706",
        "cursor": {
          "ref": "af28e33d-ee1d-44d5-8fde-49e2e20c960e",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f27113b8-7d2a-4593-8b64-6eb51d49c631"
        },
        "item": {
          "id": "c89fb9b2-c813-4b61-b745-2ec81c3ce706",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9b10ac76-b680-4c7c-923a-f379cbea1d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e39d1b-2b1d-40b5-a3c2-7b154854b78a",
        "cursor": {
          "ref": "61f14fdf-57bc-48f2-8c64-3bfce70c2f3c",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "07103e9f-4b8e-44c6-983f-8af75f64e105"
        },
        "item": {
          "id": "45e39d1b-2b1d-40b5-a3c2-7b154854b78a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1a856d23-cd63-4279-a4bf-cccffccddbaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d5ad29-5207-4fda-a5eb-93e74315b3bc",
        "cursor": {
          "ref": "8077733d-6ee5-4d7c-81d9-021010ed054d",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "bf653604-f1cf-40f1-8c70-6b65c6f6e4d6"
        },
        "item": {
          "id": "d2d5ad29-5207-4fda-a5eb-93e74315b3bc",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "045bacb7-5e8b-4d69-8fc6-f609ecc53b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "513d0af8-0cef-49db-bbb8-bac97d9fa9b5",
        "cursor": {
          "ref": "65fd9ade-a436-456c-942d-310bbf33ddc9",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "56ecdeb0-7372-49f9-9aa3-74d4c4475fd8"
        },
        "item": {
          "id": "513d0af8-0cef-49db-bbb8-bac97d9fa9b5",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e7136d8c-fb0b-4be3-b047-57065f875e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b53987-42d5-4886-b38e-e32597fb642e",
        "cursor": {
          "ref": "a7be69d1-ea36-4ab3-8dd1-b49c8ef86510",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3dad530b-2832-4e59-9309-7144a2dc1dde"
        },
        "item": {
          "id": "c7b53987-42d5-4886-b38e-e32597fb642e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b848bda1-3b87-46b2-ae07-af9c230dac3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8834a25d-b2d1-4ca8-a079-20d30c517f7c",
        "cursor": {
          "ref": "e01ecc83-f6b4-41aa-a2d3-9ba3f42d944b",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b650f0fe-1fe4-41b7-9904-cbd18499bec0"
        },
        "item": {
          "id": "8834a25d-b2d1-4ca8-a079-20d30c517f7c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "2dc56bb2-d331-4ebd-bc53-56a738846588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0817ec32-c2b4-4474-bcfe-868a8c700d82",
        "cursor": {
          "ref": "5bb6d948-e78f-46aa-8850-7f1d946182d1",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1b501354-4b69-46b4-9069-fd5d5cdbb40a"
        },
        "item": {
          "id": "0817ec32-c2b4-4474-bcfe-868a8c700d82",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "cca03c76-c8d3-4f89-b617-45e3b06dfefb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76bcb490-9288-4f75-aed0-efdbfbddaf65",
        "cursor": {
          "ref": "212f1295-b654-4019-b611-46c7302685e2",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "4d57789c-8164-4540-881c-a550012b265e"
        },
        "item": {
          "id": "76bcb490-9288-4f75-aed0-efdbfbddaf65",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c09f096b-f85a-4948-b404-e9926d74055a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb20ae9-e918-4e89-b31f-74a68cb2d995",
        "cursor": {
          "ref": "3fba3156-f3d2-43b4-a62f-566e375359ff",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "1526a208-d882-4727-befa-cee4f570d6f4"
        },
        "item": {
          "id": "dcb20ae9-e918-4e89-b31f-74a68cb2d995",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "6c787b4a-9d0b-4e23-ab9c-ddea26ca8efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ff9d6b-e008-4b21-a56f-20af3d6b40b7",
        "cursor": {
          "ref": "ca9ed40c-7181-4f9c-8612-53627ba36483",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "27237407-ac01-4082-8d3f-255a683ab2a5"
        },
        "item": {
          "id": "b3ff9d6b-e008-4b21-a56f-20af3d6b40b7",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c97c37a8-39cc-429c-844e-296598fba820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8703358b-b00f-4e21-b019-5071093eba4b",
        "cursor": {
          "ref": "999be7a5-a33b-4cb9-85e1-b77f0f3c7fd8",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7b7620e2-7248-4a73-9e0b-f1db796a225b"
        },
        "item": {
          "id": "8703358b-b00f-4e21-b019-5071093eba4b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "64d9aa4f-6bb0-483f-80f3-63cb7c63e1ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec45e46-85e3-4928-b001-b51daeea0d40",
        "cursor": {
          "ref": "0a3ce3da-d465-45d0-b0fc-dbd9e2ee8e29",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "dc49b013-c507-4486-a2af-564ccee0c26d"
        },
        "item": {
          "id": "bec45e46-85e3-4928-b001-b51daeea0d40",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "74ce952f-5bd8-4bc0-a7cd-78a73fefddad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717eeee3-c2d0-4cc4-8dc4-59e01ad47b33",
        "cursor": {
          "ref": "e0f8ea4a-7485-4e35-9887-ddc092a072cd",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "727ee430-70a9-462c-b895-1ef9956546be"
        },
        "item": {
          "id": "717eeee3-c2d0-4cc4-8dc4-59e01ad47b33",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c0872d3d-7653-48c2-b5ff-b09de0a38ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5470e7c8-4c92-4eb5-bc82-40d00cc4ffa2",
        "cursor": {
          "ref": "ca780e2b-e47c-4453-bb11-a44d50473294",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "89cee07f-abf5-4f77-acb8-d0a4e8285495"
        },
        "item": {
          "id": "5470e7c8-4c92-4eb5-bc82-40d00cc4ffa2",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d75a1d28-18ec-4b66-9457-48e63669ea12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b17c96-02c5-4141-9f13-f530ab7c6546",
        "cursor": {
          "ref": "aa3cd1df-b128-4007-b04d-fff4c1a89fc4",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "8e754f38-8d45-4388-b31a-d10ce776deb8"
        },
        "item": {
          "id": "d1b17c96-02c5-4141-9f13-f530ab7c6546",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8a77e6c5-65a6-409d-b52e-42b14d1fa326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f34d03-bc9e-4fac-af23-f7bbe85be049",
        "cursor": {
          "ref": "f5068de3-27f4-4e4a-bb78-c847ccde0a23",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "15d2ab37-abd2-4ac1-a8f1-add9d55310f7"
        },
        "item": {
          "id": "21f34d03-bc9e-4fac-af23-f7bbe85be049",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "309483a7-ab7c-4eab-8a59-e6d3f023575c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7eb774-a59e-4b5f-a13a-f085acf6a64d",
        "cursor": {
          "ref": "357e10cf-5584-4426-99af-942232f67471",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5161d130-53d4-42b9-ba85-a265a1d780a6"
        },
        "item": {
          "id": "ea7eb774-a59e-4b5f-a13a-f085acf6a64d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "0da04754-4f28-4a3d-a28f-a73c1da4b95f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b7a1df-5591-42c5-b934-7836c32e06fb",
        "cursor": {
          "ref": "21fabf76-7956-4c46-92c1-3f82b3f589c6",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "2a271808-c238-441f-963e-b76465b7b111"
        },
        "item": {
          "id": "78b7a1df-5591-42c5-b934-7836c32e06fb",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "52950763-dafb-47d7-8a8a-00735b794a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce34c4c-09a4-4b24-8ee5-7928a5cd20d9",
        "cursor": {
          "ref": "f588c26f-cb1e-4aaf-a4ff-1735cd500988",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "403dd57e-7a70-46d0-9180-002f299dfcea"
        },
        "item": {
          "id": "1ce34c4c-09a4-4b24-8ee5-7928a5cd20d9",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "5caaf581-1556-40e0-9666-3b896833817f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a13c015-1015-40d2-a2d6-a80d7a9b3a17",
        "cursor": {
          "ref": "6ed8ae19-c4e1-4bfb-8a34-593a152a74ec",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "610d0bd6-6661-4039-a995-332b9e17a01d"
        },
        "item": {
          "id": "0a13c015-1015-40d2-a2d6-a80d7a9b3a17",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "9a336e11-bca4-4374-9f2b-b0dbfbb90062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a2cd73-2cf6-49fb-a9ad-34292cea9abb",
        "cursor": {
          "ref": "e472d4a9-1e21-4ae1-a7a6-fa506717bffd",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "457afcd7-8b5e-4666-a907-121c9362cdc9"
        },
        "item": {
          "id": "c3a2cd73-2cf6-49fb-a9ad-34292cea9abb",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "562a6568-321c-41e5-a805-7338aa822eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fbaed1b-3b8d-43af-9472-0a658f77df16",
        "cursor": {
          "ref": "c18ef18b-c15f-4bea-a9e5-638d1f9f672e",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7f4eaf4d-f172-430e-a84f-75968b556b52"
        },
        "item": {
          "id": "5fbaed1b-3b8d-43af-9472-0a658f77df16",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d7ae3511-defd-4c49-b20d-10f229d75f76",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 88,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f293a33-b9c7-4e26-bf2d-f0c51dcd6230",
        "cursor": {
          "ref": "893c8939-0f62-402d-9384-78c484eeaaf9",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "94309104-d049-44f1-a847-c23b2409bce3"
        },
        "item": {
          "id": "7f293a33-b9c7-4e26-bf2d-f0c51dcd6230",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5e3345a1-6bfe-435e-96ee-60a34d8c2f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35593817-7b3b-4638-aa2c-3bcd9cf23a1a",
        "cursor": {
          "ref": "e789ad7a-afb3-429d-a288-3945df66c6cf",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ee906da5-1e16-4aa3-8dac-6311831c339d"
        },
        "item": {
          "id": "35593817-7b3b-4638-aa2c-3bcd9cf23a1a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b32df1ec-777d-4e8b-b271-d2884c6c53e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f9c4288-4057-4b13-af8f-1676e5ecd3f2",
        "cursor": {
          "ref": "0c0a7dac-557f-4206-8e5d-1cd16da402ec",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "444bab72-5f17-4d72-a825-5c9d6c081cbb"
        },
        "item": {
          "id": "4f9c4288-4057-4b13-af8f-1676e5ecd3f2",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "541abc27-fda8-4745-b0c6-31f893305a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53fb598-a4e6-4857-9a23-3a7fafc679bd",
        "cursor": {
          "ref": "4019677f-b8e1-4665-9fb6-926c5be875bf",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "52d7b61c-2ff8-4145-ba7c-384a2e374fe3"
        },
        "item": {
          "id": "f53fb598-a4e6-4857-9a23-3a7fafc679bd",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "84df413c-93f6-4ba2-8668-1ff93866f405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be5a7eef-6958-4d08-b5d9-71703ae7701d",
        "cursor": {
          "ref": "5d1cd6e7-9b1a-4939-ab5b-a78825000246",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5fad507d-148e-408a-a346-ba16070e9e1a"
        },
        "item": {
          "id": "be5a7eef-6958-4d08-b5d9-71703ae7701d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7cd674f4-fea7-4835-a36b-dd2250be3152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fadc85c-6cf9-4fbc-842b-ba7226d0f7a0",
        "cursor": {
          "ref": "d36a2e49-da1e-4070-8d48-8fb1fd9906dc",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1bddc1b0-80cc-4cd5-9e6a-6f1906404310"
        },
        "item": {
          "id": "4fadc85c-6cf9-4fbc-842b-ba7226d0f7a0",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "3c8385ba-3f12-44dc-8c9f-4ecc939f1868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0062890d-c1e3-4849-92c0-6845d30b76f6",
        "cursor": {
          "ref": "aa65bbcf-de5c-4e14-a2db-042dc6269e8b",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "5021496c-b75b-4071-b86e-29a866467350"
        },
        "item": {
          "id": "0062890d-c1e3-4849-92c0-6845d30b76f6",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f5fb41be-3612-4ebc-ad08-74abef640552",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 79,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a6b70b-3269-495d-9c92-5866d2c42b7e",
        "cursor": {
          "ref": "e70b9005-4a8e-4b77-b474-6237006060d0",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0742338e-6bdb-47e1-abc0-b6896df3b39b"
        },
        "item": {
          "id": "87a6b70b-3269-495d-9c92-5866d2c42b7e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d928ebbe-3fab-4a9c-8bd0-363df4fe5d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d889b312-7ca9-4ca5-a135-8016f13580c5",
        "cursor": {
          "ref": "46d1a864-4122-429a-837c-b3be73bfe441",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "da186029-ea0b-41e7-a2da-286ea5a081ab"
        },
        "item": {
          "id": "d889b312-7ca9-4ca5-a135-8016f13580c5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "378a122e-a870-4ec4-a98d-0efe2e7d49d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1dae4c2-82ac-49db-bf68-b40662501c30",
        "cursor": {
          "ref": "412fdc8c-07d7-4a91-9efa-5c3d9107c3be",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f522e920-443c-4eef-96f1-1cd600db97e6"
        },
        "item": {
          "id": "e1dae4c2-82ac-49db-bf68-b40662501c30",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9c224997-f5f1-4519-8973-5f474577ccfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b2bf71-1ba4-4475-81ec-c1e6d2c3a062",
        "cursor": {
          "ref": "835890a1-14a4-4b04-ae64-c9b4f31d5d83",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d41cc9e0-3702-4ad4-87fb-c8d75fd8b83b"
        },
        "item": {
          "id": "10b2bf71-1ba4-4475-81ec-c1e6d2c3a062",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "6b7a1799-696a-415c-ab0e-ddacffb3f556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f9315e7-43f5-48ff-82dd-b80d21d7e2cb",
        "cursor": {
          "ref": "1472b3f6-6b11-4630-ba58-f390c8817e8c",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ef56304f-70f9-4707-8005-616e5bc85199"
        },
        "item": {
          "id": "8f9315e7-43f5-48ff-82dd-b80d21d7e2cb",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "566f0fa4-cef9-4ac3-b4bd-0fdc9d0cad8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4106a40-f9da-464c-ac2a-3b5f9ec9b0d7",
        "cursor": {
          "ref": "b3094e24-5a2e-4b30-a2c2-de09663861e2",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "e4c5af76-cdb1-432b-bd5f-622f69e32255"
        },
        "item": {
          "id": "f4106a40-f9da-464c-ac2a-3b5f9ec9b0d7",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "26f516af-560e-4090-966a-42521bcd489c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa61de1-12d2-4f97-a1e0-560c4ca22e6d",
        "cursor": {
          "ref": "f1a69601-96e0-4bff-b472-9982d16ca0ce",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b708acfc-3bce-44d9-bd7d-d3245c8f6588"
        },
        "item": {
          "id": "ffa61de1-12d2-4f97-a1e0-560c4ca22e6d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "322b5b26-c330-42c6-a7ee-f28d5fbe797c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f660f9c-4da3-4309-9df0-5f229ffda7d8",
        "cursor": {
          "ref": "54022483-d968-48be-9b17-f492631f9b2b",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8de89a52-1b71-43f1-8dcf-0f1a4d62cdca"
        },
        "item": {
          "id": "0f660f9c-4da3-4309-9df0-5f229ffda7d8",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c6bf60b0-8bd1-49f7-8b78-48189d081b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ec2ce2-5fdb-4c56-8e58-7727fc16206a",
        "cursor": {
          "ref": "33674306-906b-412a-9fc9-7d63e2335cee",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "2c5c8398-1b49-4f38-8bc8-c0dd0536b348"
        },
        "item": {
          "id": "37ec2ce2-5fdb-4c56-8e58-7727fc16206a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "fde5e052-e687-4860-906a-983f7cad98d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e22bb89-06b0-400b-9f4a-ee423815f0e3",
        "cursor": {
          "ref": "c2a69580-b8a1-4d94-8cde-75259ebcba58",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "09ad4fa5-2e56-41ca-b35b-37f611760cdb"
        },
        "item": {
          "id": "0e22bb89-06b0-400b-9f4a-ee423815f0e3",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6ccff907-de88-4a04-b4f4-a57bc10c49d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c056fa43-1736-46eb-99c4-3fb879559800",
        "cursor": {
          "ref": "74da953a-3671-420d-8091-c3d053c695df",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6b548023-b631-4f38-9340-94c2c8fe7b6f"
        },
        "item": {
          "id": "c056fa43-1736-46eb-99c4-3fb879559800",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0222fff4-a2d3-498a-839d-60fd02ffc82a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e370007-02a3-4f69-bfe7-fa9dd27990e8",
        "cursor": {
          "ref": "2c9e6df4-98fa-40ab-8000-f103d5771f46",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3ba27c3d-9b2d-4de8-98ab-0c454f02edef"
        },
        "item": {
          "id": "1e370007-02a3-4f69-bfe7-fa9dd27990e8",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "dd87726c-a915-45f2-8208-e6c0252e387c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c00e4d4-b783-4d30-ac7b-84a7ee7bd51a",
        "cursor": {
          "ref": "0dc1a0c3-5817-4eec-a7d5-e40edc2bb010",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e6db66bb-cd4c-4163-939c-4abbab1d7424"
        },
        "item": {
          "id": "3c00e4d4-b783-4d30-ac7b-84a7ee7bd51a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "34c8f7e9-a448-43f5-8a28-854e8c23b37d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "785cb126-eb6c-4b95-8a83-4ab56d59ce51",
        "cursor": {
          "ref": "dcfadeae-5899-4b52-86ee-8cf4d3ee1a67",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b881f198-e781-4fb5-8126-6ab19ee69aa9"
        },
        "item": {
          "id": "785cb126-eb6c-4b95-8a83-4ab56d59ce51",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "488e7183-d280-4de3-ad52-645e9b11e1e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6de155-0e77-41ff-b9f3-a8472f733155",
        "cursor": {
          "ref": "388d6516-eed0-48ac-ad1d-a8a566615659",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d1358be0-06ad-4894-b87d-4660e5398935"
        },
        "item": {
          "id": "ac6de155-0e77-41ff-b9f3-a8472f733155",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5b442e80-a273-42e3-a7a1-1bb70b9e81db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce6b8c4-75a3-4d45-a52d-b990a3250e6f",
        "cursor": {
          "ref": "f1005b7b-efff-4d23-a334-ebcca927ea5b",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "27147e74-dba7-4285-9aa8-d09cc9114b18"
        },
        "item": {
          "id": "5ce6b8c4-75a3-4d45-a52d-b990a3250e6f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "aa01e145-028b-4a5c-82c7-a60d77828126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0fbabbb-d0ed-4133-8632-91665bc65926",
        "cursor": {
          "ref": "b94ed68f-0a63-43d3-998f-b8571c368d8a",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6d55bbc6-a537-45c0-95c8-8878cc6678cc"
        },
        "item": {
          "id": "d0fbabbb-d0ed-4133-8632-91665bc65926",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "0d159fac-deca-40df-9b7e-ff80becdf2a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ee16bb-0931-420b-ac51-3d58debba61b",
        "cursor": {
          "ref": "4aeafe27-98e9-417b-9a38-f7b5c6bce2dd",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "9f45a1d5-00d5-4668-9457-23f460450145"
        },
        "item": {
          "id": "21ee16bb-0931-420b-ac51-3d58debba61b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "038bf0b2-5af7-4bbe-ac72-d61278c7c2a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e42dcf1-b667-46d1-8e23-7261858c9396",
        "cursor": {
          "ref": "c610bab9-0201-401f-90ff-3ead654aef16",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4f7238a9-1000-404d-97e4-3bfcc6e5f82a"
        },
        "item": {
          "id": "2e42dcf1-b667-46d1-8e23-7261858c9396",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "aca951d7-1294-4a61-808f-ba4efa82222c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67eba03f-9825-466c-bfcb-3026478913c6",
        "cursor": {
          "ref": "1ce5ff27-6fad-49dc-a14a-3cd0d42ef435",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5267c4a4-17d6-4dcc-9b03-7832d3571fbc"
        },
        "item": {
          "id": "67eba03f-9825-466c-bfcb-3026478913c6",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "10172784-cab4-44e9-a284-0db23b2c5bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ff445c-22c8-4790-8938-73aefcb5f4ca",
        "cursor": {
          "ref": "931ce734-9b65-4d63-acc2-f5397905e204",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b39c4bbb-5560-40db-ac0f-4afb4e4942da"
        },
        "item": {
          "id": "61ff445c-22c8-4790-8938-73aefcb5f4ca",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "645a7e68-b774-401a-8f73-f18e52ca455b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b534c817-3deb-4c9c-ae0d-e95d885aadc9",
        "cursor": {
          "ref": "3506f54f-d640-4d9a-bf9e-d68d0e025cd7",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "8bb47a02-e9c2-4301-9589-d4ec6be3a44e"
        },
        "item": {
          "id": "b534c817-3deb-4c9c-ae0d-e95d885aadc9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "57010d6e-04cf-420d-a063-496573aa49cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b046be-55b9-49d8-bfc7-4bba0b785953",
        "cursor": {
          "ref": "f118d52d-d895-4d27-8ff0-db5fc4b43b68",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "96b649de-b6c7-4200-abd1-8cd6344b224d"
        },
        "item": {
          "id": "d2b046be-55b9-49d8-bfc7-4bba0b785953",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "483260b8-4389-4837-9dd8-faffa938f7dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6265fbf-a7ac-42b9-9ee0-d3abd76750f2",
        "cursor": {
          "ref": "ca89c7f0-f5a8-4059-87fb-9ec87ef6d7f5",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3c2b8368-850a-4374-a5f9-414c40ce4115"
        },
        "item": {
          "id": "a6265fbf-a7ac-42b9-9ee0-d3abd76750f2",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "37ccdf1e-a119-437e-be49-7d6921a73a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5682cf64-0a57-4cd0-8724-276b38b9e350",
        "cursor": {
          "ref": "22b560cf-0daf-42bc-9f25-0badb67120c7",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "27bf08ba-24d5-49f8-a816-9dfc4ced77b5"
        },
        "item": {
          "id": "5682cf64-0a57-4cd0-8724-276b38b9e350",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "974f7996-ed7b-433d-9814-5d651e2451a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dcf6176-e57d-4d27-adea-b6a7e8c0814f",
        "cursor": {
          "ref": "f42e092e-7db5-4791-9235-dbf82330d2eb",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "05dc4b28-87ae-44f3-8c8b-a29e38ef1b8e"
        },
        "item": {
          "id": "0dcf6176-e57d-4d27-adea-b6a7e8c0814f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2a8f58e7-230c-41b3-9a18-10dca3fe25b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec64cf2b-cd25-4c3a-891b-6659ff1644fc",
        "cursor": {
          "ref": "f1567fa3-78aa-4ece-8c07-e5f433e79c5a",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "e5af9521-cbf2-4c61-b832-2f9657435d0e"
        },
        "item": {
          "id": "ec64cf2b-cd25-4c3a-891b-6659ff1644fc",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2bab1782-8e03-4155-a7f1-a6b159f34b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "345adfe9-2bc8-48ce-b473-6e2b542acdde",
        "cursor": {
          "ref": "882a636d-a10c-4944-beb8-1dfd4fb95201",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "880fe56f-3b92-44fd-88b4-55ef83f62183"
        },
        "item": {
          "id": "345adfe9-2bc8-48ce-b473-6e2b542acdde",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "97b673b5-919d-4b8c-b3b7-beffb7a5d73d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665d3aea-f1fe-4695-a69d-abf96d883a38",
        "cursor": {
          "ref": "ce12681b-be13-4723-a91f-c5ec6041449d",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "cfd9c680-2778-4af1-a8ba-18d37a56c221"
        },
        "item": {
          "id": "665d3aea-f1fe-4695-a69d-abf96d883a38",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "2966baa9-09e9-4678-99d0-6da2de2e5d55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088d806f-7d99-4540-8ffb-32696b724788",
        "cursor": {
          "ref": "9ff16c58-ba15-4b29-9b5a-5b6d2bfd99f3",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "44545292-5c4d-4b6b-9aa7-b70ea0aff752"
        },
        "item": {
          "id": "088d806f-7d99-4540-8ffb-32696b724788",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e0c59e0d-90d5-4aa9-9977-2b7c5561dbdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada83732-e8ff-4153-b130-d856f19876bb",
        "cursor": {
          "ref": "4d32d84b-3896-49f3-948d-27217e6453fb",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c8a8b3cb-b56a-4b32-a4bf-387f7d6b4dcf"
        },
        "item": {
          "id": "ada83732-e8ff-4153-b130-d856f19876bb",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c768c233-5f70-4082-a254-efb47fcbdcd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eeb1311-4cea-4b80-bd65-ea49a59efcfe",
        "cursor": {
          "ref": "b70f21f5-f626-47b4-b901-4d0e42e6f7e6",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "f347c68c-605d-4bf8-bac9-ab14dfd95e2c"
        },
        "item": {
          "id": "3eeb1311-4cea-4b80-bd65-ea49a59efcfe",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1d51ceae-03b9-4c77-b076-0292a32b79f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55abaaf7-8a4d-49a7-86d7-adb8019a6e63",
        "cursor": {
          "ref": "7f0ae214-7285-45b3-9969-689927d2182f",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "829af8fc-e2d0-4b9a-9b58-c479eaeec0b9"
        },
        "item": {
          "id": "55abaaf7-8a4d-49a7-86d7-adb8019a6e63",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "5280a898-e08f-4ad9-a9fb-1a8d343eb8b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c8d5dba-67b0-4bf0-8374-2a41a1bdf411",
        "cursor": {
          "ref": "e3b9ad9b-45b1-44b9-9ab0-70d4baa1c81d",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "efe2fd89-ca72-46e7-bfcd-f615732f65d8"
        },
        "item": {
          "id": "6c8d5dba-67b0-4bf0-8374-2a41a1bdf411",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b4f1b163-81ae-48f7-9dc9-f1ae103a428f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197d68eb-fb3b-4f5a-8843-8aa760e4d992",
        "cursor": {
          "ref": "7274b8bf-ed27-403a-a9ee-044f51c3f84d",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5e5621af-22ef-495b-b87f-18382aff5099"
        },
        "item": {
          "id": "197d68eb-fb3b-4f5a-8843-8aa760e4d992",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b2cd7ff9-2d21-431c-be97-4ce1a3c124e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98ce4b8-71fd-4b85-bf12-99b1a5ff948f",
        "cursor": {
          "ref": "cb932002-bbca-45dd-99d4-3f74fb187ec0",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "1676be27-c720-48c7-8745-619bd87cf88b"
        },
        "item": {
          "id": "b98ce4b8-71fd-4b85-bf12-99b1a5ff948f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "22c0ec38-77e2-444d-953a-1fd214489379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe6a9c3-0bb6-4c40-bfee-dcfeca164920",
        "cursor": {
          "ref": "47f4e7a3-8fd4-47aa-832c-30604b107865",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "860e7e0b-bf1b-4377-a01b-13b3016a390f"
        },
        "item": {
          "id": "4fe6a9c3-0bb6-4c40-bfee-dcfeca164920",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a4a24b5a-a44e-48b7-905b-d0277d6d3916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e6ea875-3c33-45cd-b198-6331ef766cb4",
        "cursor": {
          "ref": "88a3a4cf-2b5e-4007-927b-f8e25cc09c68",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c8e8f8f8-f486-48d0-9fb3-d960a052d974"
        },
        "item": {
          "id": "3e6ea875-3c33-45cd-b198-6331ef766cb4",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e0191000-ae29-471c-8d83-a73eb3cf4e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "466047c8-e54e-4c7a-87e7-c474bc42da22",
        "cursor": {
          "ref": "35158461-28bb-4eed-bb29-2395f06c57c2",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "0af2e149-9fc9-4da6-93a7-bca91df4a94d"
        },
        "item": {
          "id": "466047c8-e54e-4c7a-87e7-c474bc42da22",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1450515c-ee8b-4e34-8fc3-ae5abf6117d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b21c8238-73e2-4222-bb07-27ec325b5dc2",
        "cursor": {
          "ref": "13ae8a1f-cf98-4297-ae64-1c2ad26fb1c7",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "141c658c-9bee-417e-ae00-f296ca4f55f7"
        },
        "item": {
          "id": "b21c8238-73e2-4222-bb07-27ec325b5dc2",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "0c1b2572-3a47-4542-8c3e-3d1e96132e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2542888-b404-4ad7-a878-e42895152f0c",
        "cursor": {
          "ref": "3ca4c250-7cac-44be-bcfe-299d43aae685",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b9dff50e-32e4-4eaa-831f-1272eab2e2ac"
        },
        "item": {
          "id": "c2542888-b404-4ad7-a878-e42895152f0c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a4641f09-65a3-49c8-814c-85470a73b857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ad25cc-00bc-4b88-98b8-ab687b223c52",
        "cursor": {
          "ref": "37824e26-fc4a-4ddd-baa3-17c9ab47bc03",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c408f308-2b0c-4a50-ae17-8f2aed8cf537"
        },
        "item": {
          "id": "64ad25cc-00bc-4b88-98b8-ab687b223c52",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7ef4b858-1169-4c3d-9b8b-b740a6cab789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c6702e-67fd-4213-8e0d-289a6441f800",
        "cursor": {
          "ref": "6aa0d5d7-1876-493a-9ac7-855de5f70f55",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "92bb1e21-c30e-40db-9ebf-34dd68c9d8ac"
        },
        "item": {
          "id": "47c6702e-67fd-4213-8e0d-289a6441f800",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ea74b989-81c2-4cc6-8caa-294cc45d6ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee979e31-d447-4d8f-95de-b1254f04de3f",
        "cursor": {
          "ref": "2e3982bd-72d9-49d5-927d-d243e02cef27",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "de647d25-6e88-4123-9637-c500d9bc54d2"
        },
        "item": {
          "id": "ee979e31-d447-4d8f-95de-b1254f04de3f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "1050e39b-b749-445f-ad29-1e51047142f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc798fd5-e782-4802-8880-4eb0b5014ff8",
        "cursor": {
          "ref": "79930c11-4509-41ec-b87a-3510e8467d59",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "965743a3-bee4-4e42-a4c5-4cafb8814584"
        },
        "item": {
          "id": "cc798fd5-e782-4802-8880-4eb0b5014ff8",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f2db6ef5-c0dd-4d20-bf2f-135c56e95ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b393c9fe-34ca-47f5-8991-1307c7a50aa1",
        "cursor": {
          "ref": "1217e164-35d9-4b3e-baf2-a3406ec0a073",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "89c401c7-8f88-4f90-92e0-28044823c389"
        },
        "item": {
          "id": "b393c9fe-34ca-47f5-8991-1307c7a50aa1",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "dcaf4f8d-7402-4f7e-b253-6052645731c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0114e65-21ae-4627-8c5d-ee06a4a97c00",
        "cursor": {
          "ref": "0a7dd44b-7502-4e86-b91b-5f1cde9c7ac4",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "fc47c5d4-63aa-4597-9639-7673e6aafe53"
        },
        "item": {
          "id": "b0114e65-21ae-4627-8c5d-ee06a4a97c00",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "8cbbd90c-54b1-4bfd-acbd-713a00ed0289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f797ef-3a46-4a4a-ac5e-b92abc3f4b77",
        "cursor": {
          "ref": "691a7536-fbf6-4b75-ad54-d6c6592051ec",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "50d01f3b-eb55-43eb-8938-20e7962f65e1"
        },
        "item": {
          "id": "f3f797ef-3a46-4a4a-ac5e-b92abc3f4b77",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ba11f48b-5eef-4de5-b344-a36bd1c4a92c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7911cbe2-5a24-4497-acbf-d9492c1a6ce8",
        "cursor": {
          "ref": "2333e532-9fd1-444d-96ed-b5bd3a1ab795",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7d6fcecd-664a-4960-8b34-9c7affa05539"
        },
        "item": {
          "id": "7911cbe2-5a24-4497-acbf-d9492c1a6ce8",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "19ab500e-cc61-4d13-a117-d10d703050c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db1a858-75f7-4075-9b2c-dc70a9fe9a03",
        "cursor": {
          "ref": "2469c303-5a8c-4a2e-87bc-cccbc44e9307",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "abdd30a6-2233-4b7b-9c5c-3034516ec78f"
        },
        "item": {
          "id": "4db1a858-75f7-4075-9b2c-dc70a9fe9a03",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "56de748b-9228-4a25-adac-88c50cb69f3a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd26e9f-2d47-498f-8058-d913df611fd9",
        "cursor": {
          "ref": "4c8e9495-dc8d-49ae-898d-0559be8f18ee",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "7fb83041-3d27-4c86-910d-9a690bd00a6c"
        },
        "item": {
          "id": "afd26e9f-2d47-498f-8058-d913df611fd9",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ea4e5615-3f8d-4029-bc0c-39b910e45f52",
          "status": "Created",
          "code": 201,
          "responseTime": 121,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "812becb8-4eb0-432f-a558-5be8077309ad",
        "cursor": {
          "ref": "4d5bf704-f523-465b-8c6e-26f48b0be373",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ef5c5de7-aba9-482a-8b04-e49ffdfcf25e"
        },
        "item": {
          "id": "812becb8-4eb0-432f-a558-5be8077309ad",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "7915f687-c75f-468d-8f8c-0b51cf431979",
          "status": "Created",
          "code": 201,
          "responseTime": 232,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "78318286-4b0e-4c54-9030-0017bc78c771",
        "cursor": {
          "ref": "ed4baa50-8472-47ba-b4a5-4983e009bf25",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "52efeb08-e8e3-4e88-8806-b9995b224a8f"
        },
        "item": {
          "id": "78318286-4b0e-4c54-9030-0017bc78c771",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a4989288-78a2-4ec2-95cd-2da699f470ce",
          "status": "Created",
          "code": 201,
          "responseTime": 252,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8c2faf-1ad0-4deb-9ca8-63201c0ece1c",
        "cursor": {
          "ref": "d3765bb5-72de-40bb-ad6f-7c7a20e001e3",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "0e17afef-69ae-4ff1-a925-ded2708d9d9a"
        },
        "item": {
          "id": "dc8c2faf-1ad0-4deb-9ca8-63201c0ece1c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "98be2957-dbed-4ef2-9788-fc210840c4be",
          "status": "Created",
          "code": 201,
          "responseTime": 90,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c040eb92-7948-4b81-abc6-413581d49f06",
        "cursor": {
          "ref": "dc706aa7-c670-427e-98b7-826f48d6c8ec",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "df5da0d0-b1e4-482b-9fab-05ecaebd013c"
        },
        "item": {
          "id": "c040eb92-7948-4b81-abc6-413581d49f06",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "90983af4-3bfa-4fd8-a183-48fe36cd892d",
          "status": "Created",
          "code": 201,
          "responseTime": 93,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f691dd3-c790-4190-92c5-10eb3bb2edde",
        "cursor": {
          "ref": "8656733d-2c16-4d69-9945-cd43ba03955d",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "228d4a15-bf64-421b-99a4-d92e98011be6"
        },
        "item": {
          "id": "9f691dd3-c790-4190-92c5-10eb3bb2edde",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e749543f-41ab-4996-8a50-4571c8bbbfb5",
          "status": "Created",
          "code": 201,
          "responseTime": 89,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd588f2f-309a-4883-ac36-e481580b0a0e",
        "cursor": {
          "ref": "9bb8c45b-9d6e-4bb4-ac07-610290cdde2f",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f3ecb008-48e3-4009-b1c8-6e48608437de"
        },
        "item": {
          "id": "bd588f2f-309a-4883-ac36-e481580b0a0e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "52b7830a-8575-40c2-90ec-5514f164eb54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9187e377-04b0-40a3-991d-012893c689ec",
        "cursor": {
          "ref": "8d1c3532-bd53-4ae5-a364-2bd062f17644",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b17d7b36-7ac7-4080-b256-b9e3b170f5d1"
        },
        "item": {
          "id": "9187e377-04b0-40a3-991d-012893c689ec",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "979d38f3-6ae2-44f6-a44e-b039474e1612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "827f0ba0-d8e2-419a-849e-9aca997d163f",
        "cursor": {
          "ref": "49fac538-a50a-40fb-88fe-5e782a7d712f",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "bba81063-2d6f-4a7d-862d-bc928e1d6e9f"
        },
        "item": {
          "id": "827f0ba0-d8e2-419a-849e-9aca997d163f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1bbfe312-f2da-4ab0-9680-854fe0ca3ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f3018be-24b9-4667-b497-527fb92cf777",
        "cursor": {
          "ref": "80985bbb-3baf-4401-bb33-6f4bbced8377",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "10366ccf-0712-4689-87c6-9b29f614ef47"
        },
        "item": {
          "id": "3f3018be-24b9-4667-b497-527fb92cf777",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b3e37359-6091-4381-9e09-4070ec535557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "643d6235-b2f3-4cd0-bbe5-29fd8155716a",
        "cursor": {
          "ref": "12c7e256-8aba-48e6-b301-4055e8a2c8be",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "2ef8d0cf-00e5-4e5a-9b2b-3f45877333c6"
        },
        "item": {
          "id": "643d6235-b2f3-4cd0-bbe5-29fd8155716a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1fcfe8b4-4cf3-44e3-b2b2-e0019100f06f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "915aa145-b411-4ce5-a96a-7a510ff1bc52",
        "cursor": {
          "ref": "0e772265-03f4-446a-afe2-b1fbe538984e",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "59ceb1e5-a46f-4f3d-a5ac-f0e2ceda0f00"
        },
        "item": {
          "id": "915aa145-b411-4ce5-a96a-7a510ff1bc52",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "cc3fe135-09d5-45cc-a9f3-7ec744f8ca31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb604a3-b931-4bca-be79-1337eebe617f",
        "cursor": {
          "ref": "c721937a-0f01-4ceb-8215-ec7be80bddb0",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "fce655a7-142d-4318-9f7e-4420385d759f"
        },
        "item": {
          "id": "8eb604a3-b931-4bca-be79-1337eebe617f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ea31a91f-8ac5-43f5-bb53-bb101ba9a527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5dfca7b-c4ee-4203-911b-ace2f2d0c88c",
        "cursor": {
          "ref": "5e610c15-5a29-4c8d-8876-26c2b2507582",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1b7e7bfa-9dbe-41be-a303-4ff2a528bace"
        },
        "item": {
          "id": "b5dfca7b-c4ee-4203-911b-ace2f2d0c88c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5e1449f2-f5a2-4023-84f6-ad50f29554e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659af717-f7cd-4acf-906c-ba79f7b4def4",
        "cursor": {
          "ref": "db49ee3b-2814-4e01-9601-d68b0f505930",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1ef1d68c-28d1-463e-a83c-80ccd5f7c9cf"
        },
        "item": {
          "id": "659af717-f7cd-4acf-906c-ba79f7b4def4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d3cf57fb-9bc5-4429-9602-dda2d3494ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c28b8d0-1a68-4258-9fe8-8bb5a8e6ae05",
        "cursor": {
          "ref": "9f71d2c9-d8ce-414c-99ac-a1db2074e3a4",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "753e8996-bef4-42dd-baad-660746d5ce0a"
        },
        "item": {
          "id": "5c28b8d0-1a68-4258-9fe8-8bb5a8e6ae05",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f32e601e-af3a-4b5a-a701-0e81ee118204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b405497-b92a-4c3e-a2a2-93af632e30d2",
        "cursor": {
          "ref": "01b8ebff-21c6-4b96-95b9-66467bc2e8b1",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "cb9a3024-8f92-4e26-a5e5-f1ed7fc743e7"
        },
        "item": {
          "id": "2b405497-b92a-4c3e-a2a2-93af632e30d2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8f096390-5d90-4cd3-b41e-f2a185c2d311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f96672-7ffb-4fb7-b70a-562423c52fc8",
        "cursor": {
          "ref": "52e5b05d-25c9-43af-8738-e4933a2d98ae",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6c8ba636-6ef5-42c4-8164-38ff4d46a91d"
        },
        "item": {
          "id": "f4f96672-7ffb-4fb7-b70a-562423c52fc8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c1718a57-f04b-4a1f-8132-1d436653acaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7eba835-ff36-4761-afa7-990c7c9537fe",
        "cursor": {
          "ref": "b9215398-030b-4d83-90d1-f8954c38c958",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "85d5f6e6-a482-4b43-9ac0-910e5500f97c"
        },
        "item": {
          "id": "c7eba835-ff36-4761-afa7-990c7c9537fe",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a4b2f7ee-21ec-40e4-8749-5b1b858550c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc608a06-6018-48f1-a947-29dfd42e2d7e",
        "cursor": {
          "ref": "858c877e-1516-4798-b99f-c6e4a5e2c928",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "2e2f22d8-c635-4679-afe8-c975ae683381"
        },
        "item": {
          "id": "fc608a06-6018-48f1-a947-29dfd42e2d7e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7510fe6c-12f0-426d-a60e-c511b9e11411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8202e4-5aef-40cc-86de-3d0c5ff43519",
        "cursor": {
          "ref": "559b63c6-470d-48e3-85e3-0327849b64ef",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "3996fbd2-1c7a-4a2d-abb8-e8597817b2b9"
        },
        "item": {
          "id": "2c8202e4-5aef-40cc-86de-3d0c5ff43519",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d9bc2bb1-d8ad-4979-88b5-c57018ec1d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee81375-d137-4420-b98a-49212cb2d127",
        "cursor": {
          "ref": "786a8e17-847b-4ccd-b840-2af3654defff",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "31183c6c-4611-4fac-bdc7-b149ffbbf7dc"
        },
        "item": {
          "id": "fee81375-d137-4420-b98a-49212cb2d127",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a2e90d3a-e733-4b09-a606-373f510609f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09831c31-214e-4c1f-a53f-ce8a967553bb",
        "cursor": {
          "ref": "b3f90f03-90e3-46a8-b5c1-73cb43c19e80",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d8e32d04-eee7-4018-bbda-d6ddceb91cee"
        },
        "item": {
          "id": "09831c31-214e-4c1f-a53f-ce8a967553bb",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "33ab1a99-de3c-4ba3-92b6-c8ba0c30b2bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de36905e-6d6d-4b7b-a2c2-be41e8eb847d",
        "cursor": {
          "ref": "d4d54f20-a8c9-44d0-a430-69bf50b521d1",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0de39054-746b-448a-82c9-83479c43628b"
        },
        "item": {
          "id": "de36905e-6d6d-4b7b-a2c2-be41e8eb847d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a4cd648b-dc03-4383-85cd-788e7fb9ad35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf6718d-f6da-4b9f-b199-717e6dfba471",
        "cursor": {
          "ref": "79b7e7bb-221b-4949-8220-aa0da20e7233",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "215a1257-48ee-4e3a-b560-8d0ad15dc9d6"
        },
        "item": {
          "id": "8bf6718d-f6da-4b9f-b199-717e6dfba471",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b565a50b-b5f2-45f0-8a2b-94a9a8673e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56da8d8-b586-4385-939f-66669b896628",
        "cursor": {
          "ref": "64631009-d61a-4548-aaae-f7b58402cc26",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "418223db-8a06-4d87-888d-999c10bdc163"
        },
        "item": {
          "id": "c56da8d8-b586-4385-939f-66669b896628",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a1d6ce70-47d1-4524-9822-d8d4b7e0d624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cfcf391-ea43-478e-b85d-d458cd3b42f9",
        "cursor": {
          "ref": "009c0fd9-203c-4a7f-87cc-728d53b871e6",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d88024ae-e445-411d-bf34-373e34f23cad"
        },
        "item": {
          "id": "0cfcf391-ea43-478e-b85d-d458cd3b42f9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "10b7d9e1-7e29-4c42-8a28-4cb43acdcab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9161b61-2c92-486e-bf1e-cbba32c7140c",
        "cursor": {
          "ref": "a14683c3-23d8-4f03-a7e5-d3b10a519be0",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "6ca5f93b-af7b-4421-bdd4-145f6034ee09"
        },
        "item": {
          "id": "b9161b61-2c92-486e-bf1e-cbba32c7140c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "da1c353b-7d71-4402-95e0-43681a4fc7d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0832bc4-03a8-464e-b4e0-2084df4b0386",
        "cursor": {
          "ref": "33d93122-01c1-4d8f-a551-9ee6f9d23182",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3f1cc34b-0bbf-4939-8663-108e4db9a8d2"
        },
        "item": {
          "id": "b0832bc4-03a8-464e-b4e0-2084df4b0386",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "99bbe323-3132-4e81-b48e-50d2dc32a7e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8819c37-72fa-4c07-8426-99c3bc7a350c",
        "cursor": {
          "ref": "4627cf46-1d60-4210-80f2-37b2c47f0c74",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "37e522e5-0978-43cd-b000-3f425d9803f1"
        },
        "item": {
          "id": "d8819c37-72fa-4c07-8426-99c3bc7a350c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "73858b46-d392-4536-a325-2ad38e63aa06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d4b47d-0e2f-4cf4-a7ef-7029123b344d",
        "cursor": {
          "ref": "36a84aaf-cbad-4102-bfb3-703345aa0706",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a3ecce69-dd26-428f-98d1-fc5e89b6d208"
        },
        "item": {
          "id": "40d4b47d-0e2f-4cf4-a7ef-7029123b344d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "67ddf9f8-eea6-46c0-abda-ef728eab065b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae7190c-c1f0-4bf6-8503-34b267e86c36",
        "cursor": {
          "ref": "af2634eb-606e-4a33-b449-a931ea2c1b0b",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d790d693-69cd-4cbf-860c-cbab73290179"
        },
        "item": {
          "id": "1ae7190c-c1f0-4bf6-8503-34b267e86c36",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ecc86357-a303-46cd-988b-54a8f9779d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e3818ee-7ccc-4dba-94ea-cc261846c57d",
        "cursor": {
          "ref": "3dc147ab-2f85-4b49-a7bf-06306f76c1b6",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5c6635c9-34fa-4c38-bcd7-fa18aab9d0f7"
        },
        "item": {
          "id": "4e3818ee-7ccc-4dba-94ea-cc261846c57d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "78706379-52ad-465f-b4ff-dc42c9ff432e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc33dc40-8944-4d5f-9003-51db0c14eb80",
        "cursor": {
          "ref": "c90f9872-e244-47d2-904a-5eec19debcfb",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ad216255-644b-44ab-95b1-2d4662bb0359"
        },
        "item": {
          "id": "dc33dc40-8944-4d5f-9003-51db0c14eb80",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a64379e3-875c-408f-9000-e3d7ea2dcc96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "473dc774-35e6-46ae-bd2b-c9fd2e931ddd",
        "cursor": {
          "ref": "cb1d7d1d-7b0b-4164-b4d1-99b8bfafbfcb",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "af389b80-0585-427a-a3cd-afb10035047f"
        },
        "item": {
          "id": "473dc774-35e6-46ae-bd2b-c9fd2e931ddd",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ef042c77-4b1d-4283-8dff-2ad96095669b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c3396e-f01d-4a5a-8046-686dd0de9cbe",
        "cursor": {
          "ref": "92461785-3b58-4cce-8b61-0fc789845b05",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "6c55162b-ba89-4963-adcb-09b08cad7760"
        },
        "item": {
          "id": "30c3396e-f01d-4a5a-8046-686dd0de9cbe",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "521cd3eb-aa73-4741-9488-1379da9de9de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350bea8a-2583-4d87-b5a3-8cc8a005ce38",
        "cursor": {
          "ref": "5856c89a-4fd0-4d10-bd77-14b700885201",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "46c4baf4-75fe-4bf3-904f-cb6228d2bdd9"
        },
        "item": {
          "id": "350bea8a-2583-4d87-b5a3-8cc8a005ce38",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0b74d072-2196-44f6-8adf-3da1225080a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e12f7ed-c470-4f57-9e64-43bd6744ea5b",
        "cursor": {
          "ref": "f6222478-f089-4070-acef-da2c3831b1b2",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "393ddc86-51fc-492d-bf36-667bba65d4b6"
        },
        "item": {
          "id": "3e12f7ed-c470-4f57-9e64-43bd6744ea5b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "29681d4a-4bc0-4b8c-99fa-5c275c16fd1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff7825c-a6f4-4e33-9e7a-df4eca5f0199",
        "cursor": {
          "ref": "ca494151-47a7-4a4d-8720-4035851f6363",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "457fa71a-7dd9-4dbc-8371-207096902547"
        },
        "item": {
          "id": "cff7825c-a6f4-4e33-9e7a-df4eca5f0199",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7af3c691-74b8-4a6d-a30e-459e08f555c3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ff6008-434e-4b9a-bac2-69a085a919e3",
        "cursor": {
          "ref": "2a76415b-f0e6-4f28-86d4-85f6fef70209",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "810cec29-0cec-480c-870d-4476eca082da"
        },
        "item": {
          "id": "82ff6008-434e-4b9a-bac2-69a085a919e3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4702285e-992e-43c3-b99a-e81a8b797700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a538560-bf9d-42f9-8e92-9f053045c463",
        "cursor": {
          "ref": "891a4f55-9aa6-4656-a6e2-add7ccc9feec",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4569d3c9-dfd0-41ae-9f41-cb74d94d6e0e"
        },
        "item": {
          "id": "4a538560-bf9d-42f9-8e92-9f053045c463",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1fd26d07-5b7e-4084-b8d0-797a0a72e430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8764b304-215f-4e81-8067-4b684b0af519",
        "cursor": {
          "ref": "ad81e4aa-4518-4cc6-957b-4e41bb5b1bd6",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "79a48b2c-832a-4807-84ff-ae70fc4c8518"
        },
        "item": {
          "id": "8764b304-215f-4e81-8067-4b684b0af519",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e42c58bc-028e-411f-852d-ad8f05808dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41cb5aec-d9f0-46b2-bd9b-cf6ed9726ab0",
        "cursor": {
          "ref": "2eef61e2-3723-4325-8e79-42f1250123c6",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a85677fe-58c0-44fe-b0f8-2cf8333bff1d"
        },
        "item": {
          "id": "41cb5aec-d9f0-46b2-bd9b-cf6ed9726ab0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e16de99e-a401-4864-9661-2f5b847b9b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e6166e-f42e-42de-ac9f-5a121dd88ac5",
        "cursor": {
          "ref": "54070ee6-f165-46b7-8ad0-822b19cbde7b",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ebb52e4a-ec97-43e2-a85b-7d376246cc1b"
        },
        "item": {
          "id": "d6e6166e-f42e-42de-ac9f-5a121dd88ac5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "fa920cde-8e55-4760-9255-71f03d149ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd1ad0d-5cd6-4f8e-8248-4fc9acb55da2",
        "cursor": {
          "ref": "ada5b20c-729b-419d-ac39-6c0e3a5232f1",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "50f45c65-78c4-4e5c-9d34-0581b41f4132"
        },
        "item": {
          "id": "0bd1ad0d-5cd6-4f8e-8248-4fc9acb55da2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ebaf1a32-168f-4437-b32e-60754e0302f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7996393f-4cd0-4cfe-96f0-ccd3a332d631",
        "cursor": {
          "ref": "2e16e1fb-4ba9-43d3-bcc1-b16c289d1eb4",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "0c433848-fb1c-449f-9424-7861ac1f400b"
        },
        "item": {
          "id": "7996393f-4cd0-4cfe-96f0-ccd3a332d631",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3f8e53d4-a67d-4431-b563-100b79d3402a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccce7239-aeb5-4e3e-8711-2ad5898e8ee0",
        "cursor": {
          "ref": "4a406b23-1bcd-43b6-99c4-0b1f4285e506",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "5c5b76c4-bd8c-4066-8d72-d0c932835cd9"
        },
        "item": {
          "id": "ccce7239-aeb5-4e3e-8711-2ad5898e8ee0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f31a6f99-e94e-43e3-b118-7f3ab3970898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b473d47d-46b7-4ccb-a05c-cc55884b8063",
        "cursor": {
          "ref": "f7314238-855c-47b2-9f36-cf92b436d12c",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "6754dd1b-dfe4-42a5-84de-ddd42a9a5982"
        },
        "item": {
          "id": "b473d47d-46b7-4ccb-a05c-cc55884b8063",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c5102d9c-2d46-4c55-aa23-73038f34f4b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "756fb3e4-e360-423a-84f6-249ee82485aa",
        "cursor": {
          "ref": "0e2b5c32-b8dc-47bb-b9d0-1db742c191bc",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6d534235-f664-4bd4-a6f9-f681a2fede5e"
        },
        "item": {
          "id": "756fb3e4-e360-423a-84f6-249ee82485aa",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c2ab6cb7-db97-42ad-b95e-9c3c35088c7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27e31711-10a9-4cc0-816f-b95eb3f91c8a",
        "cursor": {
          "ref": "d85e03a6-8a25-4e18-89fb-49dbefc7dfaa",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c5031d86-c42a-4a5d-acc6-d30772638e7a"
        },
        "item": {
          "id": "27e31711-10a9-4cc0-816f-b95eb3f91c8a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9763147e-4033-40fa-a301-b2a3ff0e8f35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb649e01-e449-4d86-a150-c131f4da4b0e",
        "cursor": {
          "ref": "c6f9fc76-fadb-4cc5-a8ad-907b76ab2730",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2f2b34d6-b423-46a8-a3cc-8a65f1f195bc"
        },
        "item": {
          "id": "bb649e01-e449-4d86-a150-c131f4da4b0e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "17687e4a-64dc-4823-b166-88f0f3075fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8280a01-f458-4ac2-941a-78d80846ac06",
        "cursor": {
          "ref": "87728bd1-d39c-4646-9314-e6064398b5ca",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "354bb14b-80fd-464d-90a4-98545be0a410"
        },
        "item": {
          "id": "d8280a01-f458-4ac2-941a-78d80846ac06",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "883c02c5-e8be-4d2a-8230-9a70853d4de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ae4e4c-65f8-40c7-bbac-5562623a3f93",
        "cursor": {
          "ref": "27cbc6c7-594a-4551-8ba0-d05a4efac6e8",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "91a86b98-8536-4808-ad94-23b5ca83425b"
        },
        "item": {
          "id": "50ae4e4c-65f8-40c7-bbac-5562623a3f93",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a88a7857-fa7a-4198-ac1b-ac3560f750a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b423b35-6e77-47e4-890c-aa1863cc7922",
        "cursor": {
          "ref": "fa7c21a3-245f-4fbd-a5f0-5a8609f844bc",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "c2943313-9892-4187-a520-6904ffc4ac1d"
        },
        "item": {
          "id": "1b423b35-6e77-47e4-890c-aa1863cc7922",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "76b1a1cc-9bd4-4fd0-87b8-85746fa9ce0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85992a83-0f7b-41ac-a7c7-e896f8fecbb6",
        "cursor": {
          "ref": "787f69ff-3ae0-447d-9587-720010830fcb",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "135cd04b-1139-40b7-8abb-74dc35e16c1d"
        },
        "item": {
          "id": "85992a83-0f7b-41ac-a7c7-e896f8fecbb6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6fed7b18-dcee-42c5-92e6-bee036a6cfdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9476de3d-5610-489f-9478-a326ad244f49",
        "cursor": {
          "ref": "455573a2-e210-4794-a914-59d8d095791c",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f116745b-1bad-4022-b3c3-5a13c7738d55"
        },
        "item": {
          "id": "9476de3d-5610-489f-9478-a326ad244f49",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4d3b2851-c8d2-4160-88ca-93697d83b9bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "218b9580-63bf-4820-9e4a-7afa97968952",
        "cursor": {
          "ref": "3e302e7c-fc3e-4e17-9497-43872db8117c",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "4458fc6e-98dc-454d-aa75-d57cb44d158d"
        },
        "item": {
          "id": "218b9580-63bf-4820-9e4a-7afa97968952",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b5e61785-221d-4c40-bcee-108f8625f102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7827b40d-89e2-418e-b71b-576656e81249",
        "cursor": {
          "ref": "e9afae04-ac26-4c49-a955-c83ce00b11a8",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "7eba5107-937a-45bc-aaea-55e9cee04ebe"
        },
        "item": {
          "id": "7827b40d-89e2-418e-b71b-576656e81249",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3cf6569a-84bb-4249-8502-ec8373f760a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f80d4f-a751-4f52-abd5-422e7acb32c7",
        "cursor": {
          "ref": "013c186a-ff0a-409d-9314-95777a767ad3",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4822c73d-083c-4cd7-9bee-b5e953de4aed"
        },
        "item": {
          "id": "33f80d4f-a751-4f52-abd5-422e7acb32c7",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f247d258-d2b4-4420-be90-873e29949311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a9f5a5-b72c-401b-bb4e-ec3be241d659",
        "cursor": {
          "ref": "36147b70-88d2-47bb-81b6-fee7a0d1cc65",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6577345c-a53d-4e79-9b73-9e04ee08696d"
        },
        "item": {
          "id": "73a9f5a5-b72c-401b-bb4e-ec3be241d659",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "dc1f5d5e-e0c4-4336-8030-7a405332ecc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d647b37-39b6-4e0d-b6ce-3353f21305a0",
        "cursor": {
          "ref": "fe71483d-817f-477e-9b1a-59d0351959b1",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "09c85278-6c93-4661-8079-8b550c449e2b"
        },
        "item": {
          "id": "7d647b37-39b6-4e0d-b6ce-3353f21305a0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7a165da1-d8f6-4b94-b2c0-2e1e386229ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ed12c0-e568-49be-a3ba-312ca8bd5f50",
        "cursor": {
          "ref": "1da298f6-eaca-4bfb-8dec-28f2b3210d09",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "385428ea-709a-4aae-916b-5582560c9eab"
        },
        "item": {
          "id": "08ed12c0-e568-49be-a3ba-312ca8bd5f50",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3615d501-a8a2-438c-b804-203695b16f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c30c6c-0a3f-4c90-bee2-2d707723e978",
        "cursor": {
          "ref": "3312e24e-aa31-4759-aeec-75c222ba3de4",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8148eaf2-0ecd-4717-814d-a50a9104bcfc"
        },
        "item": {
          "id": "77c30c6c-0a3f-4c90-bee2-2d707723e978",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "acbab51e-f0a4-49c7-b8b6-7be2407b550e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc8d69b-0cfc-4262-9d0a-057afb847d1a",
        "cursor": {
          "ref": "3704444e-7066-4ead-af6b-5125d38df4df",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e3f4724a-1753-4699-8790-c2d72c193cb3"
        },
        "item": {
          "id": "ddc8d69b-0cfc-4262-9d0a-057afb847d1a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "48d52ea3-a1bb-4b83-afaf-30d8a3e7b0b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcfcbcc9-54a7-4b59-9baa-6462dfd2edef",
        "cursor": {
          "ref": "7afce817-586f-4c16-a3c2-219a6358f4c8",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "523e84ac-efd8-46f5-be51-1fd1580b831c"
        },
        "item": {
          "id": "fcfcbcc9-54a7-4b59-9baa-6462dfd2edef",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b642a4fc-a23f-48ad-a6ab-3c47df32b618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ea0f1f-b098-41bb-abb4-d6f1d6ef229a",
        "cursor": {
          "ref": "8bb400d6-0867-43c6-b093-6b79a5b81e5d",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "0e7c4172-6a9c-4d74-888e-76b9b35fd995"
        },
        "item": {
          "id": "17ea0f1f-b098-41bb-abb4-d6f1d6ef229a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "cb1fa2ce-cae7-48cd-9335-f8f0894ad6c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf5ed9e1-8862-432f-b6af-b6dacb82d8c1",
        "cursor": {
          "ref": "d2829b62-d39c-4b21-b859-7d0807512f94",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d0a38e89-d0cc-41fd-beb7-ba1552e2c4aa"
        },
        "item": {
          "id": "bf5ed9e1-8862-432f-b6af-b6dacb82d8c1",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a3b8b66b-a046-4fbc-81ea-befb33f6998a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f93998b1-719b-4b3b-ac1c-a3be7a026608",
        "cursor": {
          "ref": "89abc664-64d9-49d4-b679-2df4a0f47fc2",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "2cd98852-3a75-4d83-a970-e09f80f56770"
        },
        "item": {
          "id": "f93998b1-719b-4b3b-ac1c-a3be7a026608",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8c1cd047-5824-4124-b656-5690329f8897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ffdc32-3c74-4835-b6be-ff6b4685368d",
        "cursor": {
          "ref": "35572f77-1066-4086-a4ad-bdd9706f512f",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "89c384c5-cbd4-4993-b83c-ff83bed2a4ba"
        },
        "item": {
          "id": "72ffdc32-3c74-4835-b6be-ff6b4685368d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7d4e91ea-0f85-4f99-a075-d68244344792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b10b669-32ef-40ee-b8f0-17bcf5e688b8",
        "cursor": {
          "ref": "fabec2bf-2d92-4756-ae22-9335312036b5",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "7620f7c5-a4d3-4f9c-b5ed-a1619b1b8b8a"
        },
        "item": {
          "id": "8b10b669-32ef-40ee-b8f0-17bcf5e688b8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d97bf515-f232-4e29-b08b-9caa2078f08c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0ba6d0-da3f-48b5-a8a1-f8ff8288297c",
        "cursor": {
          "ref": "2802d2a5-d3bc-4a48-a71c-3649a62bca7c",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "203ee68d-901c-420f-8952-8f2192d91166"
        },
        "item": {
          "id": "3e0ba6d0-da3f-48b5-a8a1-f8ff8288297c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "7fb3d659-9d91-45b5-ac02-963bbe410c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "502b1a76-2e7b-4cf1-ba68-c86644068cd5",
        "cursor": {
          "ref": "e799e7be-cb76-4cbb-a0a2-eb9bf5b54677",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "6bcca537-4121-4a4a-a612-268bdada3fd9"
        },
        "item": {
          "id": "502b1a76-2e7b-4cf1-ba68-c86644068cd5",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d8dec77b-4bbc-4c34-a10d-22455d693d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc306b8a-48db-464d-b2a5-6bd82f666502",
        "cursor": {
          "ref": "50bf8de4-fe0e-42e7-8c32-c1ee6d458a6d",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "440b6ce8-8578-4592-84e1-a3a8c8862e19"
        },
        "item": {
          "id": "bc306b8a-48db-464d-b2a5-6bd82f666502",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "0361a3df-9764-4a23-b860-b6d320d18445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99331232-c5e9-4200-97a9-09e29fc8c3ad",
        "cursor": {
          "ref": "ee66ebd2-f170-4998-9d0c-3479ad6059e8",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6eddf4f9-dbb7-4075-b5cb-e737e41ae445"
        },
        "item": {
          "id": "99331232-c5e9-4200-97a9-09e29fc8c3ad",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "7da228d0-6fde-4485-ae78-dfd004baebaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c2e13b-727d-4af0-8234-2f5e00a1696c",
        "cursor": {
          "ref": "64cc8cf5-e28c-4930-b069-f3b5981498a1",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d8a5ca21-e448-4568-b499-8745ff63b55a"
        },
        "item": {
          "id": "64c2e13b-727d-4af0-8234-2f5e00a1696c",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "9dea3c60-24db-42cb-b91b-69df621130fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a348d4ea-98e1-41f7-b39e-5739df9bd99c",
        "cursor": {
          "ref": "66f0bc4e-ab84-4653-bbfb-923d83551885",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "7ec13aa0-5f62-4dec-94fe-2668f6b0e8e4"
        },
        "item": {
          "id": "a348d4ea-98e1-41f7-b39e-5739df9bd99c",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "677bf0cd-8dec-4fe6-aa31-ab54a7e784d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f4b106f-b476-46b5-ba17-843730dc6a4b",
        "cursor": {
          "ref": "5a97a949-a12c-4408-ad6c-f19d34fbbcc3",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "db02bf3e-e4b9-487d-aa59-b8e92eef525c"
        },
        "item": {
          "id": "0f4b106f-b476-46b5-ba17-843730dc6a4b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9a7efe3a-18a4-4ecb-889e-1f311cfe2658",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6af82aa-4816-4227-8ec6-1bf17bc3c177",
        "cursor": {
          "ref": "252382ab-687e-43c4-8d10-d758714512b9",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "9bb789cd-687b-4f4c-9bf3-b04698668fd4"
        },
        "item": {
          "id": "a6af82aa-4816-4227-8ec6-1bf17bc3c177",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "64791813-b0f0-4056-9af9-ce91ab273ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b604d299-49bd-4b7c-b04c-0cd8ec0d64bd",
        "cursor": {
          "ref": "59466fdc-3f68-48dc-bc3e-576646bf0fca",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f2053c19-99b1-46b3-8229-a57a3c50d8b1"
        },
        "item": {
          "id": "b604d299-49bd-4b7c-b04c-0cd8ec0d64bd",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "5d3613be-5884-480d-b5fa-04ab5f3928e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad47161-2471-4db3-a236-ad5056f11a8c",
        "cursor": {
          "ref": "35ac5117-0069-44fe-a472-92ff4515cff8",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c5c771ff-a54f-4ea5-ba35-45696bfc3763"
        },
        "item": {
          "id": "3ad47161-2471-4db3-a236-ad5056f11a8c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f31f536c-3764-4b06-9d18-b1f67e76c70a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a161bcf-5f05-4e2e-b235-50d88d29f7c8",
        "cursor": {
          "ref": "6fb643fd-f943-4066-9f77-96f063f1e173",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "1a123de4-0d9a-47c0-bef6-3c5c4c16b9ab"
        },
        "item": {
          "id": "6a161bcf-5f05-4e2e-b235-50d88d29f7c8",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "af330d5b-f284-4419-aaf6-296de9aad0ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3cf6288-0927-48e6-8f8b-c6510ef9dde2",
        "cursor": {
          "ref": "2a86cb9d-3317-4c86-bdee-4ed173444f32",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "38e6e70e-bf44-4c77-a913-e6f7c2c9c09f"
        },
        "item": {
          "id": "a3cf6288-0927-48e6-8f8b-c6510ef9dde2",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "532387a4-93b1-4ac6-926b-3565e5da1450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f6ed8f-f72f-41a1-84b9-7259adf57fef",
        "cursor": {
          "ref": "6e9e8475-b69d-4a77-81e8-ae032a35cb7a",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7b586732-d814-41a6-a1aa-152cc975fe8b"
        },
        "item": {
          "id": "29f6ed8f-f72f-41a1-84b9-7259adf57fef",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d0cdddc3-39df-41df-a9b2-602aff4ff62e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c079b281-50a2-44f8-80de-2d882610c4db",
        "cursor": {
          "ref": "de9df18a-9e2d-49a5-84b0-f75e5c287876",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "1859d145-9d9c-446b-9541-f2aecc162524"
        },
        "item": {
          "id": "c079b281-50a2-44f8-80de-2d882610c4db",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "85fb0fd1-2075-4c67-b9b1-9ec9fc6a4921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d983970e-8de1-4416-b87d-1ca1d6f532eb",
        "cursor": {
          "ref": "f67a3aa6-5620-4297-b0b9-eee8d1dac96a",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1afcfcda-fbd0-426d-9ecc-07d290cb2cdf"
        },
        "item": {
          "id": "d983970e-8de1-4416-b87d-1ca1d6f532eb",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "fc7f4e2b-c1e7-4953-b14f-d9136634d739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "101f2525-089c-4d62-8b85-1585f7258a54",
        "cursor": {
          "ref": "dc1c23c3-743b-499d-a01a-6ad9a096da15",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "43e4a067-dde3-46ac-8df0-bbd3738a3599"
        },
        "item": {
          "id": "101f2525-089c-4d62-8b85-1585f7258a54",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6f45073e-a239-49c5-b02f-0515409f795b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce3a8f1-da5f-4fe0-b1ac-958b24cc8278",
        "cursor": {
          "ref": "fc385c07-3870-4743-84bd-c080b1e1573b",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "169ae4fd-d543-480c-8afa-a7cd91a98497"
        },
        "item": {
          "id": "8ce3a8f1-da5f-4fe0-b1ac-958b24cc8278",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "737442b4-a3ab-4562-97aa-75a3f279258d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d58888-03ed-4bc3-b583-9edd25b0030a",
        "cursor": {
          "ref": "27123804-70ec-43d7-9c04-a8d864a353f2",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "24363d5d-2dec-488c-bbce-f7f3e7914491"
        },
        "item": {
          "id": "18d58888-03ed-4bc3-b583-9edd25b0030a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0d26c2a7-a0b4-4dc6-b8a3-842ac8205f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d0709c-bca3-4ca1-a35d-85b47e9356ef",
        "cursor": {
          "ref": "e8c776aa-6918-4c5d-8798-1d0f02ef4b54",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "7319670e-7bdf-462f-9689-ec2793ab810a"
        },
        "item": {
          "id": "d9d0709c-bca3-4ca1-a35d-85b47e9356ef",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "af90d560-1f59-4561-aa36-f7683b60c30c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b48760b-1802-490d-a1c0-19e305bb168f",
        "cursor": {
          "ref": "ee34a482-f213-4899-b005-2e53ab460c66",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "1c7acb1a-e790-4c5c-bc69-64f19ecd06d3"
        },
        "item": {
          "id": "2b48760b-1802-490d-a1c0-19e305bb168f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "535ed03e-2250-4648-8273-43a81d0b295c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad630c1-b258-4f3d-b32e-21bee92d351e",
        "cursor": {
          "ref": "d4c47856-1dc6-4ee3-87fd-ceecc0fa0b96",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "01ae00b6-9372-4b8e-8c24-9032a67e05f7"
        },
        "item": {
          "id": "bad630c1-b258-4f3d-b32e-21bee92d351e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "067e8945-ed07-46b2-b187-cb2cf6f3f4e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705f1403-e9bb-4d9e-9e37-3b0a98430cb6",
        "cursor": {
          "ref": "c25c98c3-0753-40d9-b241-d4e00fe90cb3",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "4b1788ba-945b-4b6b-b5f0-6fb8b95df0a4"
        },
        "item": {
          "id": "705f1403-e9bb-4d9e-9e37-3b0a98430cb6",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b1dc89db-429b-4671-93a9-db9d455082b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73bb8654-7102-4fe5-a17c-e4416204a6c0",
        "cursor": {
          "ref": "0302bd84-3733-4dc9-b6a0-35f922c9a619",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ab508827-c4ba-4c5c-9050-7b7a70eaa2ba"
        },
        "item": {
          "id": "73bb8654-7102-4fe5-a17c-e4416204a6c0",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f12b3607-7de9-4455-98fc-5b9b2e6e5d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc60a84-2003-4182-adbe-ac7dbf19c2b0",
        "cursor": {
          "ref": "22fcaae0-4e76-426d-8c3d-719028029a4e",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "64e07c0d-9994-4b1c-b1c9-a02cdd761383"
        },
        "item": {
          "id": "4cc60a84-2003-4182-adbe-ac7dbf19c2b0",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "861223a3-27f4-4bb4-a548-176359b7d463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c0a370-bae9-4a8c-8211-965ed1e5b32d",
        "cursor": {
          "ref": "2fd84540-9d60-4d63-a38d-8d089e467059",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f2b3071f-922b-47d7-9fb2-264e5c997b13"
        },
        "item": {
          "id": "14c0a370-bae9-4a8c-8211-965ed1e5b32d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "3dac6b84-8d8f-44cb-89c3-d83179c1b177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb5ce11-20fa-498b-bb93-82903f80d686",
        "cursor": {
          "ref": "92143408-d413-4633-97a2-0b38aab7ef69",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "8b319c87-391a-4f44-9fba-29523297672f"
        },
        "item": {
          "id": "0fb5ce11-20fa-498b-bb93-82903f80d686",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3c3f2b58-3c9d-4332-b680-721c09fbbd61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c2fa26-ec76-46e6-ba1a-aa954ff055a8",
        "cursor": {
          "ref": "5a87c0e2-ea41-48af-b539-485b655e35ef",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "727fcb57-5acd-45ec-8ae2-c94cfa88ac5b"
        },
        "item": {
          "id": "77c2fa26-ec76-46e6-ba1a-aa954ff055a8",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ec80a86e-5dfd-4073-b0b0-c74acfb8e96c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae32e2f-5a27-4f0e-80a0-a7b918e52fe5",
        "cursor": {
          "ref": "5c1ce9b5-7a15-43cf-a5c1-789dfc8fa0b4",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "39b4fe6b-c5e0-415e-93cc-d06658f3e729"
        },
        "item": {
          "id": "eae32e2f-5a27-4f0e-80a0-a7b918e52fe5",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "81c6bef9-5691-4610-974b-cbb70c009e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c00a877-f14f-4965-b38d-697961adcf86",
        "cursor": {
          "ref": "3fcb7190-a5cd-4f94-a0a7-0e78e0b101ac",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "2ff44b61-28fe-4cf5-90f1-5171a0a028b7"
        },
        "item": {
          "id": "4c00a877-f14f-4965-b38d-697961adcf86",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "118f84a5-a2f3-4fae-968a-ec263a94d323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd55efb-91ec-4366-8af0-daf54ec683fa",
        "cursor": {
          "ref": "4a7fb95e-f57d-496f-8a43-cfc655b4ee6e",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "364ab015-4901-4b55-a87b-7e6aef4bd376"
        },
        "item": {
          "id": "cfd55efb-91ec-4366-8af0-daf54ec683fa",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "880c3867-d988-462f-b5ea-5c39297f742d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9612a9d8-5899-4a2e-8b1c-93c36cae58d4",
        "cursor": {
          "ref": "9f8e4b67-e3c3-4828-a006-54267442ff80",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "79387b3f-9d83-4126-8d90-f09511d559cd"
        },
        "item": {
          "id": "9612a9d8-5899-4a2e-8b1c-93c36cae58d4",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "4a000114-030f-49cb-99ee-9a383babb46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ecc646-cd9e-4e74-9f93-3a4f5a5ba627",
        "cursor": {
          "ref": "7896467c-0a63-4ac8-8b64-935adb8f9bd3",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "39485ae0-e882-441e-b2f7-d870a74fd961"
        },
        "item": {
          "id": "b1ecc646-cd9e-4e74-9f93-3a4f5a5ba627",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2cc1ab08-1d8c-4e29-a7d4-daea766c3719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 228,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ca1654-4836-4f2c-9892-572034d0931a",
        "cursor": {
          "ref": "7b361ed3-a605-485b-a941-e3feb2bccf4f",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "65948da7-12d9-4b71-a22d-6b79fcfa5996"
        },
        "item": {
          "id": "c3ca1654-4836-4f2c-9892-572034d0931a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "2a492e70-0859-48c0-a664-560dbe5e7fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f848a0-44f0-4b3f-85d7-a7efef3b1b09",
        "cursor": {
          "ref": "1ee49385-f5a0-4963-8b6a-2230e3dd1cdd",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "70b36763-e717-432c-850b-db0015c3582a"
        },
        "item": {
          "id": "84f848a0-44f0-4b3f-85d7-a7efef3b1b09",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "aaf7d5e2-5c4c-4834-9b8b-b8349d309fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011bc8ee-211e-4ac1-98a6-5f152f46428e",
        "cursor": {
          "ref": "04777758-1021-4862-9100-0a0c0b953bb0",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5ea4f8eb-b07c-4e22-8cde-4d1a3f8e611b"
        },
        "item": {
          "id": "011bc8ee-211e-4ac1-98a6-5f152f46428e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1f32ddc2-3397-4de7-84ac-482bbec280c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33c630b-0327-4265-97af-43fc0ec0d5b3",
        "cursor": {
          "ref": "fb0a8c84-0348-40b6-9425-984592f9c54a",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "295ae283-b2bb-4ea0-b092-f9b85128b601"
        },
        "item": {
          "id": "a33c630b-0327-4265-97af-43fc0ec0d5b3",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f248b0bf-fc4c-4c77-8665-e8f832242c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b627b686-45d7-4003-a7a7-504b932f308e",
        "cursor": {
          "ref": "e371d57f-8ef9-4139-8c47-ca9673c22826",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "785edcb3-c586-4c38-ae27-2e5714008458"
        },
        "item": {
          "id": "b627b686-45d7-4003-a7a7-504b932f308e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "994276e0-8604-49ae-84ec-855c7d8d9d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a56628b-5764-4c45-b083-1d438aae59cc",
        "cursor": {
          "ref": "927c8c03-84d0-432a-972c-4f24ef6f7fdd",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f829a9ed-6e79-4579-878d-6d69d9e13301"
        },
        "item": {
          "id": "0a56628b-5764-4c45-b083-1d438aae59cc",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a91b419d-d9d1-4be5-a762-ac54c0b55066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9094d9da-537b-4074-8424-061e2f2f09f5",
        "cursor": {
          "ref": "95180d77-15b2-443e-a2e4-e9035e97e9cd",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1fe7f0d8-c204-461f-846a-f07d7175127f"
        },
        "item": {
          "id": "9094d9da-537b-4074-8424-061e2f2f09f5",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "4ae82c4a-e53b-44dd-960e-145207d54880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb6396d-2479-47f6-86a4-f09a0c75f656",
        "cursor": {
          "ref": "e1b4c947-8b56-4949-a413-52732a817bba",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "736a0dae-1cff-4312-bca4-2ec0c94d052b"
        },
        "item": {
          "id": "ffb6396d-2479-47f6-86a4-f09a0c75f656",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "862eb95a-b31a-425a-ac4b-31d748f6523e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d56e359c-3372-453d-b66c-8459e9b9de92",
        "cursor": {
          "ref": "6c7b84d4-a0e5-45d0-868e-200cb5e01541",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3533f3f8-5a1d-4946-b7d7-fab2bc455197"
        },
        "item": {
          "id": "d56e359c-3372-453d-b66c-8459e9b9de92",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c3508631-81ba-42f7-8f28-aa45603eaf2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48ad09f-0049-4dc0-a999-57700645eed7",
        "cursor": {
          "ref": "54bed6ed-580f-46f3-a69b-7b35b2655e6a",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "2a4b6c5b-f285-40c6-91cc-c182ac07d9eb"
        },
        "item": {
          "id": "a48ad09f-0049-4dc0-a999-57700645eed7",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ed342a38-93ca-462f-8739-12106dd93d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e436fd3-2611-4c1e-aa00-33405129935d",
        "cursor": {
          "ref": "e356a2db-1c9f-441b-9506-ada19b76f080",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "7fe2dd18-0bc3-4de4-aeaf-635a25206a74"
        },
        "item": {
          "id": "3e436fd3-2611-4c1e-aa00-33405129935d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "abba57ce-ce66-4110-a6f8-072060b9fd20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "426fa9e3-9673-47a8-bcb4-625d67bf2248",
        "cursor": {
          "ref": "3c6576e0-3a99-43bf-86f8-8ba38b2ec142",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "76654ae1-ec6f-4fcf-b189-79a87b78f744"
        },
        "item": {
          "id": "426fa9e3-9673-47a8-bcb4-625d67bf2248",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "de30407f-4e18-46e3-93eb-4035807694c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "167a761e-cee2-4b84-9808-fc602a18da63",
        "cursor": {
          "ref": "08ae3465-e255-48e8-90da-c7c9ccd6c3fd",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9f5e63d5-f9fa-4ae2-b742-eeb758c2b13d"
        },
        "item": {
          "id": "167a761e-cee2-4b84-9808-fc602a18da63",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4854f332-efe4-4d7f-97a5-0402a0ea0897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba13508-c5de-4126-ac01-41c0fcd805fa",
        "cursor": {
          "ref": "7fb2a4d5-4abf-46b0-ab21-a0596cdc80b8",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a6aa83ad-90a3-4fbc-bcbe-a973e83a5e43"
        },
        "item": {
          "id": "8ba13508-c5de-4126-ac01-41c0fcd805fa",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "944a488c-799b-458b-ab67-9e64a3cb6743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab6c55e1-0736-4b67-a8a0-1c8502bc5476",
        "cursor": {
          "ref": "84a809a9-3a17-4bda-8768-9072b5cc4e8d",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "2e843de0-be9b-4101-a23d-88915fbaf3c5"
        },
        "item": {
          "id": "ab6c55e1-0736-4b67-a8a0-1c8502bc5476",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "dfd8161b-9833-48ac-a891-2fe15aa3822c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4538e20a-ace6-4f2a-b439-ae8a2b1bad8c",
        "cursor": {
          "ref": "c107a8f8-237d-4f7f-bb9e-4f76068bd176",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "cd17eafe-5609-4341-af09-318cc9bc3e6b"
        },
        "item": {
          "id": "4538e20a-ace6-4f2a-b439-ae8a2b1bad8c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "99c7fc49-4b79-4052-985d-720f059d4e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78eb3160-05cb-4b4e-846a-32962621efd3",
        "cursor": {
          "ref": "f6c09764-4ff6-4ead-8263-794807fe50ed",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d10e005e-4f09-4432-9f58-fa049dc1fd71"
        },
        "item": {
          "id": "78eb3160-05cb-4b4e-846a-32962621efd3",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a0eeff96-5f97-4160-b99c-a235b9e3b249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1edd7189-b7d8-42d1-8612-20b3905b93d4",
        "cursor": {
          "ref": "bc844286-2244-48f7-a4ba-85d6b6df25e2",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "0a33569d-82bc-4349-b4d5-352a4ee58908"
        },
        "item": {
          "id": "1edd7189-b7d8-42d1-8612-20b3905b93d4",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c36b3792-3519-4a7f-a60a-fb048d7261f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deefd92a-2c20-4619-9a82-4a1b789a9f42",
        "cursor": {
          "ref": "9250f228-3a89-407c-9d39-32ea8b3d81fc",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "4878c7db-758f-4bc0-a764-aa4e17e67ee4"
        },
        "item": {
          "id": "deefd92a-2c20-4619-9a82-4a1b789a9f42",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "49279f1a-7708-4bae-8ea9-c479e699eb6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38705a12-a83d-4635-b2bb-9b4a7a9b7da6",
        "cursor": {
          "ref": "54539f93-bc04-44ea-bb90-9aa015124149",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "1b257538-1f0f-4a1e-abfd-bf78bc0d4863"
        },
        "item": {
          "id": "38705a12-a83d-4635-b2bb-9b4a7a9b7da6",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d47a11e8-98bb-4972-834d-4063faa9ec86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6d3841-4e08-44ad-bbbc-4f431f5025b8",
        "cursor": {
          "ref": "66d19be7-dd5e-4050-aa06-65db0d37be15",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "4deeff4a-2ef6-4f70-bcab-c77e1ad4d0d0"
        },
        "item": {
          "id": "3c6d3841-4e08-44ad-bbbc-4f431f5025b8",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "faabf2cf-c87c-4a31-8957-d8488dd2e42b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d93ef8-1125-462c-9a12-20c665c629d7",
        "cursor": {
          "ref": "38bfe119-af68-4205-baf9-da2895e4395b",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "7c95ce27-df27-4d9c-86b4-f7a885bb4f83"
        },
        "item": {
          "id": "05d93ef8-1125-462c-9a12-20c665c629d7",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9af8086e-03aa-4f5b-8e65-39aeb07734eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741885fe-8a42-4ac2-baf6-f942fc8c05e1",
        "cursor": {
          "ref": "0d4190a9-d5cf-4f86-966f-491211d98b57",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "45692a23-b9c9-4634-b912-4b29b9de7db4"
        },
        "item": {
          "id": "741885fe-8a42-4ac2-baf6-f942fc8c05e1",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "04835c0b-1222-4a7f-94e6-0e74cb7e5bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d9854c-8c71-4c96-b211-c117fca95d6b",
        "cursor": {
          "ref": "3d5a90a3-e7f8-4081-ad96-3747a511fc02",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0e9a1f5b-867a-431b-bf77-7ef873673413"
        },
        "item": {
          "id": "93d9854c-8c71-4c96-b211-c117fca95d6b",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "69169362-d490-4ba8-a6e2-369d4264a23e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f76aec8b-575c-418e-a2eb-d799b3af8dd6",
        "cursor": {
          "ref": "aebbfb5c-6854-4422-aa22-c60ce8d9f5c2",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "c41e67ab-d15c-42ab-9ca7-d4c561fdd987"
        },
        "item": {
          "id": "f76aec8b-575c-418e-a2eb-d799b3af8dd6",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a84dcbfc-7a6e-432d-ac5c-6d282913ff5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a7702c-53a0-43d0-813e-42c0b3e1ad5c",
        "cursor": {
          "ref": "8965e0a1-29ed-437a-8e55-b5218f017e15",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1e44c6cc-5ebb-419b-8544-c88475e4aee0"
        },
        "item": {
          "id": "c4a7702c-53a0-43d0-813e-42c0b3e1ad5c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a94d514b-f257-4f8d-aa33-6d3b2c53896b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b31120f-0cb4-4449-aad9-690ab51f46d2",
        "cursor": {
          "ref": "37e3fcf7-63a2-4c80-9f33-4d6e8cddfc10",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "456b32fb-b0c6-44cc-b1de-1b9a46717b77"
        },
        "item": {
          "id": "5b31120f-0cb4-4449-aad9-690ab51f46d2",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "91cebcc7-3efe-4e5f-a5a0-f5da33834c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96eded7-651e-4bd8-8f89-b1853a17b72b",
        "cursor": {
          "ref": "24f1d489-3485-42ed-ab0d-5056b83a8c8b",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d70f791d-3888-4481-9918-5a821d40311a"
        },
        "item": {
          "id": "b96eded7-651e-4bd8-8f89-b1853a17b72b",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c6bb6a2d-8419-45ec-872f-f6d6db0ceda4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e0550a2-93be-437c-a8a5-3eb847abe2b9",
        "cursor": {
          "ref": "b4eb9c2c-12af-4a81-aba2-fa8040345eb8",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2412e9ca-ff26-4ac8-8e7d-dc1b8685828f"
        },
        "item": {
          "id": "9e0550a2-93be-437c-a8a5-3eb847abe2b9",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "95e0704b-f966-43a8-8069-026cb876a400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa1b7b61-71ae-4d49-b1ed-61baf8c2ca46",
        "cursor": {
          "ref": "12c6e2d6-83ae-4fdc-b0e8-8f31342bba1a",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "52309476-a972-4004-8ab3-411ca1d6f51e"
        },
        "item": {
          "id": "fa1b7b61-71ae-4d49-b1ed-61baf8c2ca46",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "23db5ea5-fe8d-4230-b187-ca96af79917d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f5b59f-91cc-44ab-92df-9e42e09f45f3",
        "cursor": {
          "ref": "fb166143-41cb-446c-bf9b-b80747f1c37b",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "99dad292-3a76-4543-ab38-38653e3261a9"
        },
        "item": {
          "id": "27f5b59f-91cc-44ab-92df-9e42e09f45f3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e45f54ff-5a58-4c52-94e7-1f0f7b2e8154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a96aa18c-52e6-4896-84ad-0e01e2f2107e",
        "cursor": {
          "ref": "faba2749-697f-4cdf-8143-da6992a3a222",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f878be8a-7d70-48c6-bc82-ed04446879e7"
        },
        "item": {
          "id": "a96aa18c-52e6-4896-84ad-0e01e2f2107e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "dc5f8be9-e8eb-4905-8e09-2e09da5e3288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "932a397c-85d3-4855-8c36-45b78b54729b",
        "cursor": {
          "ref": "70b30f71-4ca0-4120-996b-8da3dc21aadb",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9de8b8ba-9604-4c7f-a4e0-38ad758d1b0d"
        },
        "item": {
          "id": "932a397c-85d3-4855-8c36-45b78b54729b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "581ba8a5-3aa6-4ece-97a0-a39e08e70339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10899f7d-da5b-4e0e-bd5d-5a8c37c3b3a7",
        "cursor": {
          "ref": "2175d826-ecd6-4e72-b81c-25ec3d904157",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1bff09eb-cfbb-4052-bb63-82e35b599548"
        },
        "item": {
          "id": "10899f7d-da5b-4e0e-bd5d-5a8c37c3b3a7",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "30ed7b08-d98d-45d3-8a25-ad143bc362e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe6242a-512f-4af3-8a02-ea9911c467c0",
        "cursor": {
          "ref": "7af4333a-84a3-43cb-b33c-73ec7a98ccf3",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f11b0a8b-bc13-4607-adc7-6c0d96ae1874"
        },
        "item": {
          "id": "fbe6242a-512f-4af3-8a02-ea9911c467c0",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "251f1ef1-73e8-4340-9071-8463a289c13a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69435d10-8e38-438f-bf3e-94e0296412c6",
        "cursor": {
          "ref": "c2dbcfdd-b504-43fe-8a1a-4f68a940b2a9",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8fd8352f-ed13-4bfa-ab6e-647546b22b74"
        },
        "item": {
          "id": "69435d10-8e38-438f-bf3e-94e0296412c6",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "711f43d0-1958-4f19-8ecb-ac908dabbe3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e37927d-03d4-438d-8c50-ece0021ad858",
        "cursor": {
          "ref": "01291654-0754-49e2-8988-252bad0b7e6a",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "6de4a88a-dd7f-4392-86e7-bd573ad258c0"
        },
        "item": {
          "id": "1e37927d-03d4-438d-8c50-ece0021ad858",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "1b113bb0-8e4e-44cd-a85f-d3adac5be592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a000e38-6f1e-4d77-82a8-1425a590e9f6",
        "cursor": {
          "ref": "5149207b-8f7f-4a42-b420-b5df61897494",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3cd03bc8-fa9e-4c3b-9902-9d84e7169ead"
        },
        "item": {
          "id": "3a000e38-6f1e-4d77-82a8-1425a590e9f6",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2a609943-f91a-4cf7-9b8e-6ec7761921fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d21e42-4fbf-4243-b014-d86a73f08588",
        "cursor": {
          "ref": "511dd9ec-a9ee-47f7-a127-ee61eb87d864",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "21b1b785-31c0-4b12-982a-c138d667785c"
        },
        "item": {
          "id": "84d21e42-4fbf-4243-b014-d86a73f08588",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "52b00ad4-91b0-46a0-8c89-88131c9eb9cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0fcfc6e-ac62-4530-872f-68bd51613104",
        "cursor": {
          "ref": "5415b561-c1a8-48bb-a92d-e9210732cb34",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ecdd7bb4-253e-4a96-80b2-9a6d30f7d135"
        },
        "item": {
          "id": "f0fcfc6e-ac62-4530-872f-68bd51613104",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "576adef4-75f0-4ae2-83e4-f9f9c9ac3304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc447c0-bd61-48ef-9bd7-4db7fb0b27f9",
        "cursor": {
          "ref": "76a07d67-ef4f-45f3-aaa8-0a546f7c030e",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b03807bd-3713-46c8-a54d-8aaf5e2797ca"
        },
        "item": {
          "id": "0bc447c0-bd61-48ef-9bd7-4db7fb0b27f9",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7b9bfc42-d7fd-4ee9-8ddb-bb08b6876f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5dd213-dac1-40f9-b178-f575774ca80e",
        "cursor": {
          "ref": "a155f82c-3d00-47e6-8614-239272a1cd7a",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "1dcfd5eb-12d7-48ec-a8f3-a24d4320fc4a"
        },
        "item": {
          "id": "af5dd213-dac1-40f9-b178-f575774ca80e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "cb34ec4d-ce3d-4347-9d29-e76a8885418c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df420e10-fad0-4458-8952-4c2d5de4f7f1",
        "cursor": {
          "ref": "884acaa4-c071-4901-8f30-4ede9ce62216",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "54ee3ed9-08f4-4b3e-b1dc-435976b34be1"
        },
        "item": {
          "id": "df420e10-fad0-4458-8952-4c2d5de4f7f1",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "bbf8e209-696e-4819-8592-49688133b1ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07866764-5dfd-47da-b641-81b0e920b59b",
        "cursor": {
          "ref": "61b8e69b-4386-4cdd-8eac-35e9e449fc8c",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "3f7592af-2aa9-4014-b5c9-f3a8735e5bf2"
        },
        "item": {
          "id": "07866764-5dfd-47da-b641-81b0e920b59b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "8e3ece5b-c645-49db-916f-f7d3a4f6a922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ceb5a7b-62ed-4b00-8252-7c438aeb2ea0",
        "cursor": {
          "ref": "d1c58944-8db0-4ec8-ad73-852c7838b6a9",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e58daac6-62d3-4615-8945-076b3b733405"
        },
        "item": {
          "id": "4ceb5a7b-62ed-4b00-8252-7c438aeb2ea0",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "489cd1d0-d1ce-490f-b77f-a2e403ddb3f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "861282a6-4b38-4d40-9b98-a85b794def9d",
        "cursor": {
          "ref": "96f960d9-9172-4671-83a0-fa4e3b32dc00",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3855f17c-3389-4dc0-b91c-8633f5f185bb"
        },
        "item": {
          "id": "861282a6-4b38-4d40-9b98-a85b794def9d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "3158f526-7c0c-4098-82e4-9e9328967f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5b61bf-78dd-494b-bfaa-90f0b6dedb3f",
        "cursor": {
          "ref": "6a6f5f44-8e18-4a5b-9c5b-cd53f452ceda",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f91bc084-6475-4c66-a9c5-cfb20feff297"
        },
        "item": {
          "id": "0a5b61bf-78dd-494b-bfaa-90f0b6dedb3f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "16e371c7-1d8c-4830-913a-612f046dd171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364ecf99-a8f7-4a54-bd51-9ba6ad1fcfb4",
        "cursor": {
          "ref": "b0397d71-bfb6-442a-aeab-63c23e4b99da",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "1f7fee2d-cada-48c1-b327-82ea3307bd7c"
        },
        "item": {
          "id": "364ecf99-a8f7-4a54-bd51-9ba6ad1fcfb4",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f0a045a5-408b-4ae9-bfae-b54fb107ff26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd87de7f-430b-432c-b398-bcfd978a5558",
        "cursor": {
          "ref": "6f77c00b-5c50-4bf4-aa85-56b9de5158f5",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "137a5943-cb09-4826-98e8-cdfd9da833ab"
        },
        "item": {
          "id": "fd87de7f-430b-432c-b398-bcfd978a5558",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "19bad48b-b489-4ed6-a481-549be6de014c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71926161-acb3-4307-9603-f520be9598b8",
        "cursor": {
          "ref": "74b00892-af7b-4abc-9aa2-4d813fe19496",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "6060d29b-9d3f-4ac4-b0a8-96f5a2916b7d"
        },
        "item": {
          "id": "71926161-acb3-4307-9603-f520be9598b8",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "130e65a6-2900-40af-8d33-f492ac704f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f6af37-0dca-4fbe-8fae-b6585161c581",
        "cursor": {
          "ref": "6af618c1-f683-4a42-bcfe-b7192aa62900",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "207703ff-0c7b-4b33-a4d9-a25e2c254d4d"
        },
        "item": {
          "id": "81f6af37-0dca-4fbe-8fae-b6585161c581",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7ef670d0-72e7-4903-8f46-942119e225a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "638d5d14-1751-4881-923a-0a0828ac6c19",
        "cursor": {
          "ref": "6647fe6c-7e75-4e11-ac97-f85916e21f1e",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "b9eba4a1-b7c9-44b9-8902-9a6f6b684acc"
        },
        "item": {
          "id": "638d5d14-1751-4881-923a-0a0828ac6c19",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f0c4e47c-0468-41e4-9b73-b46c2772c587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05989256-7e4f-4722-8e3c-e07acc427160",
        "cursor": {
          "ref": "d11f4e03-58b5-4978-8bf8-ded9c29d9eb7",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "3f4f7eec-47a7-4fc0-8fbf-6cc2d508ea71"
        },
        "item": {
          "id": "05989256-7e4f-4722-8e3c-e07acc427160",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "5b949730-3d5a-4001-b123-7d1200091e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7829dbd2-e503-46a4-9b0d-0b0ce60241ac",
        "cursor": {
          "ref": "45c98157-247f-45c9-b819-5287be418a6b",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "ad4ec20d-f00b-4b57-9f8b-d59037ce5c7a"
        },
        "item": {
          "id": "7829dbd2-e503-46a4-9b0d-0b0ce60241ac",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e3e34af7-fc92-4ec2-ab73-8f257b3ce6f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec1af39-f994-42bb-ab71-f0586f15f8f6",
        "cursor": {
          "ref": "1c5f6df3-6da7-4582-9b27-a90bbd4d925c",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "3206e5ff-773e-4539-9e3f-6cc2c1c4bf60"
        },
        "item": {
          "id": "0ec1af39-f994-42bb-ab71-f0586f15f8f6",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "24639bcb-ad63-44e2-a5f8-7b669b3d9daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dbf306e-c9bb-4f17-a4e8-fd4c29a1e558",
        "cursor": {
          "ref": "5ce5c868-9360-46b5-b84c-9e58b5f1c0a4",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "af17ec09-c47b-49fd-94bc-98a34a9981df"
        },
        "item": {
          "id": "2dbf306e-c9bb-4f17-a4e8-fd4c29a1e558",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f00a758e-1ec3-4677-a217-dcea3c735324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd92da9-a4b7-464f-83d6-54483915ac26",
        "cursor": {
          "ref": "14b647a7-d45e-4e90-be38-ece2ab8542fd",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "db0a73f7-00d0-4208-a8b3-493592a44616"
        },
        "item": {
          "id": "2cd92da9-a4b7-464f-83d6-54483915ac26",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "93761f79-bb4a-45b9-b57e-1a74df61773b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4627912e-ace1-4c5b-9f58-cb6713139f8a",
        "cursor": {
          "ref": "fef12d01-7bbd-40e4-95ae-64d5fbecac4d",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "f6da10ad-2264-4374-bee7-9500aab74677"
        },
        "item": {
          "id": "4627912e-ace1-4c5b-9f58-cb6713139f8a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e8634102-7563-4a98-8f0e-03cbb0502beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "725f4922-dfda-4657-8a74-3a1483ce0a2d",
        "cursor": {
          "ref": "0c7520bd-245d-4e8d-8182-4ce81c0bfd61",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "911be902-504f-4d5a-bd9b-6a0755ceaf41"
        },
        "item": {
          "id": "725f4922-dfda-4657-8a74-3a1483ce0a2d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "71345f41-6e37-4b2a-966e-21e8ac0688d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190e9ccd-8a41-410a-af96-1acc74c5603c",
        "cursor": {
          "ref": "2e0a10bc-2f67-4535-a068-ba5b2fba2740",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "c3d81e1a-1ff3-4b70-ad95-17bef62fad1e"
        },
        "item": {
          "id": "190e9ccd-8a41-410a-af96-1acc74c5603c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a7ad5fc1-85e0-4b62-9175-3598ae3749ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c743e4-ca00-43e3-9fbc-edbab124b211",
        "cursor": {
          "ref": "b4c8401b-6e1c-4dc6-b60a-5c480a755e47",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "5f440370-3f6f-4de2-8875-74cc577c1f6c"
        },
        "item": {
          "id": "d5c743e4-ca00-43e3-9fbc-edbab124b211",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a5244200-cd9c-4df5-ac2b-5de31fa9e55d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf429e6d-afa9-44fd-ae39-dc8206ee3ffe",
        "cursor": {
          "ref": "f1989918-547d-47f8-b732-9163fd32b566",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "caf567fd-c296-49e8-9399-00132c262f9b"
        },
        "item": {
          "id": "bf429e6d-afa9-44fd-ae39-dc8206ee3ffe",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5f22cd39-f36f-4084-8c4c-df9c0a422c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8332890-253b-49d0-87a2-eb1c25188cb4",
        "cursor": {
          "ref": "d8dbcd11-c7a8-4725-9b4c-c741d8e88cbd",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "2c886d3f-058d-4786-9ea2-be3bcae1cb23"
        },
        "item": {
          "id": "f8332890-253b-49d0-87a2-eb1c25188cb4",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "cc900987-7bce-4972-9040-17a724d0b037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a79e4f45-24c7-45ab-8d89-db9057c6f8a7",
        "cursor": {
          "ref": "48024eec-66fa-4a98-97f3-874ecb3611cc",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "53d8278f-6f0f-4dae-bb4b-e41c41598cad"
        },
        "item": {
          "id": "a79e4f45-24c7-45ab-8d89-db9057c6f8a7",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ad1c4a70-46d7-4ecb-ad37-76b1129739d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdbcc4d4-835b-4727-96e7-325d68b063fb",
        "cursor": {
          "ref": "e7ee2166-ec1e-420a-9615-6181e89bd0de",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "e880b509-620c-4eb6-a33b-6c0ce127116e"
        },
        "item": {
          "id": "bdbcc4d4-835b-4727-96e7-325d68b063fb",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "952a2a3a-fac0-4770-a147-db57329f8b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c97063-9f85-4e58-adb8-c49485261652",
        "cursor": {
          "ref": "67302087-771b-4fdb-a811-929fed1300d7",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "8d4207d9-c5d3-400a-af5c-12f9d5cacd74"
        },
        "item": {
          "id": "16c97063-9f85-4e58-adb8-c49485261652",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9f3af442-b6d6-40b6-88c0-ad6ef24c4441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52bba9b7-d777-4e40-8c2e-e444b34a023f",
        "cursor": {
          "ref": "76583105-728f-4781-9691-7fd666a85102",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "7a5ac0fb-e99c-4548-9920-aaca449eae56"
        },
        "item": {
          "id": "52bba9b7-d777-4e40-8c2e-e444b34a023f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a17e939c-441c-4109-b046-4c34c0a94d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "677756b1-67c3-4469-941a-e2b01762998c",
        "cursor": {
          "ref": "d322747e-5558-4d7e-9ade-c1ac2c2ae910",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "939c8cc8-4abf-4f1d-9f70-01182a280fac"
        },
        "item": {
          "id": "677756b1-67c3-4469-941a-e2b01762998c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "034b0d50-3118-4b83-9c3c-529cc0d512da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21019540-1c67-42b8-9cab-6b7a65244fea",
        "cursor": {
          "ref": "46c5a15f-e58c-4672-942f-acf71cf89788",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "ee373da3-fdc2-44b0-9bb8-8a1fc37ad901"
        },
        "item": {
          "id": "21019540-1c67-42b8-9cab-6b7a65244fea",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "319352bd-c86d-4432-ad78-2ba6bb57f922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f77ef3-2afa-41ea-8daf-0354c5d22faa",
        "cursor": {
          "ref": "a351a235-5b06-4930-b6dd-8e128994c719",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "e91065c0-4406-4588-9422-7a7e37531170"
        },
        "item": {
          "id": "a5f77ef3-2afa-41ea-8daf-0354c5d22faa",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e7538de2-186a-4e03-95c9-c836eb9fef9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a78cbe8-43fc-4e34-aabd-e75e777c1311",
        "cursor": {
          "ref": "fcf9fac7-9a73-43a7-b389-350ff7d68b8f",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "70f5a2b0-ffd9-4c99-aa5c-b20467a41760"
        },
        "item": {
          "id": "9a78cbe8-43fc-4e34-aabd-e75e777c1311",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "df772205-3785-44c4-85e6-b02cb7a3fab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a93ddf8-84f3-4f72-928e-10296946ddcc",
        "cursor": {
          "ref": "842a375a-6793-4427-8674-26cc8e56f537",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "8463b98e-85d1-44ba-ac64-244385520cdd"
        },
        "item": {
          "id": "8a93ddf8-84f3-4f72-928e-10296946ddcc",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b289cea8-6ed7-4bec-9992-fa71c752b2be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd3bffc-f251-484c-a16a-8aef5ca1c7a1",
        "cursor": {
          "ref": "37267d25-61d8-4720-a08e-e50d4dedb315",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "23153c3b-6813-49d5-af82-71716594ea02"
        },
        "item": {
          "id": "4fd3bffc-f251-484c-a16a-8aef5ca1c7a1",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4fd660f2-90fe-46e6-b5a9-fe2eb572e93b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a7c814-0143-4bac-8874-40b25a7dda99",
        "cursor": {
          "ref": "fe1b0cae-faeb-45bb-8de0-9ca3024357bc",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "a8e740e7-8e17-45dc-bfff-45757f9c704a"
        },
        "item": {
          "id": "38a7c814-0143-4bac-8874-40b25a7dda99",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ffd2a197-c6e7-49b0-81e2-e2814230ca36",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab773a0-26bd-439b-88d7-9822ec565938",
        "cursor": {
          "ref": "6261847e-07f5-4aab-b193-805f196a8bf1",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "0e94e3f3-3c69-42e3-ab29-bdc25bdbbb8d"
        },
        "item": {
          "id": "6ab773a0-26bd-439b-88d7-9822ec565938",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c79a1d37-5feb-4d67-b858-0b52f6962858",
          "status": "OK",
          "code": 200,
          "responseTime": 83,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e090d7-9ba4-44bb-940b-fe5cadbb22a0",
        "cursor": {
          "ref": "ce19b47d-69f6-490a-96f1-21745b3ea458",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "65b0fc45-3a3a-4a48-aa30-bd8311523956"
        },
        "item": {
          "id": "26e090d7-9ba4-44bb-940b-fe5cadbb22a0",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "1b5fcfc7-4c73-4b61-b42b-26b3672f4a93",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "105a25b2-1f97-44ca-a6b9-4e72803c319e",
        "cursor": {
          "ref": "da319a3b-499b-4e93-9165-b447ee593f79",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "8f65c489-3922-4644-84e2-8e00e81042d3"
        },
        "item": {
          "id": "105a25b2-1f97-44ca-a6b9-4e72803c319e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "66261409-a9a0-4734-8b9c-1c268c1f4139",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "105a25b2-1f97-44ca-a6b9-4e72803c319e",
        "cursor": {
          "ref": "da319a3b-499b-4e93-9165-b447ee593f79",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "8f65c489-3922-4644-84e2-8e00e81042d3"
        },
        "item": {
          "id": "105a25b2-1f97-44ca-a6b9-4e72803c319e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "66261409-a9a0-4734-8b9c-1c268c1f4139",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea6176de-7aba-438c-8677-fe101917d678",
        "cursor": {
          "ref": "e4d0eb12-0395-46e2-8bfd-93b4a32cbf77",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "e3380c7a-af34-49d0-b992-bdcb3d2bb532"
        },
        "item": {
          "id": "ea6176de-7aba-438c-8677-fe101917d678",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b07de4e6-7185-4a69-98bd-728ef6908e99",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "462bb5e1-7d5e-4093-b8f8-54f7af27f08b",
        "cursor": {
          "ref": "9b6b375c-4d15-4933-9a39-f48f62b765e8",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "5dcb16b3-b75b-4db2-a859-e0bb5978662b"
        },
        "item": {
          "id": "462bb5e1-7d5e-4093-b8f8-54f7af27f08b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7e3659fb-3868-48a3-bafa-d79ceab3629b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}