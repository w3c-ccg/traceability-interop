{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "00a4d592-700d-4a30-8757-d491e13842e9",
        "name": "Clear Cache",
        "item": [
          {
            "id": "13c6b8c8-465e-4c97-a9cb-4ac95e4d771f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "10a30762-83b1-4cc4-9619-e10af2349345",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "82f9dacb-e470-4f86-944e-f6eaa5efcc9a"
                }
              }
            ]
          },
          {
            "id": "0e916d8f-76f3-4122-96b2-af87cfe7e898",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "478e4117-3f96-4171-b6ee-fe113ccd8a91",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "05e65e02-48eb-4ad9-ad14-bdafc6367aa1"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "938a91d0-9663-4f62-9607-811624b457bc",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b564c241-2dc6-4b71-9075-82e7c512f204",
            "name": "Positive Testing",
            "item": [
              {
                "id": "72a84585-b2ad-4cb7-b6bf-fd109ce2cd08",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5e6c32b-bbf0-4561-9b16-33a91d72abfa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "26d035b7-b6e0-4328-a021-05cb45746318"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "de51ad54-cc69-4528-b49b-b949230e1a91",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "90f21339-e1bd-4e52-8fb0-a1562d36b461"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "31c873da-1ca4-43c8-96d0-7d1fd6e15bbe",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1e32b9ab-734a-49dc-b2f5-376c6b1e9705"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2c7ff776-05bc-4346-9e67-ff1f0351b63e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b30e8963-7d6a-4588-bcf6-8a8ea362d52f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "de969f95-fec4-4efd-9779-2d477f47999f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ed210b84-1d77-4c7c-92ec-a410a85cac7b"
            }
          }
        ]
      },
      {
        "id": "af31f751-8a16-464e-b9e2-9bdc5621e286",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9b93a9cc-8056-48b4-9119-55278ff2742f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5bb1f641-6836-48b4-a7a4-cccbc6dbf482",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dafd01b9-d930-48f1-af71-f128259dad2a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edadd9fc-155e-4fc4-a8f6-452b347027b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0d23db1-adca-4005-96a5-810bf25a467f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c835e73e-29f7-471f-bb34-beed2f6cd274",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8bffae9-57b8-47ce-94c0-2d1177e91e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ce237e19-7727-4414-97ba-d62b5686ca37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecae754c-0198-46bc-8389-734abe2817ba",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e214414-95ca-4615-a3bb-14450e17a3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "56ccd961-a2e3-49d5-9753-57909d2eb280"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "448a4c60-603a-4d07-8b82-d712f088e3b7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "345828cf-97f1-41a1-9a4d-8bce8069eec6",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "081ac545-ba34-47ff-bfe0-54e6bd3a0343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0cbbd646-8b8e-4f63-88bb-3dfb526a971b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb41d8d-5fef-47ae-9c29-8af4852699a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26c10e24-659c-4954-ac5d-577863f34a1e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cda15fbd-d9dc-4792-b754-9410ae3ad8ac",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9c45499c-3da1-46b8-a9aa-9fa803887b83",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "78ba0329-70fb-4438-90b7-f83755596d70",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "77a9795a-24ef-4669-9638-e72b0fc6a6f2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "730d24e9-544c-46f9-8ab8-cafd8ec73d28",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e4adf975-40df-4252-b2ab-0e51f4981345"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce2ab0a1-5a51-4988-bd22-9adb8427b0a9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "74a323f1-d074-4377-b3dd-af72ae091a41"
            }
          }
        ]
      },
      {
        "id": "c46e6561-f469-4395-afca-2f4f511f5c78",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "85e3de1f-807d-4f36-9d8f-ca0e179aae4e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9edf6a15-c7ea-4a2c-8d87-d79dc817f22c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5b2fe930-af38-4e50-9ea6-50a0fc0c3f26",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34cb7e0b-662a-478a-87d5-10443db40aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "621d6032-162c-447a-ad19-a5bec8902661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbfa5580-a858-4457-aa7a-7abbf47c3699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "769c9af2-22b1-4ce7-bc3b-422c020d8ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff9717df-2c57-454b-8b35-80d30b7e9a8f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fbe0e7a-ccee-44f1-85d7-ee7380285fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bbbfd93-6fe2-49db-ba82-5a2b11ec7ece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abfd88c4-9ade-42d1-9a90-d9b25502013a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "600de7d2-6269-4938-a0cd-c9608c015007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a3ee67f-47c6-461c-a0ce-281bb704c55d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee1a386-78cf-414e-a0d2-94799d68a8c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c4a5936-2c21-4838-bc8a-4db0ba03dd65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72d85acd-f0eb-442e-955a-54b18f166d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2fd55687-64b1-4977-8c1d-2199152bed12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a7b9a1-7280-43d4-921f-b5d6b7604245",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32ce132-7674-4332-8110-b48f10377301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a505df93-d004-4d60-8e9a-b3ae3dabec4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b29d20-2c94-45b1-a086-4371a859c78b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed796e21-7ef8-4282-880b-4f43915cffa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f999a101-81dd-44fb-83fa-8c7351a0b7ce",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b75f2693-cc14-4b04-9e2f-6f6b36e2ff56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95e5a25a-8107-4fde-ac5a-e0d759168c76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb3f6802-2feb-4ec6-8c95-d205f1e256de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30aed8ac-b51a-40d0-bddc-2552bbb4208e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20bfa71-0505-418a-97ea-7822625f6792",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adbdf41a-cf99-421f-a836-f0f98baeea53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "972addda-542c-4f06-9f92-5be786643c09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7908878f-212b-4be8-a532-8aeda59c17ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16c258da-a245-4f27-8097-9cb453a53513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f268c5-f91d-4dcf-aa4d-1caa371163be",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b43a26ce-b981-4612-9a51-920e2ccbeb8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4674e89-f360-475d-a131-e11b7ce6faae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8bde7f-9e7c-4e65-8aca-f29cf6a4f9c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eab0bc19-f90e-4c06-ae3e-2cf8aec595d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a45c4b-9497-4169-90cd-599bae891113",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d82f386-ad11-45ba-9dfd-c24fc341c3cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74d74d6f-c9b4-4dea-9900-cdffeb46c0af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdcff745-a51a-46b8-90b8-ff44e4579f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "475f9ece-f49d-492d-a689-5ecf9d796e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92bf3bb2-89b8-4aeb-b9a8-f13cf97d1a3a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22cb5227-584f-4957-831c-951af2e13003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55034a90-a716-40b1-9267-d5df28d5f976"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a26cdb-81fa-4843-8de4-79a3d9402aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b08f2731-7004-4cce-8634-c09a7197b1a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aec41be-3299-4478-b4f4-ffb33f0b45ce",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef507932-75ee-428d-b09d-ca6a5dc45e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0627f568-fb13-4f6c-b839-27eea2ef10d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fddc7083-ea90-48da-8c71-aa7b77ebeba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28f6d418-ad89-470c-ad93-9dfa7a1b5b04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab6811c3-0a34-4854-905c-2f9a32b273d2",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d187d27-d991-4e48-831b-058438360d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84b1e949-5879-47be-9207-e1c40c0d1ff2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa7bb239-7ecd-4bcd-b5b8-3da06dad5e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4151f288-f22f-42da-9b9f-eabd81cac6b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e2d475b-c618-4e72-afca-a1823a213afc",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d43bdf9-b985-4558-a023-dd72c24b9a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aa4bd2a-1853-405d-9252-13eb658cca80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ada4b94-3846-444d-9dd9-8c4706ec6a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50d1f25e-00b9-43ef-9e98-a2306b19bee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bdef146-151c-41dc-8288-3637df1e9a13",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea013e32-9a29-49e8-aa44-c288718cb955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16a075e8-c599-402f-ad5f-9f5d4401a8c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ffde5e-a486-49a7-88a9-59882a146a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ce6700d-f157-4ddc-a1e1-84a4ea1265ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaad5f38-ed55-40a5-b0cb-37ae0cb77970",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e6f8e35-d9b3-4f55-a287-f93184fa495c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "242429f0-e44b-4502-93aa-afdd37029467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7997ee96-3c20-4404-a6cd-cc0861b57dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be358339-4473-47a3-b916-ebae855f8955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee1bf5f-84f0-4dce-bba6-1781a844b578",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3511de6-d20d-4e30-955e-775336364bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4104f9e6-9446-4a28-8f80-8fd272c3cc0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8522ed3e-419c-4d13-a6d2-5fbb8a710439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6afa015d-bbab-401c-a39e-1a7d2d5a16df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eecf96c7-4b12-4aee-9d4b-0cc9fc0f757b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00634c9e-4d80-43d4-a1c7-128fae40a824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "032bb9c9-e44f-416c-b935-f8d27c976cb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c4d3153-9825-4a52-9bdc-39f6d9211ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3b89625-52ba-4687-b380-f8b991424899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28130052-948d-4ba3-8705-53f3baa22bd1",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28aeb387-9989-4c2a-8962-a0574053ed43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f4ebf11-77d3-41f6-97b7-091f5d58fa9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "357f2fd4-f966-41d6-a063-6126943a92c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6e39b011-2d1d-4656-b5ca-365080abf9b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e24d8a-723e-4472-93d4-f49a7b12ae5c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f34f74-3410-41be-a066-6ce952c61aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4dd3cff-a340-4c91-8b74-d54aa4ad710c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a945d4-2306-4e31-9b5f-b76bde459c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2452af2c-bbc2-4aba-88ff-6d356694b195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "785f39ab-5f8e-4958-b83d-9fe841dfc7d8",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98016474-c9bc-4f26-88e3-396b3762bf08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aad2f914-5236-4baf-9fa9-0a5fb71dfa1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f26430c3-a40e-4c13-831d-d8aa08932021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "358c2a3d-9d27-4c83-88ab-6ef05ed60481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc71d279-4554-49af-b736-3921fe4df2ef",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db9cd2d9-343c-4ec1-ae9d-889c792db88a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1b85d83-207d-4dd6-a8ab-b8f3d88ac7b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed06d2d-3d73-4139-8ff5-481777c57aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "801d3f2b-67a8-4a15-956a-a0b6f4288590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07e64cf8-f52e-4bd7-bc3d-3a8036f0351b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df780e8c-bf47-4266-8730-185b2033ef94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e592131d-d457-4b13-95b3-d58f5adfa426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d546405-d02d-44f0-889d-571971afebbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7b1d922-c301-4716-a150-54f30701117b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5bd294-30d6-4261-9e46-95ad0e72abf9",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d1b738f-4166-4410-8c63-8a1c446082ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d8d274c-5a10-46c7-99a2-3c74fd900c4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f6fe18-badc-4096-a110-2ac8dc0dd55b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4fe8d58-2ec7-47ee-b12e-300bc592eef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8803fb3d-a6bd-4b0f-97b1-4d23ddc15ee8",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e39c29-1abf-4680-89d7-e75cf5a79161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "304b5fd8-955b-4f6b-9e42-0319cc424dfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036a6222-8759-473d-9261-bcec1d92cfe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1ad8c302-5e74-4896-a3f9-6197cc8f1f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb49f1ed-52be-43f5-9624-d592165d5f5a",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c9c17d-e594-473a-ab9c-ed74189447ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77ff491e-d0c2-4a55-bbd1-ae987c385e32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "444ef786-f0f2-4229-98ba-d04ab85d170c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed429194-6497-4b36-9e8e-55249ae575a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35451e41-cf47-4f3f-bc29-21232baf627f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fbf79a4-f87b-45f3-9be3-09463d7fca15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58a965ce-aa58-4a88-9bc5-7fdbd688349a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cec2150-aa40-4794-906c-a485aec8ea4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d859d2c0-a0f0-4426-955f-35d34b14840d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f624805-19d7-426a-b997-f54b4edfcc9f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "510c44a6-488d-4386-bbda-08aff75b85fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c89d2349-7e09-46ce-8c24-55ba95485e0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e53729ab-b5a1-4c84-ae1f-f549ae88402a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c637e188-07b5-40bc-8e50-22b097187fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85244ec2-b9f2-42cd-97ee-8e7ed0e062c6",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c336095-bfa7-45be-b70b-bd0695ff856b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cd85938-4aae-47a5-9328-bbff6330d8c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "649e7ebf-c659-4dd4-87ec-f3e1179491ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e1cb7d9-b337-48e3-a835-3c7e35cde47f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f762ec-d066-484b-a3d9-a2df4e6c6a6d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b85555-f1c5-4e79-ac8b-700b3798faa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4c3e1a7-2f43-4855-8cbb-09b5f501287e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685acf80-b73e-4c58-8334-588f85c3e1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f0aea4b-af3f-452a-9d39-bc58077380ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "062de65c-4f78-4b62-bb96-f86a5fa90211",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "540fe077-1ffd-415f-b88a-c631db671377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "597367c5-1907-4ad7-9a97-75649bbb4807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "118434f0-97ea-478c-9905-34eccb3eb39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b18eb0e1-fc98-49a2-a397-069a5f3f3281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22690f25-13ac-49f5-b4bb-2210f1d6b791",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c8c34c-94ae-43be-8ecb-26fb0b03967d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb60dea3-e6a5-48f5-88d4-d4e557d0327e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd65f65-50b5-451a-b55f-6a26b1c6c3d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "741d60dd-9f6a-4cee-80af-f157dac7ac43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8fb3ede-d0a8-4ddf-a3c1-96bf417f3246",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42087063-ff54-49e5-ac8b-62b9db3eaeaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21e426b6-9fda-4aa7-b2ec-1a5f30b27e26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17085434-1af2-4ce8-9b15-840b2bc45781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "867e82ab-4756-43c7-b7ee-25c3d5866213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1fcd0f2-3c4d-47ba-9d1b-bc926ea1ed6e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84644cf0-950f-496c-948b-400e187c2f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7763b412-e433-499a-88ca-50232713f593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f688dd4-30b5-44f2-9774-3d14c6652efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "77d24977-9262-432b-92e8-2d144a3f0e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f5c111-0f07-4208-838f-80485997fed2",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d09f43-d7df-4a60-963e-fb487b0e6734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee074414-1ca0-4447-8339-7d0631443c7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05dff555-a12e-4981-ac70-ab25df0c0281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b5b0667-1527-4d3b-ab8d-1eac1f01c0d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c4c860b-4e08-4d64-ba8c-8627d7dee06f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2324b9fc-8f7f-4dff-938a-ff2ab5d98ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a24ed96-a716-4fda-95af-eabc162a03a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e3e59c-b4e0-4218-b097-c2e0f5527de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c15b46cb-cc67-46a9-b877-244c023925ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c439c1-5769-4327-8922-258e7c717281",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3436aa95-50b5-444b-8d01-b8016b41c6d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b2d5fb-bae8-4ab4-8ed5-9997fc2fc761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6dca83e-cf8d-4898-8a61-9f60260b16ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d9209443-50cb-4eab-9ce4-da009ed38fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c8b79d8-5e10-40a4-b3af-9b2804b2a043",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "711fdabf-09df-441e-bb6b-a9f0c0c2b818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ddc787a5-74fc-46a2-8173-5791bdeb7abf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cce90bc-fb90-40ac-b94c-d627cdc734db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "09bf2d09-05a1-4890-9af5-c27d6b9cd5ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9fce4ee-7392-4a92-b9f0-76141d73fbb0",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "046097d5-5e6c-4a87-ba21-b0ac748388e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee898ddc-246d-48dc-ad2f-e535a22f9512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bff1731-493c-4aa4-ab0a-dbe6d1e049ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d0771bd-8ea6-4e6d-9062-e9fd6cdedae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f273b6-ca69-41d5-8f85-dafbf8a384cc",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee44e32f-e06e-4f0a-b2cf-42b4431f722b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84f006c3-c821-4980-b390-f9edaf0bb3f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bd84c95-1d90-4e20-9f2a-bd096ddd6319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "968f2e25-19c2-4cbe-8fb2-f51a2621434b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8d692d-53c3-4edf-80b3-56629bf01a12",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bfd7bea-a137-48b4-94be-c1d323187cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16c69296-415e-4706-8c88-c1390d8ea840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f70880-2540-4be8-883c-af6727eb5411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "81fe9b75-94e2-4d82-8a75-9faa3629453c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e445aa-c0c3-459c-ba2a-5fa59e279771",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab3794c6-4a35-4cbd-8ade-f32d18e88c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7def3461-6f90-413b-ad95-0749d6fcb951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588df13b-0cb3-425f-bfaf-23ea1d41e1c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e366f9b-e39c-440a-af64-66b2d9233745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b96a6b-8ae6-4a7a-a37a-5991d3a992e8",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cef7362-3639-4248-9294-fde4540f9154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb846c82-d6db-4c17-bc16-c579acae3cb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1192327-6be1-4eeb-a441-eedc1af3c7d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b90079b4-27e9-4c54-8adb-793026db4754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d3e134-8f8e-4411-826e-d68a083033f8",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ffc1f99-fe39-4dbe-9acb-84996241f958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef2a565c-4157-44d4-81e3-97d9e251533a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c6365b-26f1-42f8-97b0-e892f6943deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e0e96050-0b2b-4d64-84b5-cc2bfd39f5e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e938d58-e3d0-4ee5-a859-69d3632a0d14",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ad27c3-947a-4fbf-a087-deb1b9228fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdad2cb3-6984-4ead-8191-e01fabeff737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f0fcf0-6d16-402d-97ea-c7494c7a8ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "656eacec-5bc7-412e-aabd-9d45435df798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb20423b-c1da-44ce-8032-acc5b94f1407",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "366ae07c-a15d-40c9-b81d-67171335a082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11dcfc73-a487-4992-b402-c8ae37163871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "900e5e39-07a6-47c3-80cd-cd7b88801be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7991e4e-4b73-4ddf-beb8-98d882521f91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5013d19c-caed-4e27-8868-fdc2f7c34c66",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c62d12d-8fac-4319-9c64-e5f078bb829e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbcfd4cf-4b25-40dc-b460-2808979d2faa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ac5853-1224-46ac-882d-d47b00f8a303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "221057d9-6390-47e5-8d37-fd356a383e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "920692d4-90da-4670-b8ef-38b12740370e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28e5391-3c10-445a-9b6c-8471d2909028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cf5c77a-e31c-4e07-89c0-b188785b4541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3acd40d6-fcbb-443c-b7e5-3fefffb5dc22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "19b47b50-c98d-410c-9cc5-95904dc1f1b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfec7f51-dbd3-48ec-920b-f21cdf9ec055",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "889f5b87-1fdd-401f-8e64-a6f8320a0548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46f85481-eb4c-46a7-9603-e3e9152348ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "508ee7b6-8274-4674-9a78-6d527a9e8c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b85aa3f5-12e3-4d21-a588-7734f27410f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "170f9f25-6212-4a8b-bb58-6cb5ae7b8f2c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "241a5560-36d8-4c6b-b7e6-bd0a89a44c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6d8ec94-1a87-47f5-bb92-df89647b7ac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c239a965-cdb8-49e1-b776-18790c403506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7afc868-f11a-4f7e-b6d2-48dce86592e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd6bed1-10ac-4e3f-bea4-0a8f58d24008",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1cb5ae-051b-4583-b3f1-299b064a30b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad5e586b-663d-47bc-a22b-95dc6e7ad1ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e9a751-7c90-4959-a012-aef9dba0d4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e8dc1e5-b568-436a-a25e-5f61cf3e9e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeb5057e-97f4-4606-b7bd-74b8663b3413",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a46f8dc4-0ef5-474c-add9-b0207a368a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c09e581a-900b-4882-abee-3d13d9584772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab50c91d-c74d-476c-99db-c2220d6742ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "958c3c8f-c0a1-4f5b-a9dd-8df59c57e92f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee45a3f-2307-4bb2-b8f6-ab149b681081",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1818d577-72f9-425d-bb0e-24e97209dfc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dda631e8-0b17-408b-aa59-bbb4fda80e0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19dcdb70-d3b3-4ab4-b227-49203e17a34f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "471c4de9-e975-4269-80da-995d113f9cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20bc4007-d3bc-444f-802f-b21175660126",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e846365-390d-4a3f-9fe1-10ecf5ffef89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3b4f28f-3651-48bd-9f46-d2c1053aaa9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8000d60-6ab1-4906-8d25-66a287b97f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "933aaf9e-dcb2-4afd-a9f4-34fc591d82db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33ba8593-374e-4ece-b15b-754df622b9c7",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d7d41e-efaa-4997-ab90-c92fb6952912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d3ffb45-5b89-4362-9331-44dba2e46e63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b3b78dc-e344-41c6-984a-155173023035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0062617-df3c-47ae-b752-2f586c116daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d199db2-ba62-48ff-ac3b-d81e34f8c19c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b4bdca6-6d90-4ebb-ac65-99eaea530bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50c74028-7510-43d7-b700-5fc6f1288014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e887f39-d6eb-405d-b05a-7ad3418ab1de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "585212fc-94f0-4179-91fb-c7940f87c869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed0404f5-37de-4316-9ebc-6d9e7afedae1",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dec9760-0023-4978-bb75-6d981462491b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56a200ff-2d19-42c6-af9b-a47ad9f0f97d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7088da9-aa4c-4b1d-8f7e-f47115518132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "848359f7-11bf-40b4-86f0-fce533dac7ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501834bb-301e-4dca-b723-cb1fb31509c8",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90dc967e-9f8f-48f8-b169-76a309252eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "300739cb-71bc-4f39-89bd-b25eb261b0ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac43247-479b-4343-9c69-39f23d1d0803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "46495ac3-0879-4a04-ba0e-4c17c8a650cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f0faf4-a7c8-4b02-869c-751103461ad9",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "995442c6-6cdd-454a-91c9-f175e7c012bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85b4fe41-93d7-4be6-911f-0cbd362671d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd7cfec-0928-4ab0-bbd7-f617c2967a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "554a726e-a40e-4f4f-83ee-3e1913eaa9f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d323dc2d-ada7-47d0-9fa6-5b22dd8ec76a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9264b525-8139-4ab6-aef8-8aaac2b80ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70dcaef3-9be0-45a6-b244-5d1a254cd001"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847a4d15-4708-4d3e-94f7-a43e92515416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f87feae9-f2d5-4b06-b60e-dabd0ce45373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62eeae80-bccb-4cef-b47e-5b72c858f8d9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60988c19-5125-4d8b-b9ab-bed9b1016628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc7366f3-1a12-42d7-9803-3453e6d536d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3653768c-2919-45b5-ba73-dede699d4099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3eee9854-2deb-4c83-8ac7-6ce94ef0dda3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "196313a8-6a7e-4aac-8538-2ce0f8283d6e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2113ab-59c3-492d-8b11-7ac16675ce94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "114f23f3-8890-4f03-8dc0-b962f25b3dc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9381d5b-9435-4f46-9221-b15e09004e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c545eae7-9bba-46ed-bbb1-84dd80d5601d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95741861-6db0-470e-9055-51dd14c8afa6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ff0090-2ff0-465b-be98-c21e29b0de84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae2605f5-8108-4702-a855-254e2203ab98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db16858-e941-4a40-ba90-19ea2e7945f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "abae332f-014f-4e79-96d9-772a9875466a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7237ec0e-c460-45d5-9847-b7c219dab6d3",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b19bcaaf-4170-4c33-8a8d-e68948a84cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6499f113-dee3-4a84-865d-7062922808d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21854051-ea79-4954-a03d-c4e22c1b073f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c428ea05-1427-43a3-b8b6-953b3f8dedf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8e41a4-ccec-490b-af0a-e0d849618365",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c3f86a-2fbd-4461-8a97-4c95b9d6e2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37121120-4ea8-4dd6-9bfd-e97e638c6d7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afeb8ba1-264b-4548-b8c0-082ecd3c9604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9284ea85-a252-421b-9ffa-9db54efabd82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6003904f-5a0f-4f4f-b43b-5d9168454681",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f51c867-19ca-4383-a1d3-5f62f43137f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37dee080-4536-4812-b604-0cc69e98744a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e0b935e-ab14-4fe5-9ec7-c97201244d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c7923ed-fa44-45e5-a4c8-12c909ca0d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db69fe16-6f44-4322-bf4b-4d856e1f6653",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05515a6f-0cc0-4e4f-97ae-5352af6c336c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db999aba-c709-4f85-9c20-b14005731568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b2b72e-f5a6-469a-b3a7-fa9facd90ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b01f6df-5e9d-421d-8e92-ca42edf8aa7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f799568-00f6-4949-a231-89ec7ec366b3",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25fdb591-7437-4a18-a05d-1bfd5e2db86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "004fbb58-01b1-4f6b-b321-f089beae163e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad31fda-b5ea-4590-8fcd-5f83a1518d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6f0719d-900e-4dd0-b76f-8bb7c231011b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217b53bf-363b-4f05-9652-c9c0ea7738e4",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "becfe181-1509-4ae9-83ad-b5c1c4ccfebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1c6cd76-95b6-44fe-a2d9-d1844294c907"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3da7f1b-6c1e-4934-b961-fee6ca2f615c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "89a305af-17f0-42ed-b436-3ba08b9158a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae02aba8-8516-4a86-b248-cd44bf87204e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84071184-562f-4443-b24f-ee9cbda99965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0088bbd8-2872-49a2-b1b7-7405922fd9c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "122b3a33-0048-4d77-ad33-5c9ed39a661a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "324ce767-e3ec-4d3c-b924-78dab53980cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d52d18-f8aa-4acc-a34f-2c41524ad4cc",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "929dc298-32fb-4471-9c21-233daf05f610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7c061ef-0d21-4148-8d82-13b4d2e50b1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89fd968c-40a8-44cc-825b-bd696783cf0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d014a2f7-e064-4d65-ad70-384b4e33e4b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32337f15-42eb-4c2c-8a91-b4b1ad22dd09",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89163d6f-d15e-421b-bce3-4aae7fe78566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dba4d021-f8a3-4581-a011-de4e991598ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3cd238-b94f-4b8d-b630-53933c92b251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0604fe23-d7fb-4cc5-8d3c-d00a421564dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d7c4872-cdc5-47da-b6df-9d17f0919e77",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09469bf-c145-437d-81e3-e9ccc2bf7453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10e65a5b-4068-43c5-8a3a-2217f8a1f010"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58bcd432-5a44-4352-900f-ddebf4179572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e60654a9-e206-4fd6-b905-9448938f02cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a0e20d1-00d5-454c-b56e-857a6c732704",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f4f992-d9ad-46a0-b99f-9f9df40a7a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "308f4748-db45-4de7-99de-12f9219f7242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "142509b7-46db-4751-bdbc-885af6cd548a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "faed81fd-41c2-4ba7-9e3e-1f71e51d8c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30885fbd-23e9-49e7-b778-a50782ed41c7",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c10c8be-5091-4bbe-8bd2-42b38de4e58e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d085020-fe75-427d-9efa-187046178478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c8bf43f-cab5-4a36-874b-3f2ba702b0f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "354f923f-eb0b-47d3-bfda-b066895dfc21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "018a441a-a91c-4b46-8dad-d19eac761d3c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acfc27f6-995c-4861-9e5b-e46daa172248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9c79336-32aa-4e18-acb8-5046f5ce164b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84bae2d3-78d2-44b7-877e-282fee85071d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1b1879e4-6c66-4eb1-bffb-422435efcc66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227d44e3-6323-4a96-831e-651bfb6394db",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a36100-f023-4451-8826-79d5477d2396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a45e5b6-a43c-4559-b778-1df0955ed1c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "434b64eb-a274-49b1-91a1-4b158613da3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "59cbe786-d12b-4817-bedd-5b3a037c1d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d28f79c-111d-4136-9793-e043b339b2fa",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "becfb257-fb83-487d-aa74-1181da5c2ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ea0c921-d921-411f-a83c-1aad8ed8447c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44587979-2a5d-414f-928d-09ba18853f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fee7a98e-a93f-4e45-943c-e2a4d81db0d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fcc0f1c-b656-4ff8-8774-b6efdc835254",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "686a5528-4bd4-4246-bcc4-09dda2756d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e53e67a-f922-4682-8e10-4a11586c8da6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04fba86b-88d5-48cd-8217-25414d28f692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c421879-0754-4f04-b681-e3776c2ec76c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79fd9775-a201-45d8-83c2-9c46d211f4d9",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45176ec1-b63d-4a06-8ce1-cac66f54e27d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9267e2d0-a59c-45a4-afe2-b8d3a3eba8ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a361a72e-668b-4125-a677-ff810f54bad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a42e2ba-aa30-4b79-bb27-97cde0452db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f542e22f-651b-481f-ba94-4124ebd4f1cf",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "499bf8d3-d016-4e1e-8223-0af754872809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cadf2d39-9755-48b0-b463-0e6f847a99ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "141beac7-334d-4f5f-b18b-a41656197e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f039651-0b82-445b-810e-32afd52e4f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602e97bd-ab2b-4886-b99d-a65ff22a2cf5",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb9b2e7c-b212-4732-8531-7b83cda8baf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81107336-ce6d-4f9b-898c-6c3a65c68ea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10441dbf-d2c5-44a2-ba94-a8fb158bde5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "697d5098-e3ed-4c5c-b0cb-f367743c5243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae1fbadd-d897-426b-a0d8-1ad610225147",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62bdbc52-2d90-41a1-b708-154562c0c990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ff509f0-7a25-4b2a-8040-8440b459daac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e500b202-601e-4f3c-8fec-4746ae19fc05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dc16153-2207-4766-9930-5ee5f27b6b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f62d25e6-3689-4d68-ad20-9a7d13f14403",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cda54f5-9ec2-4039-a78c-a0d14af5bc1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb338a94-8aae-457f-82ea-d63d1b75525f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eff31ac-115e-4286-892e-ba52f361c2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cddda363-5751-4239-aa7a-dbfb097ce0a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "debf9bed-5962-4ada-bf33-20ce3ce320a1",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "093a9497-eb9a-4cfc-a9ad-ebcc7594e821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79041755-00de-4304-9df7-492fb467d14a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82fe30aa-2454-4bd8-b8a9-969bdf63b1c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "943e971a-63fc-43d6-b11a-9435a8397a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d75080e8-7045-4972-b7d3-e25305d0eab2",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e690f311-66a7-4591-9d72-9e770dece6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4137a4f5-9af7-48b7-b4db-b6609381349a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4449bff9-95ba-4d77-a0a5-285c682776d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ad593b2-f291-4ead-aa5c-fcf2c6762333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fbbfda1-103f-4584-9047-48583879f86e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b530d9fb-c1bf-4cbf-a6ec-623cb68a8757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "071d3e96-cf39-4980-837a-be4f66dc44bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c536bee-3618-446a-8057-614c5ac3a155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "77f9ecb1-556a-4c10-951b-deedb265f80c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a70201f3-b273-4b4c-a8f7-7b341ec579e0",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba6fa81-b2dd-48a2-85cf-cff51bede0d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f33e2d2c-df88-4a95-adbe-e2c3af453962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d16bc5-e76d-4e43-abd6-d30d83614157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "902f2dd7-22ef-4622-b513-16fbf1d42db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff18a427-71c8-432a-acc1-076c8a612cca",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e9e821-7060-457e-9f81-614f782472a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9355c42-352c-4240-a042-842bc7f218a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "102b9776-36f0-4db8-96c3-f0813ab5fc31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7bb12134-2b66-42a2-8a81-463cd78f6578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4157169a-8cd2-4975-bd1b-2ba16c3d3f3c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82b5a168-4970-4953-b3a4-4bfc9f2f8d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6377add9-2c48-439b-b57c-3e3cfd9398c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "244d18db-228f-4d93-ade8-0ad2cb7e60b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "71c4b311-b0c4-483d-833a-ee21e8274cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f22f58-7486-485c-b0f8-8a8fa60fe758",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "712b9ca9-2dcf-433d-9fcc-e95bb125bbda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5bf5056-31b3-45f9-a58a-ae4491a0dae4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f063b90-8c6d-4e42-b552-6437ec67d50e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "33a52ada-96b0-419f-a259-2a76075bb003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd4bfbf-8828-4176-9b38-2782a1f847ad",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "678fa141-e256-4d51-bf90-3e16470c7f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6ef8555-7f6f-414b-8592-c8d85b55a5f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "702dc47d-eb65-433f-a888-63713df4149f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "61ed5317-2d0c-415b-a686-8d568c2d5887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf0d6fe-2b4b-4afd-8e5b-036e15bea18b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "414c2fbd-e6dd-43ab-8cfb-5284ec7921b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43b3ab62-0042-421f-bb5b-78c1ce5d7064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ceec0e-c2b5-41d0-9962-a93dfbb1bffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d5e29a3-05e4-4b5f-ae79-ae0ee03242d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08628764-08ad-46e2-8e15-7198b3b2d86c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4af95d5-ff43-4bb6-99f3-40a1881071bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0af4c043-b4bb-430c-856b-6888e2ecc3c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d03b60-dafe-434d-900c-1183c79adfcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a78d4f9c-b091-4108-9cdb-596181ae5345"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "da062455-8cee-48c1-aaca-88dd40c3334d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0004cd82-077d-43b3-a397-00678a5e62f8",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b4731d3-cba2-479a-a1d7-72664186d87e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "98b2f66d-4a8e-4516-ab20-10d699d32804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e72a95-ef1e-40c2-be38-50169ba1c895",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b6dc4b0-9068-40f1-a8bc-cdd5d6ed1714"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e61cc28-0a3f-4c96-876f-15066f0fd5ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4cc0abfb-5c83-4b53-9f47-d33198e2eb67"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ad8ac1e-4e10-4019-99a5-38033257f8e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3285d790-0cbd-4dc2-af02-bbca7973462f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bdee4581-9809-4999-8d30-049b7d1020ec",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "08adf399-d73e-4fc3-bf76-f19c0b704501"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9e662596-2e3f-4eeb-90c2-abf9a6fcb6d3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "373b81d7-d07d-4ed7-975f-2fbf965a4665"
                }
              }
            ]
          },
          {
            "id": "a3974b72-7b17-421e-88fa-79342f56669a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "806d2fd5-80b4-44fe-b883-d443e53ab7d5",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "b37df51d-8a50-49c6-b982-1f304434e391",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47f3d3f-2d33-4392-a509-e2414529beb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "274c1081-6cfa-4a64-8dd4-ab02be2e39b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b69483a9-69f4-4023-a819-e582216869ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07043cb6-d847-4bfa-8e64-8427b74b6c93"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2428d9c6-a660-4217-94bd-07fef0b22167",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "941f4e83-1f5f-40f7-84a8-885a152562b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "13afe0ed-7041-4bd1-8583-1f9203387497"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0fcd2826-9c2c-461d-a3dd-ae8559639142",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "54b3e672-e49c-4b48-ba99-d8efba0c552f"
                    }
                  }
                ]
              },
              {
                "id": "42320479-c75a-4b86-a662-2307106f1270",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "51a3cf35-bec5-4393-a476-68fa5c601172",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "809222c3-d67e-473a-a981-5a7a1a9fbe42"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "deed75a4-22b1-4f3d-934c-d46f7ecbdf36",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "80e5bdf5-d6fc-4a43-9934-1cb4a5ab67e6"
                    }
                  }
                ]
              },
              {
                "id": "bf2318a5-e445-4993-a0fd-12a2fe93933b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ff90752-a35f-4612-bf66-bd7641c46c8f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "381f4d18-0342-4114-bc32-1098d4e9b9a3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "28d37e76-deb7-413a-a4d3-4be9394c5904",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "722dc76e-2024-4563-977a-a3340faea2b6"
                    }
                  }
                ]
              },
              {
                "id": "4bed4a23-9fa4-46a9-99f9-df516ba8e3a5",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "71d6574a-e735-4c14-b14a-e0db5e7e2e72",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c47077cb-20c5-40e4-b3b3-4bd12c381019"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad38ba95-651f-4f8a-81be-0924ed3e94c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "5d286f38-7c1d-4da8-b2c7-eee3febac177"
                    }
                  }
                ]
              },
              {
                "id": "f9d249e6-70e5-44a8-9f6d-ef523572e464",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5252b4a-2d4d-4f60-972a-214a8b954aab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e21ae4c3-343e-45fd-8eb5-9e26316229b9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3cf639a-6940-4d74-b6af-e13d7cad8dd7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5e4a2f64-947f-4a07-b4c1-03113d6b191e"
                    }
                  }
                ]
              },
              {
                "id": "fe24fe3a-4c99-47d1-878c-d84624cb23bc",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "35c50723-aac4-4b29-b6a4-dc38460c8031",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6ce7503a-da42-4df3-8e15-f8c2dcb94404"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03dff371-c52e-4a12-8065-a5097f7be203",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "79dcbc82-e51c-4234-8af7-23b6b133fd03"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f3b3dee6-dbf0-4495-b05c-ff5afd6944fa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f0d9c3a3-dbb9-4707-a5df-a44735b0ace8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e6a6389e-bfb6-4221-abed-e02081f6995e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1981b3eb-0442-4705-a536-19df904680cf"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "af31c2a3-7b88-4020-8b71-afc4557bb7cb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "818174e0-1f34-4e98-92b7-b1dc62668b5c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "490e7d82-9b9d-4465-b182-dc42c7d4cb6f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "52b384b3-7f54-4c0e-b543-d8c58b7d10ea"
            }
          }
        ]
      },
      {
        "id": "d5917ebe-0bf0-4751-8175-d641fd6113ea",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "6d060a80-83e9-45ed-8f37-b1b908f5a0ce",
            "name": "Negative Testing",
            "item": [
              {
                "id": "378ec8b2-e1a6-4cff-afe1-1bfedb00e32f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d88f9684-d0bc-4d38-a1fa-0e6a75b78db2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d853b46a-84df-4e7e-af78-ad82c64a0ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9cfaf79-e9a2-40bf-9d90-2ca0946618ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d75972cd-4ac4-47ef-a1d7-35e7963fab01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d9a675d-6eab-496d-b3a9-ce4bb28d8329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056793b4-cd55-4ef4-815c-2f14c3da1341",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e9fa8a-e457-4561-8207-4c09f8933b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29062260-6a19-42dd-b91c-ffb4991d5a89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cacb79a-a675-4d55-a6df-8a280151e11f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5aa87f08-cbd5-4b72-8784-fcb0c3e87056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52df2f17-7fd9-4247-8f11-a91ddfcd4c32",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f40547-6684-4c92-97ea-af3f4a7ba2eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9bc07bf-0c06-4a9b-b7f4-e2d44a387386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f6a37d-be7a-4598-8850-f848f10a4b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6f0e01e-fca8-48ad-a25f-5821eb34b16b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc5884ef-e288-461c-855b-42e65ce31b93",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11dbb6be-358e-4061-89a9-ed208a5d62bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "294fc295-6a91-4d68-a38b-fbee70706bad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ac64d4-5be8-4617-b1e9-f9dfca2dcd9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fa3b4a0-b40d-4deb-985c-addb789e6a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb7c29f-0bde-49ca-8e24-f81f13bcdc29",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24a1a8f-ecea-4dfd-8455-f668b15bfe76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ef8425d-6872-41c0-aa32-fd8680e5161d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fecc695-a94b-495c-87ee-e7591d81577e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f877763a-ca7d-44b8-b888-1a0676aa7dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cceb394-e7e3-4eec-8dad-bd9cada74bfd",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a587cc40-6238-470a-82ca-8cee54c0ed77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eda3498-cc55-4182-ac9c-0d996ebe2273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ff3ae5-4267-4f86-98c2-4626efa3b01e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fcfb8fd7-4ca5-48a4-9ef2-b07afb179c00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0540c37-a81f-4fcb-8ad0-346f44727eca",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2664d750-75f4-494c-b132-7aef27ef697d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0d02f07-634b-46a0-98b0-e5c64cc6a23e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d574e6a-c26d-4752-993d-3c5ede3e443f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "52537766-9397-4428-a57d-961eb5a9cd94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa193861-16cc-4b46-9c25-6d42e0315211",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc09a887-3703-423a-a1a5-b4d314cea1b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d9d6e56-31eb-4c92-a9c8-afa915605c5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f77e4f-a517-402e-9ae0-abaec7fdaf67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "246a57f7-ca8f-45d0-b596-1d2edf8af976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a87fac2-28bb-4f06-9ac9-d5e3caa230eb",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7264477-5b97-4048-9c03-6a7f06a0eb98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9e6ddaf-4269-4d62-bdd1-cb49a814c6a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "540e3c52-6177-4d8c-8f8e-ff36dc72c477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ec1cfec-fde0-46e5-b8a6-192695733717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2cc5746-13cf-4c85-8335-43519c2bbc01",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c692dad1-2115-4d3a-a96b-5723ca3f3a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2257327c-0f8c-438c-834e-4c8fa3f5714e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9db67515-f6f2-4cae-87ef-a4022d873a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c92b40a6-771a-47cc-8447-d1d0de1ed803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a978aa-18e7-4d20-8148-91c782aee2df",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e20025-f97a-4d3e-94c6-74de4fd8b094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e86b1ada-4ccc-45b7-a793-30ac1956b29c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76a9996-dbb5-4014-8676-6fdeb4cf4e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "dba2e435-b91c-4237-b6d1-008e1fb0dd12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e93eca30-4e4c-4125-9fa4-2804fbe179f7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b8c7ea6-8699-4399-8fad-7cdbcd35f284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1af4062c-c6a9-4263-978d-388aa72cd7db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d116885-395d-45de-adb6-e8a5d438a1e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3bccfe76-0e91-4c6f-a5b3-0ceb564da3c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4547e018-d70d-447f-b795-bae6ddac21b1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "957356ad-998d-4c78-b7fe-e95100d3c26b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d526843d-78c9-4e39-a901-3953b26e3eb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e702da7-bb29-428a-b36a-c5236119d242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "88d853a1-93ad-494e-82d8-6cfe1df39734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807f82ee-54c3-4748-9f26-ca9a2c7394fe",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c1df4a-e017-428a-bf7f-19ed73376e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29aaca44-efdc-4327-a404-8afd389cf0e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04fcd4c3-ed31-4833-8858-bdf8d3e31f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "09582c1f-437c-4ff8-bd74-87c9f69ee78e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1508775-12a5-4ec4-8301-92901b1db08b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d295b7-93a0-4ec7-8209-143c6447b8e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33e92205-5dd9-4301-9aab-c454386b5c69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "292e435b-4fff-4911-a1f9-ff6571011b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c61a71a-0dd4-46e3-9d6d-98a237d791e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7782a050-6e35-4b77-95a2-1e50d10037e8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3aae3e0-bcae-41d9-a2e8-ed90d974c5d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19fe9360-58d2-4707-9245-90a0cac286e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed4e2f07-2ee9-4054-ae14-4fb2ca634f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8be9e9d7-0595-4315-af75-11a9ad5290e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e02a3c7f-1d9e-4e62-b6f8-feb481add677",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "975b717e-cbae-49bb-b625-a7547720d6a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73171246-8bc1-47a3-af34-f34a905ec0b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "083a055d-1fd8-4753-abf5-b641c1efec87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcc6e925-5e8f-4b3b-bc50-6e11922d7322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b1b4a1-5304-4e25-822e-888ccf87183f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1df325-b114-40ac-8e92-cbe4d35a18bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1187ded6-ac35-45b5-adee-e65eda83d22a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb88a2c-c882-42b8-a011-46a53d6845b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "45aba3e0-ec0a-4841-9689-a12e33f79542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c39cf597-54ae-4322-8bea-bfad1436bb87",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d0df961-ae9b-42de-8563-4d541bc668a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e9c0391-1d48-494c-82f4-4e89b1d6a245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96aa0214-62eb-45a0-ab94-b791703efde2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b062a65c-0953-478a-bf98-0d89fc91e540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "771e9843-e76a-4a60-87a0-b4615a790a79",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee7f3c7-e8b2-43a4-a7d4-e8afb6451905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbff753f-5e5f-406a-80db-1602925891a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7986a2ec-85cf-4c48-92cb-ed5bc4b038af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4333d2a2-5f93-4ed1-abcf-e4c72e21c869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59a1c226-e247-423c-b807-064b09b956ec",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ad4cbd-9468-48cd-aea7-128e2d5eec19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28f5d970-f794-46d0-9436-8697556d145a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ae50225-e9f7-47f0-ac56-61322e0b63ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "343dc451-741a-417a-8df5-44d764389d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa66c83-ff56-4269-a781-a15a05c838f2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee254d2-a99d-4aa1-bcd1-175acbeece75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32a15355-1ef4-4084-b135-e913e04638d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f679e1b-09f3-4f5f-8d0d-8d243a7fdfbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dd72f4a-de6f-4a98-93fa-d03b008ffc78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca194b8-d51a-4945-b1b8-45ffc1366ba7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7858400-a769-45da-95e0-24da928ccbd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9edd2ad-767b-4293-bbed-1209ee6dc1ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec9f9f8c-d26b-4af9-8788-753a7efd255d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f78fa56c-a00d-4e4a-a190-da5158a5d9cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f8b1ef-b656-442b-9354-2c5e33ce2f09",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6b44ad-5ed5-4225-87e6-60e9105b9e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab3535ea-a304-4b24-97eb-29b1c2bac77c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "839a5d62-ec15-4581-ba11-329ac1280894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99844b1b-413f-4885-b89a-2f17f1cbdf13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66941122-03f7-40fc-acbf-eb7a8309f32e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55001d39-0162-4867-9d5d-7db32d85ef27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04c748b6-4e3f-4c62-9c94-c2e3c2585d2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6b4fc1-0c9a-4258-bff3-6603d46a8186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89b1846c-b8bc-47b5-812b-8b71e8936d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6690ed54-dda2-4871-aabf-4ed941f9c7e6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e251c728-64d7-4bfb-be53-3647f900c0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a3c8a86-ee91-47aa-bff0-f5b42a56a74f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abeeb83c-0257-4328-a2cd-ac591c9e2eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39b54801-14d5-4c49-baa3-a57f78a3ce07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab34e63-597e-4b86-bd56-1204f759723c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c619ed96-5ead-4fe8-9566-eaf08722f330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "885f2a07-aaeb-4d26-8af2-819227809bfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb4afaf-aaeb-4027-a6a6-716e57b0441d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93d8bddd-cde0-4299-a1a3-42155eedf017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee6d5bd-0626-4574-b056-b340c424568c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4610adcb-574b-4c5b-aacf-3ece5df1d2da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06a972c8-194e-49ee-8f70-d21ceca0ac6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cabdf9fd-4437-4e88-86ef-bef293f32539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b4c81b9-b3d3-4b13-abb2-625bb518930f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d568b6ec-fb51-40ad-960b-4b57912c78b7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c46adbf-3628-4a0c-a948-15f471295423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c3abca8-8c48-45b1-861e-a06b8c288c1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee154b39-0c02-4115-ae1d-470326ec996f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c79d2afb-e6c3-427b-98b8-351aa767c8d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8642206a-cad6-4e4d-bff8-8ff93a4f2d3a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c9f17dd-c749-4e75-a291-75ac84d7a203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8878755e-0e0e-4c2b-ac42-6fc5b2669053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf0961b-192f-4fe3-b3c5-1dbac395126a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7bb3593-c281-4eeb-b720-45bddcef2163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4279827a-33de-4c33-b639-4b098b1d5cca",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d15e874-9012-4f9e-949d-9a87d40bc146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd9e2c75-ec90-436d-87fc-f1cea2c48c1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1fa1108-0460-4c0b-af6b-4f11a35f9f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63c95a38-982c-4511-aaba-05dd9ceec986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d899cb21-49e3-4890-8c1f-10ea5f50b807",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e284d74-bc2b-461b-9140-2e6023e8d342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0b017ee-aa8c-4f16-a162-8176b3e7c3f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d192772-d505-4fe3-9142-56327e92d072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b665f8a5-d12a-45f3-90e6-4138743548b7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c7e9c438-e535-47c1-a644-24edcb70a536",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1e69042b-6444-4627-b288-91463c2c39cb",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15781680-c88d-4110-8d4a-a065567d1291",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "63a40536-5f35-4d80-ae35-7ba12495786b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f89c07d0-2811-4707-bb82-2afda27b519e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1dcda1df-0915-4163-9a77-5a0e65a366fa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66caf8c0-cb95-4010-8ac9-2f65f207897b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "508b2ce4-f3b9-4759-8748-6b5f8a46fc60"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "74971f86-84de-466f-af1a-cd06f2ef49b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f79f5671-564c-4ed1-92fa-21e63d42f1b7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1f29e587-e215-4b91-9a83-5d9f6f2e7798",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fbd8e845-567f-4c0a-9137-71d30b74ba7b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fb1d24e8-d62c-44b7-b3bc-f4c0f6fcb3d1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7fc1cb3e-6de5-4ccc-82f6-edc2bd744125"
            }
          }
        ]
      },
      {
        "id": "56598891-bde6-4527-9c7a-721b9e6ba3ef",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "a516d570-4c14-42a6-a9cc-3a7a3cfe81bd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7e273797-2075-4dac-8180-4807f9d2406a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ba6d170c-ce30-4185-9aa3-804ac8d83a9c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac78b28-7539-436b-844c-5a77b9abcf07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c26530c7-a66e-42cf-b617-ddd5ba908aea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a3877d7-eb2f-4554-957e-887997875c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "259eef36-c43b-4220-a88a-bcf36dbce891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab98ec5b-1eec-48f9-9b6a-922ac2124472",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f12962e0-46df-4f9d-832c-e8c43c12ceba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9414642-d410-4922-b4b3-92577a8f8266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ae550a-f6dc-47ca-919e-889518475fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "41d095a5-c2cb-4298-b6f4-180ad65736e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb97f24-0f8b-442a-8f7a-6f4fae366520",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1bcebcc-51e9-4da0-b77b-6f87dba1a341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cc3dc40-6224-424b-9598-ff8c63e28154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d584521-a356-422a-a955-a430725e17c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "95f2d052-372f-4bc5-81bd-9f54203a56fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a95e76ba-9282-44d3-aa26-c70f8bbde260",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b491bb-75ce-485a-a1b9-aebffcafe0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25341eaa-a8b9-4758-af25-1d8979f0d0b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "829883fd-4eb8-4d99-8775-29598aba2eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d725efe8-d8f3-494b-bea2-e7150d716464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c909568a-75aa-4328-a185-fd026fe9742f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "639190b6-1512-49fb-a6d5-f89d68e0df24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f92c5532-7117-4669-bfd3-f240f938f180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ffcd73-8dda-4fda-b86e-3ddca2a532d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f38d6d10-700f-46a2-a572-b44859bcd5b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d6a48c-ef19-4557-b287-a526bc0b527d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa14d7c0-91e5-4513-b99d-5c8bb3bf4489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ad4d6f8-8888-4c38-92b7-a0450044288f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ab2342-fb93-4b4d-afed-69d88086ad9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "85bbdb46-1cbc-43c6-a605-f481a1593f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe0cbf3-2fbe-4e7a-98dd-e8e827f34d00",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d23b88-3b61-4e27-9791-0988c3ad420a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e601269d-3717-46e2-9900-1f7c3fe214b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ebf04e-e70a-4bbc-b2fc-b8fe6985ee78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a380259-f025-4cb2-b241-c5bb8746e82c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a572aafa-3951-4f8f-96bf-71d80c836c43",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a00dc99-a6db-431c-8358-173150149c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c0a7a44-3df9-490d-8bf2-26528d9e36a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a0fbd5-6238-4a2a-8110-24597fe1b39d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6302775-2625-49fd-afef-a3c5dbb28f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e2b09e-6ec1-4cfa-9160-1dc0f94ce3b2",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09e2215-9a99-42b0-a000-c90c0c7de318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df82aa17-b3a3-42b8-9673-ccec29ece3e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a59417a-8102-45e9-a25c-72c973e9e4de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "598ebd34-bedd-4979-b51a-d59111b0b3ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d3163a0-2281-445e-b4d0-009d81c9cd8e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a25c585-fb55-45c1-b728-6ce150795a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bb7507a-538e-4c6f-a1a5-dbb28e189070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87742bab-23ca-41a0-89fd-691c13a15225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3abdf855-6b0b-4efa-9ae4-593358d35de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf98e883-1bd6-4d7b-88ca-cd36bce1d312",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0595b7fd-d6a0-43bd-96e2-a029a51c6819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea8cc4e4-7910-4fe4-bb1f-da6d03f0794c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81911f84-9c24-4cfa-b50f-45ffc9e62b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2add6926-8ff2-4185-8e95-dd7b4510b3fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d32ee07-74f6-4c31-9c35-a59ab0059b4d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46105495-9c51-4e9d-8835-d8488d88f167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41511d7c-59f2-4611-b465-14426374a130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe5a0bd-767f-4a91-8d86-18c9e0d55e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ac919de3-7306-4620-a044-277c56d904a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c9b229-83e5-42bb-ba23-888fc0183c8a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eadd786-51de-4301-99bf-9d14bab06a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8df7923-f15e-4ce8-9e1e-ceb308fbbe32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "794758f3-f8c4-42d9-8c7e-9b721c3ad70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfd86412-7911-40f1-9fee-8d5adfd62b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e49260e9-35b2-4d87-bff9-0413c2c3e755",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b07efd9a-15ba-4ba5-8bd3-54717f6d8d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "150b3569-add6-4433-8eb1-c0e1c86f4f29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79fa2e0c-b1c2-4082-a1b0-ee4f2197f730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fe008de-898b-472e-940b-48041ea0e816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19130721-ea53-4a46-bedc-a113a7c9a972",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f5da9f9-9621-41fa-8998-f0c543a2b1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3dd677c-d30b-4214-81d4-99fa75352da1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "550d252e-d61c-48dc-a054-be8988a59256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "05693d37-7cfa-4758-921a-8c04e88188d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0678750-55d4-4cb5-b154-26fe096f04cb",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f0d1ea8-474b-436b-8e12-652afe1241f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b1f6a39-7fed-4df4-b29d-a52978a5110a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f52d25-febc-479c-8f59-108abe294bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c461a3ea-0048-4965-939b-ff180ee1a347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128de297-f1e8-4c6a-8937-4e15686740b2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acdeaaac-f08c-48d9-bf50-12d8e39fd069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28e0a1b6-9c5b-4692-b34d-bd0401d3ac18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51cded65-6f5e-43da-b7a3-41d3f49c8437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2b79ffd-cc1b-4cb9-aea7-dc17184df75e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "247ab44d-d8a3-4888-8831-483417653bbf",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1103e66-5392-43b5-955d-afb67768a2ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5771f06-eb33-4d9d-b3b7-26b54af59b71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db6d3dec-2df4-46ae-996f-db8727d97d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "392fcc6a-e9e6-4fd6-9e15-8c32c258bdcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c700115-6a16-4567-9b7b-732ea8ec83fc",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "696e3f66-6fe9-4b30-9fbc-5989e541a549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bc10b1f-df00-4baa-8e93-d71342d536a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5814f85f-4b5a-4451-bef0-7ccdb5fd84ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62a36f15-23a1-469b-8495-4cb5da756047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c9f0a4-d045-41cf-968d-b23cb5f014cd",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b78ba7-3fd1-4f6b-bd70-e70a8d47d5f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5659b467-5280-4994-b69f-3d28bc357b81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c753b4b-bad1-4dc2-9a69-cb5d1ef4be1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4e9f73c-9a19-4969-8ef7-ca4aafdb6341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9197877d-2f48-4d11-9d3c-c7c8b5e180ad",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec6c69a-9b64-4d1d-8e2c-8496f394ac4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "793f38c6-71d5-41c5-ac35-ea992f8db838"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b884aded-7778-47c7-a68a-88e3989d295b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "373dd562-ebec-41cd-a1c1-33dd468c935d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "484a3fb4-cf1f-436f-ba11-cbdb76297c61",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e8dc02-1b9b-4265-af6c-65b5986e1f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d866328-29c2-4d37-bdc1-a2ec9d9686ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6508efb-02a6-4c41-a82e-f26b07f518c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bcfd340-50d9-4c8e-9653-f3a5d73f1155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b81f8e-d684-4474-9c64-1b54028bcf6a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ab2ea4-e453-4fbf-9a18-56c154420497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "955573f0-818e-40c1-b83b-3793e27835e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef5469e-0690-4226-a039-899835dab24f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6dd7c09e-9de1-452b-9b30-b10f4b856e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a78b3a4-0631-466c-ade0-ba700364535d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b75a10d-9673-4917-b49d-d6c3ef844280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82c79852-86f9-4b19-974f-ae7c14bcb9cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7118d19d-97f5-42d4-b227-01dfeb16ba33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53dc4754-4fc7-4e38-9b7e-3f38c1c2f76d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a31dcc22-3c0f-4f48-b687-c6fb5528e1ce",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c03908-6cbd-4e69-a8b9-33bc1cb00233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aa56280-77dc-4f94-a7aa-1d34243f2ef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff94b40-8e7c-487a-a371-2b01bcbbe491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20e5e92a-8f6a-48d8-a9d4-d5a4bc34bb67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a9f39e-fef7-4af6-9a9d-944068c371fa",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e473dd-3ff9-4265-bb13-a2f76dd7c025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2f59efd-50e1-4c8e-87ed-8b6aa745e445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f531e94-c7d8-4439-bf7d-5cd32202ec68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4252573-3ee8-4f33-8a26-c7120d576154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f03aa35-cb86-4871-b591-bc11455f6d32",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5305268d-a923-45c5-ad24-fd18cd263de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0aab5e3-1b64-495c-b4d7-c0424044d386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95c9981-599e-40ce-976e-0f4b49b9b9de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32496297-d6af-465b-be9d-081e077984bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4560b4c6-f80d-4d1e-b069-87ba252acd84",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73304ab-0439-4e20-86cb-9dc464353417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63ee216a-f3c3-45a1-a2a9-bb3434f2668a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e607a8-c43d-40de-8ed4-577e8957a2d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d739048f-0129-4c4d-b3b3-6d32aa5baf69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "984d27a9-c9f2-46d5-9d47-5faf1c2b5544",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd90366-db22-4dd8-b2cf-fc949b339c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c8eafd6-261d-4c0f-b3bf-97d7a00a5795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e04fdd73-e90a-4ee3-8ce7-38d21376f1ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f918e5f-7de8-4f74-ad5b-0dc4a9d991ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a3a138-1978-4a62-ab5d-ab0ed02f02ea",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba8937c-3424-4087-8fdc-85fcaa4eb9f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c80300b-e686-437e-b156-c569b0d4d121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2bc5710-509b-4d03-b9ea-f29274d7d65c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e49f743-eb13-4973-aea5-b7c77daf88b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "421511a9-2784-4635-8435-1dd1201535f5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "511ffcbf-b9d1-4f7d-9b61-df7b45a2ed9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dc6a96a-e5e5-473e-9961-6fc47a38fd58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b572799-b333-4577-8017-97be4699ad39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b438292d-2b7b-44d3-83e1-69995073db5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea98c04-49be-4fd6-bc12-40125ee83648",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23e623e2-825d-4cea-be06-39727083757a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f552bcd5-e6f9-40c6-b7d1-954658b37f45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef76d4a0-f608-4a34-bbab-862d890eaa8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b32abb3-91d8-44f4-92f9-c46604905b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a38cd7-3fca-46a6-8810-ca4c46c07acd",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee84bd4-a5bc-4d7e-9d1e-bbcb64104a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80c4b910-29c2-4976-b902-9a0ced500ebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a532f01-d317-4759-a222-009864047304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70895bd3-aa04-407d-a726-14ae1cacaa6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7e7eec-17dd-4c39-92fd-300da6bbca62",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b12ac730-62da-486e-900d-bb37904f2e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f8c4f63-ad23-485e-a935-bd3208c84398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "520a1178-fdbc-4ef3-8aef-0c1ab8d12675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d2da608-a25e-4b48-a35a-dbcb1b615c5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d3c064-cafd-46da-8227-c314fd2c3da3",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe733ce1-f96b-417c-81c5-f9b89c5f259d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8682b4e-9ff9-4252-8c97-27693406ec7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "872502ae-852c-4ed3-9755-dff198e843fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4471e47-6867-4de2-b254-0aaab7179e07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "720a9a8b-5d80-483d-8e0f-ba8e86237cb6",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b6c270-7273-4eec-b217-4d4d247daab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3b239d9-3e02-4981-88bd-2670b481df60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7746bacd-81ef-4fd0-8c0e-140cfc5e3bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3cb3b4c-4094-4923-82d2-e7c9d8b0e3ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396b80f3-fc24-4fc3-bf54-6b02c28de3ce",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ad56c0-5ead-48d3-ac38-2eab6231c5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "503ff8e7-7351-40db-8c76-861747030000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b0445ec-22e5-4a89-bf3e-aa7628c25c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65e25381-fc99-4e31-8436-a02da3457883"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "28e89b27-7fc6-4a04-8020-6d68787a58c0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a7b5074f-638d-49f4-9ce2-ed00f6ce3b67",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "995d4c6f-24ce-4a35-8b46-61ebe97e8b1d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8d6b151f-9aed-4852-b9d6-1b3c29711522"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a7eb858-f673-4722-a2d7-a4155487390f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0c6b8783-d147-40ba-a33f-be60ed7588e5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e8a45866-afa3-40df-9116-605c35de79cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "64e3ed58-3132-430c-bb9b-2e3a5678e272"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "be8241e0-179b-41c4-ab06-1e1b3fcc7093",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9cd9497-38c7-47b2-ad85-dfe8b8680394"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8b9ea07b-4cb5-4482-9850-29893c65be21",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3ae7714f-8c17-43b5-9a22-83298ef5ae6a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d0769d93-5538-4e62-ae8f-f001461d6c20",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6ecbe5f7-16b3-4337-9b00-a66439ac00e7"
            }
          }
        ]
      },
      {
        "id": "24378405-2f0f-4da0-ae27-e72b4632c62b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "bee8578d-3f89-4f10-8125-1a521b97ed4f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "89b0b25d-54ee-40ea-8825-5dc60d77ef6e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "80008864-45eb-4e13-9961-db41ef94209e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "188096a9-c1fd-407a-a762-84c067d82159",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c25e38e-bd71-4e15-a6bc-b7a6098482d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbce8506-84ab-4764-a680-921749f90a71",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df860ba-3c0c-45a1-b4c6-f864bf449393",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f64ebf2-04ef-4c7e-a119-3d6259b1618a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "616cb150-201b-4f8e-b547-2969463c8db5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a3e483b-5e33-41e9-ba3d-be0a2dc4bec9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebf52534-1958-44c6-8047-98ad72d5d777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfade3b6-cd08-4eb2-8696-d3fa31d42de7",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fbcecb7-4242-4eab-88f5-55342d982cb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbce73ee-d272-477c-8e93-94ec3bf5bd5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54117bb0-478b-4f29-ade3-1c985b14b37c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f31cc1c-a2b9-4dba-b76c-cfb080d4363f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee136be6-e0a6-4b5f-a7b4-66759ca0f5ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd000f65-58aa-47ee-9bb4-d29941e88396",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "733e27a5-a868-4c84-bd82-dc287ded7b2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f676b70-099b-47c1-b083-58b77a9dbf35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23010218-c70f-45f6-a4ca-91f877bff02c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f0321b-bf88-4db4-863b-7dc5ea231b7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6938b96-265e-4245-997c-54b4101ca830"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6fd9b10-6e30-459e-b128-3b75530b939a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27aa596e-7c69-4a50-85f7-aeb574176e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fcf566a-47a7-4f13-8f14-545894fa35f1",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da446367-ae69-4180-ac46-bd9c07d05172",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4240a46b-6c49-4e30-a5aa-144f8be78eb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27996af-17a6-456e-a5c1-8a2629fa194e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b5d8a1c-c9bd-400e-b401-4c628af712ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650229c1-5ddd-4929-8809-7d0e9fd7b47d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63294918-3ea1-4c1f-93af-a6eb360dd4db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab43aec7-32e3-4c03-99ce-6bea0486eaa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a48dd51-7106-408c-bf22-afe765ff9eed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e51144d-0997-4848-aae5-79bd56251bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3c0ff2-1b1d-4a29-a9bd-950cea4d7293",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aed294c-cce2-421b-9432-2856f913f498",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a4dbc8e-9c7f-4dd2-9019-e966fdb3b870"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde22860-4c4c-47ce-8589-7a1a134345d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0714d4e7-a36b-42eb-ad7e-c664be4e73eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83af6c0-8322-4dd8-a890-2e386b942bd0",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf7bbe49-eca0-4e8d-913d-9ff373b5cd65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7987a10-5c83-474f-a79c-7975212f3974"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a9553b-242a-41fa-8832-75ed8c1ede81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c544bc56-2198-4371-ab45-de744e12bdcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "180b6d4c-58aa-4bf7-be2b-5cd51b1ef9df",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f08e950a-b35c-438e-aaac-405370f82efb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4466cbfc-62ac-49e0-b1b1-81abc8fe2ef5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf503a8-3438-43e5-bf0f-3bf0adc36c4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8f32b03-c418-49d7-91b6-4740ed20dc2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "144fefc9-9855-4564-b22a-d7993773d77c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0259943e-ffa5-4441-947c-23d8ff634515",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01964c43-3268-4470-91be-ffe4af0934d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9136ce3-244c-48cf-b5f7-fc2e57b82814",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e204ed0-95ae-43a1-8cad-f554cf092253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20a52d6-651b-4872-a7a3-b47ea5cc21ed",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ecc8b0-74a1-4a61-8050-72059432e9a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb847464-a814-4be1-a857-1effe91fb553"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c857b4a4-6824-4372-a0ea-b12692404143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98f89b50-caa0-4357-818b-1d01c6633452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7355ef3-1deb-4ab3-9472-f8de5a479769",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae2fb41-e6d0-4390-a50c-41bb2ac4474b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c3f3b00-55ef-4815-94e5-d68fc424dbc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5caee4a2-b85c-476d-b862-d61fe2815d8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10b0a979-5d74-4912-8210-ff0fe6519a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c40976c-2cbd-47db-8c06-f6ecde65e5ae",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "749ac52e-e71f-4283-bc48-909d64789e56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2eccf33-2281-40dd-a04c-b779828b6427"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe6c5ea-472f-4913-9c53-f27c9048ab51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53fccf6d-a2d9-4364-b745-ee09a9ee43f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ee8b73-e598-49e2-8f0e-5138b9916c68",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd639f3-4aa5-48ab-b47c-b9dc3bc22f8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "310666ef-d54e-4c65-b9ae-7689d56b732e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "492ff001-3082-432f-9d73-0ca5e5545b1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6351e2e-cbcb-4dae-b6b5-7a0134afd64a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "621df111-5088-4def-858e-e66cc6036644",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abfed366-a704-4fc6-a790-2316b62ef670",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "229ae484-dff7-48f4-af14-ab7e77bea851"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4574bb3-1c56-49a5-8263-db5eafe8f895",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "512a4484-2b85-4ecf-b7c1-5c4ad2b52d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460fb0cc-8328-4f80-b273-3b0c76eed8ed",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7fb15d9-a208-4e40-bdec-24cfa4a69de3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42271b87-023c-4901-94e0-2e548c8fabe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e349b6e-820d-45cc-81d7-377f69924c7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e0b5cf1-0532-4d13-bc56-132e0660c632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c276a0a8-5a22-4374-869c-cdcad5f7aaea",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca5025c8-75cb-448f-beab-eea5efc3ab18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1475b4ab-847a-4e37-a26c-02551443adb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e1397e7-875b-4ab4-9a99-d93e8fc78a5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fc13faa-d4ce-4a6d-83a5-fb0679613bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa6c73e-4ac9-4ac6-93cd-99ffc55428d6",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d6852b2-eb89-49b4-a5a0-c319fe8e3890",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b5fe590-d72b-46a8-8714-6372dad69181"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32601271-2209-42b1-b55e-64d85627fde4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b5ee1e7-290f-406a-acb6-3018faf14276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "486d45bd-d0ab-4605-96f2-87f7377abb46",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3721798-d756-46bb-98c0-1323be0d7e5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21085330-8559-4deb-b7ef-7b41251a4aa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e598f328-4c50-4259-9a8d-7db7c8d28f9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a87a0953-2d36-4bc7-9e13-ab85952ac818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a5643d4-9ed5-465b-8373-431860ec7af7",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9d2073-7441-4722-bb4e-f146099b827e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a021f66-8078-4488-809b-2c93fa4d348a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d002e191-1ec5-4150-a7cc-c5ef78b558be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47667232-55a1-49bd-9747-698472439221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af98628-6e64-4833-a12f-d48e6bdbe3de",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9693939-1346-474a-bbd9-442a8cb770f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a03bb27-8698-4a56-ab03-568fd1f709be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e708a5-0e29-419b-8648-6fd0b44129b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dea39475-cf49-4cfe-a662-fd4419c50eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f6f400-fb6e-4ea4-b1cb-2b18e5893085",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3fdc72-242e-4b3a-aa4c-a8bbd023f250",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aabe3b51-64de-4213-8092-47a8d5e61a69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc34265-9e11-4d6b-9063-96cef5d5f1bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f491f10f-bbe5-452d-ab2f-4e17b0bbf422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b8a52d-e363-4ee9-808b-404d3e71a643",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd590fd5-8c37-44fe-b68c-09c2bc86a1fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "050a696b-71e9-423a-a116-f394f6043331"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d80e716-4a6f-4fef-936e-ff4fb676f7c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76bd8c0f-7ab9-4c69-8c38-a0d19e0abf62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "738d6c60-c026-44be-945a-dbaab2478cca",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0997a5-4164-4f47-8e7d-b7d9415d3210",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e31a1285-cfcf-402a-b971-1c2aea98004f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56aa073d-5fc7-4925-9101-e53d325b079d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72ad2344-30ae-4b1b-a8ee-e7e665b1af91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "befd04ac-bd4a-47bc-8f78-d8aed7842207",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80073e75-1d50-4d10-b0cc-71f459eec67d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3cfdcbd-a574-40cc-a76e-dc3c6b5cd6f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eebb3d3-9706-4003-b550-020c332866ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49dda4bb-a866-4242-9baa-7cc828cc8ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b48576-4482-4878-bcf8-26fa057047f4",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93468397-f66a-474d-95d6-350c1c09b538",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc60a1da-56fd-4bd6-9918-1591c0539c1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f6d0b7d-c55f-4345-8d3e-5716f4781876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19f704fa-3aed-4cc1-839f-0bbc1d1aae0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd85b9d-0d79-4fa1-b883-cfc370b34979",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cdca209-1bd0-4db6-bf17-71ebeef9035f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eef538fa-c2cd-4be9-a7e8-9bb2ae81aa45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b4a8850-2c6a-4f6c-b8b3-090652896d13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdff3b97-b139-4972-95a2-c3fadaae1c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bac861b-3ca8-4692-b068-9eb645fbd27b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d072acad-7f43-4e33-adc2-113d8aeaa10d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e0a3126-f4bc-4bce-9106-d60f4513614d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4122092d-e682-4f3d-b2bb-fd9a536f565c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1604b682-6ae1-484a-979e-618fb6bf9459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f1b1c38-3f7b-41df-a3ff-0350957c73c2",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa11a73-95aa-4f8e-abb4-de73b922dd00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d1bf844-40dd-4971-9f2e-bc44188abda7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb24d402-6ed4-4571-8be3-f43a8b082592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1feca039-6965-469c-ab72-fb798cd1992c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e384d11-0ecc-4de1-884a-dfc5359e366e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a01e11-904a-4fe8-bc9e-59f522ac9fe9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "522c9be1-ad25-45d2-9a69-8630ec01ad31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32aa96cb-4330-4f39-a309-f8c37e4ff80a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bb155cf-0afc-4c8a-868f-42ee7b3f41bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4efa8ef1-9283-47c1-9d83-f708fdc53961",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbb2fba3-2f04-4403-b1b9-409fb3bc4326",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f9e167c-80f9-43bb-a562-e231ea32a065"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47702231-700f-438f-9ddb-00670903e674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0d2ccd9-7c5a-41b8-b11c-6c470a0394c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f459e02-b798-4ad4-9464-8229a69d5542",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c162cc-373f-4ac7-b68f-2065a58d4109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "835b5592-7b8b-4c67-9fd6-da1b2ed904c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d90930af-5019-417f-a5e3-2fbb8842d53f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dafb8033-1f61-433c-9316-7ade3be2498c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8151b6e-a15f-461f-a8ec-2cd54e4a5056",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fedf7296-73ad-4710-84c0-1655b952374b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc3545da-5618-41b9-8ea7-62986aeb534b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0374d534-3721-493c-8deb-12f0ec9f3963",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcf26cc7-b016-4deb-8711-b139987bbef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f97d9324-1f59-4c54-b02c-ea33f7b4412f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac2b397-051a-4d4c-a067-6f4d3a531c03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6e837a1-0819-4ca9-af4d-b49fad3a7e8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbba9057-bb90-46e3-8b8d-28652b5e846c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eba67e29-2f6b-4b3b-903d-244c7fb7b77a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2dc17b4-0803-4080-89d9-70a1eb3cd623",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5754d4ef-7d29-4442-a7f2-ed11191ac293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "263fad04-0e2a-4f03-95c4-52907de4441f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d5fa3b-6228-4d9e-851c-a4a5e9ee9d17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b670632-d346-4033-b51d-c42097080264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a970506-a9ef-43c9-8e41-770fbbb206dd",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19d479fa-3f80-494b-9b9c-1b3a9ca0f084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "001f20d9-ac7b-4482-8311-38e6469a9477"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d472a19-4adf-4e8f-bd2e-1ed4836b8877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e591c53-4fa0-43f2-b4bb-5f83fae23b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa240928-696a-4843-bd59-489273b762e0",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a9bcac-6506-45e8-838e-3100b2612834",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26fa25d3-2e09-4167-bdd0-7f20356dae5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d9a9fc-7b79-42c1-a0fb-b65b28199798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9619564-4d21-438b-9c28-d7591cb3784c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e06e7a1-d1d4-4469-bf8f-d91c597dc341",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6eb3a38-70e2-40bc-b0f8-a042d68a040f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c374a67-de76-43f9-a418-cbe1b40c5f50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a9b4302-1a33-4337-a7a1-5bba2b70f546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e35cc564-4101-4534-82c5-b6ed39c3a5ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90be655b-a345-4fa5-abad-da3ea6d5dbee",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cca7d73c-6a68-4a48-8e0f-a8842e77de5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c470f07a-24fe-402d-b0e1-46612c1c1ad6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09185b97-ccac-48e8-9121-376ae78f1045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ac6b88c-0999-4772-bdbf-295ec9d5840e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d3ded36-330f-4e02-8825-873f036e807f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f4ee7f3-2950-4216-9fd9-ac07696e6f47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2e1b1d5-7965-4fb9-ae63-176368c6d041"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a45da09-1e7e-4a3c-8494-332d93e5943b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c5bae68-3775-4f85-aa4c-7c2475c2aa70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f39fd938-0020-4841-bc25-d7733a451bad",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ab40ec-3aeb-4084-8d80-971db08cae01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6364aee7-777a-4309-86f3-4e7dc16ab263"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b4d08c-56fc-4dfd-8843-8acc92e577e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54574c10-2593-413a-b3a3-57238a5e55f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119d0a54-afa0-4a88-a4d2-e38b2413c14b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1705508d-6e46-42be-abdf-55ae1667fb51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "328b5bdb-d308-4d49-9c19-025d46c9dd3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64efe9f1-937f-4536-a2a1-164ddfd14ee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "259ee036-a6cf-41ba-9f32-d0c58946e490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce7aee6-2239-48c3-8ca3-1c90e7846627",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "094836fa-0c8d-4d90-ac8b-a93ac8cd4cfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96cf2ed5-8a13-4651-aa81-bb0054cf1cb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a50c5735-bf0b-4f61-b580-78a2d2b14973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2826c37b-5e1d-495c-b58e-0c0548fcf029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11fd7da9-b9da-4d90-aa65-e8c9ab1f1d42",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d02a3e-3bc2-403e-ae77-8eb0782cb62a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d160976-e33e-4fa0-b716-7ed1b34fcecf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da8c0f5-654d-4217-995c-5c72943c27b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12771786-84b9-460c-be00-2d8d7a8d146d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ea3e01-4c3d-425c-8141-0121eedaca1f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0546de60-5cd4-43a4-abd9-7f532ce04090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17c1a7f0-7fb4-4d6a-a4ed-63114aef325d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b65ed93-ab47-49cb-9ab9-dd608677eb10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cd743c2-ee4d-4d09-84e0-091bec03dad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8926812-8fb8-41ab-af90-68e31b30002c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7911a5d-7a72-4be8-b7e4-1d694883a42c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "216cf19e-ed21-4df7-808c-d30ee718d8a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36afb64a-48ba-4104-a507-84e227e220f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cfe3752-0b4b-417c-b52e-6c237bf5bb8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35261795-8c2b-4d0d-9f73-6c06752c1d12",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd67ed6-46da-4e5b-9996-2ece3ca0145f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ad72c4c-7646-4c5a-bb2f-365b41ad5aa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11bdb565-d117-4433-ae72-5f980a5bbf0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56b41bb3-d42d-449b-9ee0-dec5938dd1c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678e79c8-a9d9-4d66-a37b-d3f60043dfd6",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29279142-48ea-40be-a5dc-ae8db3cf9ba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78b936cd-a669-4d06-9669-03be70829cc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29050a8f-878e-4d75-b178-1f93c4521106",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df6c59cb-6653-477c-bc4b-2ec71b41e67f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c34849-3ce0-4dff-899a-ed331153dfba",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8581afc9-aa90-4aab-b429-81d43c7c96b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a21b698c-0512-4cf2-bf5a-1beb2b3ca673"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c86dd3c-13be-4fce-be87-57a7bcc62d87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1884cf78-7fb2-4984-8b37-8679a40326a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8babc117-b00e-4751-8bca-8a680122ac5e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "569d7d5b-d950-4753-a79a-556e1dc52a74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "306d291c-7bdb-4857-a328-8c8da50385e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "331addaf-2b39-443b-88f8-88d061c8ee42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb86c6db-f5f7-44f9-bc02-ba2b2b24e860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b432985c-a1bd-40be-a572-125254bfc609",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91119cdb-9709-4431-ab15-1ae20035d7d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdd222b2-3e12-4cf9-948f-368247bcdce4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54fb977a-ba5f-42b1-adc9-59bee265de56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ced2d01-7af5-4728-8346-ea43d89d0378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c09e6aa-9244-427a-9737-f6c373aaec7e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e73c42c-588f-4980-a976-8525f991a58a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98315dea-6c9d-4ddd-8bda-ba19405b1e97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17d9927-88a7-4828-9b1e-fdcc2c9badae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3730ba52-663c-41b8-866f-35cc45bff8cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1546565e-b851-4d8a-865b-4ba547268bb9",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a021172-6ee8-4939-a11e-dafa4a48eac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "729afd83-4f31-4cae-92ba-7457a581b7fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "722f2d40-3396-4b0e-9cf9-018a36b1df64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88c04f5c-da5a-40f8-818e-773e2be71817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded57d7f-ad24-4f27-93ca-32bc6168a986",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7117e2d4-cb40-4eac-a943-18e4f8fc33a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64069dbc-3bf0-4bad-b36f-c72901d8d0b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac282bc-73fd-433d-9267-9679eb5e954b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83905827-9842-4efb-9943-2de01e48f852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b7310a-7a21-4a39-bc01-f487efb6b959",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b226825-532d-4ddb-8a3a-c1831fd4d441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "388c5118-d1bb-45fa-a9a0-0a19c0bcc213"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e76445-e179-4a7a-a554-ae40ab6a55df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "035e17ee-1ed3-4658-8325-fd87a2840bb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4515ac6d-3490-4815-a99a-0ed6f18602e9",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67972d8a-b940-47e9-81aa-09f613a2f8a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c3c00e6-7ff1-4963-8382-95ce6b59de0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b213cf8-0d9c-4077-85f1-d8a250c7b48f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dd6c621-afe3-4f7e-ae4d-422d3e7a0f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37621d3-a80b-43d1-b04b-9e7a8698d9f7",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e81caf99-c3b1-413c-9b3a-0b97df595e29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dfebd5e-e17e-4139-ae97-353807177e77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e558d4ac-919f-4da8-b7f7-d09203ae7ed9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08abd8b4-f7b7-448f-beb7-9dd06209c5ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5867399-b431-4f01-9dab-4d3d30b6bcba",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9376024d-b4be-45be-87e3-37a30062f738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d21b94-9465-4fbd-aef0-acc32da0bf64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14d48fc-3186-4ae3-9caf-dd97f1d212b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "465ce91c-aeff-40b7-8bc9-abb04739c982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53235d0-d9d2-402d-bee3-d9a21ec3d9f4",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df9da37-56ea-4c8c-812b-053832563eaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a03ff1a-b0eb-430e-be9b-d9b6ea49d40a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb25c4e-1416-4f4d-bf9b-de4b75be7ec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e05a493d-c3f9-4d86-afa8-c3bd5bd3c9b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c108fd0-841b-4478-9130-545ea55f6be0",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "607f1b44-37c4-4c27-9a6c-7bf670d7037f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "813ddeba-c15a-4ec8-84a4-1ab89dc6abb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e6013ea-24d0-4920-948a-cdea624886b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42f2071a-dc0a-46ef-80d5-fb11bfac698b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc35e0f7-4205-4cc6-af84-d11cce5d2c10",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1e893e-b91f-48a0-8bbf-5249b1bae128",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4212b50c-e8ec-4afd-9ff8-787d3e3f809c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e852093-dbb1-4dd8-92ea-c465a8addcd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4531eac-a952-4451-abfa-7e5bb444f585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6b3a3f3-f5d7-46db-8e98-d716c71b016d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "908e96e2-12e5-4b6f-b2b1-a93ede64780d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc9afa60-9e60-4d8a-95cc-bf88bcd99e0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "031ec80b-d45b-4f1f-972d-549875eed285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f77c0189-800a-4688-a0ee-d9ee571106fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c21bb002-be1e-409a-afca-73648529420e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5357121d-b425-4766-a414-b148750a30c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac780707-1d4d-4a43-a9fe-b836e98ed45f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ed3974-cf5d-42c6-bd97-c4c9f056e94a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1b91038-e4f8-47b1-9c48-ae59675db66a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bbd0b2b-175f-4fa6-bf30-268bb886e500",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323f079a-7758-4265-b777-c38569e7ea32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5dd0a76f-29da-4368-b0cf-bf0933c226ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8667b6-708e-40b9-8779-60098fbac7c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcea2f8c-ab79-41fe-8066-b42bd32bb615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a89e191d-3c1e-497b-aa6f-99fd32fa6bca",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58be6589-3c87-4c5f-9e5b-d10898e14e20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "668c77c9-7a48-48dc-8c8c-279e24ca8284"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e9013f-9b00-496a-a144-689f87632193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0a83050-1533-45e7-8207-5aa9e1940e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43159737-b393-40bc-8e6f-2c5922989a69",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8654517a-2310-496e-943f-044e8abb41f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "773a034c-d097-4b40-9a29-3075c824b0df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4a0dbb-1cf5-4027-9a46-65dd90244dcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a1c4f1e-0035-4de7-8fec-8ebaa30f8c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd94c5e-32ea-480b-82f8-212022558bf9",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8888297f-90b6-420e-a0aa-06a8bffa579c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "198ec4c5-973c-4c33-8d15-2382c8c61b13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8fcf1b0-1c91-4d8f-9587-0670bc3fc342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51fc5672-5e1c-4485-9aa8-ce156d8aa669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "638dbadb-6601-4857-8dae-63183a8375b4",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06347ab4-0a37-4feb-bd6e-a33cf06dd128",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4040840a-e32d-496d-85ac-864fbe197da6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af18ecf1-3727-49d2-a9db-a6e17070cd40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f03c25ae-177e-4360-ab8e-618ef10fce23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0788700-0cc5-44f3-a729-f7d228a27413",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e390cd60-4d30-46e5-9009-51c46b73108c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "840badb9-91bf-4eab-8a7b-d1298bc0e4a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c895941a-fd25-4c74-b065-cdfee28c6386",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9191abe-c681-4107-95bf-06119b384c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66edf376-9c37-4263-8b26-2bf0d8cbf9b6",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02fb704a-abb8-49dd-8727-cea045ccd81c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5092be83-0b03-44ad-a8d5-2d0ee839802e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47fde5b3-fb27-441f-9cd6-70c79db77bd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7262afae-5310-4ec5-b6df-84ca772bf058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37de8cda-f7ed-4e52-b2ad-5d3f98eff244",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b0fbc0-93ba-4117-bd3b-acbc7b509964",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e34d7df4-e365-4c22-8125-43e5819fc7d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc2a824-0e10-43c6-b742-a568b9420f7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cd3cccd-4300-449b-91ff-d0007513af61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efe1ac5d-8425-4c80-9a48-fc35837a2d20",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475be622-d789-4fdb-be3a-d447fe39e74a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cf32001-3f26-407f-9c53-e6f1b5636098"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58023f1f-0a58-4cdb-a05b-890350f5bedc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11a5d59b-9b64-4dfa-ab48-84340cf0beb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72bf3407-626f-4201-a704-cd32a65402f3",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d7535c-3267-4e35-9892-1700bcafa015",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "974b4b39-68b4-47a0-887c-255af892e48c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3086d55-91de-4041-a9e0-b9c667f593ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a0896a9-022a-46ea-bfe5-cfab3428d58c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7394e98-b3a9-4b77-bad5-6b645b540329",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afeea0f5-2204-479f-aecb-45b177e0b278",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efc8547c-fd78-46f3-bbc5-47dff5d9ff04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb44c054-ff3f-4109-9130-5885cde937fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73703f16-8096-40b3-9c22-046e2562d09e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed7c71cc-8ab6-41c9-afd3-bf1b1135fd1b",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ac7342f-8cb6-4fd9-a826-0f302f26b992",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d4b7776-9d06-4c2f-b632-a6d5d11da081"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65631730-3d06-4e56-91a5-f222b5fd1a29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6068631-418f-4a26-9d06-d045f74ad08b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8d04ba-f802-4e87-a349-9626104602e8",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f36a06-3947-4356-bf49-3efaf12bf119",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d45a4f52-e44e-4f48-81c8-d5c40aaf3643"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c4175a-29b3-43df-a19e-319f3c66e654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "250fc5d3-cb36-4653-a0d4-0c759825cc00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c0765f7-49e4-42b6-941a-085440c37834",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b48586-e21d-4b01-8d22-09ffa9bd06c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36aa996f-5029-4983-a7c3-cb9775ffaab4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f39c5cfc-03a3-4106-bcab-1c23d5c9c39b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d481312-6091-437e-a550-e8c28f0a32ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b8b5f7-0324-4ff6-8d9c-25c9dc17f943",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f42c66-c830-461c-91f2-dd51e2c8e053",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a229d65-3ccf-4887-ae46-21576634fa14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6cd47db-c5b3-494a-975c-02c2b711b6df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25d83027-6bf5-4bf2-bf72-c3b96568343b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6334c14-d12c-4c52-bd9f-41435e5c938c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddfc442b-8920-4ace-a3c3-8eff074c2252",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9ae6886-eb8e-4ff0-80e0-14c7df2206fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46595b7f-9945-41fe-bb8d-daaa0965190d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecf44c15-dd33-4423-a362-ce692aa2ec62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db019a74-709e-471a-aba4-046b5fa2ce1d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c01abe89-0af0-429d-8e79-b43eacf0b475",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c054e4b1-1ccf-42c1-9cd5-2df7866f91da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79204dc-4d61-40c5-a61e-17ad01eb13b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1b0362f-0ace-4e13-8876-020ae14a3a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba3540a6-3346-443f-a792-39833cd7e49f",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a37cd37-2994-4713-b52b-599b1064bac2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d212483f-aa32-47ef-bdef-84502a98affd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac33a3ae-7289-4d3c-8ada-df3d769b4072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81408805-be89-4235-b35a-e0df191c2ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "705b2134-f995-4d9e-baa7-20e85750b423",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8073d257-60fe-402a-ae81-63c53fe4bdef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4a7f5c6-5bd3-48c7-8add-c5c0e1ef5efb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e795890-00a8-4606-a3ec-3d3dd87236f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0736e641-84cd-4e22-bc39-1ccfedf3e513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c0bd9b-3917-493b-944f-7f527f3284df",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8812703-d9bb-44e6-a06a-c2248cd8a7a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb156641-0f67-4593-8b45-10f114af3961"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "773e1375-d3ed-42cc-af4c-a8f11faee04a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87ec66f9-c771-4a84-897c-939f1deca1d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a8c01f1-2a23-40f7-9f87-0d0538646a88",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f36872a-dd6e-46f6-9e13-f75751d904ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1e628f1-e6b0-4e13-83b8-2c41c8a9a311"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b93d386-9a88-41e3-8d66-87f3e4a0039b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4071a212-da16-4656-8054-c983a6001ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe5a979-ab59-4d7f-9703-1250cc15c2b7",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9292b5d-3f5b-4263-ad99-a9bcc8a304f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7348947c-291e-46ca-8f33-09a83bbef0a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2646e98a-077c-4e22-bba3-95c40f740a49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47b3233c-5b5a-47aa-8030-b520d7069511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f701b74-6d1b-4de9-a76d-72bb000341a7",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86fd6315-08a5-4501-846a-ffdeb4baecfc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77089112-14fd-4282-9f51-8d0e523db9a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff21122-f2d7-4194-9d70-9316e953414c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d50cfbd-ec16-4457-853b-009253a58c38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fa4ea80-c27e-4afa-9518-d8dd0446e5c5",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7e6393-0f6d-4b9d-a6be-a08a94428538",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c02caef6-41e5-4f80-8496-8472c9e2b514"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb68d329-7634-4121-91a1-b1cdee2784dd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "700ca1d0-f615-49ac-8ae7-ce75411d145b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72732b26-85e9-4702-9e74-e96ccd3367c3",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d057c191-8f8b-4e6f-b1cb-b80648ad750e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1230d62f-1f83-41cb-b9da-ad7f728d06af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d21d5b8-48f3-4871-8421-bc96ac26cb73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e5e62bf-7b37-4c07-9ab5-7a2abdd30986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4204e72e-aaf8-4e74-875a-b30268d1373a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ba162f-bda2-4b14-ab06-422600e2ee3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "367a75f5-fa77-436c-922e-153e52e97622"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f44b3fa-d646-48cb-afb0-4a271e5f5372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c008d12-0aa7-4317-a5ad-bddcc205667d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf5cb65-ee83-4e33-97d2-e47bef36da2c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d486808-15f2-46c6-b459-abfab5936681",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3767cc18-39c7-4ff4-8b2f-9f87937fecec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e468d693-fd43-4dff-8012-0b816c8e8866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4823cb5-3af3-47b2-b0b6-0e7e45cfd016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b5fe9c-1418-4067-8eed-708a10fe0062",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b480e8f0-625d-49f7-b363-d9ce3dce76cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da904ad5-8d61-413f-a65a-337ee17f5a06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ea117c-3a25-4654-b5a2-e521226e374b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc150ea7-c247-4396-bfb1-1ce64f6fc24e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd412bc-0222-42c4-ae04-9e1f3652d9ab",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6612a10-c49a-4561-bf8f-b94c415c03fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fe2ae39-8250-4724-9c33-d7be326cf01a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8497ee2-e45c-4416-a35d-ed069d9bd723",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fae84787-33cd-40f4-90dd-0d25911b5e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abbd1a6e-3cfa-40dc-95f1-b2feac365dd7",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2791455-6977-4536-a80f-31c4cde6bbdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce25e41e-b502-411d-9aca-c593f89d830e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d6e53b-34f8-4412-8d2d-aa55acf4a3e5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69f071e8-3fc0-4ea5-8f6b-15c9dad53977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e3865ae-8667-4fb7-b2bd-8a566b842d57",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813adf99-5cf3-456f-9d5d-6fb598a64fea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a99738b9-09f9-4ad8-861f-58f86f015e73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b75a30-2c05-4730-beee-119f7bd6e586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43cb8deb-420f-4b94-9fac-23e0db4d8cc6"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "897421c9-cbf6-4a72-a11d-4c8b569981bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc64c62e-1289-4a83-8745-c70a8cc3383a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "46983911-53bc-420f-9af6-786ab4e84565",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a74175d8-253b-4bb0-bb9d-534926a7a263"
                    }
                  }
                ]
              },
              {
                "id": "f9a3c3fc-3dee-4f92-a51f-233f675759fa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e1da545b-2ca9-46c5-9cac-970bd00a4c81",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc5056e0-7e67-4bb4-8bc4-d062b81caa98",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d8bbf187-d1ff-400f-bc4b-bd0462c44b37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5406513f-ba6a-4257-8e6a-51a9c0353eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0e3c033-b183-4486-8f98-a8c2db6f6ce9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6bd50901-dec6-4306-89ca-1510346507b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50aa17d6-3f14-40bb-b37c-db342a6b6ebd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bbda0b80-470b-476f-93f9-a2df976cd533",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88698d05-542d-46de-bd1d-402d192541cc"
                    }
                  }
                ]
              },
              {
                "id": "fc6f22e6-fcde-4814-b7f2-92860badfc2d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "fcb4d65d-c4b0-4a46-964d-5df558b9c67e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f06bb16b-dee5-44a9-8207-68643bba4e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "10c64879-4365-4eeb-a951-b93ebf3c59f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a23004-d666-4c49-b1ca-3f8d341b8cbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82c1da3d-0e04-4774-97c2-40f3a65423e5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "88d50eb8-ceb5-416a-a85e-b27aaea13cea",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dbdadd6e-8a71-447b-ad5a-5c0723ff04af",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b44c1bb-86c3-4497-8e1f-cbcf10aa827c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8c71b531-0a6a-4bef-80ad-7042dfbfd9ef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6360f2d6-0727-4caf-8801-80d0687bdd64",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0ac3314-6e6f-4cc4-979e-e8142760bd8f"
                    }
                  }
                ]
              },
              {
                "id": "52e818e0-03dd-4c67-9a15-1c86de2f6e13",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "42aaba5e-8fe5-4069-ae47-2a5995166df8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "11f642d3-da2e-4c7b-8e38-20a282c38837"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39b01111-9790-4a83-9728-95151721674f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "019f47bb-646e-4e81-b848-39699d690a64"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f9d05cfa-6b4b-4d6d-b2d0-155000601048",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "8129b768-3f59-4190-aae4-0fa4c296942c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "318ab9a0-a327-4426-8713-5f7570c742db",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f6dfe0d4-eaf0-4633-bbc6-200fac752bb6"
            }
          }
        ]
      },
      {
        "id": "a107e6c0-b9de-4609-8d9d-023fbd3bfcb4",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a36874d0-d247-407b-aad6-1fe3df79cd21",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0b5c3c10-6c10-4624-b167-dc5c4d2fa44b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7e6bdfe7-9938-4484-a95b-f826e0deeb5d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e81f8b32-7111-487f-a582-6cdbdd7964fa",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7e182c01-b3b1-478d-a7e6-c925b5294f52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be345e8-38e5-4bac-83e3-fc0d331e5698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ab76506b-41eb-43aa-a796-a2463f62d016"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e93a2f17-b690-4804-9d76-a42f94e19b10",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d912eaca-8977-4a1a-bc4c-520e9c4043eb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "098c46c7-3108-4d3f-9fa8-33f0e48a1b07",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "950b66bb-4c1c-4ed9-a9ed-66bc7884f8a9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cf567780-3add-44a8-bb3c-08b6aa21eac9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0c319519-2450-48f0-987c-b8f79e221f8f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bac1c5d5-9577-413e-b8e0-5d3a86182f62",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e62f2cae-d041-45d5-830f-4fbe5b9e5a7e"
            }
          }
        ]
      },
      {
        "id": "77fe9301-9315-4386-8a65-f9f9c25bd887",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c705b7ae-0600-44af-8a50-eb731935148c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "38b45cc8-c563-4507-8f03-414258861012",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2752b199-e572-48a6-b863-bfce70486ae6",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2a5e0aa-e37c-461e-b110-01002c69f825",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc241eff-9c1a-4844-b41b-cddabb4eddfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd4d3b2-3621-46d1-8a01-ad23c5b86b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be910512-bd8e-405e-ad02-7772a50c0f9a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "559c4c93-73ee-44fc-996d-e538a94a4c9e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4294081a-b91a-4b77-8efe-01362f96cee7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8526693-c78c-4a94-ad2c-d9d577ba7aa4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f7c65bb9-8f2c-4a19-864c-971cabdf2848"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9e03d63b-bed6-4662-b323-d2cba91c2cff",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a8031b55-7f0e-4945-97a8-f653ab2e17e4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "441ca4a8-33c1-47ed-a111-15f5917c012b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "18a936c1-a222-4f0e-9c85-6a07865664d9"
            }
          }
        ]
      },
      {
        "id": "382466b6-8ad3-46b3-b77f-ad4eeb76189f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f06ff26b-7bdb-4642-bc75-cd123a8a6759",
            "name": "Negative Testing",
            "item": [
              {
                "id": "817a8d5d-7e52-45d1-a8f5-42f4f33338f7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6d3129bd-06fa-4509-a21b-9d1196a31554",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ea69e9-2b05-468d-9d99-0ddff591c042",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8350c854-8bdb-442d-a5fd-b897a033d478"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17a8b29c-e756-464c-84ea-83bbf3efc410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "07f7c91a-f434-48aa-9280-aafd01c26f7d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8378d4e8-8b7f-4e40-936c-c19f3c715b6f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e34caf28-245a-4864-aed2-b9d6b3141b0f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef91cf34-00ad-4733-9601-a550dbebee58",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a77aed5c-997b-4027-8ac0-c0c55c3b943b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b878c196-9fad-4b5b-abd8-a44372b1758a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "485d4add-c6e6-43fc-b8d2-c64f3d15ca08"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7c9ed3f4-e8a7-4040-974e-f70185e0068d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8bd83b82-0756-4509-b890-e6cb05b602a9"
            }
          }
        ]
      },
      {
        "id": "e4d9b168-18fa-4849-b0be-fc45771f5d57",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ebfc5616-adac-48c2-a9d2-9d4901f1683c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1676910a-c18d-4dac-8065-d6b104985f09",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8859648d-4cea-4516-a072-d7928357458a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b009732a-d691-4487-915b-da74364bd34a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7f9f4a3e-2062-4d03-bc6c-fc5ca8035611",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 345.0982456140351,
      "responseMin": 10,
      "responseMax": 8109,
      "responseSd": 1020.8237046433788,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1697589228982,
      "completed": 1697589339673
    },
    "executions": [
      {
        "id": "13c6b8c8-465e-4c97-a9cb-4ac95e4d771f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f35f7f1b-7d6f-4a3d-947f-122c8d8bc112",
          "httpRequestId": "2598fcaf-683b-4f3f-afe7-c1a354c737ab"
        },
        "item": {
          "id": "13c6b8c8-465e-4c97-a9cb-4ac95e4d771f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "966300d6-dd00-4ffc-b4ad-79b847ce1439",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 0
        }
      },
      {
        "id": "0e916d8f-76f3-4122-96b2-af87cfe7e898",
        "cursor": {
          "ref": "90796c9f-3156-4cb6-b5d7-d9bdbc6ddc16",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "fe4e413b-1ff8-4db8-9224-6e7f3a116f4b"
        },
        "item": {
          "id": "0e916d8f-76f3-4122-96b2-af87cfe7e898",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e74d3fb9-cca2-4d6b-94c8-881d6a0d0b19",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "72a84585-b2ad-4cb7-b6bf-fd109ce2cd08",
        "cursor": {
          "ref": "0bd2d0f7-71bf-4c02-8426-53b95c69be9d",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2a01fe46-d383-4552-be0c-2926bcd615aa"
        },
        "item": {
          "id": "72a84585-b2ad-4cb7-b6bf-fd109ce2cd08",
          "name": "did_json"
        },
        "response": {
          "id": "819d696d-9068-48a6-8186-8d59bfdeb114",
          "status": "OK",
          "code": 200,
          "responseTime": 1328,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dafd01b9-d930-48f1-af71-f128259dad2a",
        "cursor": {
          "ref": "30636732-b120-4657-a039-e2a7520d614e",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b9f2def1-4c2c-4122-b9fe-7fdda94ce8fa"
        },
        "item": {
          "id": "dafd01b9-d930-48f1-af71-f128259dad2a",
          "name": "did:invalid"
        },
        "response": {
          "id": "9ea2f93a-0c5c-4aa0-9af3-e70adbbb097e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dafd01b9-d930-48f1-af71-f128259dad2a",
        "cursor": {
          "ref": "30636732-b120-4657-a039-e2a7520d614e",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b9f2def1-4c2c-4122-b9fe-7fdda94ce8fa"
        },
        "item": {
          "id": "dafd01b9-d930-48f1-af71-f128259dad2a",
          "name": "did:invalid"
        },
        "response": {
          "id": "9ea2f93a-0c5c-4aa0-9af3-e70adbbb097e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c835e73e-29f7-471f-bb34-beed2f6cd274",
        "cursor": {
          "ref": "d750bbcf-833b-4f37-be0a-f0436d3a5082",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b3e48578-5e0c-43fd-bdbc-8e2a1b417e91"
        },
        "item": {
          "id": "c835e73e-29f7-471f-bb34-beed2f6cd274",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0c139b8e-5ab1-49e6-91ab-848a0ba893cd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 365,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecae754c-0198-46bc-8389-734abe2817ba",
        "cursor": {
          "ref": "7444d49d-f1e8-44df-a614-57e533491609",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "018f5506-36ae-42c5-ac70-0ebc9b58c2a8"
        },
        "item": {
          "id": "ecae754c-0198-46bc-8389-734abe2817ba",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "097859f5-79ed-4d3d-b9c0-d4e5478b32ed",
          "status": "Not Found",
          "code": 404,
          "responseTime": 269,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "345828cf-97f1-41a1-9a4d-8bce8069eec6",
        "cursor": {
          "ref": "0299d591-db16-47b1-9f12-36fc609f1cb2",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1252ac41-87fb-4057-a43e-7d8ad8c2501a"
        },
        "item": {
          "id": "345828cf-97f1-41a1-9a4d-8bce8069eec6",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "85e1fa82-80b6-4a4a-bbbb-320b9fb6406e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c45499c-3da1-46b8-a9aa-9fa803887b83",
        "cursor": {
          "ref": "99d8bfd5-3bb9-4a71-93e6-2a40305cdcf5",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1f9f7277-269e-4b32-9fb5-d93ea978cf23"
        },
        "item": {
          "id": "9c45499c-3da1-46b8-a9aa-9fa803887b83",
          "name": "identifiers"
        },
        "response": {
          "id": "45d02c6b-d9a0-46ae-9694-d9c6e2308c57",
          "status": "OK",
          "code": 200,
          "responseTime": 1367,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b2fe930-af38-4e50-9ea6-50a0fc0c3f26",
        "cursor": {
          "ref": "86d35ba8-9c44-4878-b4b1-a2d85f37f491",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "11215824-e7d3-4a6d-a81b-a7a8c40a3f57"
        },
        "item": {
          "id": "5b2fe930-af38-4e50-9ea6-50a0fc0c3f26",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "500fac1c-5b69-47b1-93a0-ae66d01a5205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9717df-2c57-454b-8b35-80d30b7e9a8f",
        "cursor": {
          "ref": "d75cc5c2-e6f5-42ae-8741-98ed0f2644c9",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "cbe736a0-7473-411f-b1c4-231e05eaf6f0"
        },
        "item": {
          "id": "ff9717df-2c57-454b-8b35-80d30b7e9a8f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d33781f4-fd2a-4199-9c6f-95c167bf11f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a3ee67f-47c6-461c-a0ce-281bb704c55d",
        "cursor": {
          "ref": "aa0d1808-80e3-44fe-8bfa-caf67c94122b",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a0a133cd-3c58-451c-8bab-7b1d88581d8b"
        },
        "item": {
          "id": "7a3ee67f-47c6-461c-a0ce-281bb704c55d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d0c62188-e1b8-49f6-bafa-cdcb2dd6da05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a7b9a1-7280-43d4-921f-b5d6b7604245",
        "cursor": {
          "ref": "8615f516-4f20-4bc5-a300-006958cddf24",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c8d6938a-02c5-438e-b06e-95afd326b6fd"
        },
        "item": {
          "id": "76a7b9a1-7280-43d4-921f-b5d6b7604245",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b266478d-31a5-4925-85e4-64fe62c38cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f999a101-81dd-44fb-83fa-8c7351a0b7ce",
        "cursor": {
          "ref": "b6a2bc88-d623-447f-8b75-2a4263627e33",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "cbc04a1e-fe18-4c50-8150-21246b34c213"
        },
        "item": {
          "id": "f999a101-81dd-44fb-83fa-8c7351a0b7ce",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e22ac124-8bbc-4061-a89c-4750a47299c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20bfa71-0505-418a-97ea-7822625f6792",
        "cursor": {
          "ref": "3f733e53-b90a-4e96-a6c5-29686d030e3a",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "0cb32054-149c-4cbb-8fa6-ab2c05e927c4"
        },
        "item": {
          "id": "b20bfa71-0505-418a-97ea-7822625f6792",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "07f644b2-e37d-464c-bf72-dc6fa4d0e649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f268c5-f91d-4dcf-aa4d-1caa371163be",
        "cursor": {
          "ref": "400d7e30-f15c-4090-bf01-2412cb7ed3e0",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "54b84529-6f87-4fdb-a59f-a8dded8f3707"
        },
        "item": {
          "id": "01f268c5-f91d-4dcf-aa4d-1caa371163be",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d7f44eae-fb09-4154-a6f5-85f1b83cdd9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a45c4b-9497-4169-90cd-599bae891113",
        "cursor": {
          "ref": "d00cc070-1621-4696-b25d-d9d5b377e1f6",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2313de22-2354-422a-8b59-273a20e91537"
        },
        "item": {
          "id": "96a45c4b-9497-4169-90cd-599bae891113",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f20cfd7b-cf12-4bb2-863a-e1b260c99403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92bf3bb2-89b8-4aeb-b9a8-f13cf97d1a3a",
        "cursor": {
          "ref": "075e4c50-c50a-4173-9a3a-539ad222736c",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "fa852ebe-1038-409b-b04e-28b87a38333f"
        },
        "item": {
          "id": "92bf3bb2-89b8-4aeb-b9a8-f13cf97d1a3a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7e77b0da-437b-4de9-9ee0-6b005f058649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aec41be-3299-4478-b4f4-ffb33f0b45ce",
        "cursor": {
          "ref": "c8d106d8-99d2-461a-9663-527e84279fc5",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "a5a5694e-b385-45a2-80ed-4b7c1848daaf"
        },
        "item": {
          "id": "0aec41be-3299-4478-b4f4-ffb33f0b45ce",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "828c8326-9aa0-46fc-b949-421a3a9d8c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab6811c3-0a34-4854-905c-2f9a32b273d2",
        "cursor": {
          "ref": "283e4133-1581-4ad8-ac4f-cd335ee4f21b",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "8b8caff2-c716-4632-afe2-8aa809ca2af7"
        },
        "item": {
          "id": "ab6811c3-0a34-4854-905c-2f9a32b273d2",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "947bbbbe-f4ea-4aae-9bd1-eac24b1eb93b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e2d475b-c618-4e72-afca-a1823a213afc",
        "cursor": {
          "ref": "3fccc4cb-595c-4ff2-a76f-348863d6a5d2",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2bd151ba-f939-429f-b334-dfd0580b3683"
        },
        "item": {
          "id": "2e2d475b-c618-4e72-afca-a1823a213afc",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "0f3c011f-e31f-4032-8f85-54b0c69049b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bdef146-151c-41dc-8288-3637df1e9a13",
        "cursor": {
          "ref": "b7137cc9-231a-43a9-9562-9756182274c9",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "71b8c9c4-d031-4597-89ec-a42bbdf7455b"
        },
        "item": {
          "id": "3bdef146-151c-41dc-8288-3637df1e9a13",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5084cf87-6bb2-4103-b4e1-6425e2c7974e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaad5f38-ed55-40a5-b0cb-37ae0cb77970",
        "cursor": {
          "ref": "2b2c4639-0848-4e27-8571-c5355b116c76",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "0b3f99e6-6a26-4c2b-b134-b33faa7ed245"
        },
        "item": {
          "id": "eaad5f38-ed55-40a5-b0cb-37ae0cb77970",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e5187b04-9f46-4e2d-86b0-eeda91fdf196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee1bf5f-84f0-4dce-bba6-1781a844b578",
        "cursor": {
          "ref": "73198adc-f101-4211-b8c0-15f19888c070",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "fa94693a-e5fc-47d2-9089-ff477e7406a0"
        },
        "item": {
          "id": "4ee1bf5f-84f0-4dce-bba6-1781a844b578",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "56196ae4-259b-4fc7-9021-65151a0ad140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eecf96c7-4b12-4aee-9d4b-0cc9fc0f757b",
        "cursor": {
          "ref": "a38ac09b-8d21-4014-a05f-db83c2e07d10",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "56a8fcee-10ae-4ce7-9f30-fa5910adcca8"
        },
        "item": {
          "id": "eecf96c7-4b12-4aee-9d4b-0cc9fc0f757b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "19897952-cb4d-4d64-9a5b-9417f05c6c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28130052-948d-4ba3-8705-53f3baa22bd1",
        "cursor": {
          "ref": "d24d9aea-1f58-433d-9a03-8e0fffd5d9b6",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f7ee984b-58a1-4b7e-937b-92c049b21857"
        },
        "item": {
          "id": "28130052-948d-4ba3-8705-53f3baa22bd1",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "285d260d-f820-4354-8dbf-41a7b63a5c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e24d8a-723e-4472-93d4-f49a7b12ae5c",
        "cursor": {
          "ref": "49a32084-c5b6-4468-b957-8cf526c6cb66",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "19a353f6-5d80-49d4-99ba-6521d818bab1"
        },
        "item": {
          "id": "e7e24d8a-723e-4472-93d4-f49a7b12ae5c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b9fbffbd-f095-4a56-98f7-1dd8ff014ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "785f39ab-5f8e-4958-b83d-9fe841dfc7d8",
        "cursor": {
          "ref": "3199003b-7e57-4d42-bf78-c028ae9f9b28",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "723ff8a9-1288-4ef0-8317-02fc61634f0e"
        },
        "item": {
          "id": "785f39ab-5f8e-4958-b83d-9fe841dfc7d8",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "35e74558-524c-4b72-9693-91d02b9c6c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc71d279-4554-49af-b736-3921fe4df2ef",
        "cursor": {
          "ref": "f598519f-a66f-45dc-b535-d098ef66b655",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "cbff9563-2475-4da1-88d8-2bf46385757e"
        },
        "item": {
          "id": "bc71d279-4554-49af-b736-3921fe4df2ef",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "95d6927d-e99a-49ae-a7fc-9b2797e17161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e64cf8-f52e-4bd7-bc3d-3a8036f0351b",
        "cursor": {
          "ref": "9d750d56-f178-4054-b8a1-805eed07e5f3",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f9c94263-e99f-4b5d-8bbe-56b022dae3e1"
        },
        "item": {
          "id": "07e64cf8-f52e-4bd7-bc3d-3a8036f0351b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "817bd88c-6877-4777-9ef3-76ef9a68f846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5bd294-30d6-4261-9e46-95ad0e72abf9",
        "cursor": {
          "ref": "2260ee67-c70e-4456-8fdc-c1462c4e4a34",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "c6342f94-ef45-4b95-a656-be2d56bfe473"
        },
        "item": {
          "id": "ba5bd294-30d6-4261-9e46-95ad0e72abf9",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "486a62e5-e11f-4fd2-bf4a-e4b7e99f4c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8803fb3d-a6bd-4b0f-97b1-4d23ddc15ee8",
        "cursor": {
          "ref": "031807c2-eab0-43b5-b2f8-5479ae3ccb7a",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9596f581-d2be-4d3e-b18a-2d382d059f81"
        },
        "item": {
          "id": "8803fb3d-a6bd-4b0f-97b1-4d23ddc15ee8",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c9f3df74-99df-47cb-8f00-b5403671b8e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb49f1ed-52be-43f5-9624-d592165d5f5a",
        "cursor": {
          "ref": "1b7fc2e8-beeb-46af-b2a4-5de2e1625fc7",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "34befea4-e0f7-4203-ac94-62ccce7da7ae"
        },
        "item": {
          "id": "bb49f1ed-52be-43f5-9624-d592165d5f5a",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "8d4bc923-a7bf-4e1e-b315-490cf2a0bb74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35451e41-cf47-4f3f-bc29-21232baf627f",
        "cursor": {
          "ref": "f570196c-adc1-43e7-a99f-661594b750c4",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c638203f-f584-4f8d-9cdb-9efd67ff71b0"
        },
        "item": {
          "id": "35451e41-cf47-4f3f-bc29-21232baf627f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "7ad10971-f363-44b1-9813-bc27391c226d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f624805-19d7-426a-b997-f54b4edfcc9f",
        "cursor": {
          "ref": "3e80ddc7-1359-4404-8622-df120dfdb35c",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "7cf5d38c-d56d-4e9b-89af-e32a8b4177eb"
        },
        "item": {
          "id": "4f624805-19d7-426a-b997-f54b4edfcc9f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2d6a4ee6-df73-47b2-8e01-07e148dbee2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85244ec2-b9f2-42cd-97ee-8e7ed0e062c6",
        "cursor": {
          "ref": "ba138b7d-f6d2-4840-a588-44b5e3bd9a6d",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "be3f7f88-fa5c-45f3-8278-fcd5261fb0c3"
        },
        "item": {
          "id": "85244ec2-b9f2-42cd-97ee-8e7ed0e062c6",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "195c69d8-85ce-4ece-9bd8-af32c7219034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f762ec-d066-484b-a3d9-a2df4e6c6a6d",
        "cursor": {
          "ref": "e7b39461-bdc9-483e-bbae-747245d539d5",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "3de8d97a-f0ef-40d1-8252-058e11a1fd21"
        },
        "item": {
          "id": "76f762ec-d066-484b-a3d9-a2df4e6c6a6d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b26bdbd3-5986-4439-8a83-487eac2ef4e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "062de65c-4f78-4b62-bb96-f86a5fa90211",
        "cursor": {
          "ref": "edf4a94f-c547-4c48-a655-39ba61fdce79",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c2e547fe-6363-45eb-af17-ca4c85da91ed"
        },
        "item": {
          "id": "062de65c-4f78-4b62-bb96-f86a5fa90211",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a47e85eb-03ff-413e-ae0c-8404a887f0ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22690f25-13ac-49f5-b4bb-2210f1d6b791",
        "cursor": {
          "ref": "7da49b15-5a23-482e-a33d-d26e0f22d4b5",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a80b1e82-91dc-42d8-93aa-cef2b070854f"
        },
        "item": {
          "id": "22690f25-13ac-49f5-b4bb-2210f1d6b791",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "497f9019-eddd-4dce-9f74-30aba221aebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8fb3ede-d0a8-4ddf-a3c1-96bf417f3246",
        "cursor": {
          "ref": "8abec800-f905-4deb-9d10-cb470a22b080",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "9ec0b399-4992-4884-867c-0b0eaca9322b"
        },
        "item": {
          "id": "d8fb3ede-d0a8-4ddf-a3c1-96bf417f3246",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "0b69f8c2-5329-4b95-b826-e8c13927c5e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1fcd0f2-3c4d-47ba-9d1b-bc926ea1ed6e",
        "cursor": {
          "ref": "8795dc46-0275-4289-967c-4d57ba0afd45",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1b72a2dc-794f-4c7b-8284-5060953409e9"
        },
        "item": {
          "id": "b1fcd0f2-3c4d-47ba-9d1b-bc926ea1ed6e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f4b3b76b-7553-411f-8ee8-2ce0eecd66d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f5c111-0f07-4208-838f-80485997fed2",
        "cursor": {
          "ref": "ab1b5885-f796-4eca-ab64-5637d4b48c28",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "69664767-bd64-4c8a-adbf-6c8668658f7e"
        },
        "item": {
          "id": "37f5c111-0f07-4208-838f-80485997fed2",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "55adeec0-30b3-452c-acdf-bfa01f523fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c4c860b-4e08-4d64-ba8c-8627d7dee06f",
        "cursor": {
          "ref": "876fec97-0993-4633-a705-b58e62f59d72",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3629e29f-5eec-479f-98a7-fe48183ea462"
        },
        "item": {
          "id": "1c4c860b-4e08-4d64-ba8c-8627d7dee06f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "1cfd036c-6b1f-4e80-809c-4c3fa1c62b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c439c1-5769-4327-8922-258e7c717281",
        "cursor": {
          "ref": "152b49a0-c2b2-4fc4-b477-ce483a5df7b7",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "50bb7d51-d222-4c71-9b91-9fbfe4b31d81"
        },
        "item": {
          "id": "f2c439c1-5769-4327-8922-258e7c717281",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "08fbcc3c-4979-4501-aec0-e4c97eea2ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8b79d8-5e10-40a4-b3af-9b2804b2a043",
        "cursor": {
          "ref": "36c7c339-2255-40e3-8742-87d662465fff",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "9280fdef-a7ed-43a5-8dfb-4c14675bde0d"
        },
        "item": {
          "id": "4c8b79d8-5e10-40a4-b3af-9b2804b2a043",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "000cb7c6-9e5a-40cd-bcb2-83e3b7bbbb75",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1278,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9fce4ee-7392-4a92-b9f0-76141d73fbb0",
        "cursor": {
          "ref": "2b2bf6ed-cd35-417d-985f-c1d83ea730d1",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "340c88b9-80ee-4fec-982d-335d8891cd4e"
        },
        "item": {
          "id": "d9fce4ee-7392-4a92-b9f0-76141d73fbb0",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "86f0fe6b-1699-4652-9c76-6edb0226cad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f273b6-ca69-41d5-8f85-dafbf8a384cc",
        "cursor": {
          "ref": "75371c9e-331c-4ef7-9276-349fc6993c6d",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8c2c0436-7b8f-4d3a-8f91-7dfa0d9b77d5"
        },
        "item": {
          "id": "73f273b6-ca69-41d5-8f85-dafbf8a384cc",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2491f105-b154-41ee-a6ca-43bdd31ddbec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8d692d-53c3-4edf-80b3-56629bf01a12",
        "cursor": {
          "ref": "01a690ca-cc87-4d7d-b0dd-e5a3f1c7d469",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ba9344c9-ef84-49e1-8bca-2b020c9047e4"
        },
        "item": {
          "id": "dd8d692d-53c3-4edf-80b3-56629bf01a12",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "992ef8c8-796c-4f5d-a3ae-574efdc857a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e445aa-c0c3-459c-ba2a-5fa59e279771",
        "cursor": {
          "ref": "f5624dc5-b8cd-43cd-a4e6-098073ae480a",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "2dac0953-7ed0-4a72-921d-d9a2cb7525bd"
        },
        "item": {
          "id": "f5e445aa-c0c3-459c-ba2a-5fa59e279771",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "5ce162ad-e743-42a7-9158-62d0110a9df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b96a6b-8ae6-4a7a-a37a-5991d3a992e8",
        "cursor": {
          "ref": "ce66b652-4b3c-404a-b8a0-f702ad2d04cb",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0400d1c9-4293-4c57-a28b-72322ab9161f"
        },
        "item": {
          "id": "43b96a6b-8ae6-4a7a-a37a-5991d3a992e8",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "39315170-3a71-4e96-8ea8-c4a14bc36c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d3e134-8f8e-4411-826e-d68a083033f8",
        "cursor": {
          "ref": "ab3db242-5ed5-4707-ad5e-5b0864356b7a",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a4b3954c-2ae9-4d7a-b741-accacf127e35"
        },
        "item": {
          "id": "56d3e134-8f8e-4411-826e-d68a083033f8",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c67292d7-03c6-420c-bb55-031ad3438fc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e938d58-e3d0-4ee5-a859-69d3632a0d14",
        "cursor": {
          "ref": "638873e9-9ac2-4410-8929-a00f0e0f667e",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "123717e7-35aa-4c46-bd6a-47d0067a646c"
        },
        "item": {
          "id": "3e938d58-e3d0-4ee5-a859-69d3632a0d14",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "4f75dbe8-aced-4f6a-b145-e9ce95c10b86",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1304,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb20423b-c1da-44ce-8032-acc5b94f1407",
        "cursor": {
          "ref": "a5eb07f4-fda1-4111-b3b6-239aa7d50290",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d765779b-34eb-4d84-aefb-2fdf4cd65c30"
        },
        "item": {
          "id": "eb20423b-c1da-44ce-8032-acc5b94f1407",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0850d5af-6609-4e0f-a94a-3451fe436bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5013d19c-caed-4e27-8868-fdc2f7c34c66",
        "cursor": {
          "ref": "ca8df64a-3979-4385-82cc-8790a1573ecc",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "20897e93-9e93-4ea5-8aef-dc577074fbb4"
        },
        "item": {
          "id": "5013d19c-caed-4e27-8868-fdc2f7c34c66",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "997c242a-64b2-42f2-8ec2-49598d0b67f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "920692d4-90da-4670-b8ef-38b12740370e",
        "cursor": {
          "ref": "bb04813f-2ff1-481f-b7f4-23ffb4dd4a06",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d397a9e9-114b-451f-b9d0-ce53497196f6"
        },
        "item": {
          "id": "920692d4-90da-4670-b8ef-38b12740370e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "164be583-4a50-4395-9de3-30961de9b008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfec7f51-dbd3-48ec-920b-f21cdf9ec055",
        "cursor": {
          "ref": "d8ae36b3-2216-4305-8612-07dacde4386e",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "37bddc8a-df0f-4479-bf91-f0b51982cabb"
        },
        "item": {
          "id": "bfec7f51-dbd3-48ec-920b-f21cdf9ec055",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "619acd18-6c90-4a3b-9b05-e8746a94cf5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "170f9f25-6212-4a8b-bb58-6cb5ae7b8f2c",
        "cursor": {
          "ref": "4cc0e5ae-4f12-4677-9a9e-21d00b14f8a4",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "45b33243-c3cf-46b7-8471-000eebec93d4"
        },
        "item": {
          "id": "170f9f25-6212-4a8b-bb58-6cb5ae7b8f2c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "00dccc74-bbfc-465e-ba12-82eec20c4fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd6bed1-10ac-4e3f-bea4-0a8f58d24008",
        "cursor": {
          "ref": "565a31c5-f05c-40a7-80dc-f3cc10e1ce9a",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "37ce4c74-19c8-4eeb-8e54-8f2d1e930605"
        },
        "item": {
          "id": "6dd6bed1-10ac-4e3f-bea4-0a8f58d24008",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5d50630e-db71-4ac2-bb7c-be855b9d9108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb5057e-97f4-4606-b7bd-74b8663b3413",
        "cursor": {
          "ref": "d117cc2c-5708-4a06-8199-388065b424bf",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5fa2a455-0471-4c26-9b3f-1faa7cee7618"
        },
        "item": {
          "id": "eeb5057e-97f4-4606-b7bd-74b8663b3413",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "60c1f45b-5365-49a6-9f01-109def644125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee45a3f-2307-4bb2-b8f6-ab149b681081",
        "cursor": {
          "ref": "d85de555-e520-49d0-80d2-1fefa4f0009b",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c6b5da39-3e20-4212-ba9b-1aec89d1b6d2"
        },
        "item": {
          "id": "fee45a3f-2307-4bb2-b8f6-ab149b681081",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "07580df6-14f6-4d76-b28f-050a75e591bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20bc4007-d3bc-444f-802f-b21175660126",
        "cursor": {
          "ref": "dd080c8d-ad06-4fa1-960f-a1c415fd1bf8",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "67bbde62-49f4-4add-bf5b-cf3ae1ccca99"
        },
        "item": {
          "id": "20bc4007-d3bc-444f-802f-b21175660126",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "35696f98-6ace-4f72-a25c-246e44d308bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ba8593-374e-4ece-b15b-754df622b9c7",
        "cursor": {
          "ref": "4ced52c5-37d0-4cdf-9868-7498ab4b87d5",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "dc11b5e8-b108-4f1c-ae83-4d5404958f14"
        },
        "item": {
          "id": "33ba8593-374e-4ece-b15b-754df622b9c7",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9c6fbcd5-659e-4dd3-ac53-88771eaa68bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d199db2-ba62-48ff-ac3b-d81e34f8c19c",
        "cursor": {
          "ref": "809d6e7d-aa58-4ee5-aa1c-497df5279491",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c7f1cecf-ffa2-491f-a677-8fa7cb5b8123"
        },
        "item": {
          "id": "5d199db2-ba62-48ff-ac3b-d81e34f8c19c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ddaa9d55-fb8c-41c1-bf4b-d9cf2db08f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0404f5-37de-4316-9ebc-6d9e7afedae1",
        "cursor": {
          "ref": "dc224136-c651-478b-99bf-9d83fa10b5b7",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "941f861a-9602-4a2b-881e-5cc08d9d58b3"
        },
        "item": {
          "id": "ed0404f5-37de-4316-9ebc-6d9e7afedae1",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e1a2dbc0-8ea5-4693-b57d-032c2795f4a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501834bb-301e-4dca-b723-cb1fb31509c8",
        "cursor": {
          "ref": "56d7baf0-dfcd-4a5c-abcb-3d2b1e367750",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8b700fe0-183f-4c62-90fc-f2f2d3da33cf"
        },
        "item": {
          "id": "501834bb-301e-4dca-b723-cb1fb31509c8",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "da5dc977-4466-4ab6-b8bd-42839589fcff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f0faf4-a7c8-4b02-869c-751103461ad9",
        "cursor": {
          "ref": "8349c0c0-c2a9-4cb8-80d6-bc05a934ba37",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9f6c659a-78ab-4786-88ef-16480ffc5621"
        },
        "item": {
          "id": "47f0faf4-a7c8-4b02-869c-751103461ad9",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e9c0dbc7-cb5f-42d5-a730-a078a0fc579d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d323dc2d-ada7-47d0-9fa6-5b22dd8ec76a",
        "cursor": {
          "ref": "2aede921-d9f5-4b8c-b186-aa06db53cef2",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "df0414ae-65a4-4c03-bc94-df1accf17c30"
        },
        "item": {
          "id": "d323dc2d-ada7-47d0-9fa6-5b22dd8ec76a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "56769a9d-99e8-49e2-8dd5-36c07e0acd9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62eeae80-bccb-4cef-b47e-5b72c858f8d9",
        "cursor": {
          "ref": "6041e166-41ab-4a5a-97df-9fa8d25af96e",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f8d127a5-2e80-4586-8e3b-941633546883"
        },
        "item": {
          "id": "62eeae80-bccb-4cef-b47e-5b72c858f8d9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2ae2cd16-48a7-4151-b7af-8ca224290404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "196313a8-6a7e-4aac-8538-2ce0f8283d6e",
        "cursor": {
          "ref": "5f381724-f678-42cd-9aa6-34d56971959b",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ea35f449-b853-40e2-a4a2-b3c8a40369a9"
        },
        "item": {
          "id": "196313a8-6a7e-4aac-8538-2ce0f8283d6e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "75f35235-e3a7-44bf-9a55-b980b56f16fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95741861-6db0-470e-9055-51dd14c8afa6",
        "cursor": {
          "ref": "ef7fa3ab-7c5f-4d00-969a-5fd91ecb9a71",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "707470fb-efe6-48ca-b4b2-087932f4150c"
        },
        "item": {
          "id": "95741861-6db0-470e-9055-51dd14c8afa6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "8a25ec91-95f7-4928-affb-d7293db84181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7237ec0e-c460-45d5-9847-b7c219dab6d3",
        "cursor": {
          "ref": "3eb3a713-3f95-47fd-babc-47f64584acf4",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "010c56ab-9e48-4c05-8344-041d283b8a98"
        },
        "item": {
          "id": "7237ec0e-c460-45d5-9847-b7c219dab6d3",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d1f05bdc-ed3a-4437-be05-edb5e0b776a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8e41a4-ccec-490b-af0a-e0d849618365",
        "cursor": {
          "ref": "5b70e438-0581-4ebb-9ecb-93c832503050",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6b64a8f0-1fcd-44a3-854e-3b3b4bc2a624"
        },
        "item": {
          "id": "2d8e41a4-ccec-490b-af0a-e0d849618365",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e5fc0430-88cd-42b0-af42-9fd27d1288ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6003904f-5a0f-4f4f-b43b-5d9168454681",
        "cursor": {
          "ref": "3ab2f71f-f112-4c28-88f9-87f71f157d32",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ef19697a-4d39-4df1-a701-fa7b43990d3e"
        },
        "item": {
          "id": "6003904f-5a0f-4f4f-b43b-5d9168454681",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "914a4039-a341-4138-bed0-2832e584757d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db69fe16-6f44-4322-bf4b-4d856e1f6653",
        "cursor": {
          "ref": "ce5d2d74-8d68-4967-a225-f660cd6b7e2f",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "61d7a588-ad25-4421-bc3a-164721cdd90a"
        },
        "item": {
          "id": "db69fe16-6f44-4322-bf4b-4d856e1f6653",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c6c55328-bae9-4a7d-ad63-ad58d910cef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f799568-00f6-4949-a231-89ec7ec366b3",
        "cursor": {
          "ref": "d3d84f25-c1c6-43fb-ac65-e54c4ad28f82",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ffb191fe-79a7-4c75-bd34-92eb4dacf5a5"
        },
        "item": {
          "id": "5f799568-00f6-4949-a231-89ec7ec366b3",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "cc2d89f0-c9eb-474f-a7ea-21d4ba509bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217b53bf-363b-4f05-9652-c9c0ea7738e4",
        "cursor": {
          "ref": "d936bc3c-8bc8-40d3-95af-72a0e8e4b84b",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "25cfe582-3e4b-427b-99f2-bcef30118ac0"
        },
        "item": {
          "id": "217b53bf-363b-4f05-9652-c9c0ea7738e4",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "0e653cea-153b-4983-9f0f-8673e9ecd3c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae02aba8-8516-4a86-b248-cd44bf87204e",
        "cursor": {
          "ref": "3cf0e218-ba76-4bf0-bbbd-250111490eb4",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c0b0f6d2-7599-4599-a807-0bbca4837da4"
        },
        "item": {
          "id": "ae02aba8-8516-4a86-b248-cd44bf87204e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5ca364d8-1e0c-4938-b7f0-aee48407806b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d52d18-f8aa-4acc-a34f-2c41524ad4cc",
        "cursor": {
          "ref": "671c5878-2b9f-4e16-8be5-f3dd8a24a72c",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "93b10a9d-d4f7-4e9b-a7aa-a738482d7329"
        },
        "item": {
          "id": "71d52d18-f8aa-4acc-a34f-2c41524ad4cc",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f95750ea-1696-4fe5-a9ee-a442a789feb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32337f15-42eb-4c2c-8a91-b4b1ad22dd09",
        "cursor": {
          "ref": "bbfbe3da-4bf6-4ffc-a2a5-6d009e909ab4",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "74acab0e-d2db-49fc-b255-97f9115bcaf7"
        },
        "item": {
          "id": "32337f15-42eb-4c2c-8a91-b4b1ad22dd09",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "081156c1-3e6d-4dac-8e90-7c146a450395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7c4872-cdc5-47da-b6df-9d17f0919e77",
        "cursor": {
          "ref": "a4d196a4-f0d9-46c9-9c8a-001db8600a40",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "502da020-f2c0-4c77-abc2-999a92811663"
        },
        "item": {
          "id": "6d7c4872-cdc5-47da-b6df-9d17f0919e77",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "cb424fdd-ce89-4619-aa07-79c7a4f2d633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a0e20d1-00d5-454c-b56e-857a6c732704",
        "cursor": {
          "ref": "6f9a7eb9-2e8f-4695-8f23-94e4890a1052",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "540d39fd-ce22-4525-939e-6a5c0c7bcc66"
        },
        "item": {
          "id": "5a0e20d1-00d5-454c-b56e-857a6c732704",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "9a093fc4-8444-446e-a827-ad19d1282f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30885fbd-23e9-49e7-b778-a50782ed41c7",
        "cursor": {
          "ref": "50de0b1a-56e9-4a16-a9d1-c318e269abb3",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "8732f145-d29b-4bb0-baa0-ad28d97d0061"
        },
        "item": {
          "id": "30885fbd-23e9-49e7-b778-a50782ed41c7",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "940f7dd3-79d9-467a-97e0-241610db1bf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "018a441a-a91c-4b46-8dad-d19eac761d3c",
        "cursor": {
          "ref": "de543391-6659-469f-93ac-48e4013c5ff4",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6a32798a-4b06-44c4-a63b-40c780470cca"
        },
        "item": {
          "id": "018a441a-a91c-4b46-8dad-d19eac761d3c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "7f5978cc-0e4e-4115-82c6-b9bcbeeb75ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "227d44e3-6323-4a96-831e-651bfb6394db",
        "cursor": {
          "ref": "000fa6f9-1a2d-4309-98d6-11e005c7305f",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "29c80ee1-b14a-482e-add9-90420a4fb98e"
        },
        "item": {
          "id": "227d44e3-6323-4a96-831e-651bfb6394db",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "cc9606c8-b51d-4732-99ba-4b96bc19b1c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d28f79c-111d-4136-9793-e043b339b2fa",
        "cursor": {
          "ref": "2da65708-e018-4847-9fc4-9a45b02a91b1",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "3bb352c1-c663-4799-9057-1728eebb603b"
        },
        "item": {
          "id": "5d28f79c-111d-4136-9793-e043b339b2fa",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "8cad9e1f-00db-40bf-8a4a-e5a7272db4ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fcc0f1c-b656-4ff8-8774-b6efdc835254",
        "cursor": {
          "ref": "2b836f23-1f66-4fc1-b166-fdd0f35d4a92",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0abbcdaa-2132-44b2-9b28-564d5ec46d76"
        },
        "item": {
          "id": "4fcc0f1c-b656-4ff8-8774-b6efdc835254",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a2ba0989-b294-4c0d-a1ab-7c5bd8af2430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79fd9775-a201-45d8-83c2-9c46d211f4d9",
        "cursor": {
          "ref": "305463f4-7eab-4a40-88d1-d3da4ec054e7",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "2ba1c8d3-fc9f-4c9d-8f37-2f876f831d12"
        },
        "item": {
          "id": "79fd9775-a201-45d8-83c2-9c46d211f4d9",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e98de25a-f4e5-4a85-beba-ea064f99fd99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f542e22f-651b-481f-ba94-4124ebd4f1cf",
        "cursor": {
          "ref": "00ba31d5-b769-4bfa-9ea5-185f4c72b7b7",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "91dd4b3a-8223-4bd9-bb3c-bef467940cab"
        },
        "item": {
          "id": "f542e22f-651b-481f-ba94-4124ebd4f1cf",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "7864563a-6f70-4176-981d-43a871d1853e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602e97bd-ab2b-4886-b99d-a65ff22a2cf5",
        "cursor": {
          "ref": "43d22054-f6de-47d1-a7d3-bb8434ef7117",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3be4b2f0-c577-4896-a245-ba6cbf7467d8"
        },
        "item": {
          "id": "602e97bd-ab2b-4886-b99d-a65ff22a2cf5",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "8d8789e9-bec6-40a4-bb5c-9a57cade1bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae1fbadd-d897-426b-a0d8-1ad610225147",
        "cursor": {
          "ref": "4f0aa328-1ff4-4cb1-a5f8-18bd2353c40a",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f3e2b674-9969-474b-88d7-b62c25f71d3d"
        },
        "item": {
          "id": "ae1fbadd-d897-426b-a0d8-1ad610225147",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "9c3f2d59-dc67-4128-a3af-c68c997da864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62d25e6-3689-4d68-ad20-9a7d13f14403",
        "cursor": {
          "ref": "e5e1a5dc-5fe6-4cac-8f1b-ecf64b73c994",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c18b7ca9-660d-4f66-b29d-9f19be3b9ebf"
        },
        "item": {
          "id": "f62d25e6-3689-4d68-ad20-9a7d13f14403",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "4009e6a3-6bca-44ca-90ea-a633db1c716e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "debf9bed-5962-4ada-bf33-20ce3ce320a1",
        "cursor": {
          "ref": "5cc8559f-e842-43f7-8fe9-2e0e2e92b53b",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f5e9fe31-29b7-41b3-9bda-a867ab83d6db"
        },
        "item": {
          "id": "debf9bed-5962-4ada-bf33-20ce3ce320a1",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "bc8a305a-861c-4598-a482-3e6be1d11d3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d75080e8-7045-4972-b7d3-e25305d0eab2",
        "cursor": {
          "ref": "e3793127-c42b-414f-b22e-0928be18e71f",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "2dc47cff-a8f1-4e4d-b523-9686d4b9f999"
        },
        "item": {
          "id": "d75080e8-7045-4972-b7d3-e25305d0eab2",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "47700b2a-a542-48b6-a939-ddd6b14a232b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fbbfda1-103f-4584-9047-48583879f86e",
        "cursor": {
          "ref": "a6e17520-2755-4466-bd4a-fb80b821ef7a",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "602b1774-2522-48a8-8575-76d84c76079e"
        },
        "item": {
          "id": "5fbbfda1-103f-4584-9047-48583879f86e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "1de668c0-9711-4777-b655-f6b4b098b380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a70201f3-b273-4b4c-a8f7-7b341ec579e0",
        "cursor": {
          "ref": "81e06ada-2364-4b11-b7cb-688a1380398e",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "b639dcbf-4048-4aa6-b69d-800c769741f9"
        },
        "item": {
          "id": "a70201f3-b273-4b4c-a8f7-7b341ec579e0",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "12032cd5-4d7b-42cd-b2f7-e87507f4f80e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff18a427-71c8-432a-acc1-076c8a612cca",
        "cursor": {
          "ref": "a7d97d0a-15f6-41d4-8863-38088baa740f",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "4deaeac8-3b6f-494a-bd8f-2b72a08d51e6"
        },
        "item": {
          "id": "ff18a427-71c8-432a-acc1-076c8a612cca",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c64bc766-42a7-4f75-86f0-b8f7cbd44562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4157169a-8cd2-4975-bd1b-2ba16c3d3f3c",
        "cursor": {
          "ref": "7836f639-fb07-484e-828a-1849e8c31be3",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "eb09ab28-a7b4-42d8-82e9-407f889a065a"
        },
        "item": {
          "id": "4157169a-8cd2-4975-bd1b-2ba16c3d3f3c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "fd78a931-5bd8-4ce4-9e56-eddaada65bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f22f58-7486-485c-b0f8-8a8fa60fe758",
        "cursor": {
          "ref": "a4ea2ad3-7e11-4daa-9b02-cc79dfcfd97d",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ef2c855d-579b-430d-ba61-77a28c79310a"
        },
        "item": {
          "id": "c4f22f58-7486-485c-b0f8-8a8fa60fe758",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "3fdee5db-8b51-423c-9910-b3c3f28d6340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd4bfbf-8828-4176-9b38-2782a1f847ad",
        "cursor": {
          "ref": "d5ae416d-f820-4a48-a540-50b44f84f17a",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0263fe46-7c36-411d-bec0-0168fa5e0123"
        },
        "item": {
          "id": "ffd4bfbf-8828-4176-9b38-2782a1f847ad",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "07af5fb8-375a-4fe5-ab8c-a57e84f4c103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf0d6fe-2b4b-4afd-8e5b-036e15bea18b",
        "cursor": {
          "ref": "57f7436e-4db3-4139-97da-e4bfc38ed265",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "9d942f69-64a9-462a-b89b-f11d6822b9e8"
        },
        "item": {
          "id": "cdf0d6fe-2b4b-4afd-8e5b-036e15bea18b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b966ad50-49c0-4e9b-a97d-f835fcaf6dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08628764-08ad-46e2-8e15-7198b3b2d86c",
        "cursor": {
          "ref": "841698b5-e2c5-45f4-a8de-a4c4a6d95176",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "aa6f2247-57bd-4976-8795-13692bf9724f"
        },
        "item": {
          "id": "08628764-08ad-46e2-8e15-7198b3b2d86c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5a449af3-44e9-4cd3-8c02-6d1b72036c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0004cd82-077d-43b3-a397-00678a5e62f8",
        "cursor": {
          "ref": "84ec1db7-378a-437d-91e5-e9bb738d1ad0",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b9c6bd64-e695-48ea-a9e5-25ceeabddd55"
        },
        "item": {
          "id": "0004cd82-077d-43b3-a397-00678a5e62f8",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "e091a2f4-c228-4ba2-bb4a-8adb603a3e0c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37df51d-8a50-49c6-b982-1f304434e391",
        "cursor": {
          "ref": "8d3c8fa8-d264-4325-9e19-c12c4f955872",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "cea4a1bc-2bf9-49d9-bf68-b24d178bf022"
        },
        "item": {
          "id": "b37df51d-8a50-49c6-b982-1f304434e391",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "26204de7-33e0-48db-a7c4-113ecad8e377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "2428d9c6-a660-4217-94bd-07fef0b22167",
        "cursor": {
          "ref": "d3b79b9e-b0c8-4ad8-8912-d53cef9a4f1f",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "44969e95-209e-4888-b39e-7bb905a41ba3"
        },
        "item": {
          "id": "2428d9c6-a660-4217-94bd-07fef0b22167",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b4aca2aa-b253-413c-b0a1-319b1141b035",
          "status": "Created",
          "code": 201,
          "responseTime": 7877,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "42320479-c75a-4b86-a662-2307106f1270",
        "cursor": {
          "ref": "c9745ac7-2ad0-43f5-9c38-e66aa7cf0566",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c3a4deba-dbb7-44c8-9961-058f5970dfcd"
        },
        "item": {
          "id": "42320479-c75a-4b86-a662-2307106f1270",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "37ae507d-27ea-46d8-a078-97fb9164d3b2",
          "status": "Created",
          "code": 201,
          "responseTime": 7477,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf2318a5-e445-4993-a0fd-12a2fe93933b",
        "cursor": {
          "ref": "9f2925d2-e72b-45ad-830a-3abe24f4a2e0",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f6f25430-64e2-4813-b6eb-88d8afc5278d"
        },
        "item": {
          "id": "bf2318a5-e445-4993-a0fd-12a2fe93933b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a20b8baa-2919-47ae-89b8-a165217bb368",
          "status": "Created",
          "code": 201,
          "responseTime": 7937,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bed4a23-9fa4-46a9-99f9-df516ba8e3a5",
        "cursor": {
          "ref": "624cc903-5892-4cc7-9655-cec5b8318ea6",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "be77656f-e6e7-4f3b-8e4c-d2e3488deba3"
        },
        "item": {
          "id": "4bed4a23-9fa4-46a9-99f9-df516ba8e3a5",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c7e0652d-67f5-4924-9d05-080cd86077ec",
          "status": "Created",
          "code": 201,
          "responseTime": 7713,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d249e6-70e5-44a8-9f6d-ef523572e464",
        "cursor": {
          "ref": "a4665f56-039d-48b7-b151-692945516d72",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "0b060e22-047a-4d04-8a03-d8656bbbb565"
        },
        "item": {
          "id": "f9d249e6-70e5-44a8-9f6d-ef523572e464",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "344e9869-89ad-4668-8023-16f9ae0c9d17",
          "status": "Created",
          "code": 201,
          "responseTime": 8109,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe24fe3a-4c99-47d1-878c-d84624cb23bc",
        "cursor": {
          "ref": "d916ad99-b32b-4602-b205-4578d60eaa46",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d6464e30-2a47-4e92-95c8-d467ced1784e"
        },
        "item": {
          "id": "fe24fe3a-4c99-47d1-878c-d84624cb23bc",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d8f1e05b-fcc8-4f27-a750-2a6a81909787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "d88f9684-d0bc-4d38-a1fa-0e6a75b78db2",
        "cursor": {
          "ref": "c6ff0383-eef8-40bb-b3eb-96c95ee98010",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "9795fae3-a14b-462e-9241-a7349d780d91"
        },
        "item": {
          "id": "d88f9684-d0bc-4d38-a1fa-0e6a75b78db2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "71493ea2-5473-4042-b083-7ff2dc801dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056793b4-cd55-4ef4-815c-2f14c3da1341",
        "cursor": {
          "ref": "bb162f7a-8635-4bea-952a-b784e9965c9a",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0df018ef-ec9a-462e-864b-9294fee8d896"
        },
        "item": {
          "id": "056793b4-cd55-4ef4-815c-2f14c3da1341",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "13c4a1dd-b9d3-4603-9fa6-a938d33e94e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52df2f17-7fd9-4247-8f11-a91ddfcd4c32",
        "cursor": {
          "ref": "f7110a9f-6505-439a-a5f4-ac10b680cfc2",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "3729e6c2-74f5-4a8c-a1fb-4ed4566c2919"
        },
        "item": {
          "id": "52df2f17-7fd9-4247-8f11-a91ddfcd4c32",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "fc59322b-c31d-4e2f-b26f-6a64bcc882c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc5884ef-e288-461c-855b-42e65ce31b93",
        "cursor": {
          "ref": "4250bd6d-3aba-4c06-adba-663a6454eb9a",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "217dafad-be5a-4c0d-95d9-785574253ec8"
        },
        "item": {
          "id": "bc5884ef-e288-461c-855b-42e65ce31b93",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8bd07e9c-7a6a-43c5-81ba-450cdc9ce744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb7c29f-0bde-49ca-8e24-f81f13bcdc29",
        "cursor": {
          "ref": "c9ca8568-2658-40eb-a107-f1adb74c6341",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "8c4b4cfe-d0e9-4286-a75e-1742f2c04a4e"
        },
        "item": {
          "id": "abb7c29f-0bde-49ca-8e24-f81f13bcdc29",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "58ac2471-a512-4fc3-af17-976378ff4978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cceb394-e7e3-4eec-8dad-bd9cada74bfd",
        "cursor": {
          "ref": "e1f45f87-b730-4729-b48e-bef3c9c65981",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "54e76f4b-aaeb-4918-b08f-c554e21899cf"
        },
        "item": {
          "id": "0cceb394-e7e3-4eec-8dad-bd9cada74bfd",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3ca225a5-2f8a-42e3-aa81-e50053fd9596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0540c37-a81f-4fcb-8ad0-346f44727eca",
        "cursor": {
          "ref": "57ff65ca-1112-4035-8eea-db3134cf4610",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ebeaa272-41c4-4865-99d4-369fd8337e63"
        },
        "item": {
          "id": "b0540c37-a81f-4fcb-8ad0-346f44727eca",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "39760cac-25d2-4be2-9006-035bbb797153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa193861-16cc-4b46-9c25-6d42e0315211",
        "cursor": {
          "ref": "1ba869c6-a75f-4c41-898a-9c100a402d7b",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c4d6b380-d4b8-4c6b-a303-1a1947b3b6ec"
        },
        "item": {
          "id": "aa193861-16cc-4b46-9c25-6d42e0315211",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4d40543a-79d5-477a-a273-3e0d042c3837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a87fac2-28bb-4f06-9ac9-d5e3caa230eb",
        "cursor": {
          "ref": "a93e4f30-6622-48ac-a998-f1f71a098120",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "4d3b7c60-889d-4f32-9ced-e50745d2f6c9"
        },
        "item": {
          "id": "7a87fac2-28bb-4f06-9ac9-d5e3caa230eb",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "188b8da8-3add-4954-9e26-1bed5c370f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2cc5746-13cf-4c85-8335-43519c2bbc01",
        "cursor": {
          "ref": "35bc30c4-1885-4c72-8a04-7ea51743ee19",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e594806a-9ad9-4e3c-85a6-e4cfb9eea0f9"
        },
        "item": {
          "id": "b2cc5746-13cf-4c85-8335-43519c2bbc01",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d39feedc-c48b-447d-87b0-243d638012fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a978aa-18e7-4d20-8148-91c782aee2df",
        "cursor": {
          "ref": "4fde3344-5aea-4289-9d63-8557d4ff6d8e",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "bb2288fe-1e2f-40b7-be7e-4d01f8b9ceb5"
        },
        "item": {
          "id": "c3a978aa-18e7-4d20-8148-91c782aee2df",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d7ea454f-ec97-4685-97c0-7ea478480b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e93eca30-4e4c-4125-9fa4-2804fbe179f7",
        "cursor": {
          "ref": "e9c4f6ef-1411-404d-9557-366b75b02615",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "6f951976-67db-4c00-88be-3b81eca8df11"
        },
        "item": {
          "id": "e93eca30-4e4c-4125-9fa4-2804fbe179f7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "85b3d897-f7ec-45b6-bcaf-a2fbf0dffb7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4547e018-d70d-447f-b795-bae6ddac21b1",
        "cursor": {
          "ref": "9591a994-694a-4c91-9818-232893c16618",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "9c3e2201-01e5-42ba-a554-1255e2f319a6"
        },
        "item": {
          "id": "4547e018-d70d-447f-b795-bae6ddac21b1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c1ceb15e-0897-452f-8ca5-d0391494774f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807f82ee-54c3-4748-9f26-ca9a2c7394fe",
        "cursor": {
          "ref": "10ec1463-b07b-4921-9fe1-61114054d7cb",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "5fb96f2a-9aac-43c7-9deb-abb018fd93e7"
        },
        "item": {
          "id": "807f82ee-54c3-4748-9f26-ca9a2c7394fe",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1b7d0283-0d59-45f7-8de1-c582cbd10f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1508775-12a5-4ec4-8301-92901b1db08b",
        "cursor": {
          "ref": "bd90e5e3-0485-4b4d-861b-e804f5a6932b",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1e276480-05d1-4266-957f-4f06665895f2"
        },
        "item": {
          "id": "d1508775-12a5-4ec4-8301-92901b1db08b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9e02bbd7-fd68-4dad-81a2-f6fa0c4efa41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7782a050-6e35-4b77-95a2-1e50d10037e8",
        "cursor": {
          "ref": "d274dbc3-af15-4b76-9346-1f4053887b7b",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "9b42a87b-7ca8-45d1-a15e-903de07f7672"
        },
        "item": {
          "id": "7782a050-6e35-4b77-95a2-1e50d10037e8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0fbe87ba-9576-4a6c-a9ff-2823f4f56776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e02a3c7f-1d9e-4e62-b6f8-feb481add677",
        "cursor": {
          "ref": "97b71e65-6f37-4964-8a37-2d31129db73f",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "074c6ccf-53d0-4362-9257-42cd581dc67e"
        },
        "item": {
          "id": "e02a3c7f-1d9e-4e62-b6f8-feb481add677",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "355863c0-ffe5-45c7-8608-36f6e23f8017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b1b4a1-5304-4e25-822e-888ccf87183f",
        "cursor": {
          "ref": "e1b12176-befa-4360-a4f5-08be87cef0ec",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "58c8d1ea-5191-4fb1-b140-f39ee9898e8c"
        },
        "item": {
          "id": "16b1b4a1-5304-4e25-822e-888ccf87183f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2c72246f-e47e-4e31-991f-992e3808b236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c39cf597-54ae-4322-8bea-bfad1436bb87",
        "cursor": {
          "ref": "e6f75e69-d75e-4a74-a07d-7ce30a854dd2",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3dab708d-4e5f-41f8-9458-51ca6d2198a4"
        },
        "item": {
          "id": "c39cf597-54ae-4322-8bea-bfad1436bb87",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "fe0be0e8-b035-4f9b-a26f-dafc4d9879ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "771e9843-e76a-4a60-87a0-b4615a790a79",
        "cursor": {
          "ref": "f0f22d2a-b33b-4ace-8628-8ef51e87f5c1",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "8bce5896-58fa-43dd-ac65-49753e41612b"
        },
        "item": {
          "id": "771e9843-e76a-4a60-87a0-b4615a790a79",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e3f00010-c7c2-4428-826f-94b5d7dec7c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a1c226-e247-423c-b807-064b09b956ec",
        "cursor": {
          "ref": "889cdd69-32f4-4190-901b-ed68b8997d47",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "fe5524df-1008-416b-adde-27f86827323c"
        },
        "item": {
          "id": "59a1c226-e247-423c-b807-064b09b956ec",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "65be2a94-25e1-4c68-aab0-1a30dd0c8cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa66c83-ff56-4269-a781-a15a05c838f2",
        "cursor": {
          "ref": "1da25bb4-d69d-4121-b6b5-08a27781445e",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "37cb02ce-4edf-43be-bba2-ce39d8016202"
        },
        "item": {
          "id": "caa66c83-ff56-4269-a781-a15a05c838f2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "0975e78d-77db-4e2b-9140-9a2a68b0f342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca194b8-d51a-4945-b1b8-45ffc1366ba7",
        "cursor": {
          "ref": "62e99d4b-d0e1-45d2-a66a-a17aea233680",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d84dc526-7f01-4b7f-ba59-b159892e7193"
        },
        "item": {
          "id": "0ca194b8-d51a-4945-b1b8-45ffc1366ba7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a637529a-0d0b-4bbd-a346-51d96d3b1a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f8b1ef-b656-442b-9354-2c5e33ce2f09",
        "cursor": {
          "ref": "df4e7678-8cc4-4e22-be12-952358f9a895",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1110e758-69ff-4033-bece-a2403072ef38"
        },
        "item": {
          "id": "f8f8b1ef-b656-442b-9354-2c5e33ce2f09",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c46a5148-58f0-47d0-96f8-94fae441832e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66941122-03f7-40fc-acbf-eb7a8309f32e",
        "cursor": {
          "ref": "0d31d86d-8343-47c0-ba14-36ab00533728",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "68948beb-fab2-4dbe-ad81-ec44552e8739"
        },
        "item": {
          "id": "66941122-03f7-40fc-acbf-eb7a8309f32e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "aacd63fd-b2e6-4853-8afc-0563962b0728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6690ed54-dda2-4871-aabf-4ed941f9c7e6",
        "cursor": {
          "ref": "0440e59d-bf2e-4d1c-ade4-60c70d996ebd",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d51d470b-6c9d-4026-a973-ab6e07f01e06"
        },
        "item": {
          "id": "6690ed54-dda2-4871-aabf-4ed941f9c7e6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d411c102-e985-46b6-8353-c1ee5bac85a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab34e63-597e-4b86-bd56-1204f759723c",
        "cursor": {
          "ref": "11df7a45-29a2-4006-a0ae-38aa87e4138f",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "042b1d7b-6703-48fc-afbe-fffb500786e7"
        },
        "item": {
          "id": "9ab34e63-597e-4b86-bd56-1204f759723c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "164c20c1-f6a5-4a9a-b4ad-dc12b31f5f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee6d5bd-0626-4574-b056-b340c424568c",
        "cursor": {
          "ref": "d59fe458-645a-405c-9c39-b8c6d9a01527",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "4bdf2563-1a12-460e-a8f7-1769966728d9"
        },
        "item": {
          "id": "aee6d5bd-0626-4574-b056-b340c424568c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4775680d-b64c-4a68-bc26-386b2629a8aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d568b6ec-fb51-40ad-960b-4b57912c78b7",
        "cursor": {
          "ref": "dc625a86-787a-4eaa-b6b6-c2c72cad7164",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2c369a18-6df6-44a4-b67e-041ae43b1135"
        },
        "item": {
          "id": "d568b6ec-fb51-40ad-960b-4b57912c78b7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "875d153d-eae1-41a5-a648-eb37d98a2bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8642206a-cad6-4e4d-bff8-8ff93a4f2d3a",
        "cursor": {
          "ref": "36cda15c-9114-42f4-9886-da096714bb6d",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f36e0f01-662b-4717-9611-28c9f3e4a685"
        },
        "item": {
          "id": "8642206a-cad6-4e4d-bff8-8ff93a4f2d3a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "21ff83d1-bcea-41b1-8114-81074b52fddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4279827a-33de-4c33-b639-4b098b1d5cca",
        "cursor": {
          "ref": "4478c4f3-3fa4-4918-aff0-2c5157cbddad",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b1cebbc8-548f-44c2-b530-b9bc52e02e4f"
        },
        "item": {
          "id": "4279827a-33de-4c33-b639-4b098b1d5cca",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ab715d1a-0af4-4205-a75d-840d5546aee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d899cb21-49e3-4890-8c1f-10ea5f50b807",
        "cursor": {
          "ref": "3737b1c3-f38a-4c42-96a6-bdf4fcbae543",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f7e427e4-41c1-4c42-98c5-c2f2ca23597d"
        },
        "item": {
          "id": "d899cb21-49e3-4890-8c1f-10ea5f50b807",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "5a372045-4fd9-4dbd-aaa1-b059afc7c489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e69042b-6444-4627-b288-91463c2c39cb",
        "cursor": {
          "ref": "27027654-7fd7-4e60-9d7c-5d70d5f67385",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "805b0809-6d4d-4828-8472-ba15c3573663"
        },
        "item": {
          "id": "1e69042b-6444-4627-b288-91463c2c39cb",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "204dc76d-4669-4914-b414-43329fdce43f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba6d170c-ce30-4185-9aa3-804ac8d83a9c",
        "cursor": {
          "ref": "9d83057d-ddcd-46ab-bdfb-744e28e28467",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "eeec806c-4493-418f-aaee-084bbac326c1"
        },
        "item": {
          "id": "ba6d170c-ce30-4185-9aa3-804ac8d83a9c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1d1f4394-cf30-4918-8585-97e3cd896822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab98ec5b-1eec-48f9-9b6a-922ac2124472",
        "cursor": {
          "ref": "f0de88ec-e133-4486-ad57-2087954c1f1d",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "15cf5330-d156-4929-a91f-e2691f410826"
        },
        "item": {
          "id": "ab98ec5b-1eec-48f9-9b6a-922ac2124472",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "cb787f01-de69-48a7-b6b2-935f3894e49d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb97f24-0f8b-442a-8f7a-6f4fae366520",
        "cursor": {
          "ref": "da5b18e7-d03f-4ecd-badc-35c67555fb3a",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "290802ae-e90f-41ed-92cd-2c853dcfc31b"
        },
        "item": {
          "id": "3bb97f24-0f8b-442a-8f7a-6f4fae366520",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "011eb070-2bf7-4fc2-8b52-12ce27bc8e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a95e76ba-9282-44d3-aa26-c70f8bbde260",
        "cursor": {
          "ref": "a8333fcc-5406-4ab5-9170-5931c2175c59",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "80679460-9085-44fa-b740-2fcced287909"
        },
        "item": {
          "id": "a95e76ba-9282-44d3-aa26-c70f8bbde260",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ccc874ed-6e1d-4f6b-89cd-d8b844197a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c909568a-75aa-4328-a185-fd026fe9742f",
        "cursor": {
          "ref": "709b6649-4b23-4620-a7b5-f16397ca5719",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b3d5811e-11ba-416d-90ad-6de11662355b"
        },
        "item": {
          "id": "c909568a-75aa-4328-a185-fd026fe9742f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9f48d57e-8385-4dbb-9aa7-56714b04d7f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d6a48c-ef19-4557-b287-a526bc0b527d",
        "cursor": {
          "ref": "4ffc9eb8-0d99-493f-8d25-c2ee4b349a00",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "0e5549aa-560e-4aa4-ac2f-0888f3b3d0de"
        },
        "item": {
          "id": "b2d6a48c-ef19-4557-b287-a526bc0b527d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "221e0597-5941-43e1-bd58-22ebf8d2a984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe0cbf3-2fbe-4e7a-98dd-e8e827f34d00",
        "cursor": {
          "ref": "dfb7b163-9e2a-4558-8c51-6b57464b833a",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "355050f2-2c0c-4df1-b521-ecd71103ae6f"
        },
        "item": {
          "id": "5fe0cbf3-2fbe-4e7a-98dd-e8e827f34d00",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ee891a6e-bfc5-45e6-b51d-3b67812b1612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a572aafa-3951-4f8f-96bf-71d80c836c43",
        "cursor": {
          "ref": "e885763f-cdee-42bc-8f75-7074e786ee04",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "2e406cdb-c219-4225-984f-7aba48164b15"
        },
        "item": {
          "id": "a572aafa-3951-4f8f-96bf-71d80c836c43",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9f788e3d-c0cc-43a3-9648-3c04c3fc2e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e2b09e-6ec1-4cfa-9160-1dc0f94ce3b2",
        "cursor": {
          "ref": "46027ffa-eb07-44c3-99fa-010d2ff1d32f",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "449497f0-84c7-4d82-8f9c-a811c96a6580"
        },
        "item": {
          "id": "65e2b09e-6ec1-4cfa-9160-1dc0f94ce3b2",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "21387104-500c-4437-b9a8-167e7fd91c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d3163a0-2281-445e-b4d0-009d81c9cd8e",
        "cursor": {
          "ref": "43c8bad9-3d3a-47bc-a341-d738945c24eb",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "cc2d3316-7dd8-4775-baa2-92d7bbaa129a"
        },
        "item": {
          "id": "5d3163a0-2281-445e-b4d0-009d81c9cd8e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e7f5da2f-f841-438b-aa04-d9c2b87aad06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf98e883-1bd6-4d7b-88ca-cd36bce1d312",
        "cursor": {
          "ref": "43e7c45f-0109-43e5-997e-00a00dfdbe83",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "4bea5986-2c73-478f-a88c-fb546fae4b06"
        },
        "item": {
          "id": "cf98e883-1bd6-4d7b-88ca-cd36bce1d312",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5006d122-abda-4397-8eac-4df8eac4dafe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d32ee07-74f6-4c31-9c35-a59ab0059b4d",
        "cursor": {
          "ref": "b299f030-a3a3-41a2-a594-5d770e43f1f4",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "fca23939-747e-4cdf-afd3-a95c4ac6114f"
        },
        "item": {
          "id": "2d32ee07-74f6-4c31-9c35-a59ab0059b4d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bae31d15-fc58-4bff-8f4a-5ca4a2c078c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c9b229-83e5-42bb-ba23-888fc0183c8a",
        "cursor": {
          "ref": "7d9c1c7d-037e-44af-8705-d2af94fb1fe4",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4137f2fc-3bcf-4713-bd14-d07781f0a182"
        },
        "item": {
          "id": "a4c9b229-83e5-42bb-ba23-888fc0183c8a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f1a9a6fa-3d82-4472-bcf9-371402f3fe78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e49260e9-35b2-4d87-bff9-0413c2c3e755",
        "cursor": {
          "ref": "334cb938-9024-48c7-bc5b-9f3e7930bb03",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d4e95d4b-8c16-40a0-88c4-a2f835c5b909"
        },
        "item": {
          "id": "e49260e9-35b2-4d87-bff9-0413c2c3e755",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1ed8d06b-5498-4aae-8eba-f58396b1a169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19130721-ea53-4a46-bedc-a113a7c9a972",
        "cursor": {
          "ref": "f7a09bd9-cb48-4e98-8d6f-acb717352c82",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5676c15f-ec9d-4cd6-a0b4-d047bfb9aa3e"
        },
        "item": {
          "id": "19130721-ea53-4a46-bedc-a113a7c9a972",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e1e67b6a-156c-40dd-a791-10c7f47c1ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0678750-55d4-4cb5-b154-26fe096f04cb",
        "cursor": {
          "ref": "694963df-a2b9-4e9a-aa72-85b3590e194f",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2e09dc16-0025-4060-a9d3-ee0df6fae050"
        },
        "item": {
          "id": "d0678750-55d4-4cb5-b154-26fe096f04cb",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "86bb2fb3-270a-4e6e-bbfe-2fc55a42421c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128de297-f1e8-4c6a-8937-4e15686740b2",
        "cursor": {
          "ref": "edaeef1a-5556-409f-bed5-44e9609b2656",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "34ed5c87-3546-4dc6-8eae-e2847476625a"
        },
        "item": {
          "id": "128de297-f1e8-4c6a-8937-4e15686740b2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6d601a7e-4273-4b11-8939-0000e12670d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "247ab44d-d8a3-4888-8831-483417653bbf",
        "cursor": {
          "ref": "87ef75d4-b1b0-497b-9bde-71a509eaa984",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "3836c1ea-2fa1-4970-907c-7a72fbfdffbc"
        },
        "item": {
          "id": "247ab44d-d8a3-4888-8831-483417653bbf",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d4a319b9-0440-4dea-88a4-8a6f8863a08c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c700115-6a16-4567-9b7b-732ea8ec83fc",
        "cursor": {
          "ref": "6fd9bc36-efa7-4823-8c69-8ce46f7bea07",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "69232796-d667-4e00-95ad-bcc47c0a38e4"
        },
        "item": {
          "id": "1c700115-6a16-4567-9b7b-732ea8ec83fc",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e9b7ed59-3103-4038-bee6-bca6da82cddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c9f0a4-d045-41cf-968d-b23cb5f014cd",
        "cursor": {
          "ref": "752f7b87-cc33-4eac-bcdf-477fd0bb78b5",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6e31fd7e-9218-4fe8-b5d1-baefd27b1f7e"
        },
        "item": {
          "id": "a2c9f0a4-d045-41cf-968d-b23cb5f014cd",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "07fb63df-33ec-4219-bce2-85b587d758e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9197877d-2f48-4d11-9d3c-c7c8b5e180ad",
        "cursor": {
          "ref": "11af5dcc-668d-48aa-a7f9-6006fbe30ebb",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "16b02e6e-c485-44bc-b493-33c346ce9c0a"
        },
        "item": {
          "id": "9197877d-2f48-4d11-9d3c-c7c8b5e180ad",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "11ae072f-c015-4423-87f8-69a08b77f00e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "484a3fb4-cf1f-436f-ba11-cbdb76297c61",
        "cursor": {
          "ref": "10cb40f2-ad01-4e46-8fb6-994f590a9fb0",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c7c572ef-ba98-417d-b91f-59844265f4ed"
        },
        "item": {
          "id": "484a3fb4-cf1f-436f-ba11-cbdb76297c61",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "bcb355c2-5c76-44ca-ac17-b996efd5a436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b81f8e-d684-4474-9c64-1b54028bcf6a",
        "cursor": {
          "ref": "6866c08d-0e54-4ebe-ae28-e41ce5e98d7b",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3f285014-ff50-4bb1-96b3-caabd0597b7c"
        },
        "item": {
          "id": "59b81f8e-d684-4474-9c64-1b54028bcf6a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "856f1e3c-a49b-44c9-b1a2-a2f942c36377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a78b3a4-0631-466c-ade0-ba700364535d",
        "cursor": {
          "ref": "7883b011-73c0-4ce1-8d83-934c4be88fb1",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b1d681fe-0e1d-4a56-a48e-6a419d97f6bc"
        },
        "item": {
          "id": "1a78b3a4-0631-466c-ade0-ba700364535d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ac57eae6-4c54-4abb-9f1c-a9404b4b471c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a31dcc22-3c0f-4f48-b687-c6fb5528e1ce",
        "cursor": {
          "ref": "7872ce8b-5613-4593-9829-8b5854041db5",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "92cb03ce-9b92-459d-a830-bbc94b04364a"
        },
        "item": {
          "id": "a31dcc22-3c0f-4f48-b687-c6fb5528e1ce",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2b243fe5-d81d-41f2-944d-355e1fe5d660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a9f39e-fef7-4af6-9a9d-944068c371fa",
        "cursor": {
          "ref": "98e4745c-8d8e-48fe-9ed9-cd07dd0cd13d",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "0ebacb25-6f41-4ceb-a2ba-8d683bf11f68"
        },
        "item": {
          "id": "e7a9f39e-fef7-4af6-9a9d-944068c371fa",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "918c89a4-f724-4eca-a3b1-a0b33e1f9361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f03aa35-cb86-4871-b591-bc11455f6d32",
        "cursor": {
          "ref": "5eafde4f-2fce-4d93-9566-73139c6365fe",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e7a00f13-12a9-49d2-add4-7a29cdb2c35a"
        },
        "item": {
          "id": "6f03aa35-cb86-4871-b591-bc11455f6d32",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "383bb514-792e-4e8c-98d6-8ec4ec854459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4560b4c6-f80d-4d1e-b069-87ba252acd84",
        "cursor": {
          "ref": "64299fd0-51b6-4f01-a759-f0f64d2140dd",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "56dc4b8b-25d5-46e1-8376-e5d886fff78e"
        },
        "item": {
          "id": "4560b4c6-f80d-4d1e-b069-87ba252acd84",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d2d8fb02-bf4a-4aaf-ad2d-40ec208010d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "984d27a9-c9f2-46d5-9d47-5faf1c2b5544",
        "cursor": {
          "ref": "acdd13b1-9385-4546-a233-da3544c90b67",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ba23a06f-ca42-4bf2-a083-279e8ec3c339"
        },
        "item": {
          "id": "984d27a9-c9f2-46d5-9d47-5faf1c2b5544",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7a1bdec1-f12a-43b4-850e-4fe7bdf1ed4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a3a138-1978-4a62-ab5d-ab0ed02f02ea",
        "cursor": {
          "ref": "befe9245-d20a-46e4-afd7-34d95aaaf574",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "96cb7332-1c9d-4b18-9ceb-f8f6021f54f7"
        },
        "item": {
          "id": "49a3a138-1978-4a62-ab5d-ab0ed02f02ea",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "27a36b8e-1e74-421b-8c2a-69993237449f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "421511a9-2784-4635-8435-1dd1201535f5",
        "cursor": {
          "ref": "902d9d3e-2630-4029-b179-f3f710917364",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "5353a039-563d-4992-8934-5c419899f716"
        },
        "item": {
          "id": "421511a9-2784-4635-8435-1dd1201535f5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "50408b69-98e5-4e9b-9f1f-eae0d2bfda50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea98c04-49be-4fd6-bc12-40125ee83648",
        "cursor": {
          "ref": "4f9e0229-1e4a-425c-b6ac-a42027517372",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "3858c42a-a7e0-413b-beb6-51de7b3034b6"
        },
        "item": {
          "id": "3ea98c04-49be-4fd6-bc12-40125ee83648",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "8ae24191-ca9d-4d26-9c6d-65a7da631e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a38cd7-3fca-46a6-8810-ca4c46c07acd",
        "cursor": {
          "ref": "48068cf7-a42b-4452-b22d-59712ee9f80f",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "5d2a7339-f6fc-4672-8d2d-2bd525a5d73e"
        },
        "item": {
          "id": "36a38cd7-3fca-46a6-8810-ca4c46c07acd",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "696c1045-17e8-48d6-8fa7-9494807a9336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7e7eec-17dd-4c39-92fd-300da6bbca62",
        "cursor": {
          "ref": "17148766-06ac-4c86-8620-64ceb147a7c2",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "7b6bb779-0374-484d-88ef-afb41c1b7dc7"
        },
        "item": {
          "id": "8d7e7eec-17dd-4c39-92fd-300da6bbca62",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "acadca66-963d-4f1f-a130-1f9c40b23e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d3c064-cafd-46da-8227-c314fd2c3da3",
        "cursor": {
          "ref": "14809ec1-97b7-421f-9f3d-9c8ec575d0e5",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "30190e29-fb87-4c9a-8af9-49c49c568feb"
        },
        "item": {
          "id": "01d3c064-cafd-46da-8227-c314fd2c3da3",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "11fb5af0-6917-4fa5-a73f-15e2dd735bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "720a9a8b-5d80-483d-8e0f-ba8e86237cb6",
        "cursor": {
          "ref": "17fc7eab-72cf-4cdd-b4c3-04de894ba22f",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ed2497d0-4a7e-4cc7-bd42-36d7bf427b75"
        },
        "item": {
          "id": "720a9a8b-5d80-483d-8e0f-ba8e86237cb6",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "1e454271-202b-4fcb-9b94-638c5eda2740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396b80f3-fc24-4fc3-bf54-6b02c28de3ce",
        "cursor": {
          "ref": "67267029-69d6-49be-929e-4fdda18bb99e",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "6a270ea9-9bc8-4122-86c1-7f4d7428d3e0"
        },
        "item": {
          "id": "396b80f3-fc24-4fc3-bf54-6b02c28de3ce",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "1075a61e-7efb-40e7-893c-2cfc6fca92dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b5074f-638d-49f4-9ce2-ed00f6ce3b67",
        "cursor": {
          "ref": "c2229073-d241-46c5-9a92-5ce3631550fb",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "6bb078c2-db67-438a-a2ea-b97ece6b4692"
        },
        "item": {
          "id": "a7b5074f-638d-49f4-9ce2-ed00f6ce3b67",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f88c5144-9c89-405e-9a57-e6d977184603",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80008864-45eb-4e13-9961-db41ef94209e",
        "cursor": {
          "ref": "760979f8-d7c4-47b8-baa2-9c0bb724e16e",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f1afab4b-6ee0-44ec-a367-458b5cdd01e0"
        },
        "item": {
          "id": "80008864-45eb-4e13-9961-db41ef94209e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d080a6cc-ebaa-4322-a5fe-7c6ee5a86127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbce8506-84ab-4764-a680-921749f90a71",
        "cursor": {
          "ref": "cab5072a-133f-4edf-b790-6cf9a2a99cd2",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "bded6599-3346-45be-831d-6702a3ac9481"
        },
        "item": {
          "id": "cbce8506-84ab-4764-a680-921749f90a71",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f8d7915f-023d-452f-98a1-c4d82be2d72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616cb150-201b-4f8e-b547-2969463c8db5",
        "cursor": {
          "ref": "c9b10e9c-dc1f-44fd-83d5-f84b5eeb53fa",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d32ba1cd-083a-487c-ae4e-c682881ebb4f"
        },
        "item": {
          "id": "616cb150-201b-4f8e-b547-2969463c8db5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b23b7c21-6d1d-4bc2-a9dd-b4af2aedab94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfade3b6-cd08-4eb2-8696-d3fa31d42de7",
        "cursor": {
          "ref": "269f2529-2518-4d4b-a58d-86b964e386d0",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "10a1e30e-52bc-439a-92eb-24caa3dc4ed7"
        },
        "item": {
          "id": "bfade3b6-cd08-4eb2-8696-d3fa31d42de7",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "1a586e72-790b-469c-a8e1-4db23f18bb84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54117bb0-478b-4f29-ade3-1c985b14b37c",
        "cursor": {
          "ref": "0da6c2b0-d294-4ce3-be4b-31bb7ea8ee7b",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1935f93b-0c0b-4512-aeb3-dbc558ba7a83"
        },
        "item": {
          "id": "54117bb0-478b-4f29-ade3-1c985b14b37c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "66c2b7eb-8b25-4212-b3ab-e8de9e729495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd000f65-58aa-47ee-9bb4-d29941e88396",
        "cursor": {
          "ref": "79abf8d6-2cc2-4ee2-a980-e299a3e05407",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "429e6654-546f-4022-8c95-351a0c01ed06"
        },
        "item": {
          "id": "bd000f65-58aa-47ee-9bb4-d29941e88396",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "48f2e6c1-8cf1-482f-8bba-366ef178051e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23010218-c70f-45f6-a4ca-91f877bff02c",
        "cursor": {
          "ref": "4a193456-8dc7-497b-86b6-329f52fd60a3",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "82c77638-ad6a-421b-9af3-1a1d04a13b55"
        },
        "item": {
          "id": "23010218-c70f-45f6-a4ca-91f877bff02c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3e18341a-3c1e-42a8-a926-d9be6837ad4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fcf566a-47a7-4f13-8f14-545894fa35f1",
        "cursor": {
          "ref": "0dc9baf9-48cc-496c-9102-4966df5f090e",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "9c893a27-0f92-409b-99ed-c1e1363e37cb"
        },
        "item": {
          "id": "9fcf566a-47a7-4f13-8f14-545894fa35f1",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "502abb61-7d59-4b47-907a-17dfc8781393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650229c1-5ddd-4929-8809-7d0e9fd7b47d",
        "cursor": {
          "ref": "8b088082-c88f-4503-a580-29f4c9c098cc",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b9d2ec97-2224-4d3a-9dda-d64ac4406f3c"
        },
        "item": {
          "id": "650229c1-5ddd-4929-8809-7d0e9fd7b47d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9eed936e-e317-42a5-814c-d767007debb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3c0ff2-1b1d-4a29-a9bd-950cea4d7293",
        "cursor": {
          "ref": "8a34891c-021e-4f3f-b8d0-847b826414ad",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "8e3e7a8b-8f00-4243-9d1e-91f2040eef30"
        },
        "item": {
          "id": "7f3c0ff2-1b1d-4a29-a9bd-950cea4d7293",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "74f1b88b-7be6-4d3f-8fa7-e87f92212883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83af6c0-8322-4dd8-a890-2e386b942bd0",
        "cursor": {
          "ref": "1a1406dd-e7db-4253-b9e3-1b4a45c5de58",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "fb3508d8-e216-4e86-a5f8-58fbb0e78e3f"
        },
        "item": {
          "id": "f83af6c0-8322-4dd8-a890-2e386b942bd0",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "9cec60eb-4aef-4faf-ba1d-5f5df6b54a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "180b6d4c-58aa-4bf7-be2b-5cd51b1ef9df",
        "cursor": {
          "ref": "8702d8cc-c6ac-495f-bbae-c29a5d0b2367",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e7b6c091-20ae-411d-900e-6fc15c73b611"
        },
        "item": {
          "id": "180b6d4c-58aa-4bf7-be2b-5cd51b1ef9df",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "9acf4ba6-5ecb-47ed-b497-ccfe5e18eb0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "144fefc9-9855-4564-b22a-d7993773d77c",
        "cursor": {
          "ref": "4790a0e8-46d6-4cb0-b7b4-898867c0da39",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b6ddc024-0da0-4077-9dc7-e6b4ee04f4a4"
        },
        "item": {
          "id": "144fefc9-9855-4564-b22a-d7993773d77c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a4e930e4-aaad-4aa1-a7bd-28c53c3ab669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20a52d6-651b-4872-a7a3-b47ea5cc21ed",
        "cursor": {
          "ref": "1d31c820-74a3-4982-82ec-317a52d8c564",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "3e64c693-7036-46a3-9dbe-4ee9ee8fd53f"
        },
        "item": {
          "id": "b20a52d6-651b-4872-a7a3-b47ea5cc21ed",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "559f71dc-ae33-403e-a9b4-b24742bc95f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7355ef3-1deb-4ab3-9472-f8de5a479769",
        "cursor": {
          "ref": "d96a1b55-b447-40a9-82be-4598f7603193",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "31ca6c11-a381-4bf2-90dd-4a0f93c0ef0e"
        },
        "item": {
          "id": "b7355ef3-1deb-4ab3-9472-f8de5a479769",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e7d07850-2012-4a03-a84e-2a35b30b0abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c40976c-2cbd-47db-8c06-f6ecde65e5ae",
        "cursor": {
          "ref": "46900ef1-a809-47fe-af46-c8d6b84480cc",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "af01ea4d-f53b-48e8-bd65-25e2c44ce1f5"
        },
        "item": {
          "id": "7c40976c-2cbd-47db-8c06-f6ecde65e5ae",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "2589833b-adb4-46e4-8243-659bda411195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ee8b73-e598-49e2-8f0e-5138b9916c68",
        "cursor": {
          "ref": "00a15d3b-7264-4806-8c1d-66bd4597716b",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "465dd69f-e3ec-4272-9f34-b82d65c38638"
        },
        "item": {
          "id": "03ee8b73-e598-49e2-8f0e-5138b9916c68",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e57302fc-2ff3-4d86-be6f-1fd2ee420f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "621df111-5088-4def-858e-e66cc6036644",
        "cursor": {
          "ref": "b2b88b47-fc96-4834-a621-2ad15c17f40b",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "54f3c215-e699-4e25-99b7-2c85aa1025a3"
        },
        "item": {
          "id": "621df111-5088-4def-858e-e66cc6036644",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "528935a4-0be2-4c33-b1f9-e7bc466d7378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460fb0cc-8328-4f80-b273-3b0c76eed8ed",
        "cursor": {
          "ref": "781e9d70-7647-4b08-9b98-eb129c9fde1c",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ec77bd05-9d95-42c5-a54c-5235901d537e"
        },
        "item": {
          "id": "460fb0cc-8328-4f80-b273-3b0c76eed8ed",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "41d9bfde-32d9-408b-a023-d7a895a2f23b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c276a0a8-5a22-4374-869c-cdcad5f7aaea",
        "cursor": {
          "ref": "56484486-4689-4273-88ac-9e56e5d97f01",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "81d01ed6-d1c7-4385-9e71-bb4b167155f9"
        },
        "item": {
          "id": "c276a0a8-5a22-4374-869c-cdcad5f7aaea",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7181a9f9-9e03-4b39-865e-40b576af9ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa6c73e-4ac9-4ac6-93cd-99ffc55428d6",
        "cursor": {
          "ref": "07cc2e10-9d05-411b-871a-67e80495cb61",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "855671be-e73c-48f4-80dc-cea9afb177ee"
        },
        "item": {
          "id": "afa6c73e-4ac9-4ac6-93cd-99ffc55428d6",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "3eeff113-c887-4aaf-b472-161875849f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "486d45bd-d0ab-4605-96f2-87f7377abb46",
        "cursor": {
          "ref": "60483839-a2d7-4cc4-ba87-421c1fe75864",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "effa48be-c7e3-49bd-84e7-6de2f57db66f"
        },
        "item": {
          "id": "486d45bd-d0ab-4605-96f2-87f7377abb46",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "098ffc78-3e5b-4067-9fde-71cc56d248e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a5643d4-9ed5-465b-8373-431860ec7af7",
        "cursor": {
          "ref": "d17fd86d-a87d-4b8d-9d4e-ae2c8d648dc9",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "48a11a89-5072-4e7f-a1aa-3ff409af163f"
        },
        "item": {
          "id": "6a5643d4-9ed5-465b-8373-431860ec7af7",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "b9122a55-c5c2-4751-9e5b-276c1f9724b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af98628-6e64-4833-a12f-d48e6bdbe3de",
        "cursor": {
          "ref": "2f80d2bc-df75-4bbd-a542-c7b267af19ee",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2c1b9b54-f6ea-4a10-8e88-276c5d76a10c"
        },
        "item": {
          "id": "4af98628-6e64-4833-a12f-d48e6bdbe3de",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f06c0276-ca7c-44fa-bb8e-b9ef83ecfd92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56f6f400-fb6e-4ea4-b1cb-2b18e5893085",
        "cursor": {
          "ref": "9eb2d71a-8d55-4e6a-8681-47a27f99ac3e",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ac624e48-e817-4301-9cac-5df58a35b836"
        },
        "item": {
          "id": "56f6f400-fb6e-4ea4-b1cb-2b18e5893085",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "826dfd89-bd1a-4391-9101-9c360dd9ae31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b8a52d-e363-4ee9-808b-404d3e71a643",
        "cursor": {
          "ref": "34e926fd-9799-44df-8242-969a1f508cee",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "67363b10-9aa7-440d-aac8-50c1dadc0e10"
        },
        "item": {
          "id": "d6b8a52d-e363-4ee9-808b-404d3e71a643",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "95e5ed89-3506-4808-b070-16853895096e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "738d6c60-c026-44be-945a-dbaab2478cca",
        "cursor": {
          "ref": "33f5679d-e23c-4047-8a33-611279f037e2",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b43f2495-b385-46e7-af55-c06c81af2fc1"
        },
        "item": {
          "id": "738d6c60-c026-44be-945a-dbaab2478cca",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "326fcd01-9aa0-47f8-b1ca-70a762be9bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "befd04ac-bd4a-47bc-8f78-d8aed7842207",
        "cursor": {
          "ref": "811ef276-3665-46e8-8a91-506c28b7a318",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4f3dd61e-017a-46ea-bfec-74ab8b5cf3ed"
        },
        "item": {
          "id": "befd04ac-bd4a-47bc-8f78-d8aed7842207",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "be3a7ad4-fc3b-4ee5-9a29-595ea94906dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b48576-4482-4878-bcf8-26fa057047f4",
        "cursor": {
          "ref": "af75907b-bdfb-48c3-afe9-532d478f36ca",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e069f8a2-8422-42af-9d24-8aade250f55f"
        },
        "item": {
          "id": "e0b48576-4482-4878-bcf8-26fa057047f4",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d6def04d-e877-4b63-af36-fee410fc0e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd85b9d-0d79-4fa1-b883-cfc370b34979",
        "cursor": {
          "ref": "2adcbb29-15fa-454b-9b64-b0ec17eef1b6",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "40ee9fdd-0215-4c49-a8cf-4d23d0b5af45"
        },
        "item": {
          "id": "8dd85b9d-0d79-4fa1-b883-cfc370b34979",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d5c205dc-f239-4dc2-94a4-cdee860bc2c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bac861b-3ca8-4692-b068-9eb645fbd27b",
        "cursor": {
          "ref": "42543276-caf9-49ab-be73-d480ff722188",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "97c6e1ad-65df-4223-a900-60c4196dda5b"
        },
        "item": {
          "id": "2bac861b-3ca8-4692-b068-9eb645fbd27b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "3823ba09-bbcc-4446-a229-5fd4587af868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f1b1c38-3f7b-41df-a3ff-0350957c73c2",
        "cursor": {
          "ref": "ecaf7122-25d8-427b-9027-5e8c9134a210",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "94b256ac-1de6-4d26-a804-2b949eaa6286"
        },
        "item": {
          "id": "1f1b1c38-3f7b-41df-a3ff-0350957c73c2",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c8bd9480-a5bc-46e5-ba76-6ec685d3cace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e384d11-0ecc-4de1-884a-dfc5359e366e",
        "cursor": {
          "ref": "79de6d1c-307e-4bfb-974f-0884701ccaa1",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "92a1c1b8-e71e-4b7f-bea8-e732324ac4f0"
        },
        "item": {
          "id": "7e384d11-0ecc-4de1-884a-dfc5359e366e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "dfa0a9f4-7af8-4f36-b745-b0187b4f7109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4efa8ef1-9283-47c1-9d83-f708fdc53961",
        "cursor": {
          "ref": "fffb1473-10b4-4ffd-b4a1-7570e905f998",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0b8f8a1e-92c1-4429-a225-c6ea2cb5e4a9"
        },
        "item": {
          "id": "4efa8ef1-9283-47c1-9d83-f708fdc53961",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e3c986d8-d62c-4b58-b358-c5e358b7a80c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f459e02-b798-4ad4-9464-8229a69d5542",
        "cursor": {
          "ref": "faf70fe1-5cd1-43d7-a231-fe8f45e6b195",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "264501b2-5b2a-4deb-b7f3-88b419dbbe3b"
        },
        "item": {
          "id": "4f459e02-b798-4ad4-9464-8229a69d5542",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "47501847-8547-4dcc-a1f8-b4e4733aa4e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8151b6e-a15f-461f-a8ec-2cd54e4a5056",
        "cursor": {
          "ref": "63664fb4-8c16-4713-b48d-b885b3e888b7",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0cfa43a4-3104-41ef-92ed-a11098485a14"
        },
        "item": {
          "id": "c8151b6e-a15f-461f-a8ec-2cd54e4a5056",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "2826463b-01b3-4cc4-a32f-213624faf6d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97d9324-1f59-4c54-b02c-ea33f7b4412f",
        "cursor": {
          "ref": "768c87fb-a0ac-4b4b-a633-9046602d1562",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f7d9d7e7-95cc-40ea-b008-063cc85d0b93"
        },
        "item": {
          "id": "f97d9324-1f59-4c54-b02c-ea33f7b4412f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b2f0a987-87ec-4549-b048-c7e74c35ac2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2dc17b4-0803-4080-89d9-70a1eb3cd623",
        "cursor": {
          "ref": "66b1729c-eea5-4e76-b5f4-0bc8679b2fed",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6a7ebf36-106e-49c1-bca9-32b12a5db3cd"
        },
        "item": {
          "id": "b2dc17b4-0803-4080-89d9-70a1eb3cd623",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f383cc2c-46c5-4e5b-88a9-57aa913e5c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a970506-a9ef-43c9-8e41-770fbbb206dd",
        "cursor": {
          "ref": "c34ad34f-e04b-4503-9aa6-889b91953872",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d212e8aa-15a2-4217-ba3f-0f93bb52fc45"
        },
        "item": {
          "id": "4a970506-a9ef-43c9-8e41-770fbbb206dd",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "363c9881-47b1-4c6d-8822-3d8a2c52018e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa240928-696a-4843-bd59-489273b762e0",
        "cursor": {
          "ref": "f219ad34-a816-4644-97c0-3e4e67d858fd",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "b3e2fe82-ab04-46c5-84e9-40db788c361c"
        },
        "item": {
          "id": "aa240928-696a-4843-bd59-489273b762e0",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "19ea5266-5f7e-47f5-a685-2773896c9390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e06e7a1-d1d4-4469-bf8f-d91c597dc341",
        "cursor": {
          "ref": "a8ab0711-c1e0-4b94-960e-c73b0089ab98",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7f5fd10b-495b-42f3-bd60-2e6bcc35af04"
        },
        "item": {
          "id": "8e06e7a1-d1d4-4469-bf8f-d91c597dc341",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "88081d32-31fe-41bc-89d6-f68776bad52e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90be655b-a345-4fa5-abad-da3ea6d5dbee",
        "cursor": {
          "ref": "40a04f08-0036-439c-9c35-64d973585106",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "be12361d-3ac9-4db4-bda4-eaf40b22aaef"
        },
        "item": {
          "id": "90be655b-a345-4fa5-abad-da3ea6d5dbee",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "73ffc732-6bd1-40de-8647-5b94538ee288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d3ded36-330f-4e02-8825-873f036e807f",
        "cursor": {
          "ref": "7f8991bb-6c95-4b1c-a703-170e309adcce",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "7c7b7ce1-7ced-42fb-b935-7801f33bf5d7"
        },
        "item": {
          "id": "9d3ded36-330f-4e02-8825-873f036e807f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "4e681276-0bd6-4536-b122-3f6b13798432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f39fd938-0020-4841-bc25-d7733a451bad",
        "cursor": {
          "ref": "1ac8e469-50a2-4d08-b7d8-2fae189b2f4a",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "932fd43a-54a7-4af4-b97e-ddede97b8265"
        },
        "item": {
          "id": "f39fd938-0020-4841-bc25-d7733a451bad",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "651c2545-6af9-4849-974b-4d1d2853aaff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119d0a54-afa0-4a88-a4d2-e38b2413c14b",
        "cursor": {
          "ref": "c4c02fbb-d5e4-4143-8175-22f2c9294dff",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d8add19a-b535-4537-8d3a-d030b572f3b7"
        },
        "item": {
          "id": "119d0a54-afa0-4a88-a4d2-e38b2413c14b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5844d216-cc49-44e3-b0d6-07220f35ed95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce7aee6-2239-48c3-8ca3-1c90e7846627",
        "cursor": {
          "ref": "03011891-b7b1-40ad-baff-b85ae87f121e",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "eb11ec66-7d73-4eee-b844-f99d705e1706"
        },
        "item": {
          "id": "4ce7aee6-2239-48c3-8ca3-1c90e7846627",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a70c0ae9-4e60-4aba-8436-87aac034b9c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11fd7da9-b9da-4d90-aa65-e8c9ab1f1d42",
        "cursor": {
          "ref": "9d2bddb1-489d-426b-834c-1ec6612168b1",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "5999c260-2483-4843-bde0-f70a9f834470"
        },
        "item": {
          "id": "11fd7da9-b9da-4d90-aa65-e8c9ab1f1d42",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "626101c7-8c77-47b9-b290-c9c91574e3f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ea3e01-4c3d-425c-8141-0121eedaca1f",
        "cursor": {
          "ref": "2bb1593d-4dd9-4a17-a87e-d8c453039ba8",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "57f926ee-5a5d-42bd-a19c-5469c7dda16a"
        },
        "item": {
          "id": "d6ea3e01-4c3d-425c-8141-0121eedaca1f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d71a3c7c-94b4-4882-aabc-4b2d3033d388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8926812-8fb8-41ab-af90-68e31b30002c",
        "cursor": {
          "ref": "d870f90d-3c14-4096-ac79-bc7f97567640",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "fbcf0562-59a9-49f7-b20a-0be276dc5fbf"
        },
        "item": {
          "id": "b8926812-8fb8-41ab-af90-68e31b30002c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "cdf0b20a-a160-4867-b40d-1aa8a77bcbe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35261795-8c2b-4d0d-9f73-6c06752c1d12",
        "cursor": {
          "ref": "169e7446-05aa-422a-bcd8-0aa9a4e50509",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c57eac1d-e7f7-4ff3-9de2-d9bd189cffd0"
        },
        "item": {
          "id": "35261795-8c2b-4d0d-9f73-6c06752c1d12",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "451da307-65d3-4dbf-85e9-dded0011595e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678e79c8-a9d9-4d66-a37b-d3f60043dfd6",
        "cursor": {
          "ref": "79f19f47-e989-4b73-b0e4-841b4d015a8a",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "475ef79e-8a6c-4da1-80b1-6bcaa3d962fd"
        },
        "item": {
          "id": "678e79c8-a9d9-4d66-a37b-d3f60043dfd6",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "17d53aea-7c6f-4932-85b7-7f30a6364cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c34849-3ce0-4dff-899a-ed331153dfba",
        "cursor": {
          "ref": "b747b07f-d771-4bd0-8865-d11860aeefd8",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b7f3b9e2-6c9c-498c-bc71-61e1ca20f7f9"
        },
        "item": {
          "id": "a6c34849-3ce0-4dff-899a-ed331153dfba",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "9f941041-225d-4e9a-b041-58b10e4f5bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8babc117-b00e-4751-8bca-8a680122ac5e",
        "cursor": {
          "ref": "5e695547-7f00-4c56-bd5a-bd3d30757264",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f0ae3154-ca65-42fe-b630-0077a5dbb61c"
        },
        "item": {
          "id": "8babc117-b00e-4751-8bca-8a680122ac5e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "62c5132c-c404-40a0-bc50-862813552d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b432985c-a1bd-40be-a572-125254bfc609",
        "cursor": {
          "ref": "323f3d64-cc5a-4df5-83bd-e07675b6b34c",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "72532f8c-f32d-4d40-bc2e-daa7ef09b4b0"
        },
        "item": {
          "id": "b432985c-a1bd-40be-a572-125254bfc609",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "018d9b1a-884a-4599-8f4b-2842eabffb61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c09e6aa-9244-427a-9737-f6c373aaec7e",
        "cursor": {
          "ref": "59e3696c-50d9-4e8b-b41c-84212cf2175f",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b552c1ba-4663-486d-b597-66fea79d9d0b"
        },
        "item": {
          "id": "9c09e6aa-9244-427a-9737-f6c373aaec7e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c5594f3a-8e51-4d8f-926c-2e5e603cb5a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1546565e-b851-4d8a-865b-4ba547268bb9",
        "cursor": {
          "ref": "63bfbbdf-df5f-42ca-a168-8d1d38e973ae",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8366944a-e2da-42cc-a0c3-dc9591fa389b"
        },
        "item": {
          "id": "1546565e-b851-4d8a-865b-4ba547268bb9",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "064f96f7-3658-442e-af21-b9fb356029d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded57d7f-ad24-4f27-93ca-32bc6168a986",
        "cursor": {
          "ref": "827a17d8-6d51-49c9-b107-6d0c80ef0967",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "2d92ccdd-d699-47f1-bead-0884bcb356d2"
        },
        "item": {
          "id": "ded57d7f-ad24-4f27-93ca-32bc6168a986",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1f09d5c1-26b9-488e-9f1b-089b1c0dfd0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b7310a-7a21-4a39-bc01-f487efb6b959",
        "cursor": {
          "ref": "512e80b4-e2f3-4184-a6f6-700f1a4c0165",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "fc1e9e0c-be43-432a-a96c-676a9aa7a30d"
        },
        "item": {
          "id": "89b7310a-7a21-4a39-bc01-f487efb6b959",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a88132e2-4c3b-4701-a578-c3ae184494f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4515ac6d-3490-4815-a99a-0ed6f18602e9",
        "cursor": {
          "ref": "a697502e-7b0f-4f11-a828-1724c9fd7549",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "6d81cc95-ebba-4472-a736-d4502aab07d2"
        },
        "item": {
          "id": "4515ac6d-3490-4815-a99a-0ed6f18602e9",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5c78cb18-14fa-4103-89b1-25c5044a04de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37621d3-a80b-43d1-b04b-9e7a8698d9f7",
        "cursor": {
          "ref": "555d417c-47be-49f1-bcce-a792e54052db",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "9d2ba3a0-2cd4-4642-8a65-a6f8357ddd94"
        },
        "item": {
          "id": "b37621d3-a80b-43d1-b04b-9e7a8698d9f7",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "1c0bb0bc-dd9a-45ca-a47e-8ef4501f8cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5867399-b431-4f01-9dab-4d3d30b6bcba",
        "cursor": {
          "ref": "0c21f568-cab2-4f84-a6c0-63f9e7d1ab2d",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f9152264-0dcd-4839-9ede-de321847534c"
        },
        "item": {
          "id": "b5867399-b431-4f01-9dab-4d3d30b6bcba",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "adc240b9-a91a-4962-b378-2d7af1c6c6fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53235d0-d9d2-402d-bee3-d9a21ec3d9f4",
        "cursor": {
          "ref": "351b0550-56fb-48df-a1aa-37a021ab2b72",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "139bdbf3-bcce-4d3c-beb0-b00fea3a8f87"
        },
        "item": {
          "id": "e53235d0-d9d2-402d-bee3-d9a21ec3d9f4",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "3033747c-0de5-4202-befb-a9b07285fb26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c108fd0-841b-4478-9130-545ea55f6be0",
        "cursor": {
          "ref": "977917c0-7207-41d1-a18b-fa9f932498c6",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "2edb05b5-8017-44fd-96b5-24cd1d5d4fa5"
        },
        "item": {
          "id": "6c108fd0-841b-4478-9130-545ea55f6be0",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ca99a0e2-4c63-40c8-a9e5-ace07a18128e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc35e0f7-4205-4cc6-af84-d11cce5d2c10",
        "cursor": {
          "ref": "eece845e-f0c5-400c-826e-93307f39bb65",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "3301bb53-8421-48b9-9f19-11d1f55838b6"
        },
        "item": {
          "id": "dc35e0f7-4205-4cc6-af84-d11cce5d2c10",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6c2c7272-a8f2-417f-b583-245e45d48774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6b3a3f3-f5d7-46db-8e98-d716c71b016d",
        "cursor": {
          "ref": "9995967f-2b0b-4baa-8e01-fe8a81d03095",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "bfd9163e-abb4-432a-b368-4d4a7ed0080d"
        },
        "item": {
          "id": "e6b3a3f3-f5d7-46db-8e98-d716c71b016d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "96e23b13-0e25-4be3-a352-c05bbf869fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21bb002-be1e-409a-afca-73648529420e",
        "cursor": {
          "ref": "d4638fb6-548c-4b89-8688-0ba9c36bd8a1",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b0e464fe-f94c-4e5c-acd0-07d711de2e2d"
        },
        "item": {
          "id": "c21bb002-be1e-409a-afca-73648529420e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "1f5a17d6-5c8f-4d75-a215-55343186ec74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bbd0b2b-175f-4fa6-bf30-268bb886e500",
        "cursor": {
          "ref": "d5f0dcb6-1415-4ceb-aed7-17bb4381d115",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f5f65d00-c318-4cb8-aae3-d7235b7d4fcf"
        },
        "item": {
          "id": "3bbd0b2b-175f-4fa6-bf30-268bb886e500",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8fb2bbd5-0f9c-46db-919e-12e3744ad972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a89e191d-3c1e-497b-aa6f-99fd32fa6bca",
        "cursor": {
          "ref": "b7223bff-25e8-4235-afed-390d3ec53d62",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "87b3b2a9-85bc-4785-b0ce-7ad58ea51217"
        },
        "item": {
          "id": "a89e191d-3c1e-497b-aa6f-99fd32fa6bca",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8bca76f4-9fab-40b6-84e7-2f66fa1dd9b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43159737-b393-40bc-8e6f-2c5922989a69",
        "cursor": {
          "ref": "d88f557f-d6be-449d-98b7-a4ca1deb2b96",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ba3b3402-4e78-4b80-b254-15174815a458"
        },
        "item": {
          "id": "43159737-b393-40bc-8e6f-2c5922989a69",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "eade9b5d-6656-4ca2-a403-05ff0afb8390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd94c5e-32ea-480b-82f8-212022558bf9",
        "cursor": {
          "ref": "3a8dfcd7-65fd-4489-b69c-db4580c736f3",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "678890e2-5f16-49e4-a1fc-8eff68ccd67a"
        },
        "item": {
          "id": "1dd94c5e-32ea-480b-82f8-212022558bf9",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f79cc690-90b4-45cf-bc53-922a2bbc0768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "638dbadb-6601-4857-8dae-63183a8375b4",
        "cursor": {
          "ref": "eeefafdb-580e-4d1f-b1b7-e6d4de2279ca",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a585445d-98a1-4068-868c-f6c813415345"
        },
        "item": {
          "id": "638dbadb-6601-4857-8dae-63183a8375b4",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "750c155b-7d67-48fc-966d-c52379f32cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0788700-0cc5-44f3-a729-f7d228a27413",
        "cursor": {
          "ref": "d2e97ccb-4607-4aeb-a865-7eacab3864f9",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "cd3afc9b-d583-49db-a61b-c1ff1b621331"
        },
        "item": {
          "id": "b0788700-0cc5-44f3-a729-f7d228a27413",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "eba70c22-2937-4fe8-a5a4-95819c7c7c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66edf376-9c37-4263-8b26-2bf0d8cbf9b6",
        "cursor": {
          "ref": "dfe06b2b-f9f9-42c2-abba-f55efa012010",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "11d1e1ec-f85f-4477-8703-4702740cfd92"
        },
        "item": {
          "id": "66edf376-9c37-4263-8b26-2bf0d8cbf9b6",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "01671013-5d6c-46f7-a98f-d8f507d28905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37de8cda-f7ed-4e52-b2ad-5d3f98eff244",
        "cursor": {
          "ref": "fd8d478d-45a8-485d-92a1-bab4bcd384b3",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "8df6813e-4371-41cc-8e91-eb938a3d5282"
        },
        "item": {
          "id": "37de8cda-f7ed-4e52-b2ad-5d3f98eff244",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8cc2ce4e-9869-4bc9-a286-e349822fa4a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efe1ac5d-8425-4c80-9a48-fc35837a2d20",
        "cursor": {
          "ref": "78db434f-1be3-41f8-a7e4-df302928d4fa",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "c36f4a89-343b-4927-a782-81621cf0ae65"
        },
        "item": {
          "id": "efe1ac5d-8425-4c80-9a48-fc35837a2d20",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "fc561095-0eee-4216-8415-d80f819c09c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72bf3407-626f-4201-a704-cd32a65402f3",
        "cursor": {
          "ref": "1e4d3943-e88e-45a0-a1ec-85508378527f",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "76fc10b0-f4e1-4429-a9e6-b253901f7979"
        },
        "item": {
          "id": "72bf3407-626f-4201-a704-cd32a65402f3",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b3043845-dac8-4e0d-a3ca-53de4bfd2c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7394e98-b3a9-4b77-bad5-6b645b540329",
        "cursor": {
          "ref": "9fc83a45-866f-4b79-9912-0d2e431edc58",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "663b3d2d-dcd8-45d6-bf2b-1c56a6bd71a6"
        },
        "item": {
          "id": "f7394e98-b3a9-4b77-bad5-6b645b540329",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "51946503-162c-407b-8222-4fd3aef2b0ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7c71cc-8ab6-41c9-afd3-bf1b1135fd1b",
        "cursor": {
          "ref": "19e9975c-3033-43d5-865c-06a732c774b3",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "135bd87c-0c2a-4c61-a09b-8855d9c12f96"
        },
        "item": {
          "id": "ed7c71cc-8ab6-41c9-afd3-bf1b1135fd1b",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8010b28f-8e47-49fe-94a9-2c4f067c9319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8d04ba-f802-4e87-a349-9626104602e8",
        "cursor": {
          "ref": "7853a320-8b01-48e6-af4a-8c917833a679",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "923ffe0d-030a-460f-8d6b-783648b0f3f1"
        },
        "item": {
          "id": "6b8d04ba-f802-4e87-a349-9626104602e8",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "fba9524e-52b7-407d-ab84-47cf1a08cc42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0765f7-49e4-42b6-941a-085440c37834",
        "cursor": {
          "ref": "b44dcbe7-3cfc-4a81-adc3-a9ff0cb4cd89",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "05d704f4-3707-411c-bc5a-6e490f19e58b"
        },
        "item": {
          "id": "8c0765f7-49e4-42b6-941a-085440c37834",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a96558e7-b0f6-4d6e-bdbd-b0db0ddb3f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b8b5f7-0324-4ff6-8d9c-25c9dc17f943",
        "cursor": {
          "ref": "fc04c08b-40a3-44e5-8def-064ec30675c2",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "a2688e06-0265-4a1e-8624-e2f9f325c100"
        },
        "item": {
          "id": "c5b8b5f7-0324-4ff6-8d9c-25c9dc17f943",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c241e63d-cb12-4d2b-950d-0224832cf0e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6334c14-d12c-4c52-bd9f-41435e5c938c",
        "cursor": {
          "ref": "2a94b0b5-a7c4-48d1-8541-5dc0b16543ef",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "56e985e3-a5cd-4cac-85f9-885943ec3514"
        },
        "item": {
          "id": "f6334c14-d12c-4c52-bd9f-41435e5c938c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e752e506-8f6b-48f9-9d84-181db855b3b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db019a74-709e-471a-aba4-046b5fa2ce1d",
        "cursor": {
          "ref": "1364a649-c2f6-4ba0-b97e-04ba0ea67220",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "22057cb0-66ae-46d0-8c37-384e0b95768f"
        },
        "item": {
          "id": "db019a74-709e-471a-aba4-046b5fa2ce1d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "cda3bd6d-0c21-468d-82ac-dd1e96ef267c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba3540a6-3346-443f-a792-39833cd7e49f",
        "cursor": {
          "ref": "5f62d40f-ede7-4abd-9e35-da3ff3513c45",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "048e2add-9b1c-4341-998c-6fe1b8e9953d"
        },
        "item": {
          "id": "ba3540a6-3346-443f-a792-39833cd7e49f",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "27f61052-eb19-4b54-a897-8bc20b2eae51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705b2134-f995-4d9e-baa7-20e85750b423",
        "cursor": {
          "ref": "4ba84e70-7bd9-4c17-ae01-d3f032508666",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "36df79e7-e1c6-4775-8cbf-06b59f80f373"
        },
        "item": {
          "id": "705b2134-f995-4d9e-baa7-20e85750b423",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c5192b91-06eb-4a46-84cc-2b9e4b750fbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c0bd9b-3917-493b-944f-7f527f3284df",
        "cursor": {
          "ref": "2eb7b7b7-bb37-45d1-822f-0bbe32ec492a",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "66ae65c5-cc51-4e2d-931d-7c617577d698"
        },
        "item": {
          "id": "59c0bd9b-3917-493b-944f-7f527f3284df",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d8c3745f-f7b9-43a9-875f-3e79e6ab81ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a8c01f1-2a23-40f7-9f87-0d0538646a88",
        "cursor": {
          "ref": "5c20c173-b153-4e96-be78-223246252ba6",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "7b9c9a83-a863-4eb5-a585-18ce45c16d7f"
        },
        "item": {
          "id": "7a8c01f1-2a23-40f7-9f87-0d0538646a88",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "c141bb91-674f-4d39-8f72-08d029265a49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe5a979-ab59-4d7f-9703-1250cc15c2b7",
        "cursor": {
          "ref": "bcbbbaac-cac3-4e99-8a8f-f61cb5f636b4",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "e3f16a52-1b32-48ff-a7bb-ff8213c67021"
        },
        "item": {
          "id": "afe5a979-ab59-4d7f-9703-1250cc15c2b7",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "08f5e623-7f3a-494b-9f46-acb9d0bca033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f701b74-6d1b-4de9-a76d-72bb000341a7",
        "cursor": {
          "ref": "e3442c27-b0d9-4515-9872-9d365f1d39c3",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "f052d830-7dba-4760-a77d-66a54b75ba82"
        },
        "item": {
          "id": "9f701b74-6d1b-4de9-a76d-72bb000341a7",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "637d8bd0-1046-4960-bebc-06d21441b289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa4ea80-c27e-4afa-9518-d8dd0446e5c5",
        "cursor": {
          "ref": "218d52c5-fbfe-4707-b936-bc59ae9db975",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "521d4019-f925-4118-9f98-ece6a2a018ca"
        },
        "item": {
          "id": "4fa4ea80-c27e-4afa-9518-d8dd0446e5c5",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ac750660-d738-434e-999b-b0da1f8adaa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72732b26-85e9-4702-9e74-e96ccd3367c3",
        "cursor": {
          "ref": "70538201-34bd-44aa-8883-c8a81a9eb5d7",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "c47fe8fa-2194-4f8a-a5af-47782c5233c1"
        },
        "item": {
          "id": "72732b26-85e9-4702-9e74-e96ccd3367c3",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "2e6fd5aa-2055-42a9-81d6-241fb0de6574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4204e72e-aaf8-4e74-875a-b30268d1373a",
        "cursor": {
          "ref": "417d340b-609a-4ddd-8973-b0f6d0f4af17",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "b2db454c-d829-4eb7-be8b-1b0184047a8c"
        },
        "item": {
          "id": "4204e72e-aaf8-4e74-875a-b30268d1373a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7239104b-2d8a-4f79-b4ba-f5fce5063773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf5cb65-ee83-4e33-97d2-e47bef36da2c",
        "cursor": {
          "ref": "1f721e76-0fef-4a5f-8675-a43949f74aec",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "ec28a534-a9f0-4ed6-98bf-2d9bceb3d6dd"
        },
        "item": {
          "id": "7cf5cb65-ee83-4e33-97d2-e47bef36da2c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "2b9a8920-67ea-4ba9-9271-23e23533cf8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b5fe9c-1418-4067-8eed-708a10fe0062",
        "cursor": {
          "ref": "e0d3bcad-227e-44f8-907e-f0ab4981111b",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "b496763a-64ec-4cef-a20f-881d6f31be63"
        },
        "item": {
          "id": "76b5fe9c-1418-4067-8eed-708a10fe0062",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "202f980a-63fb-45b4-9f99-54efb29fc774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd412bc-0222-42c4-ae04-9e1f3652d9ab",
        "cursor": {
          "ref": "fe180348-9061-4ae9-a151-d26857de033c",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "2f6314ee-b5e9-4b19-9888-99d3bafc294e"
        },
        "item": {
          "id": "8dd412bc-0222-42c4-ae04-9e1f3652d9ab",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7c7a3e77-98b9-4dd0-87b3-6bcb4ebd722f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abbd1a6e-3cfa-40dc-95f1-b2feac365dd7",
        "cursor": {
          "ref": "278e8490-9aa3-4a21-944c-73583851489e",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "a8626111-f819-4531-95c1-447f02be73b6"
        },
        "item": {
          "id": "abbd1a6e-3cfa-40dc-95f1-b2feac365dd7",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "3885b05e-0bdb-42d5-9d1a-d6bbdbb6551f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e3865ae-8667-4fb7-b2bd-8a566b842d57",
        "cursor": {
          "ref": "cfdd1d35-8339-4d0a-a5ba-5e8dc9fe0779",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "96afbe76-deab-4152-981a-19027df32d08"
        },
        "item": {
          "id": "7e3865ae-8667-4fb7-b2bd-8a566b842d57",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f6f52f00-95ea-412f-8396-f433449f086c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1da545b-2ca9-46c5-9cac-970bd00a4c81",
        "cursor": {
          "ref": "c80fad30-ee28-4c34-906c-53ca2cb00466",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "ff746e35-d3fd-4098-8174-23711568c372"
        },
        "item": {
          "id": "e1da545b-2ca9-46c5-9cac-970bd00a4c81",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c098b5ea-71e6-452b-81a5-fa258174f674",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb4d65d-c4b0-4a46-964d-5df558b9c67e",
        "cursor": {
          "ref": "c0dc0a6f-2b0e-4080-a3c9-8327f77d0ab2",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "50ad5c40-04ce-4a52-b464-30e45d7e22ab"
        },
        "item": {
          "id": "fcb4d65d-c4b0-4a46-964d-5df558b9c67e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "fee09b50-f43c-40ab-9410-2cc91d47e29a",
          "status": "OK",
          "code": 200,
          "responseTime": 118,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbdadd6e-8a71-447b-ad5a-5c0723ff04af",
        "cursor": {
          "ref": "b412b952-7728-415b-b719-3606c0d2d0af",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "8202cf83-a492-40c5-9ee9-4a4af95afc12"
        },
        "item": {
          "id": "dbdadd6e-8a71-447b-ad5a-5c0723ff04af",
          "name": "credentials_verify"
        },
        "response": {
          "id": "59c9558c-fa89-4ac0-845e-479bb787a189",
          "status": "OK",
          "code": 200,
          "responseTime": 1432,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e818e0-03dd-4c67-9a15-1c86de2f6e13",
        "cursor": {
          "ref": "48b6c5df-a506-412c-b0e0-9136644f0885",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "32df002e-d97d-4770-88b3-90bed73252bb"
        },
        "item": {
          "id": "52e818e0-03dd-4c67-9a15-1c86de2f6e13",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "93fcfb99-ca3e-4786-a9c9-2ed726c48eb3",
          "status": "OK",
          "code": 200,
          "responseTime": 1421,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e6bdfe7-9938-4484-a95b-f826e0deeb5d",
        "cursor": {
          "ref": "4b89422f-56c4-48bd-bac8-4396665d0b37",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "10123b8e-9432-4f46-a19e-b9a126a29ac9"
        },
        "item": {
          "id": "7e6bdfe7-9938-4484-a95b-f826e0deeb5d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "95f5f4e3-a6f4-42ea-9dc7-86bf085c19e1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e6bdfe7-9938-4484-a95b-f826e0deeb5d",
        "cursor": {
          "ref": "4b89422f-56c4-48bd-bac8-4396665d0b37",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "10123b8e-9432-4f46-a19e-b9a126a29ac9"
        },
        "item": {
          "id": "7e6bdfe7-9938-4484-a95b-f826e0deeb5d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "95f5f4e3-a6f4-42ea-9dc7-86bf085c19e1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2752b199-e572-48a6-b863-bfce70486ae6",
        "cursor": {
          "ref": "85396b67-8935-443d-8c42-6b58575edf50",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "3b5bf1f8-5592-4cc9-89e1-967b19d7072f"
        },
        "item": {
          "id": "2752b199-e572-48a6-b863-bfce70486ae6",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5ea235a1-10a8-4c42-952a-8d2ab529bded",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3129bd-06fa-4509-a21b-9d1196a31554",
        "cursor": {
          "ref": "664ed171-dfc0-498c-a6b3-0a6f2b4c5779",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "654c1f35-e63d-4cfd-aba3-90d388273114"
        },
        "item": {
          "id": "6d3129bd-06fa-4509-a21b-9d1196a31554",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "63166f8f-4251-4b5e-a571-8370a726df79",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}