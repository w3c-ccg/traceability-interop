{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c1e1414b-14f2-4621-8e9f-53ed95f5f0ce",
        "name": "Clear Cache",
        "item": [
          {
            "id": "27ac1533-8696-4106-b4e7-35b374caa32b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "18d485cb-64b7-4f06-ae23-36c86b123692",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "736265c1-6c90-4a35-97f7-2b6abde143d4"
                }
              }
            ]
          },
          {
            "id": "7fdb4a27-c62a-4168-8694-b9dff4e68103",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e4db4894-daf8-4ea9-a983-00949f90c052",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7f0e1cbe-a4f6-48cf-9d7d-5064b290e2fc"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "dc785e26-80ff-4437-a52b-ca831e9e9735",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "268b3e5d-a5d7-4540-9bd5-449af5886b46",
            "name": "Positive Testing",
            "item": [
              {
                "id": "609d6da8-967b-4e44-984b-ead56e39c162",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4d674c8-bd59-483e-be37-23584ba6828d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c5270cbf-dc52-4640-a9fd-516bab3abce6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3074b166-6bf4-4bb9-ba37-9b1a404cdd39",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "15180241-3c2d-4b41-843a-5edb5855c6bd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2f87864e-9711-4245-8f7d-c6af130d2f85",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d35ab91b-088d-4239-a1f5-92a4cd12d220"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b0350cf7-5126-4008-9d6c-c2e82dac7122",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e888dd64-ca6e-4569-b444-0c4f1225f496"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e03369ae-2344-4fb3-8b8b-5b1067c7062f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e2e7d338-631c-4ea5-9322-3fd3e61c3bd0"
            }
          }
        ]
      },
      {
        "id": "efe35b4d-527c-41e0-924c-76af5e46cb1e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "43507aea-8227-4059-a7fd-28b023dedec7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9c798cbc-5ec5-4946-b046-64f44a8e2131",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "13ee3746-5d52-4945-a09e-a3b550d7d01a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d4f605-8d09-4eab-ad90-4d73b0fb96b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a65a8967-a3f1-4e22-ada8-5708f4654a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98282d3f-ba4b-445d-9e62-69ad096b67bc",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb7e737-9ab0-4e5c-917d-ddba05b4dcc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d1c43451-ef5b-478a-971b-b1d76aa88b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da3d217-35d8-435a-a49a-aff74147579b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2550ad4-ba10-4d3a-b2b4-3f3d51041b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bec246df-eec7-4918-8c8e-cbb1e37b74f4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "33179b2c-c18b-42e5-9cbe-bcdb6c4afa45",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5e82a5fe-a16f-45ba-a275-adc42bd9617d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d718bf-9723-4f5d-97fe-131b4e2e4c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "00a69b82-479e-47dc-b61d-bedc8d181e45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe71d7e3-c117-4b0f-b422-621a9b666636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af26288d-eba3-4b7c-ab6c-91a4cddc8f69"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "38f860e8-c9e2-4d32-a943-96a67e0bac6c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "815a18c3-a405-4624-a02b-2477d4373cda",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7871fb27-f2b6-4d36-a695-43da8f906d9a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "77dd0155-f203-4dd5-a8f4-3ab13b841b72"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3c4694e3-df79-4806-a5e9-fe93491eca90",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c03679e6-6b06-4173-8bb4-87e1c9115dfe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "50ae6d32-c330-42af-b329-3d292e5a32c8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b921e7b3-1124-4308-b3c1-1d847ca6ee94"
            }
          }
        ]
      },
      {
        "id": "921952f9-de50-4e2e-a782-4050d55c8333",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e1ba0d3e-8db3-4ee1-a93c-6d6a0cd19172",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b31262bf-e656-4449-a0a0-b2c0bab1a1f5",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0a8582c7-6675-4fa1-80ec-479a49d49b3f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97de34b7-9e3e-4e4d-ab92-3199e2463b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c42852c-5b40-44c0-9029-d0d9821f6f69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "192e99cc-3628-46d6-b1d8-fd3c809847c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "086836f0-0d71-4504-8e1a-7bfc8e9d0cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb36d933-70f8-476c-916a-3547921cee83",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e0f736-2112-4dee-bdc6-8f336607953f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9674cf06-c572-430d-920f-2300fef0d933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eeeee08-bf6e-4939-8683-37387f11f6b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2078e937-6a5c-4811-8bd7-8e11348a89a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df04a4e-c904-4852-9bb3-5709a872ce30",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af7a9568-6127-4c8b-8760-5f73e82ca285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b27b6ad5-471e-41fa-80bc-a6f9e2c937b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8da5d1c-9f09-4615-a8e6-8dccc26b9410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cdb6fdb7-fd81-401b-8a8c-6a04f30d2e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32a5ee26-e986-4d72-8b08-7369a4731923",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfffdc50-58e5-452c-9f25-85394db0d60e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a884792-ce0f-482a-8984-747ecdc8d85f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20daf3b7-5316-4236-9ad1-568283f36dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab0e4046-c9e2-4442-803a-c6e1ff1ede48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf9140b-b5be-460f-9e79-50566e14a3e7",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf1472f-8c78-4cf2-8438-518e76181971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2baa5db-585f-4bc3-8552-600311ecfa92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c6c969-b4ee-459e-8b05-555239e44c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a731acc-b47b-4508-ad2b-12681be16a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f119bc-1d68-4e3f-bb51-c2ddc2fb871c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a927ca76-6b69-4795-9e05-c18ea2c0e93d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0596cc59-5957-4a3a-98cd-9b61289c74cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d506907-d128-4911-8904-36457379e630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4520b12-17db-41a0-b7ba-48e7b2204101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e4a3c1d-95a6-4d76-b397-7674b8a22ae0",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd42de48-0b0a-447d-b023-43081a1538ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cdc9164-b5c5-4220-b5cc-6b846cf19ecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "518ec8b3-e4d0-4292-8513-c85e44076f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b5fdd78-c423-488b-b30e-b8e5a13033d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e6ee65-0c0e-48fa-b192-9fa62b3e3a0e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b725d71a-e161-4b2c-ba1d-9e65a497b427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d428199-84c7-4405-92f5-5ebb33c2f5e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc28f6d-3a90-4c11-ab2d-25d0d6542d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bac6c753-cde6-4e05-b701-3ff08b026230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef0a3b7d-afb3-4c3c-91aa-bf76ea26d49b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6607d9b-2359-4387-8654-15b1a39ee1b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8926aa5-f5a3-4b5c-a2ac-62b610323e04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66945e71-9b10-4c6e-8980-9cf3979ced33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8008118-0e0d-4059-ae1c-1763cbd5f1e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a653d2-022f-4a7a-bddb-6de1e12a0f01",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c503b96-6d1d-4341-8e47-1696c87d4538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a55773c-c9c3-4e05-8d8f-ceaed4789fea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d08972-320d-45fe-b959-cb137a641ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f806016-d2b1-4deb-9f89-ed0f11dd79c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c61de50-4712-4ec6-a058-d4364e91b255",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a487899-eb10-43a7-8aeb-6ee9e4c2fd64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e7b4b12-bf0a-4147-ab76-fc747612b69f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b995aaee-073c-42c1-8e7e-c53a0cbc6923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "393f1117-5b88-4658-bd23-319dc0e161ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd14414a-7a6a-42cf-b2f0-11f38e921cf5",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7441ccb2-68ed-43a2-b034-a3da0e33035c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36bfab33-83a2-4eb6-b517-73970fd3d26b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df8c64f9-2d37-4bda-b543-a61ab7c05087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ccecedae-916b-4649-9601-3c8e18f20045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15106e0d-0d88-4003-8170-2f71a0db9fbc",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bbb348d-bdf4-49b9-a8be-758dbb18afc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "161b8a1a-269c-492e-a31d-c146976bd12c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41457120-0c48-495b-a726-d07395365e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aff1aebe-ac78-4a73-a559-53ac04d10774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca4ef29-c611-440b-8267-14b500aa04fc",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f6f98c-4fbe-4374-af4c-9134597e16f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "068f7794-a6e0-434a-9086-eccb8e27eb70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff05b53-04c0-40aa-8ff3-b64371a38041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3eadef8-b811-4c50-a5bf-8f811ec02cff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "180f14e3-ca41-4ffc-be59-db7e34bf9f39",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "554fe3b5-08c8-4b1a-9a67-89c766464522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "350041c7-a19c-4ea5-acb8-7006cb890e0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6e9904-d040-4f70-b1ab-d890a140cf3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db2ddb57-fa01-47c9-810f-2bd8b218be65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5680c970-e768-4e75-878e-9fb50ae12448",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7d3f7f-2535-469b-b61d-e1abb3de756c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05325e86-2211-44d8-b15a-5174760dc4cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "661e3460-6601-4743-bd87-517995dc8c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec399550-9859-4fed-950c-30b883e250cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b74bd16-cf04-4964-94dd-7ade1aa045e1",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9372d44d-fb86-4bfe-afe3-40b9c738ee16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f1da187-a847-4bb4-bc48-3436c84287ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4bbbba4-2767-41f6-9642-af728c00c676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45d22d09-f2fa-49ae-af91-62f048faf138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f59af7-506b-4fc9-ae49-1254521d61de",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb2a027-caf5-492a-9d33-adac2803aea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c2f3f43-0828-482f-9cb2-769277b3c1c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4416827d-aad8-41fd-b6c6-a725d507a2a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6434196d-be46-4a21-87f0-3595f32ad569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "681c7b58-3a32-48dd-bb8b-9495cfb05399",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09fafbf-691a-4171-aff7-d3f51b92ea5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39502589-0a92-4baa-9189-d99f14cab547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b851b8ca-9baa-44ac-8ad3-57a620a2df6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1dc24f29-25df-44e9-b1af-dbd76685932e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4dd5d31-8f86-4273-b6df-883cf5aeef96",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a632fb75-e90d-42d3-844c-8592813cb2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63e8e537-26a7-4b08-a233-f81588e39b22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "109569e0-d343-489c-987a-72c06e9eb70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0fd382e-2405-4003-90b3-5d03d5abf6b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c280299e-daf0-4941-980f-225a5a1bf0f5",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d5ed80-9abc-4a84-8cc1-5e1f4cba444f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28e13c9a-16c9-475e-996e-524df0a30093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b8445e-edf2-436a-983c-8456c91420ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "64e08d09-675b-440b-a832-4d0baaffbf50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55f5aa8-0c64-4091-b69c-a25b5ab6325e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b9a529-1929-480e-9df7-63793f9f9bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd0bf38b-3210-4e12-93a9-844ad4a47dfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d28e4639-477e-4cb4-8269-fe028e4c2b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "24b3dcd9-5886-47e6-8f20-5d04e48cbde7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd2e00fb-8479-4876-bb3c-3cb61fef8318",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2f34b32-43e8-4827-b464-4ec28ec6133f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9252be26-8282-4baf-a2b1-09ca80572bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bddc3e2b-6232-4ed9-8b62-f55b2c9a84a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ce0fdc15-f0f9-43a9-bd49-f54e9bfb24a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "430d3266-9301-4a81-abcc-136bb9b617ee",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16a1bea-139f-49c7-a6e4-7db0c2200e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57f0368e-1279-4b75-b602-5ad916ad97d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c98917a9-e168-42d8-9c91-fc243bb3826d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "61e4f0ba-e7a6-4928-b1a6-2daee0dd5867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf61d911-9817-414a-8276-5a7aa88a7c32",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c444bc27-0dda-40de-8efb-fa041e53de9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "904601d1-88f3-4760-ba74-7657e9dd52d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa916ba-8208-4380-a796-b45722d406a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6de7951f-138d-43e8-b8db-2ebb047d0b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f4ad4a8-57d9-4dee-a967-83c6f57dab1f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede9cf17-1dda-4b65-8135-01e8b07df41c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "272bf6f1-1b5d-437a-b770-7490a4e5c24a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce1f4e9-e111-4a76-8636-5f38a5f7442e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e83c057-7410-45f1-8235-993ccf32b0e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "897f937c-5fed-4881-8780-d717457c7b69",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "466454f4-b45d-4b22-9180-d6100d1fb6f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "888b2485-340f-4a58-a65e-120f7ed8e675"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59433c07-cc13-489f-9152-a43b0c878773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1782783-3c1c-4c88-9005-89ce1a68629a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f125db85-d672-41f3-9582-ed5cccda65a9",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be47bc5-9554-4410-b512-940019963bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39287300-4341-44ab-8179-69c12a954ba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01293c89-c36a-433f-a218-b660aae9571f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cddc818-f4c1-4902-9dc0-d39962f2cfe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edbbf8d0-7e23-4054-b18f-1f62d0dd2701",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "848cb394-e862-48b0-be7e-4fb841032523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d58055c-0c6d-4b7d-80f0-ea9f15c9571f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3232fc-d83a-42b3-ba30-9910d054595d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b28e8629-88c6-43f8-85df-d38ceabcef9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7b1438a-7363-43a1-8eb0-7c37a279a51e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd18d3d7-dc8a-4ebf-8d37-d497a0dd0762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d1dc10f-f9d3-4138-bfaf-84cca067f87d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d1bb30f-e571-47ce-906f-69df34ba716c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b571fa2-24a5-46e0-b974-48c130a1134e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1559fb30-d85f-44e3-8d5f-0fbe09860715",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0843a57-09f5-4c6d-965d-235ef4fb4358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf3ea287-916c-4649-a0a1-c651a53b1452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26db731a-cb1b-4413-8104-21f99a27db03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b874141-58b2-44c5-8dd1-99e364d0c47e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b3f0b90-1042-472d-8fe8-566cbbc17186",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "803e653b-b592-40b3-abc0-ec3502e0f301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6ee6007-585a-4f8e-96c0-f425a1289fef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3fadfca-ffbb-442f-a899-7db65f1b766a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9f811a0-5dc6-4b30-8942-ea0a7ba254a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abfa9457-06a9-4073-a153-08ed05679dbc",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e831bf5d-b92c-4425-bd7f-110c12771df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec2ef18c-3cc7-48e0-a0c5-6830127be4e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e1771e-8bbf-4602-8e58-1008d1d5f9a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bcf32bd-2c93-40d3-a7a0-d456bf5f638c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c63ff9a-6513-47ef-bd96-2f00f54b5293",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c01c25-bedc-4297-a5e1-9d4728f525a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceb55683-f38a-44eb-a2f1-f4923247f846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fe4f8bb-00c3-4498-a8bd-d4134e068030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd6ed694-f75c-41d3-baed-08d9aa4c2b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373f8319-eacf-4b6c-83a5-1e01f3413c70",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab24e703-5c34-4579-afb1-0ab57310354b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d14ee7c-2d9e-4a59-81b1-da9c4de72625"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4793c9-96dc-4372-9b4b-18a4024126de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "77f17b8d-31d9-4e76-a49d-edf931233dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c8bcb7f-abda-4114-8f2c-bb3ffbffe4a8",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46119950-1319-462a-a681-867bb3b26582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "db98fd7b-e1f9-496d-80e9-e73f2d3457d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f532213d-3e71-40cd-af17-373505d5f699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f68a6c50-fcef-4e73-865a-467f4867b679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71c27f7-1f3c-454e-8fd8-5297ce8a41e7",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ed95a1-6ab6-4fc2-add6-4cfdf43f5e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c1d7928-e42e-4c3f-bdf0-32f9eeabf322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c50b34-f803-4649-86bd-54b8bdb46abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "691938b0-616d-4bac-8ab6-018b8082313d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "390cb8ab-22f9-454b-b589-68242a8043fa",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c18f67-4369-4c3e-b011-c72ce5b1e7dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "292ab801-46da-4737-91dc-0426783b122e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d27aadc-85db-41ad-b988-90f9d5f8055c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a404972d-2749-49cd-a5a0-51f7f265debe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92734e66-bada-4a85-8566-6d0a420315aa",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "222f46b5-b0b7-46fc-ad84-21bdbfdb7b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8d28708-9b87-4cfd-abfb-cb8e6edc7d45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "029772d8-0bcb-4800-a0a7-47943c9c89e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3666c84-4bb3-4815-8deb-44002e64acf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ff2875-ee81-4a03-ae57-21b99baf785c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03dca5a1-b460-424e-ae46-5a1f85efc50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff3ea2c7-0917-4207-b1ac-5bf4f361a764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68420cfa-2d49-42c3-8c9b-348da8b36fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc865a45-3637-4ce0-b970-272b3dbbdf74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b830fe42-62d8-41b1-94bd-a5f45dbe6987",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "871adfd3-f374-408e-be7c-0d6538fc993f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4034302c-0970-4159-99ba-2dffca3b5941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "044370de-3977-4280-8970-443eaa43fa77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "477f5c5c-2f99-4adc-b7e8-f30db09dc0fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2295d630-aea8-4767-bb30-2c694cf84bfc",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1348fa2-8213-4edb-a72d-7f171541cc6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdae426e-ca4b-4342-843c-7f64217e9e7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "031ff6b5-7cb9-4054-aab4-61effe9bb319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "17b08f9a-4cb6-489b-87b3-55e2127d9aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd90c7f-98f3-48b9-a6c5-59e663d687bd",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e59fc44-ace8-4c81-9e2f-02199f91d0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bb8ff16-b553-467b-ad37-817a9e6edae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63d2caf7-ddb1-4a94-88ff-a159c8e1478d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e276a613-4f9d-441a-9407-56ece7322ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b626d855-c626-455c-b153-b14c4a28b85a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13331c49-8c78-4b12-adb1-1c09ed3c679c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d20d31a-519a-42d2-a8f7-cf9dc0451c9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3143e6b2-a7f2-4e47-8dd5-5c57c78d8e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e72c735-9ad8-4bff-ae0c-bc3311f0de1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8b2db9-0094-483e-be74-09cbe058de77",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98982c9e-91d0-4a3c-a3d3-95a771885d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d1f3be3-d410-4fe0-ba63-c6d951cbf250"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7556ec5b-d49a-4ad8-bd87-0d6f0412f882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "60b5ee17-5d06-4f39-957e-5fd31ae08f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c301bc73-2b68-4566-89a6-d3845d11c1d3",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f536d5-0d88-42a7-aa49-409f0f3d2b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c37121c-98aa-44bb-86ef-b1f0d90d814b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae3d952-a76c-46af-b1d8-970a8de55050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "47f5592f-676c-4b1a-a877-b9b4d178beac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ced3cf-ad49-48e4-8628-4cf895a50c9b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea3f187d-30e4-4899-8a92-14c91912890e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78019dbb-5e07-4744-a278-937f2a89949a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76bafe05-8e14-463f-bff9-4a9392dee174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "396b2af0-24ca-4052-8942-24ea5598be17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "471dc5d3-77a0-4368-a5d5-3393370bc548",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "306b97a6-3c02-4fd2-9a5e-5111ceec99ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc00cf95-74d5-4c41-b2d9-de69ed231d18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e61ab3f9-d086-4c7d-bfc9-e7e801110a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c685146a-5f7d-4530-a269-5d76260d52a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41185ea7-3aca-4c81-8ecd-2a66758ddc19",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03310088-bea6-4117-83e4-302db461a04e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef141c66-04f9-49eb-a56a-ff711b6ba280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c90800da-80c7-4bba-b2bd-1e62561869db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "af880af5-7d24-486c-b9d3-b097e0e4d4a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dcaf1d0-099d-423e-8c91-92cadfb505aa",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af61f945-afcf-4177-85a9-2aa6cb28ee9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "504a12ca-0a25-4080-8ae4-56833096cb43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40bc4dfa-47f4-45cd-ba33-ecee1d0e8b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e1e8bfb4-ed5e-488b-bf23-25e26018c896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf28bef-df1a-419c-9cc9-f5af7ce00bbb",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b855ca0-ffd3-482b-975c-7e75ea7ce041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a3b788f-eaad-4a27-ae6a-f0533fc76043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68b1d1a9-392d-4aa9-9fa3-635888ca6909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "c85899c1-9599-46ff-a671-ca725412f9f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ae3ed5-05f3-4abc-8e29-973442c5580f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76368944-d8d6-4d13-820a-c89ac294e39c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42123ced-679a-4ff2-8a46-d75a6a9564da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9869b067-7fe4-481e-8a6c-e385f9854f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb22455b-6c40-45aa-9c46-3fa676a5ea3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d56c369e-18cf-4e2d-8484-2557b4c2a732",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "360ca6f0-dc93-496b-a41f-33df502c4ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2455dfa8-01a4-46cb-b757-46f8613e670c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7554a8b9-0249-4065-8557-1a158f73a38a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6c0fe9f-d0dd-4c68-acf2-089f66c71747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab5d87e-5070-4028-894d-d5b5742ba19e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c520f0-f1fa-4488-a57c-94c520e7556f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61cb6934-7a3e-43cd-a6e3-4b13e7737d0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72f935f-db2b-4cc5-b887-a4f201976afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "61c7d517-0a9d-48a4-9811-5389103329c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb5cb2e-31f5-40a4-bbf4-e7a47dd9b364",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0fa64d-2383-4064-a5ca-d46763bb3590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03845941-d0de-447c-96e2-a3938782fc4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1735ff33-14a3-4c89-9634-220e242eafa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eee7c004-ff9a-4840-b130-0247a0488d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7965fdd4-e161-4409-a246-0ad0281cc15a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ade1546-aca3-43f1-8d1c-6816340ddd54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a2f86b8-4069-4200-afc2-3be5bf82c553"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee687198-006d-4ae3-9519-83c0e77232dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "7d3d6f42-9714-4663-88f0-ca505403cae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d7bcfc6-6484-4511-8430-e5df4baa9714",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a199f2e7-5222-4ed5-b9b7-8b9c31817a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3facb8df-9afa-4a03-a42c-1bc6f1c8a006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a0c871-edd3-411a-bb5b-a5e192ead3c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d461ee56-a11e-4d08-bd92-6cc91eb4cb08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "644bb43c-eccf-4858-86d4-3041938a1c72",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e681654f-517b-4ccc-9675-917b0509663d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e02e8a5-0c8c-4567-91f8-cbfd01fd2759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2470482e-ff35-4e61-965b-cbfa561b0df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ce0d717-b74f-4438-8920-59c985d4056f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aeeb4aa-6510-4bd8-b9bc-ffa572dad166",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "019680ed-d35d-428d-96ff-fb19ed884565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "002ce65c-26a2-426d-8700-b19b85834b10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5a457e-1cf8-4bb2-a69f-43abd05839ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d80751e-ad9d-4580-ba95-e5f64675d490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369570b1-dd4f-40f0-9913-33a09c12e991",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcaa79c8-8f68-4100-826e-082059802787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eaf1366-f540-405b-969f-0167e199fc42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f620b6d-00a1-4fd8-ac1a-443e01d26e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d6f2bf6-a4a9-4984-bb82-6fb55b8b9d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598cc889-dcfc-49b6-8729-659af6d7f8a1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b69441a9-8b20-4e06-b159-ad6d19f1ac06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10b13057-c1f9-41c9-950d-75eed909344c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd2a43a3-135b-49b8-9945-dffd80a92e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4a2352e-f4fa-4652-a5e3-1a8199931275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa456e2a-2f9d-4953-990c-d0f0f4c8b386",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "200e6c4e-c808-40f2-ae0a-83518a5c7dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "372d3637-7e80-4b4e-85ef-0f5ab060dd0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79305cfd-2b9a-4a39-9a4b-08197ac02093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d79b681d-4671-452d-9cc4-044c963b95bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e72a11a2-ca2c-4ecf-bd63-16087adf16ac",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5002b4f4-9ac5-4907-a442-ca725842c56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bee7266f-fce7-4a90-98d8-eaafa8dce2ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8702d60-b7c6-46d1-9323-86925acf81e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0961cc63-48ff-4fc4-aa32-56b939a1d9a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973448be-92ea-4aa8-b28e-9d091816321d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b0b411-bd85-431c-ad66-127587d18a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "684972b5-a980-445a-a1b2-a50a9d231fcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e45f0d21-0bf5-426b-93b7-379cf5d4f245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b65cdec-7a1f-456c-a09b-94a97376c617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a8eb8be-d162-4319-8f2d-490dbedd7c97",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbff6b81-a0ce-4f33-9319-6b8729f50d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "452fb895-8813-409f-b40f-635e2e8b3868"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a29e73-bee2-435a-a68a-7c44c3539ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e88238c6-c8f3-4fce-9fc1-635332851215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc6e912-1640-41a9-b088-ba43afd8e5c6",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6269d2b-e46c-4a10-9beb-ee7b61ae3510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0936494-d1c6-4936-92df-97d945169ede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f93ba2-011a-48aa-91ab-6e6fd4b885a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "947111f4-a2b3-4bcd-87bb-db1a63416a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b9a4a1f-383f-4096-bb75-d45a31fec08d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03815179-2a09-49a1-9aa8-0fdce4ad288b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3535ede2-9484-41c6-8e60-a5cc880da584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b2531c-4a12-4106-8099-dbe6d0792d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8ae956d7-54b9-4570-a612-b2c9ebfb6305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66567b5c-a6e1-42aa-b4cc-69ca92bf437b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e1c97f3-8ddc-4ccb-9719-0de792b5d88f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1960c6c-689f-4d35-9d54-8333e398e714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ed2e9d-d0f5-43dd-bdf8-f7b9666a213c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "32d947c6-35ec-4d96-a22e-8075079427b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "134c1738-c8cb-47f4-9f02-c54ae798be6a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5efd6b1-85b6-45f6-b41b-8545a6a55c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6542ff3b-71e9-43e4-b460-7d5186e8e791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3efd14b-00cb-494e-ba97-a93693746717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "76a1350b-06b2-464d-8c33-858d67c8d43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf3db01-063e-49e1-b455-203c15756718",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "878ad3ad-153a-413d-99cd-eb3da9e81133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9b9a5c3-c43f-47d5-90f6-249cb1d2eee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "185b5dcb-43be-4c14-b0dd-607170a42b06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "519778fa-1d62-44bc-9c03-490524e186a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af8c324-1d2e-4361-89d4-da51286098c5",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b6976a8-a03f-439f-9976-fa7d0f94713f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "081903ce-5a9d-46a7-92db-6f71414af8dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8fc9c4-16e1-4919-89ae-eab6e2598be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d23a194a-22f7-4c81-8e29-28a23cc7c365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a93621b7-2451-4810-96e3-f069407cb103",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e789d7c-b151-4789-b67b-aff3e9bac9bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "719f1f63-21e8-4b31-bfb4-bf55c60436d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb47d86-8f13-401d-9f35-70fb6ff01b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a5cb97a-a9a4-4722-bd85-cd2140380c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f327c8-2a22-4477-aa37-28fe8c44d21b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c3944c-7ec1-40ee-8e16-024eeb4bb715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b245845b-43ae-4456-b2b5-400c2051145d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf995128-4e9a-4007-b796-9c2a2e725744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f83511ca-a1a7-4004-a145-acbb15e6dbb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca396ab-94b4-492c-a1e1-6c755497b4f3",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40dfd1d7-f5c5-4d09-b27c-10b5644dd662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5135c504-7175-422c-a4a5-d4902a423515"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5026aee8-2c45-49d9-899c-bef51db10bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5fa290e2-f257-414d-a637-fb0851e5d158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2debeec9-b363-4bb5-a449-9f3eb27511c5",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe02b8f-c55f-4935-8fb6-68dc57179e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22cfbdde-4c37-47e6-bdd1-92b49addbaaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f6a689e-929b-4466-8afb-b602f0b818f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "06e519a2-b930-41c6-b331-0f0f2365f97e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4848383-41e9-45d0-a7c3-55d7214f152f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09948098-a11a-4a77-9612-de4d131a628b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6b8f92e-f71b-4b86-b702-4b28f72b8377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76028eb-2ab1-4969-88ef-32e6d69965db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5b3227a-24ae-4020-adfc-c21548d4b7cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd83a2f-051b-462b-b10c-527099983f46",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d39dc21-a866-4808-a228-ea78e711ee71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08f5a6ef-ed38-4d62-bffd-21d0b3984a33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dafbcc5-f541-42a1-b0ea-2ac998a5fc66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc45828e-60f6-493e-8de3-d2cd1100cad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591d16fd-f2ef-4e6d-acbb-04e8769790a2",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4adc056-796c-466d-a2db-fc47d95f29c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "687ef9dc-10ae-4e14-952b-90a08adf2425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4476b729-00a1-4cb6-ab5c-5f300e223a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee0e8fc8-b47d-44f9-bd7f-3713c658fb24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eceb24c-9c53-40ff-9b78-118c6af5a5e0",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d17a5e-dfec-44a2-88e5-3243e7c2c8b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e98477c-cccd-4a4b-ae2a-f48a9b49410d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "853e3540-2ed6-4014-ab3f-6a57a042c194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0abdf2b5-42b8-4aaa-bb06-acefbfa7e2df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1731c562-32b2-47b4-8e36-26e9cdaeb025",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f31e719-52fb-4795-a3c9-08b97361b312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd0200ed-96c0-4cbc-b6c9-6ac6ac272c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec90da31-4e21-465d-8cb8-ee9ef21af750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "61b727e2-d269-4e50-a5ef-cde338d16978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a35e230-4d7a-447a-804c-c092a585c7b2",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "392ce218-1c25-42b7-bac7-762f2f9b730b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d5d3b98-bd74-4829-b584-7a1f9ec3991c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c120a7d0-4691-40cb-9afc-7450773fa177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7978ef8e-0cb1-4566-8133-81dc8e97a156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c50837e0-4e04-45a7-94a6-d9da4411f4a1",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d393957a-5b00-4980-979a-6d7dc47a98cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d2f2d85-0d7d-48cb-b5e2-9cfad3c59fca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810c730b-5786-4c29-9659-f48f09aa3958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4f7f4e3-5385-4e4d-bed9-4c6fb4b51e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4269027-9147-411a-9b15-5d15c2ef2579",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47fb2391-d6c4-4c6d-99e1-1cf05280835b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b7d7e57-2405-4390-b4f0-73b3109ff7e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d755100e-3886-49ea-9a84-82a426e4f6d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "54dc77f2-73a8-4cc5-b5ff-1451f888b829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9a4500-61f8-45a7-80f5-7884c1f77534",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd8b415-2ceb-454a-8aa8-1de7e6a9e9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a477900d-551a-429d-886a-2fbdda5807d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f9d369-495e-42c9-b45d-f9d1f4c42f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "06213461-42a8-4dcb-aa59-4e23576d5b67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2593978-7c7d-41ec-883d-c86cf0474282",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a55e915-8db7-4582-9fc7-57cbc0c4d64e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db459b47-bc74-4663-bdec-fb69c8d21959"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f0089dd-6136-4a4c-9040-76c7e9e2d920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "39db36cd-e7b2-426d-ac3c-a266005a897c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ad0f80-a870-4271-9bc7-3875231088bd",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d70d5d-d788-4312-8960-eca95fb88060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85a17d3b-555e-4f13-9c5c-e52139dbd0e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fc04c84-f49f-4b77-8d57-3da3755d597d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "56969f19-c18a-412c-8e58-53a61e060259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1ff62b4-9b02-454e-8571-632250637039",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ee41292-739a-4200-b323-d883be9e4048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d340911-49e8-4829-8913-4b9603836cf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d757e55-f44d-4f0f-ba79-97f45782ae70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7aaf40b-0130-4d0d-a7fe-a48dd913a6ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab6809f-dd84-43bd-ba25-e6a5ba0ab12b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6f9146-5da4-4ce0-acc6-5e3685abca8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0397bd0c-5b1c-4f3a-b09d-7a3292ce296c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f10af6eb-7204-417a-a342-a848f59ee018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8aff0d0e-a969-4066-8c30-76a8cb6e47e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c185bce0-6fb7-4e5a-92d7-48fd4850f91d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce682d2-3019-4c35-b39b-16dbd8dc5bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "886415a0-f49c-44e8-aaf0-5ccdd0bb61f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ca9fa0-e456-47b7-9ff7-4534fc2ee7d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "835d6ab9-de04-4738-a017-46447871e74f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f15440-9100-468e-a506-e46297de4e76",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a715a856-6e52-432f-a4ca-eccc0a403d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04fa5333-3e4d-48ca-b828-114d894d7000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "404a8b32-fac9-4a41-a7f1-695ab9ba222a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "edb7a99b-fec9-4b96-8ddd-c96b527e41c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffde1214-776c-41df-8e51-d2022e63d476",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c0eca2-bf6b-42d1-a05c-17dd71df877f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71d0245e-2c05-4427-b510-2b932082576c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32dcae84-d924-4108-9bd1-3f258b680ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4fb32151-6b55-4b14-9aea-fab1606cd34e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d71d1be9-de64-4b73-872e-d9dc51d8d15a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e35bc61-ee4e-44c1-ab3f-f20b7b7ab1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ba061a4a-fc26-481a-bb32-00be0658c273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba639d9-cec4-4c73-b023-96039942049b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "49825472-6d43-4cf1-bb1e-8ae82820f868"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "24c0ef47-71df-4645-8d42-42163a9402e5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f28c8d4b-292f-4113-bcd0-02c95afd834d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a2ebb3-da6c-4f1c-9b90-862d677d5999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "499cc189-d845-4e25-9278-51f72e8b4cdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a763830a-133c-418c-94dc-20e62f1f2f30",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "045fb50d-1c03-47bb-84fc-b5b355bf0e1e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "414f717e-c1c8-482f-96e3-ba753f9cb7d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b416c871-b16c-47bd-ab17-d14856af4d29"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "45dd35f3-bf21-4b5c-90bf-1166d0df67ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8853833d-925a-485e-a8f0-10732758f121"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d9204c2d-cc8f-4947-ae3a-10571fac5af8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e55b1c72-4f88-4f7d-b48d-3d01774ab8ce"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ca5ce554-cab2-4215-96a6-b38dde88afce",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "44f2f3c6-6e49-4585-b908-558ad79ec3ef"
                }
              }
            ]
          },
          {
            "id": "2000ea4f-e11d-464e-892f-49d3c0a8dbe6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7773eecc-c632-4387-aa54-b1648f88ca46",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "d37d5020-45d6-4a2b-bcc8-02f3c90de29b",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c1e5b40-defd-4a9b-8bbd-460f68cb7963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8b3c57d5-73cc-4527-9068-4864c43afcfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a26279-c5d8-461f-9e7a-523ebad7840b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a0b7173-15e2-47c8-9688-97a765dc0bdd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5afe76aa-a4f5-43f1-b449-b1d0692cf2c7",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "58ef2580-53c0-4012-bdc8-5a98b87c3502",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8d6686f5-dd40-4e95-9d32-572e3a07c05f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c0d4736-1d4f-4bd1-baf3-0e6663118fac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5ba4592a-041c-43c2-9e7b-7ccbd8afa2ba"
                    }
                  }
                ]
              },
              {
                "id": "0a3e2c7e-09ee-4e05-acd0-8ee847cb8858",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6531641d-1963-45b9-b9d6-1d44869514d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "11fe2e33-ffe3-4885-8edf-62a56d5a388a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b643f26e-c015-4e45-95bc-8787e7ade08f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8ca1454b-721e-4a35-a228-1a3c8f0b5632"
                    }
                  }
                ]
              },
              {
                "id": "c34de7e3-1074-4e43-8983-3a4bbd0efdd1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "49a6491b-6e4d-4997-8ac0-de0d520fe86d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "36493f13-9d6e-4327-80f9-ffb3b431d4fd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7e4022e4-3e94-4d5f-83a6-e1a53c1759f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a865d1f0-73c1-448a-89c4-657b93228cc0"
                    }
                  }
                ]
              },
              {
                "id": "98b7bc2e-b928-4cf9-8e25-ecc808394f8f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3db160b1-fe3e-458a-8742-d6c8b0d3e2cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eaf59229-8d9d-479c-8f05-460b4afa2365"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b101765-6a5f-4e64-8bc2-fed7e249e462",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e60fb401-556c-44f7-b3b0-c0f40e01977c"
                    }
                  }
                ]
              },
              {
                "id": "0f313bbf-59a7-4e83-a2a6-1b9268caca85",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3c62d22-6efe-4cd8-9a6d-899eea3e18be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f5a62301-f023-4bca-93dd-c4187f28e1d9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7215cf14-e304-47be-a43c-b7939ebc4869",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "28c69d16-214c-485d-be84-0682ebf8ea85"
                    }
                  }
                ]
              },
              {
                "id": "748c639e-709b-45a5-8006-bf4a8a79940b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "438efe96-29db-4e6d-b4e4-38499cb92b9b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "00c76136-2001-4ccd-95d2-ff3b28bcbc3d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "445b09c2-b9a0-429a-b44c-9a6428e83988",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c3c0815d-8e97-4250-8a85-ab091ca70d18"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "618819a1-6fbd-42b4-b77c-8d687b5ede30",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3acefd8b-e2e6-4994-a031-4de8d505c228"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bd06493f-0487-460d-ac5f-787f0c22ecb6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "608bbec8-9464-4bdf-9af2-ea9f20bd3a18"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2d4fb181-24eb-4ed3-8eb2-0a60639c9b5d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b2130bb6-1d9f-4567-9749-18c7ae1b3a33"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f5ac5945-e486-4355-82a2-5b896e1823f4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c734fc24-a6a9-4089-a5f5-932f013d5251"
            }
          }
        ]
      },
      {
        "id": "9a3fcf23-ca4f-498b-abcb-6a9c2adab118",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "3e6ca494-0289-47da-ad9a-12268ea13dbe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4634ab94-fc08-44ba-92e1-1c7285bbb682",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "66fa48a4-796a-4ecd-a7e9-f56ee04bc9b6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de9f57e-6336-40b8-bc23-f68eb085d540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ca8c735-4f66-48a7-bbb9-94e54ea9183f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac67fabf-2a03-4b46-bb00-3497f1ec4735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a133283-94d7-49aa-805c-51b7dc22cd25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d07b4232-e1b7-4cb0-bf6d-be388d6ad097",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f31f565-d6f8-4289-bb68-3adc2839192b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "257c324f-3d94-4369-8573-cf29cbfe2fdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f9d6cee-b899-4093-b552-b20f375f5be4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7ed7234-bbf7-4a32-89bf-c79a7e97912e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e7140e9-dd91-4d68-b9f5-2a3bbbb126e0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b38b6b-218a-4fc8-b1d0-d9a3d5f93f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ac91618-2406-42a2-a59b-6d68834613bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a25230-ceee-439c-89f8-bc91f62a03bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7313e509-d00b-49fd-9dbc-db7f13e9bc7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6131e1b-90ef-43df-81aa-1d156bc2d623",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ce664e-4885-4e01-b627-9c1f6e7d5e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1579259-9104-43f7-97a4-9f420e80816f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f753713d-e25f-49ff-9c53-fbb9b8857ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fa203ed-64d5-4513-a06d-415a90f163fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d87a2eac-6231-4ac8-a189-a2c4571a0e8e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a06127cc-5fae-4add-808f-cf49e64c7511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1b626ac-656a-467e-907e-269d574d533b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68d3229-be6a-4384-91e5-b36fc923c6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "28ba6cb1-b6e9-4c65-ac59-2134db9bff3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30a48bd-1fd7-425b-b616-306aeecd880b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c1f64c-d21a-4024-9232-20adf6f8a58e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "611bd053-9ec0-4304-8744-015be10eb44c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af2c07e-dc99-44d2-b832-5f627badaf90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b803c9d7-8231-48a4-8ae7-c178a268e0d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d094498-e95b-46d2-8e0c-dfaf8f367187",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee22a74c-d529-4eb4-9d38-36ad23e0ccac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3675cbc6-f04b-4f0c-859d-bdd8bedb5f8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df5b6a63-249c-4002-878f-e8907fed64b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cfa9b99-a889-44d3-b5a8-70cd5df06945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4940214-8ec7-47cf-9fd2-5e3e53ad2fc7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35035b0b-c035-4536-bf8a-307c2f96fb7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b58a75c6-96cd-4dd9-b9b6-36d378886f4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b8a4eb5-ed88-463b-bf2d-17e40ccda695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3817f9ae-e4e4-4dcb-b771-68970bbad9f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "966c971d-131b-4927-a6f6-d42e48c3830a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "834f9f46-fc58-457a-b02f-78c6747fa876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f3343bc-8802-44db-8d63-3d005c6e8c77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d07575d-398c-4624-b880-9b6caea986da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e80f2638-da51-4f4b-845d-323303553aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06068082-71b3-4aae-ae0e-c8cce8f47a27",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb4e318c-b09f-4f85-9831-9ce12a255349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e309b5f-fea4-4804-981c-4281281a652e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eadbb424-18ec-4d5e-a584-5a56299efe74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8798cde9-c9d8-4cc1-a44e-ab3a416b1006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f428cea-93ac-4748-9a83-5ff5d318e4c4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7948ae2e-0307-4652-a1af-978908cfe594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39a7c2c7-5b4d-48fb-a818-b2837f51952f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e7ab22-3f3a-430c-a47a-5a3d3a6c8c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e01f27a1-c5ac-4566-b7c2-675f841a6617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de884409-52da-48d8-a61d-2bbc95e1aceb",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3255470-dfad-4b9c-ab63-10636bdae8c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65d3113d-9fd9-432d-815d-4a7371a3ce6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab7a276-2708-47c7-b995-684dab04f0c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "202bdf2e-7471-45c1-b41d-45e4ca86898b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eff1569-ffc1-4cf8-a089-24f93e132345",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50436bc5-dd56-4458-97d4-059d9e267768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29d6feef-e570-47ca-931b-1c6ab0eeb53c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "436b4dcb-0b65-4313-87e9-53707460303a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "59622f41-2fe6-4505-9088-3f70ad9b838e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "509e2af3-bd28-4e1d-9ba7-49c10cd6886b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "212162e4-1793-4b94-99a5-ece240279038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "322db8d7-3a3d-4979-9ae1-f9e77b2ce019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0288665d-0bed-4821-aeda-0a263b318d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3711bd1-a35d-4336-97e9-4508b3a6dfcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8045daba-7465-4788-be66-ce649f603292",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff35cc3-605b-4b9c-87cc-4630b17d66cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bf381a8-c359-4194-bb45-f1f26b9da31c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a31d6ec6-a0b5-4841-9c9f-8a6b22f8e61f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b7cb34a-cad7-4866-bd29-46344343711b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4482805c-2ebc-4a25-a40c-f94d502ca65b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9520db4b-5c9f-47a9-9991-e0605f72a97d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5270665a-584b-4a8d-8153-6cc59a34792f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e28c107-d5a3-4840-9b22-2de8f818e4b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6eaf2f4-e1ee-4af9-837d-8ac8ebdfa598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d279cc19-7f97-4a97-b1d1-7053b62579e5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a830f453-9046-4932-bf9a-180fd1a6cd30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18d648e8-e3f1-495d-83c5-ce60846a0101"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58082d47-a4a1-4c6c-ba9e-09fe3ea298fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b72794ff-4ca0-4f35-b6dd-38984624a199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eeb4c4d-02c6-45e6-849e-84f4ae22605d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c72af608-38aa-4aa5-95b3-f12253217869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ff7cf83-67c5-4652-8d0c-8fc958083c06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efab02b8-4034-4b3a-bddc-da3253b11a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1a9305a-61af-4b4c-b924-21d92b2aca88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6946a183-a34b-48ed-b1bc-8992a76606bf",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f66b34-5442-423b-bb4c-2f87caafa5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8f86736-0ec2-449c-b4d0-5533e6014af2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9bd6de-4c41-4c25-b4ff-b7eb259da8ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36954a86-ab27-494e-9ad0-68e85fae5855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e3f077-5805-47cb-ab49-4f3714fa8fc4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "324613a8-846f-4f0a-abd9-4012fce1ac39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ad9fb67-faa6-42f7-b2d0-5347dea6f7a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e62d1d26-40d7-4cc3-8623-897e8d86f9e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56227fee-0d4c-4573-8c51-1f2d2312de33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4af10e1-be53-4090-8cf6-0cd13977ce70",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e4e04bf-7229-419d-adf5-fce1e56dbcb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32e995eb-5bea-4cef-ae44-744fd6b5e6d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20f2944-2602-46da-8fd4-e26984a8ddf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc038b37-6e53-459e-b1b6-c27f2de56d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5982c845-5fd9-4a40-bcbd-85a3a9dbe7ba",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe316cb1-aef2-4484-8c70-57e287bc6422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc0e831f-d3a3-4ea1-8319-b95cac4e7377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad0a1a37-dd9f-4a16-96eb-f7725cc64489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d28ade9-20d4-417f-9c01-015c655bddbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3164125c-6b67-43fe-93a8-f8d0691ab35a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0463ebbc-bf24-4cb8-97d2-1bed7c682cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eacb7f3-d296-4896-a553-a19f826eafe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e516e58-52aa-42c8-8ba7-9a8274037892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f78dbcb-1627-48f8-9f26-50dc70f58a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "047a2e36-c3e1-465e-b42c-9f4414934334",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6bc6c8-cee0-4ef4-a906-23420d478ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "287dfecd-dd93-489b-bec1-52481f9fdda1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc14f917-8595-4990-905c-7faf97b3b222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c142b4e9-e665-4b1a-b46d-0c9b3f8f6127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65190314-55b2-4e77-800c-512ebff99297",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c43974-f8f6-41b9-88e2-2e7e026f7453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a00a87e-d988-484d-895b-55465b16db72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8366e3-026c-497e-b1bd-544cba9ab97e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f674a32-8817-4668-9c85-8e62dbb63436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4457ea2-40b3-4b47-af16-2821904cf612",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bcc5c8f-c9ca-4c47-8c1a-25b47d674caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cc6f736-31c7-4898-a64f-17c696383d9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eead16e0-e474-4096-8fd1-826dc1d793b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ce5547b-1798-45ac-a104-1b0b1e8ab776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31c053ae-282f-4805-9858-34bcb55b0e2f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7934cc62-f167-42a5-8041-bdf038a9ac17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b89858b0-aa43-495f-8191-b8c500a46f5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ef1695-ba5a-49b6-858f-c9501fe3b003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11f46c11-e69b-44d0-9111-5bcfd1d8d1d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de0e1ca-9fc1-4dcf-a684-c803e2022de6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d30b78-304a-4405-b125-719c1f1df756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e60b60dd-f3e4-4102-890a-a68ac9cf7929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ae2b96-79db-4dee-a527-b53581eb2908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7151dc5-fd07-48fe-b3d6-09726ab1bb94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7d80ee-40b5-4d35-8528-281c40f23479",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "761a9fce-34a7-480d-bd79-5dcadbc654cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baad6980-ed87-4f36-98d5-383dde48b747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c0981b2-8631-4681-a7e4-0166a07d2690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "653b5b7a-83eb-4049-b67b-94aab02551c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28aeac64-815e-4221-8252-d019a11d88f2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee52a050-6a23-46df-9dd9-c5716bdf2583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7df8c0b2-56e3-4a04-9cda-195930e99a64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f531233e-2d9b-4edc-8755-3b0bdac2d31a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0032690-eb9d-4223-8c7e-f12e8c35b5d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34807467-ce76-47ad-a816-c9390e0e9c1b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37e2ce2e-14f2-460f-8979-c3c07e915783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfa7f889-1818-4cb9-8b1c-4df027f76ce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3c1920-ed72-48b0-a75f-5a4e2c85900b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0fcb02c-408d-4425-a27c-d8bf015d01e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0722f131-ccbe-4512-8fbd-8e69023743d8",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85792cea-4066-45e9-b8bd-e263ead06b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9777793a-722a-4850-94ff-5110edd91816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4076a5e0-558f-46cc-be97-5751eafe2f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d6ac61e-618f-400a-9f4c-c8a0c22508af"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a141e53f-b24e-4d20-9de2-add07df832a8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "31d1e14e-4013-43a8-a73a-a742c328fa5a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe68f10-8aa9-4620-93dd-2585f0175c66",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9ad7b3a5-e5ce-4f7d-b5b3-3bc82f00a37b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c7484de-bb87-453e-8e6d-e9116cc1f078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b31a7f0c-822c-4f91-902e-b2ebe4f4f35b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97429588-bb52-4d89-a13a-c10ea061f8f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db56b83e-2384-4a7b-8c20-ecc1e0ab5a49"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2fa071f-8665-4dff-8c4c-d5c44ca88bb3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e5d0d80-2b29-43b4-8a21-e523f0726fc4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3dfa8c6c-61e5-4dec-9421-af1f78f44086",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6bbd5187-57db-4ab8-b404-6544c1b57522"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1cabee6d-2086-4777-bc2d-2d96cd424a6b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "28ec6b1b-6c94-430e-a8a9-6f2a49ed03ca"
            }
          }
        ]
      },
      {
        "id": "bd85aea2-67c8-4b97-b7e0-79022ed40b0d",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "0386b6bb-af3f-4245-a611-17df3e660039",
            "name": "Negative Testing",
            "item": [
              {
                "id": "13cc2c2d-5720-4933-88e2-e02898f9f04f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4fb31d3f-62b4-4258-8f07-838ab3c82b8a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8583b6e7-b03f-45ab-8ae1-d7df4e82eff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab67fbcb-aed0-4ece-919f-ea0f0d246fb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7421da5f-d8ee-4cd0-a2ef-dbc0475dbf97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b62548e9-a3b2-4b28-aa44-19107f398acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4aa95c5-842c-4a7d-91f2-d3fd29828642",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5030f671-52f1-4354-9aab-d9d34443a8ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b86449-9288-4688-a751-70d622f5ba2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab7f3c2-ae53-4995-9488-0f061c509088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8831ce5-dedb-4e92-8a29-756d06be820c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57a5376-f874-432c-8522-8ba59030491f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d65721-bb8c-41c5-bc5b-d587dc0ffd87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a220a528-2c79-43ea-bd30-12d977035cd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f841fb-f96c-4ebf-8ab0-2438bb357baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2396e11b-7e50-4d73-a8d1-2a4344c14ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d45804b-2bd2-47e0-b740-a924e684d83f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea2496a-e946-42a3-bb62-af555e16128a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "542a47b7-f61b-48e3-a115-e14be960395a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc808e51-2da4-4dde-855d-4a02eb7bb15e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f132bdf4-28bd-4643-85a5-d9c6b14fc726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d43e891-297a-4c0b-834b-b054b36a0833",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28cc76ab-7677-4cfa-b092-fd1b1f12a9af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62786431-8cc2-4b54-a049-8c6a35bb521e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01906eaf-a179-4e5c-971e-a15818ed6127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9aae4704-bd7a-4c2f-9cb9-b58cfd758f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da237cc-4026-4ffb-a245-825a94cab0a6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6341cb-6109-487b-9cc0-ab2ffe9002b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d58cbdce-24a2-4c73-affc-8462c7a651f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13bae80a-7c7a-464f-8127-e210f30be1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "806ec1a6-20da-4ee2-9d5f-48d1045d9df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "022d2a1a-b041-4ab0-8de8-e061e8cb79a3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "306c0426-2992-48a3-97cf-5fb743052dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0832770b-793e-4d1f-a28e-32f6769a6e2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf38123a-ed33-4ea7-9609-f4b04bbfe84f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f897776-9139-4396-af10-20aceafb2626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39b5813c-a099-45a4-874f-0986cdbfd70a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f0a120b-998c-4151-854c-a7423ca471cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d03f90b-c847-4ef4-bdfa-0d357d0eaf45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb80a60-3e92-44f0-947d-3889c9b3b58c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e574215f-1fbd-4c0c-89da-927d5efcb64b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b48b30-3af6-4474-90f2-5fc8b788dd38",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef7d661e-a57f-433c-bde3-7477a47f7ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d866e909-092c-45e9-a1d0-61f622c9db51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b23d079-9c6f-4cd1-bd34-81d6be8c5485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "74222672-3392-4655-adbe-040b9343fcd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fda9d34-4277-45db-82df-1c84ae07e2e3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c66ab6-8902-4dd1-b180-addb45857d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcc99794-d790-4c52-9d04-d0c3c9284dd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb17234-1c36-4013-b09f-64057fbae431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "63222410-f202-4b4f-8445-655d0e0dfa21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c751e23e-90cd-4776-9bc9-577df918fb4e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df3512ff-1033-45f3-8e8b-7deda0f303e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3b2b1df-9ed3-48ab-aa53-57a6286332bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a26eb2-c85d-475b-82fd-18563d2a08fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9af15ce9-01ae-4dc2-bf14-0a596efb5f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec6791c-f02e-4bd6-b5dc-541d2ac6afe4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe67a89-791d-4460-a498-fe99107ee272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "964176a4-a926-4f18-9a87-c1cf967b3095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93fe4f45-3ec5-4c0f-aa7e-07aae5759f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ec076a4f-2c63-43ab-832c-72da84a721af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc3001d8-2539-499c-997a-ce4da2137319",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af87ccdd-6055-4e1e-a6bb-831a7691c535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fff0234d-708c-4faa-9695-e32df6a71303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2114a94-588a-4c7e-87db-dce8d0aabf7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "86800736-f7c7-4c1f-8610-c629700f9b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4fd908-7147-491f-9aaa-82ef98111e6d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb9d0ba-81df-4e41-85b7-f9065cef5ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5662dc9e-1caf-402c-84c1-1424d74386a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "460aa840-d13b-49a6-867f-bfa5a8ba9336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "938b2400-6e52-4a4b-86d0-96efab3a23a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb7b7f2-8ffd-454f-b2aa-7b05a1263998",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a58c5fa7-567b-4e5f-8d85-f79374cfb5d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a11509b-abb1-4c69-b637-20e392f0f8f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e608b2-255e-4874-a5cd-0e67fa118b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7192bfcb-4b40-4981-8ab1-a58a3dec253a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f197b2-3511-402b-822c-03e6a3ec3ea9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1f82a4-9bbc-4a5e-b87a-e753dca200f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b021e97-8bdb-4c4a-aba4-c419b7e0bbb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9381832-12ae-4367-94d7-387fffe1f433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "389f52bd-28c8-4a41-91a0-8a63c727ef01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea59d674-dd94-4961-99d0-c26915d3dfe9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc7a8e4-069b-44a8-998b-05ff4b01dcc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "615bff14-856e-4582-ad5a-93fc3a825987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2114cce-3f95-4b71-ba82-550bc4bcaa64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9a34a38-d51d-4089-a2e3-d9722d25241e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f81bb5fb-298a-4b34-be4b-92eecaa990e1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b83b1aae-ab9a-43f5-87dc-9f4f48dc439b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0907d6c0-7330-4c74-a1c7-c4b7b252fd5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75fd2531-1914-4484-8b7f-c816641c27f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "68a0be4b-7df6-42d0-86b6-32a76748095c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df0b7f01-b3b2-4e04-812b-d2f03e30acaa",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a9b91c-c2ae-4725-bd32-9712a68c283a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73a16cbc-4b05-456f-b399-c57708071619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1ce554-c8f2-43fe-aad4-6dcb458f8979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58ce27b6-11c1-41ab-9586-aa48a28ee2c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cbce20d-27a5-441c-a746-ef353806cbfe",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c4b1e59-5af0-4fe8-bc18-13322f231fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f91ac1a8-922a-49be-8ef4-da62906fbf9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "472ac567-30e2-4eec-b597-5e214e4d60ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17caf210-23c1-4bad-aa3b-c7a0bd6275a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb93cf1-25a2-43a7-a47d-c0d16b6ac02d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21c5213-b731-4c74-83d1-f1ee6acea4e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad119551-3b70-4f54-b4fe-3eea7042289f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "878e745b-b3c5-42be-b46b-b8c477f24813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "156b4588-e3a3-4f06-9cbf-caa5289ca24c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f45a95d-4e48-42bc-9999-c75a0af73896",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d332d4-a906-42ae-9737-74ef359fbb74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b7cbcf4-0935-4f10-ad21-8091975ea337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "774f4bf4-066b-4c5e-a258-e93be35eb5eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3eec85f-9b9b-431c-9b29-c14cfd6dc7aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6333ba63-2571-438a-ab39-2882b9920048",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a17f3b3-af89-41c6-bb02-356bebe82717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c34efc0-75ab-4a53-af3c-055455fcefa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "515d3dab-6704-499e-8959-24b85beb73c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0da22c9f-944b-4e22-a73e-41128cb803fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a7669b-34a8-4636-b02b-b838cc35a2ef",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d66ca5aa-c6eb-4db8-ba6a-dc85498f1ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9426359c-2127-414e-9d17-a7208272ad51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a05a2135-23a2-46e4-910f-4cc65ad3cc98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3dfb894a-fb19-4bca-83f9-e6c31a5e2bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8dfcead-778f-49eb-b013-ce491cc0de41",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "100390c9-37c7-4909-a1e6-267653d59c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d251c11-4506-4539-b570-8bec70888c58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd7b590-8723-4767-ab64-eb9ff367a7d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3adb24f9-b088-43c8-879d-ef14d408475c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b88122a-cf5f-4011-b3c0-a9aaa44e0aa7",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea1cd0d8-d653-46da-888f-e80cd5d64583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cf7a8d4-090d-40ee-8bb8-7c1a0b54169c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab993cef-a363-448f-a924-4099e07d460b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a91200eb-97d7-4c2a-b2ff-d81d0f08a081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d93f4c0-1157-45ed-a401-bd7038437f77",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d77cee-ab02-4d9c-b986-d8501d89987f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81e3b958-daf9-4b26-a13a-e109675151e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d20cb13d-fb5c-45a5-b8ec-07dcaa3f0a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55e41f21-a36e-45de-9170-fb0abdd036bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76daad49-cb25-4f1a-b026-f6c277051f4f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ed5b86-549e-4b61-b52a-5925fe3e2559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d01d817c-cfcc-4fc3-8e8c-9abd96292ad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c1bb26-6664-4e11-9634-a88ed12285e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7a9bb7a-b835-40c0-ab83-9bda6db49f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd2cdb8-9657-4b39-b044-428c40d888af",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc22a349-7ad0-4f2f-bd71-a696847f4754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "867a5182-d5da-4c20-890d-5b05ef106e78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd4a5d4f-5d22-4827-91e0-903aa31431e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60c60696-b121-48c2-b70c-a21f22f9ca31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0726d0f-61ab-4dc9-b666-e391051f08d2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d806c1c8-0c56-4165-8620-b03f85391a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dce24b4c-7f8b-4890-9be9-39379ff78bcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "345b4da7-216f-4ad4-b973-c403a1d5f7ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32205847-22b6-4877-a0fd-64d77a924141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1e51e0-82f0-4ccb-b219-7cafd69a7fdc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e27b242-5ae7-43be-b070-83f98bb918cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "902d4cbe-4ccd-429c-9907-f4c12c10f60a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "836dcda1-a2d5-4a02-911f-5bf98c22ce73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0917778c-98a9-467b-8af4-9ba702d314a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f5192ad-3cf3-4e9b-b3b2-da1e7a6b31c4",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d87ea67-78f4-42d9-8040-ed82fcc8fb22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79a5ad96-150d-4856-b944-effe838b0293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c77108-ede6-4416-a49b-8db850ff70ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d4e1e73-525a-4041-bd99-fa72639f3036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a72874-9e26-49fe-8025-5496895e6c6e",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdbd6853-27a3-4e62-baf8-8d8be9949f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeaf9e94-6752-4417-b114-048d0aeaf17f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4c4e44-8865-4167-971d-02ca8827b895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21be81f2-d7a5-44b7-b67a-3c804a32f8e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f148f59c-e4b0-40b7-8b20-9b955a77f0da",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a323e7-82e3-4fc9-891c-105c008b7fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e09a241-5eb0-473b-b3d3-1ae85e90ae5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbb73425-9289-4b79-87da-0fc7cb67426e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7638b4b-9e8e-432e-aa71-4bc8e2cfc4ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca18e0d-7d95-42e9-93d8-12d21d55ca9b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1219031-a2a9-4410-b955-ab887d2a8ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "097914f6-4c80-4de6-a632-d57567435ed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7728302-f23a-4fe1-a634-8c069263176b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1053d98d-ef07-4c59-9869-eb570a4d3eb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53636a08-36f2-4fbe-819c-364a4bda72f4",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a90556-bd6a-4f5d-9517-2633dfae5a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d849bf37-4fb0-47e7-be39-2ceaf221d835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b4998c-f1d0-495f-9e63-42512da60959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fdda3cf-367e-42fc-bf4f-bd96dad7c311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7edf7975-9440-4ed8-83f4-39356e6cd23b",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78eb4123-0697-4653-8d54-6546d111edc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d4cd439-1888-4dcd-81ce-c35335b65d76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ef07b0-54f5-41f5-afac-9cd6742a2793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc6c62b2-4a1d-4dee-85b2-fe5cf731aae8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cef32093-232f-44dc-a5d1-0284b17be96c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b2c67907-cb88-4f1e-9b70-57ce788b5024",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a7a45e9-0d7f-4ecb-9d79-c792d76aa551",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4ceaac9e-abbb-4cb2-87f2-611042f0fefc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98c352f6-c9fc-4b4e-978a-d79445d3edc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ac723975-8c7d-4cae-a9f2-547550363978"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f48c707c-0965-46a3-aeb2-04519e326338",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30a045b9-acd1-4574-a6c9-9b1161a1658e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3cc7e75d-54a6-433c-a5bc-3462398906d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a9444e66-f02e-4aca-a479-9b3a87e2794f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88fed28b-0abf-495f-93ae-b1bfabd318a1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "aeb25472-8c0d-4eba-903b-3d4dc3293e1f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c674ba51-fd38-490f-b908-1bc5d11447d2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6d0f92e1-11c5-4c04-a996-c21bed27e71a"
            }
          }
        ]
      },
      {
        "id": "bdfe73fd-bb23-4659-81b9-4a82a368821c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "2f85112d-f580-40f3-9d2d-54be3370f0fc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "17abbcba-01e7-440e-bb1d-480ea8ffd41b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e34f41c8-d096-4fef-b1d5-23cbf063b64f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f12cde-6ec8-4804-bd17-b9d64595b447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2ca578a-917d-46ea-97db-1fbfd8939b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309b9893-9ba2-422f-b4e3-c4af76b1b140",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2924f4-0c63-4ebb-a11a-f55f4defb512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a071f167-e24b-4ad4-a043-07c4d911be7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f8c20c-e76b-4dfa-8857-6c02b69d6c6c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caed0307-8678-4887-8752-a6e02419b904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69e9fb97-76f2-44ae-91aa-04eed7868f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b18b6dc-d6a6-4aeb-a0b6-fe49fb40c1e2",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02cf1c8a-44ad-4fef-9d98-22ba60f57158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01579e11-b692-41d7-997e-939e5299b6fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "537b8bb0-401b-47bc-98cc-67f7bb776aad",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b30810-046f-4f42-badf-0ebbb7ea649b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c755770-6863-4bc0-9558-26115b62a527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3929b443-6911-4c96-806f-f662d52fff0a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc116a8f-c046-413c-802f-19a14298cf2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f64901b-ec39-48c7-99a5-cb2e474defac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca9be23-792a-4671-8037-88c9651afd57",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5073af6-5f65-4e49-a720-fd3fa36f6ffd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1be53d29-a3b6-41e4-8e1b-f9f518a4f4e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be9357f4-25d2-456c-b096-ef13936fee4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd51f8c8-c638-43bd-b360-9836e1d7ab5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de337553-593a-414c-a3a9-74071796e5cb",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3bd173-112e-44d5-95ae-a008285c83fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d875559e-b500-4259-a789-72011d6086dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b0fd14-089f-4d09-b4c0-007117a8b513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "666ed484-bbc5-4b27-9455-c1269e0b78e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc9b2933-8c4b-44d4-9961-ead051e10ce7",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde0dc6b-f0e3-46db-b67a-5a5067d2f683",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c6dccc5-9687-4e7a-950b-5a3bba84f43a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e36f3177-5165-4586-8e00-e01c81ae000a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00c2c350-dacf-4eef-bbd6-b1ece6d7b3aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec4489e-ed9f-40ff-8740-18d902ddbd2a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7871b270-fc71-4c29-b66e-bed5f889469b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "603653ab-e1e0-47b5-8425-722757f1b0f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a4555ac-c34b-48fa-9455-878afa8e4d25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58233737-2f5d-4258-9f4f-674b5fb35907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdfa95c2-5991-4186-9cf0-4ac40a60a15f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a8af73b-b1d0-40ee-b279-987e238c0e9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7d9be2c-d739-439e-8277-acb3611e36d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba6b2198-10f7-4bb2-b17b-a416b0358d16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "825d9f6a-1638-4225-8b88-da4dfe2516d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4236924b-2e7b-48f8-804a-6b927b3b8b62",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d42d3676-a5e3-4658-8549-00e64f215930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a161dd3-b642-496c-82f7-9d529e47dcc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "042ca0fb-8f8d-4a14-85c2-1b91f04618f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62919662-27ff-49ea-9349-e13de615ecbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d07aaacb-3ef4-4206-85a5-b351719abd01",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "885b2ed9-a1bc-47a1-af19-68c31df51051",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0aa6caf-4d39-46ec-9260-a8f9bb2f7f63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "777b6644-fb6c-4229-bb00-8262a63363a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25c33d39-c748-473d-925c-93af2eef85e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae414f13-4de8-4589-8a65-6213c014a136",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f5b66d-e78a-4f16-b351-19a7977299ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcf5276f-1767-4984-b441-f2fa68daddbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df8f4f1-c346-4226-a0bd-3a8998dff342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b999a2f9-ad76-48d2-995f-0eb85e709a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "412af403-f3f2-4bc0-a54d-3a37dd32f185",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3666b4f6-4cfc-454f-821f-a6fb1c4be3a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a332f07-9a12-49a0-908d-e5f12862e0c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae1bd70-2a88-4cfa-8a2f-c60525285080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e342b26e-b533-4af3-bb27-a18aad420090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec9275e-c5f5-4727-8dc4-4d56d4fb12ba",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d0db52-3227-46ea-b851-d42ee31254fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "499d8e74-19d2-4af3-982b-317c59a1b525"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dad1dea-ba8a-41d7-b11c-51c91e816527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "964e6e7f-9e14-479d-bc95-7738a1dfff61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec158deb-b79c-4469-8787-a2a2f4fd2e4d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76975193-1763-4e0d-9790-3f4dd0cd192c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84fd3639-cf57-4de5-bf70-4dc1eb536c4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "201a84fd-2058-47f2-a9a5-5241b6df6fec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9c682e5-1dba-4076-9cc5-5face165065c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb20b6d-3214-481d-b6fa-af24d651775f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "569226e8-a81c-410e-ac9c-734a1c7b21b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5655ec8b-468c-4f9f-b7db-0af13375b001"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b81f45b-fd25-4337-bd38-ba02e3070d13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62e753bc-c1a2-4eba-9b5e-afe22ee57ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abcc4c58-71dc-4a99-b45f-edce9b7f1f6b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91767772-9d8a-4ed9-a3c7-96f565af629e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b0a3b38-0d07-4f66-8b78-33bf862da916"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8727357-c9d1-4d58-a697-20f860679933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23e80b47-bb5c-4b5c-ab39-5b284f275889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e24706e-b136-420f-a31a-c5d711a9de4b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71854d82-6294-4438-a47c-72abff870313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65a7ae25-6f9c-49a7-bde1-9900c3c279f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1006f27-a6a4-4c16-9efb-461580b70ec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0ea44d6-8e7e-4a9d-bbe7-200947ed6017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "608eefa2-46e9-4798-b54b-24e2967450e3",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f46ae2d8-062f-40ff-823b-b8ca9548eec3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2e4b945-177f-4e3b-ab0a-30c16b265d1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8652a64-97c4-4bdd-ae25-45acfbd966b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1f661d6-b792-4de2-bf52-db985b27fd46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b44753df-1859-47b9-b8fd-1c5307ce5da1",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c5aa474-0951-4af7-b773-56c6ee6c9c1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "336f1437-121c-4f71-94d5-0f9c5aaba8d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ecb703-3a4f-4814-8571-4156ee7b8591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3c67f29-4c1e-44c9-b4f9-dd641a239d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c010a71-5af9-4e91-be72-a817a8b4eaad",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76d775e0-638a-436e-a1ec-704e85c63e3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7b47981-bd43-435b-85d5-14a97a21eaf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "727fe114-60c9-4c0c-91c8-9dc975357b7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12294ec7-c8b5-4dfd-8e4b-77e04b660009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9575d888-0e3f-475e-922e-76fad5bfce2b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "016e51ca-22f6-438b-8da5-babe7a8148af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c16fbc94-4ba8-4147-aa3e-313eaed900a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48937511-4419-48e9-98fa-786717e36ccf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0289e13f-d284-4aad-89fb-077e6bb55a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9450f31-4e06-4546-b6bc-da568f71d48d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24aaf362-14db-4dd0-9858-d0311eead640",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2a46c2d-22b0-4fc0-ae20-1341116b525b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d187b188-9fdc-411b-a157-22ec940a9ae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "504598c8-dfa5-4984-8258-d23fe430d8ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9963b92-b50c-4ab8-af3d-bc72ba06d44c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a42a710e-57b7-481e-85c7-ce3d49527798",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c1c85dc-1943-40f9-ad3f-01485a1ad11f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a600f8-cffe-4ed4-8632-561e8a7db0a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96f8cf67-2976-46a5-bd5b-1118a6e6d4b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82aa7943-0091-412d-94b9-27e1f9515c1f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72518930-a86e-4710-8eec-b81820164563",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df1983f6-ead6-4b7a-8fda-e0b81a0cf1a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c44c45d1-f458-4be6-92e6-b687e99be920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2cf7a7c-cf4a-441c-a00d-c48085e14371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7747325a-0ad7-4e07-bc19-77e557924771",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9065bca1-2123-4b13-ac2e-1e0df2813a95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30ae8383-4116-4991-aaa1-cec477daab22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50e8455-fbae-489c-bd6a-05b29f62ca8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57f58c1d-0da8-4591-a63d-08658c3f8121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1110980f-71cd-459a-97bd-7fc23a62df9d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a4d127c-3d63-49a9-8193-258b0ffac6fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce69aa58-8283-4ab5-836b-e5227171b84b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef5fe9f-0b0b-4e72-8401-114bbbf052d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3968aa60-1073-49f5-9299-488003974311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87b0eec-cdfc-412b-9596-94cfdf1231b8",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1bbf720-8a9c-4d28-9d23-706a291e766c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "659781bb-c7a0-4c83-9cfe-0c1f0495a685"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b7197ed-9932-49e2-8bc6-a932af0f3c08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c95e11d7-1b8b-4bf8-9d56-44ae1ee80501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39b0e936-8b08-4753-99bb-c8df988579e5",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "943d5068-c0dc-4e00-9ed6-85b93dbfe25f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4cfc00f-efd1-445f-898c-eb577c77a144"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8837675-221c-41b0-bfda-77ac8a2e71e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be53e8e9-1f85-4b69-baea-263332f7f3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0095731b-237e-48d5-93b0-5e077da58932",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19cd0e8a-66b4-41a8-b5a6-e32d73db824a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf5df205-3e65-40cb-ab66-f850e9e60537"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d461025e-0fe4-4a88-a008-7947fad280c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "033528b5-6f6b-45db-b03b-c89e19338efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9c776f-2525-4ee4-b8dd-e56adf564921",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab252f1-2d0e-40d2-b18d-08d99825bc1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89be89f5-d68f-49df-8c67-c90c34fa436f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ff7e6d-3c41-48e9-851e-634856a509e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b07577b-1b54-4898-b2b9-e79861dfd374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21fe2ad7-e29b-447c-b202-f305d8ae54f5",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94271b90-feca-4570-ae9b-5aab75910203",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15c81ebe-c4cf-4b77-89c4-d8fec9407b98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c78d4c8-44cd-4e8e-a79d-2ebe70801782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb26329a-a2be-4867-b13a-0b85096f19f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb00b33-f0c2-4309-b745-f3f9248ee919",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64eb98ac-5572-47de-b85a-02ef23928abf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe693ed7-d01a-4adb-9d40-c288207651c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "447e88e0-2c6b-4196-a374-d0882cb8df11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0445cc8-65df-4f8f-bbf5-992f27f342aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d992315-7c96-4e84-bdcf-64517d03019c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea87132-80dd-413e-b068-4a6e4171279f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73089fe9-ca34-4a2e-aff1-e5711d6cd6d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3581ad6d-32b6-4206-8ecd-31c71a24f679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c23fe3e-db41-489d-ac87-f54d60bbca2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b12acdeb-d135-4bd8-a9d6-e532e5e8f136",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451bfacb-be85-478e-82f8-23cdf47c72f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f35745f-cb38-44ce-9103-589cdec913f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db8df1b2-56d3-4c12-98ce-2b5140602dfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "167667fc-d918-4802-a3bd-58d23b8ce839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "571659fd-38f3-436b-bc41-39b6b432fc53",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c0a1b0-9c7a-43ae-ac39-26a7620ee8eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "938c2a86-c786-4774-b81c-f381bb7d80bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac2af2de-09d5-4a82-9235-9a544eb4dad9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6552980-e81b-4080-83df-186d2c65ec7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4585326-9a77-4f2d-8e37-1850f6add791",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da38068b-dbec-4060-b67b-023f65b2a38b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb9d02ec-49b9-4612-9f92-ee6c10f47f72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57020ddd-edcd-41a0-a101-e9180273946b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d11b12a-0539-42a4-aaf9-e2f642c32cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "337d448f-2001-4784-81dd-dbdf56323d75",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc23e6b5-4749-444d-b291-74e747715e44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a251dd4-098b-4fe1-bf55-50f06b5eaa4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b0821b-76c3-443a-9aa9-ccb4bc26563b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70dae200-8e59-4f12-a5de-74fa559bc8da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "774ccbdf-29c3-4785-8331-de31c79ba0f0",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0026b714-e4bf-472a-9562-4540d98593a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ca26ff2-32dd-402f-816e-b32de17ee805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c1a2f8-b8f5-4c6c-9e24-bb7fff4a965c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dce1d811-0a7d-4ece-a3c7-61f4970f3efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8add0a9f-4901-4a45-a30c-6e3ce800aec4",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8adbe9b-10e2-4852-83e6-03712c1c4c5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fc7b8ff-6315-4ced-a659-588bce1fb433"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2293e3f8-cdf6-47ab-908d-3e79476b47c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1d0c2fe-8d74-4300-ac3a-11a95dd606b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a753c429-02af-4511-8e0d-7f136c680693",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e12bec7d-2bd2-47aa-b123-28f0d0a484ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db431631-b8c0-4f59-b341-cabb21d9f4b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7eb3fa7-265f-4212-8c69-f9204ea37d04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a353e9be-2eca-45ed-857d-2966ffed9f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76efca2e-cb13-4c11-980b-690d28c463e3",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07853189-487e-4904-a1ba-4a27f653117a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fc4bdb0-7c56-4464-b5ee-3f6dc3bc9b89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d6d208f-b009-41bd-9348-4d9395e4ce49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23a3804c-04be-4a46-a276-dd8832290605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca7cf194-7a67-40ca-bd15-e34f6c85e2eb",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd02992-ad73-4b4e-9b4b-106d85a1f98d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b6faf27-c7c8-4b3e-bd24-f658fa6aee05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "304243e2-2f9b-4392-8d9c-c79dfc95814f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39f7b4b7-1437-46b2-8d7b-98107216252b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52135568-8f80-435c-b241-5b958af661a1",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b338f4-a07d-4e8d-b753-51532d99f758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ad8a01a-cec0-4d99-a247-fb265490865e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8665dfc3-6b7a-41c3-b679-4ae0ebb48900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95fe4258-11cb-40d3-bc7b-5f9e8b4242a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a05b0230-998c-4283-950a-db6019131833",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff12a246-5c87-4381-8cc2-486c2578e6cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fedb5bd-64aa-451e-9f20-8e18d2848c6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82db4e83-84be-4094-9997-6617f4dd856e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f3d6a6b-8703-458d-a506-8d489712a9ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccbbc7dc-f471-43b6-b474-f2e28c7d4191",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e71fd51-b578-45df-8b5c-07c3a2b2f16f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95cd6f94-76de-401c-be02-d2efa057c6af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "126b2f6c-bc9f-4d02-a549-3cb52d78ec71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc2b0024-e02f-478c-a836-07bf24908ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de510427-0518-407a-9f91-25efddb0e533",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b16df79-9c95-407f-bfaf-584e178876c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ba762b5-e0c2-47ce-a35e-869ebac8c417"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c476cc17-b097-49a3-86c2-f835acd4ccf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a1fc45d-704e-4000-a122-4414104f7d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f461476-34dc-4cac-97c7-7ea18e448ea8",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "341a9b7e-2da1-4f88-a405-21ae045f13db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bebc03b6-5477-4960-8b6b-a54c86834841"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16994137-fa07-4850-b011-985b49ad2cd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22db2ceb-9eb9-44cf-86c0-d5e8287a34c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "209a8552-1ca0-4758-82c7-9090cf937ee7",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4edb771b-570b-46f9-8097-58fc54e50436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5a0024e-ac0d-45e3-ba1e-76a83f652a79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e86889-188f-4655-8ecb-35c44b06b048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daf6f6d1-e943-4da2-bf78-4426aca6d342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ce029c-1330-4851-812e-c62a88b5a565",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a6585e-8b3e-40d9-bd7b-44a784c53c04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2af5b73-c597-475f-916d-c10212f35554"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c75b2a-a589-4361-9978-cb1e3537ee31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8747e090-d849-430f-a12a-8a49be0ecf9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd14c4be-b241-4f0e-87ca-4b1abdb2e966",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e3f392-bc26-44b2-a866-90a50240d177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "067cfced-cae3-4a3a-9aff-4ad6fb32fd98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ba3a32-ddfd-493c-9ab9-6c1b636823b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1adf3bf-0e64-4a8b-8334-6347628cb632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d0330a7-6c20-4131-a1d9-0c2f31354881",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aadb1860-3d59-4832-947c-e43f89d20823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebc5054d-6d71-4799-a82d-80fefed8cd35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd561ac5-3338-4f25-9c8f-531d62cec04f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8667cca5-f1df-4422-8fbb-ff7299ec3a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350cc8a2-1b0e-4891-a16e-24248c2c498d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91597751-0544-4012-ac95-84b1b2faffef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd852481-2851-4171-abfc-1d3b21d0df32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f3708ab-4ee2-4163-9ffb-583ac42642c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80a7baf4-e872-4507-815a-b5a418c7cec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d74094a7-2f0d-4975-8f58-acc868c0da47",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5868110c-18cf-471b-83b0-9ceb58211bd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "969531c5-be64-46ab-b88d-f5c236ecbc72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "825c819d-f1c9-4f7a-af2b-722ec53830b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19a36305-0646-41f8-a3f9-a28263ecdce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "258e4332-2123-4955-9de4-b80aedee4171",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da575713-65ec-498f-b9c3-bdcab75956cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc71c385-0e60-4d05-909f-3488849e9d1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec88846-b601-4188-a7fe-03f3b4d5d663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "799ba02b-57d9-4da2-8fc4-77d3fdfcdcd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e01bf5-73d1-42e8-b0d6-d1943ecb8730",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fde2b34-a616-468d-a08b-e207af479628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5faabd59-ee30-439c-b5d2-3ffb9d0935ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f541d46-1860-4046-a1e7-af54eb5bf917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fba672c-e65b-4824-a223-082ad6540729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c75e9e1f-d422-4a13-9eb9-862b7bb4a285",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d945f49c-3620-4ba1-aab4-1930863c9306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11396ede-48f8-43d3-9912-d620b2b23fdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f86dd75e-fb04-444f-ba3c-0c063e2b2c78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67a877fe-b8f9-46a9-9e5e-0a01bb2bd4d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c554bba3-1671-41e1-b58e-e6d523aafb5f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf30107-d05e-410e-9c9c-84c103e80763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "237b5d37-c422-43a0-92e1-d167a517b8f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55fdaf45-3249-4fe9-9400-8b2b9cdbe69e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b761b49-96df-4c91-8a0f-8211a731ce10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd9ec685-1fee-4a9a-a758-02e62b33ce17",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c879bd-6b4c-4a31-b7b8-9dccd95f7e79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd6bf524-5345-4389-801a-9ee3c0894bb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "775cf1e6-62bc-46fc-bfa8-f198eb4c47ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aefa3c95-7ac7-4d38-a0dd-b5dc3ad1e664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15eeb9d2-fd95-4c3e-848a-2dbb19b28f5c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad366fc-4d35-4a09-889e-d0e9fa112f31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8cad4f1-348f-404d-9fd6-7dd8e886ea23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6436041d-52e6-4fa3-bc3b-afedff27a17e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecef7c12-dac0-4576-a646-64b6f5f9a67b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81fd178f-f1c7-4378-98ec-7ad89b05d1d0",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a392c309-a726-4545-897a-6108413db661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44d60a86-0ee5-45ab-a33a-8bd87e4256f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c27dec6-f9da-4102-b289-9374e42fbf22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a314735-707c-4131-81f3-f6318914e976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6eecb2c-aaff-4c76-aec9-cdc7e31daeec",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ac10ac-3d3e-4a5e-9568-2625f27dfe40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30dfd137-3382-406b-8a61-6676c5c18107"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d02522-d437-422b-b45c-be6ec7eec569",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a238b486-c9ed-40d9-ac88-540fb3d1e379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f8837d-5c57-45d9-81ec-784c08ac71cc",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b8c3eeb-b00a-4e99-bcee-17cdceec36a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fd54b03-1c7e-4aaf-9fd2-6c729f206d01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "426fb64e-60ee-4033-8782-202d137ce4f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37d84638-a865-4a18-a834-932fd5a94232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "808ad0fd-f312-45ea-80b1-ce76d44bf2e1",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d4a256-e1ed-4f82-8fe1-c01a9c8d3c4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02f7a922-509a-40c2-b389-1a8de9a52e6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d46f35-93e0-4968-b317-d2027ef13720",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a4f7596-0f17-49bc-b749-6d8ebfe290cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a9300a-8108-435e-95d2-7d20e5c09fab",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17759305-607e-4347-92e6-76d16615ae11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d1510dd-0736-4b37-8b26-5e71e897047b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a25415-ffb4-46a2-aa9a-2d78432b47e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ac68e03-cb4a-4d78-9ce4-2c3c4d786155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a760389-1ef1-4141-9832-0fd7dafbfdb1",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e082806c-1f7e-4714-a002-b52fe3a6cefd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "089ad2c9-ebf0-43a5-8856-5e75f48cd116"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1e6f081-b9db-40d8-9314-44d117bd4a1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f950b94-f6ee-4f24-9fc5-2aafb4dd1d0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd032d6-23ee-48b8-8ab3-6f90abc5be96",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e825c522-6373-46b9-a565-a004f679cccb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba486b08-258c-48b1-8615-2530689039e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9a6a15f-ffa6-475b-9927-5617c6a32c04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab7e5fca-f604-4f04-b3e6-9f8292758ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd730bd0-bc87-4907-a9be-f0ed2b8ecf59",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "579e8ddf-aa59-402e-8c6b-96ee855c6315",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c1f7a7e-3bba-403f-9a17-4698b6eb00f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e69d1ce8-57af-4770-a13a-442268b49d48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d97508c8-f7de-4f77-95d4-326d7017a711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd3840c4-b724-4933-9036-d92004b56b45",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b53caf-c8f9-424c-ae38-87f3800616bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc5923c1-24c0-4e70-af3e-fb34703dd9dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37beb2af-923a-457b-831c-7ccef3f2c557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f187c47-f5bd-41c4-8803-593cad3c58b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c067c23e-baa3-4a00-a96b-21b1ccb3204c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2560543-9aa6-4b64-b6a2-f35ddbb0c427",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b76765fb-fdfb-4621-9b96-fa965fdc46eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9420a80f-047e-4a8f-80a7-39d2db8c189d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebf806e2-ba1d-4323-8819-ceb480b07d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0efe36fa-5f01-4a05-857f-507c3122e631",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f745f2-6162-4095-a630-53694bcd6b41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c87bce35-ecc3-4a90-bb00-b80d5d57ab91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e82c456-de64-4550-b381-78481d086533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fce86f2-5fb9-4d01-b07d-1d123f159c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5fd3a1e-dbae-461c-b559-7b232bb6bc4c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8875baa1-544c-4ef8-9d10-f54e0fd73bf1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c544112f-97e5-41b2-9db7-e973bf04d495"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "445f08f4-ceca-4cfe-8010-de41f2e9e6fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9e6a0a5-8420-450d-b630-86e2021ef0bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1599c941-a3ee-44b4-8d30-001220858380",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19df429-f6ae-4b56-a169-4228bc439b8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dffa930-8ea1-4ebf-a2c9-039dc6dea820"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a19143dc-1a68-42a8-a024-f31a4b851e00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1872a9be-b657-40da-9788-75006e3e3457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "548e4466-ea99-4952-9922-dcedd82f12dc",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d9efe1-8c2a-421a-8ae2-c082a229fbbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcfa4691-b0f5-4f94-8ec4-d0de69839d5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "830a777f-f0e6-4882-b5a8-deee3b6cc6f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45fc6b6a-b784-494d-b52c-67b53b315c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a9ab62-7ee6-4d04-b61e-bdbd97ffd28d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c4c8af-5d9b-4754-ad94-774c65eaffa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a0ac1e9-8aa8-4a8f-87a8-95f7f9cc0c10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a396f6-eacc-4ff6-b918-0acba7c9f247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72c9d6e2-d108-415f-9973-c1a8ca61be6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "007dc56b-da7f-47c6-a0e8-4a714d6711b2",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1342053d-f9e8-4791-a3bc-1da15add3aee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67f55b72-918b-4528-8c3b-e5f1af05998b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a0f630d-45d9-4564-b32b-a23d91e08dc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "653e90d3-4c6d-4d3e-9aab-a9d5f19d498a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81eeba84-3c21-4088-a1c1-e18d0c9ee414",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd156b39-eab1-44ce-8d6b-c6e7d41c1bc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6103900-cc9f-411d-805e-f7b8e0212354"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ebb1833-d133-4ffc-8cba-edef00abe9e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e02d046-5a96-4028-b997-2d80e0294ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2220001d-8030-43af-829e-c6b0da578858",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd211279-c2c6-4ec3-89f2-6b2e08ea9f24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bf667ae-91bd-48d9-9a65-31ddd9895a07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85451f68-4413-4ed1-a3ad-91c6dec7b673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddc096db-63fe-4a06-983c-c7f23cbfa1a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a338d09c-4dfa-4a83-9605-211ecc13a93b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "661f4172-57a9-4e87-a520-1c15fec57c0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4797f20b-0b1a-43b5-9605-47739d33ab9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6196c65b-7004-4464-9ed6-80c99aaa9847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5e18897-b756-4333-8d18-509ba28c877f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb15cfad-55f3-40a2-a53e-7d755eec5e5d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb10cc64-85eb-4d99-80a4-141848337720",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d36b767e-fd71-47f0-a403-2bb1d5bcd203"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "125ecdf4-9599-4e62-be16-0105876a4ab5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4825dd7-3074-4b75-b2ca-8ea270cef985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ee719a-487f-44fc-9f9b-a9e081cf40ac",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff11ec9b-640e-40c6-bf8e-1f43ad9ca2f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b55fc1e-c688-40f9-8898-45b2fe72241c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cac823f-26b1-4a2c-b939-4ccd15f348e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ebc9ee8-5ce4-4d0e-9db3-f822622a972f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bae5588-8b1a-4f1d-b0c6-aae16f806c25",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc23f41-0072-4da8-b2e5-9e66f1e6d708",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61339966-1cc4-446d-80f2-72ffcdf2429e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52743573-0e50-410a-b53a-85595c36121d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1b0762e-3f21-4753-b56c-8c005a434a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c779a56-dbc1-4669-b7e5-72f9b41e14e8",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c14094f-0507-42f5-b642-40b5fc3fe372",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2bca9ca-566f-4a86-895f-16591473471c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36fd324c-d92a-4226-9b21-ef21f3b906c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "722f02c3-13de-4652-b962-e7946c5d80f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26227d74-3297-4065-bf13-0dae51a54188",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6918b969-f687-4f39-ba30-ff48c2f65a38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36be1714-ee48-4acb-b2bc-fbfbd1d5361b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b427c2b-c098-4fd3-802a-1f298711910e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cf54e9c-76f3-4dd8-b00e-b225dd7fcf0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50023522-dddc-4688-aeb1-3bfa787aeaa6",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc660087-38b8-4e34-babc-aed48ad014e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "328aa6a7-562b-4c50-98c8-506ab05d376b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd6ebea-bb6c-4d75-986c-00bed342a3be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "375e1aba-9857-44ed-832a-6f4dc58c9eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97c9347-70e3-4299-98f5-e4a375860f7d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7876062-a07c-4a2f-a118-fc7493c89b65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a6d9e3f-2848-4431-804b-c404fa55990a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab4d905d-8328-4e4a-803c-ef1920052ba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab656fe7-4f4e-4d75-aef7-ba58f86586d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e3bbff-3de6-4b63-9ee9-d3a298585d8a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a9c49f-31fe-4163-8618-b43612f3d52c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d8ac68f-899e-4c13-883d-94b98a2b6e13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e411190-ca59-4d98-a6aa-b33b4feaf224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31acbb0d-2ccf-4f75-a09a-36792c9c4685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce802e8-71bf-4ac0-af6d-4264167b70de",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a96883-506f-4d67-97e8-6d7fb379d4c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a71d2a0-d4a6-46e0-a0e7-8f0f23b060df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "376bf138-24c4-4859-9998-02e61b092596",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2a3cda1-05d8-4d01-99d3-252a3b15212f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "012544c8-0334-4c78-b5e3-271ea68be5ff",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e75de7e0-f9a2-47c0-bde5-4f5f93632752",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9be97437-a65c-4136-8c5c-2d58fc3a2427"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e761e93-e90d-4327-9d11-55b0ebd7ebe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09356170-97b9-43ba-bb5c-d1030e5b7c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df6d303-004c-40f5-87e0-0ab12b6382f4",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2730a80d-55af-4365-bf59-2c9df540c478",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48164ac2-7cda-4ab4-9c5c-b1a04bfa17ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86777b2-1737-443d-9919-5ea4ae1b4fa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6206c417-d789-48d1-b89e-b6c06fe10677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e97d7b-5c10-4636-92bc-ed0f88faadc9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9762d20-d497-4e4d-afed-ab48179cc237",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "391014e1-fcd5-45c5-8903-1ea238b9de27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbfb41fc-451a-43b0-b9c9-c4129f465d09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c750033-b434-4a82-9292-003091671958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ac19499-e2fc-476b-9209-01237a611b5b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd24aba-b26f-4d65-b80c-f2dbb50c290e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba7a5d4a-b41a-4b86-a701-bad64ce0eadf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "483dcc8f-e97e-4b2a-9e2f-577252205e02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c992cc9-a1c9-4e90-a5ac-4ca2b84e93ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bdbb683-ac19-45f0-9846-8304a6bbff0c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07bc7e43-c11e-44fe-b9e2-a0e8ccf44a72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c009dce0-b138-4265-9593-ccb283a49bf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f75730-5e7f-4c14-9ba4-9a051f64436b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "225cf627-b208-49b5-8411-a4c101272f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da02a7c3-4a98-4fb0-b0a9-0847656f6f93",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dbfc506-ed31-4e65-833d-a7148de3a2b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1325fa7a-0f58-463c-8157-1231755426d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b27b61-d39e-45fe-86e8-e095ae1deb15",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a074ec63-a08b-4fb8-898a-a0f5d4f151c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1524ecde-8022-439a-88a7-5cf39b85d51e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b09c90b2-faac-4972-b6da-9e55bfb4bd02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e18f750c-d1fc-40db-a20f-25052925867a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d1e2f8e-77ba-4c9a-b02c-de387eb32e89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dacbc69-c02f-4e28-95d9-b13f22ed9119"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "29dea1db-dd4c-46c9-9850-647728946f40",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5691097a-9244-490c-bba5-abea85f604ea"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b07315e6-94b7-49f6-93f3-004bb1ccf4e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4773371c-d0e4-40ed-8731-3db7a5f5c703"
                    }
                  }
                ]
              },
              {
                "id": "4a27aa5d-c1c3-4677-9250-ac29f75efb76",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bd6fd8ad-48ee-461e-9d10-6bd9821301d0",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f4ee5dc-afca-4614-bf29-c27e154b1c73",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "05aa9874-9780-4b69-a4f1-1b3d3a037401"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b3e5f66-edb2-41df-ad0d-ab0b8617aac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b3c929fb-ceee-492d-9354-77806548f7ea"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2db283cf-8c34-445a-a89b-ce36c3dcecad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3378f889-6f7b-48f5-8c6a-0128e3353ba5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8125d2c8-7380-4ee5-92ad-7c35c2954706",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9c844e2-9df8-4b05-be7d-836d248ba7a2"
                    }
                  }
                ]
              },
              {
                "id": "6dfcb631-2fd2-44c0-8eaf-d459dea99fa8",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0f3ab444-1801-4ad9-974e-163b5a03aa08",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "666a467f-283c-4374-bfb2-9a86ed60c523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "be88d2b8-f5f3-4fe4-873b-0a92fe772efd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd0f397-ba1e-4423-8d61-c8bf501d87e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc8b451a-5dfc-4926-9072-09e579ca85d0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "543dac22-3144-4673-8029-e1e064d27027",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a4c22d17-c950-4968-8968-49049025d189",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8038cf59-9523-4f6c-bb81-9eb7c11d73a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "879f6397-9bc2-40a9-9b50-fa99316c99c6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f0e9847-5306-4c04-a628-93086cfc0469",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f60bb7b8-323b-4145-8342-e2933c95369d"
                    }
                  }
                ]
              },
              {
                "id": "d80cd02b-c8b2-4290-b7b2-e6383f67ad58",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e1428da-d324-4e20-8e79-27b1028a11aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "abde9e17-19fc-40f9-a551-23aab56acbe4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5daacc4-ab58-4b50-8fe3-d92b1006f2ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec97992d-ae22-4b79-9460-d46538b697f8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "16efc72d-b11b-4484-820b-068fb4bfd13b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7a372987-2112-48e0-be43-7ccdef14e935"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d6828fd8-f380-49e2-95bc-c4e33390fa13",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "83db13b3-cc20-413b-8254-8e0c18a3a4ab"
            }
          }
        ]
      },
      {
        "id": "f7f3aacb-cc27-4e5d-841f-d0f728d9d59b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c850929b-113b-4f02-9d66-839570e5da9f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0ce63161-0359-4bf8-a913-2792de4c54a5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6afa2064-5aba-450b-a83b-037a9ac83e35",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba882491-9b3d-4923-b51c-3520044a52be",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2fed742c-ad9a-43e3-90a4-eb0826dc1fa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "141e5cb8-d72c-4ec5-a373-10e3b93d9775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d860cac-3920-4ac1-b0a8-c02c09a89920"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5f038ff-a17e-4be8-ad02-2b42c344a924",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05a4863d-09cd-41ce-a0ce-e1f66b813fb4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab837615-f825-4c7d-a3b0-4e2355735c8a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f4540a71-c5c1-46fd-921c-d5dcd70edee5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a8d8cc5f-7d0c-43a7-a6c4-476c6f066fe6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7663a596-c048-44a5-b72f-0814cdbcdfb0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "45fc4d79-2baa-44f2-8800-be4e47a66a35",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "79f61a47-0697-4acc-a6e2-50ff6b538659"
            }
          }
        ]
      },
      {
        "id": "468fa66e-7c79-4444-8e4f-d96527b5f6e1",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "838730cc-a9fc-4cb2-9d1b-d4ee87200a3b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f0047fa2-b71d-4e8d-8873-70bca8a9ff7f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d116bd8a-89b4-4c27-8f65-0e288ad8a5fe",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71218571-866c-49ba-8227-0a864f803083",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b90270d1-e7bb-474c-b540-029a9dc88dab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4cb0248-f73e-4b45-a77f-1f182b493c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "21381f20-23aa-42dd-a2b6-881d4f3682e0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "843bed5a-7928-4e26-8946-a8b6939be22c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2af134a9-fb16-4ab8-bca9-6fd4c48b17ce"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "874a7a8a-55cc-4c4d-9e26-2531060ee989",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ef04c76-fcc1-4348-bb3a-20e9009a6200"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a5158e93-7318-4355-81e9-55fddf5c7366",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e4fcbba0-6840-4f71-9592-2edf7931391e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f25a0c2e-308f-44a6-bace-77f049c2d02f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3fb7436c-df22-42a2-9cc2-90e7356c43d0"
            }
          }
        ]
      },
      {
        "id": "f9283f05-7ab7-44a6-8376-af6d3be4c7ef",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "7af5d3c4-664d-4b7d-a3ea-f4527efa2a86",
            "name": "Negative Testing",
            "item": [
              {
                "id": "08b17679-33d0-4a02-8f7f-fe6c9c4b4e37",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b940610b-0737-48aa-9227-da19b647a66d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24754ec9-11d4-4c81-9848-78213d74b66b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2b6aeba-6b90-4acc-ab65-1b0b7a12f0d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e84e2d-392f-438b-b73d-9a1455d30a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7f7a5c8-d27a-4c1d-8634-cf7588491f13"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8498796c-fa3c-411c-8a90-ac77cf4d9bcd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c3093d26-1223-43ef-8523-439bcbf0735f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "609b5be6-cc08-4821-9a72-8276af346e6a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0bbf8a97-63ff-40af-a5d2-cc15e79cbb4f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ecd48b5d-59b7-4714-b360-8729c0d2530d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "50376cae-7c26-4a08-bb51-578db7183b75"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ae9e165a-44fe-4613-9684-9354277fe643",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ff4126b4-f7dc-4d6f-9b65-fb1a02401f6f"
            }
          }
        ]
      },
      {
        "id": "b41e5b76-11b1-419d-b735-8c7eaf2e0c5f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0157fdcb-19f8-4976-9e04-fc8b4d95c1fc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e03a413e-2a5f-4dfd-b43e-7361c9d9c60d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "58cf3fcb-b5f0-4187-b001-e6cfab603f96",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ae23392-d5d3-41b3-b18b-b52f353d5bed",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b9d50da4-1844-42a8-8316-271345db39b8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 110.9578947368421,
      "responseMin": 14,
      "responseMax": 5041,
      "responseSd": 392.10321544266924,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1697589244841,
      "completed": 1697589291296
    },
    "executions": [
      {
        "id": "27ac1533-8696-4106-b4e7-35b374caa32b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4e157d66-ef8b-43b5-a48a-3387597abc3c",
          "httpRequestId": "6eb4225f-e807-4bef-b301-889e04ac65c0"
        },
        "item": {
          "id": "27ac1533-8696-4106-b4e7-35b374caa32b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "828fea6d-82af-4a95-bb81-08b119490afb",
          "status": "OK",
          "code": 200,
          "responseTime": 130,
          "responseSize": 0
        }
      },
      {
        "id": "7fdb4a27-c62a-4168-8694-b9dff4e68103",
        "cursor": {
          "ref": "7222737f-6fbc-42ee-b653-5c2c5d1399dd",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "17b68378-7e38-4e06-870c-4c17068be26b"
        },
        "item": {
          "id": "7fdb4a27-c62a-4168-8694-b9dff4e68103",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "07d1cfe4-bfd2-4c8e-8291-c2c1515d9cb6",
          "status": "OK",
          "code": 200,
          "responseTime": 14,
          "responseSize": 0
        }
      },
      {
        "id": "609d6da8-967b-4e44-984b-ead56e39c162",
        "cursor": {
          "ref": "82e6e745-22c7-47b5-98ee-db916dcd1e1d",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d8785a8f-a8f3-4c24-9936-ee8618b1b7d4"
        },
        "item": {
          "id": "609d6da8-967b-4e44-984b-ead56e39c162",
          "name": "did_json"
        },
        "response": {
          "id": "ed9f5a8f-ca45-4895-bc8d-4e0626adc15e",
          "status": "OK",
          "code": 200,
          "responseTime": 409,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ee3746-5d52-4945-a09e-a3b550d7d01a",
        "cursor": {
          "ref": "8d5f5a85-b338-446f-99db-da5188926efd",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "82fea2d1-ffab-4b7d-9f33-0ae16430e609"
        },
        "item": {
          "id": "13ee3746-5d52-4945-a09e-a3b550d7d01a",
          "name": "did:invalid"
        },
        "response": {
          "id": "b1bcd847-a34d-4f37-92a2-334ec98cb941",
          "status": "Not Found",
          "code": 404,
          "responseTime": 513,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ee3746-5d52-4945-a09e-a3b550d7d01a",
        "cursor": {
          "ref": "8d5f5a85-b338-446f-99db-da5188926efd",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "82fea2d1-ffab-4b7d-9f33-0ae16430e609"
        },
        "item": {
          "id": "13ee3746-5d52-4945-a09e-a3b550d7d01a",
          "name": "did:invalid"
        },
        "response": {
          "id": "b1bcd847-a34d-4f37-92a2-334ec98cb941",
          "status": "Not Found",
          "code": 404,
          "responseTime": 513,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98282d3f-ba4b-445d-9e62-69ad096b67bc",
        "cursor": {
          "ref": "041b2378-9733-44db-a598-f91dde36ffbe",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8fa74e17-e4ab-4739-aea3-dfc63bac9d51"
        },
        "item": {
          "id": "98282d3f-ba4b-445d-9e62-69ad096b67bc",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "bcf4efef-8a52-4e96-96fb-385182d014c6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 79,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da3d217-35d8-435a-a49a-aff74147579b",
        "cursor": {
          "ref": "ebd3bc2a-56bf-44e0-8f30-2940e5d7bee7",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b44bf694-9b87-4178-a593-e4df6a27ae05"
        },
        "item": {
          "id": "4da3d217-35d8-435a-a49a-aff74147579b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4f0aa028-c695-4949-86d1-487c000f0955",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e82a5fe-a16f-45ba-a275-adc42bd9617d",
        "cursor": {
          "ref": "34e607d9-ec1e-45a9-aa71-fc0c9baa3a5e",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8623946b-bac9-4365-ad1d-edd7c2631c4d"
        },
        "item": {
          "id": "5e82a5fe-a16f-45ba-a275-adc42bd9617d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "fe38e453-c1fd-4f61-bacc-80cf47f910bb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "815a18c3-a405-4624-a02b-2477d4373cda",
        "cursor": {
          "ref": "b5e621a5-91dd-4d97-bbf0-7dee705a42b0",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8883c347-817b-4691-acbf-9f6d4a2be502"
        },
        "item": {
          "id": "815a18c3-a405-4624-a02b-2477d4373cda",
          "name": "identifiers"
        },
        "response": {
          "id": "df733213-fe20-4fdd-a164-9da2a5853f3e",
          "status": "OK",
          "code": 200,
          "responseTime": 71,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8582c7-6675-4fa1-80ec-479a49d49b3f",
        "cursor": {
          "ref": "9fcb16c0-f7a8-4e26-8b45-eab1b1bf57b9",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "09f75a1c-06f1-4d00-a60c-258d1c561b64"
        },
        "item": {
          "id": "0a8582c7-6675-4fa1-80ec-479a49d49b3f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e11c5b07-ed4e-4668-9319-adb69fe5fe56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb36d933-70f8-476c-916a-3547921cee83",
        "cursor": {
          "ref": "2a862ae9-3d05-483f-bad2-49b4081794ab",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1312b34b-e12c-4ce5-a442-cbfd507ac163"
        },
        "item": {
          "id": "bb36d933-70f8-476c-916a-3547921cee83",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d3273058-408e-4188-8010-77e00bc91db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df04a4e-c904-4852-9bb3-5709a872ce30",
        "cursor": {
          "ref": "2a2fa5a4-b13c-46fd-b1d0-9899c57271b2",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d6c963b5-1b7f-4188-b107-678f59259ff0"
        },
        "item": {
          "id": "4df04a4e-c904-4852-9bb3-5709a872ce30",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "991d8cb6-dc1c-4889-8d62-e4d25e35eef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a5ee26-e986-4d72-8b08-7369a4731923",
        "cursor": {
          "ref": "0953e7e3-06c4-4365-809f-ffe58f2fa73b",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ec15761c-0af7-4075-a714-2be450d015dd"
        },
        "item": {
          "id": "32a5ee26-e986-4d72-8b08-7369a4731923",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "8963c69f-32f2-4f5c-9f8f-a986fc0d6f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf9140b-b5be-460f-9e79-50566e14a3e7",
        "cursor": {
          "ref": "32579c25-3974-46eb-b27a-e951e9fe9aa2",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "920e7703-9c13-4d2c-aa11-e02f466303d4"
        },
        "item": {
          "id": "baf9140b-b5be-460f-9e79-50566e14a3e7",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5d682e62-8380-4462-854d-5fb8dc03f373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f119bc-1d68-4e3f-bb51-c2ddc2fb871c",
        "cursor": {
          "ref": "50cde82a-27d7-4af3-a461-68b9d8250695",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4708609d-b0d9-4027-9cc7-3295c78f19b1"
        },
        "item": {
          "id": "11f119bc-1d68-4e3f-bb51-c2ddc2fb871c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "443fa585-8d6b-4b09-a08a-9e7d595b5e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e4a3c1d-95a6-4d76-b397-7674b8a22ae0",
        "cursor": {
          "ref": "c21ae75d-cd77-4fd6-b9c8-077ca0386177",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9f45c47b-581a-4f98-a21e-e7d1fa8d7d8f"
        },
        "item": {
          "id": "6e4a3c1d-95a6-4d76-b397-7674b8a22ae0",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d5b6d578-e79d-4bb0-b7d2-e61338ec1b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e6ee65-0c0e-48fa-b192-9fa62b3e3a0e",
        "cursor": {
          "ref": "1ab5a50f-1c02-4119-88f1-0b6d381c7c34",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "eb92a753-97a8-4796-9ec6-9c0aebb749cb"
        },
        "item": {
          "id": "77e6ee65-0c0e-48fa-b192-9fa62b3e3a0e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "aaf9e023-7d24-4e6b-9f25-0ba160de5d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef0a3b7d-afb3-4c3c-91aa-bf76ea26d49b",
        "cursor": {
          "ref": "8afefd17-4c96-4fbd-95aa-756365ffc234",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "32a27fa2-b8e4-4e96-b0b5-742deda67d7d"
        },
        "item": {
          "id": "ef0a3b7d-afb3-4c3c-91aa-bf76ea26d49b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "206f768e-31f2-4663-bd17-bcc352614f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a653d2-022f-4a7a-bddb-6de1e12a0f01",
        "cursor": {
          "ref": "f10a85eb-63bf-4eee-b056-ae08ef688c8f",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "59b80570-dd9c-4274-ab4f-c46580b90456"
        },
        "item": {
          "id": "92a653d2-022f-4a7a-bddb-6de1e12a0f01",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4ae9a4ff-a8cb-4081-adbc-741da7002abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c61de50-4712-4ec6-a058-d4364e91b255",
        "cursor": {
          "ref": "82acda1d-c922-4f51-be7d-27006a703807",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "08c9cdd0-9ea9-4b24-b360-fc7acdf3391d"
        },
        "item": {
          "id": "9c61de50-4712-4ec6-a058-d4364e91b255",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a96e2897-e04b-494d-b34b-778efc011ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd14414a-7a6a-42cf-b2f0-11f38e921cf5",
        "cursor": {
          "ref": "0c973442-48f3-4bcf-be5a-a219ac6a0071",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "edef8dea-413b-48aa-8049-de9fe60348ed"
        },
        "item": {
          "id": "cd14414a-7a6a-42cf-b2f0-11f38e921cf5",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e72542f0-647f-4b87-ad08-9863b6d96869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15106e0d-0d88-4003-8170-2f71a0db9fbc",
        "cursor": {
          "ref": "3c32fc2a-63f2-48d2-967c-3cc72c54f7f9",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "af6ae8cb-4463-49e0-8450-48dff81acf9a"
        },
        "item": {
          "id": "15106e0d-0d88-4003-8170-2f71a0db9fbc",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f7c183cb-7e5c-4038-aede-0fdf548aae9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca4ef29-c611-440b-8267-14b500aa04fc",
        "cursor": {
          "ref": "4f4c3df4-02d2-48c8-98da-d7995c5d3754",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e8b55b40-ac89-4f84-b6ac-3f886bc1fd3a"
        },
        "item": {
          "id": "aca4ef29-c611-440b-8267-14b500aa04fc",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "6f6e53c6-ae7b-44f2-b5c6-926fef411322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "180f14e3-ca41-4ffc-be59-db7e34bf9f39",
        "cursor": {
          "ref": "5dc9a224-1116-4930-9256-ae02e6ee086e",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a4249bd2-e148-4c9f-8e89-9b6e149d391d"
        },
        "item": {
          "id": "180f14e3-ca41-4ffc-be59-db7e34bf9f39",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "6544d52c-ecde-4d40-a51b-628b34e3287c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5680c970-e768-4e75-878e-9fb50ae12448",
        "cursor": {
          "ref": "a0a12095-5677-4f57-94d6-0932f644de80",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d640285b-8bf0-40e8-8c25-749cbd5da521"
        },
        "item": {
          "id": "5680c970-e768-4e75-878e-9fb50ae12448",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f6e5b4b7-c381-43e3-9789-74ada3ef42af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b74bd16-cf04-4964-94dd-7ade1aa045e1",
        "cursor": {
          "ref": "4a33d9bb-19e2-49a8-b138-07cb054d5518",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "20051124-3b5c-493f-bc4e-dad29f727af5"
        },
        "item": {
          "id": "6b74bd16-cf04-4964-94dd-7ade1aa045e1",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "84e080ae-81a8-4cfc-8268-06fa4e328a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 144,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f59af7-506b-4fc9-ae49-1254521d61de",
        "cursor": {
          "ref": "22c7eebb-878c-4c17-ae8f-ff59862e29f8",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "40f6e426-1c37-4e94-adb1-08ba6a2043d1"
        },
        "item": {
          "id": "11f59af7-506b-4fc9-ae49-1254521d61de",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "94a345fa-a9a8-4a6b-95d0-71913826f4f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "681c7b58-3a32-48dd-bb8b-9495cfb05399",
        "cursor": {
          "ref": "1f16b0bc-fc2a-4602-ac41-ba706aee221e",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6de1c1d2-1f12-4e01-b1df-82b76576674a"
        },
        "item": {
          "id": "681c7b58-3a32-48dd-bb8b-9495cfb05399",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "eb174e3c-2454-4ff6-bf36-6dc4ac97b71f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4dd5d31-8f86-4273-b6df-883cf5aeef96",
        "cursor": {
          "ref": "cf954e1c-3652-4e57-9b4a-1b734cefd73b",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "66f2d4bb-8320-4372-af48-02b29d4d14f5"
        },
        "item": {
          "id": "f4dd5d31-8f86-4273-b6df-883cf5aeef96",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a8f71774-b20e-4ec8-a713-588a93ab6651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c280299e-daf0-4941-980f-225a5a1bf0f5",
        "cursor": {
          "ref": "d7f89df8-ebec-47db-b5ad-3b0651e9c349",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "fd9efed8-947e-4219-912f-28caf3a5146e"
        },
        "item": {
          "id": "c280299e-daf0-4941-980f-225a5a1bf0f5",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "2e6280b8-c660-4c14-bd5a-82d50b03538b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55f5aa8-0c64-4091-b69c-a25b5ab6325e",
        "cursor": {
          "ref": "3948011a-795f-45a3-8a0b-7bcb29d90c21",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e065ab03-487b-4645-b64d-78b9d7957f48"
        },
        "item": {
          "id": "f55f5aa8-0c64-4091-b69c-a25b5ab6325e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "4838c900-ec2d-44e7-a59a-65e2b9b4161b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2e00fb-8479-4876-bb3c-3cb61fef8318",
        "cursor": {
          "ref": "f3298388-f38c-4c34-b06a-be91a3da17aa",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e67a3e15-e422-4fd9-91cd-323c6653494d"
        },
        "item": {
          "id": "bd2e00fb-8479-4876-bb3c-3cb61fef8318",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a69b4545-f6ca-4723-ae47-fb7a88b31520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "430d3266-9301-4a81-abcc-136bb9b617ee",
        "cursor": {
          "ref": "8cb84bf7-ff9e-44d3-af0a-1f1a5919ff34",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "9cee927e-0945-400e-b3c8-f6c3ca1f7131"
        },
        "item": {
          "id": "430d3266-9301-4a81-abcc-136bb9b617ee",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "8513a561-783a-4e27-bb6e-99781fb8f32e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf61d911-9817-414a-8276-5a7aa88a7c32",
        "cursor": {
          "ref": "0727ce52-260c-4bae-9cf4-9e6a7bb32c51",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "1ac7b9c5-0b02-473f-a3fb-2051a9f5cf4a"
        },
        "item": {
          "id": "cf61d911-9817-414a-8276-5a7aa88a7c32",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "30d9a432-0336-41bd-b58b-757341b02feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f4ad4a8-57d9-4dee-a967-83c6f57dab1f",
        "cursor": {
          "ref": "2372a793-0438-4120-bb5c-242993c12574",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3befe923-43d5-4703-b995-5878de46fc57"
        },
        "item": {
          "id": "0f4ad4a8-57d9-4dee-a967-83c6f57dab1f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "cda80142-a006-4a30-a9d6-5ae9d80e0f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "897f937c-5fed-4881-8780-d717457c7b69",
        "cursor": {
          "ref": "634804f0-84f5-4b07-96ec-a80073924777",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "20aa7c95-851f-407f-bc37-75334af46d22"
        },
        "item": {
          "id": "897f937c-5fed-4881-8780-d717457c7b69",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7b208e63-cc4f-47d9-85b3-64ae9dd20aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f125db85-d672-41f3-9582-ed5cccda65a9",
        "cursor": {
          "ref": "3b5e47be-bbb0-45bd-8944-6e8bafbea281",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "aa52236b-b576-4972-b052-744ad84d9b2a"
        },
        "item": {
          "id": "f125db85-d672-41f3-9582-ed5cccda65a9",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "25c26db0-fec1-478d-bcb8-f2e94446451f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edbbf8d0-7e23-4054-b18f-1f62d0dd2701",
        "cursor": {
          "ref": "4466bd4e-104a-4bea-8324-7bb66032c074",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "aa84d8e3-600a-4499-a2be-5c7d81b8d58f"
        },
        "item": {
          "id": "edbbf8d0-7e23-4054-b18f-1f62d0dd2701",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "49deaeab-6f04-412f-a9e5-a564b4fd7110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b1438a-7363-43a1-8eb0-7c37a279a51e",
        "cursor": {
          "ref": "d079793d-102e-4729-bdb7-30abf0c48523",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "8106761c-e510-4e67-bffb-c500c723bfe0"
        },
        "item": {
          "id": "a7b1438a-7363-43a1-8eb0-7c37a279a51e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "924f3a0e-9f2d-4948-9dd8-8361743986f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1559fb30-d85f-44e3-8d5f-0fbe09860715",
        "cursor": {
          "ref": "f86c744f-e6e3-4498-933a-bc2044f9ac24",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "92d298aa-d4fd-4d4a-8771-6b3ec363f0d2"
        },
        "item": {
          "id": "1559fb30-d85f-44e3-8d5f-0fbe09860715",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "946b3316-b47b-4428-9693-b6989af33157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b3f0b90-1042-472d-8fe8-566cbbc17186",
        "cursor": {
          "ref": "4dbd1cc3-e518-4b89-9591-4d0efabae09f",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b55ae32d-f66b-45fc-b4da-ded7280f0e1e"
        },
        "item": {
          "id": "3b3f0b90-1042-472d-8fe8-566cbbc17186",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "8388d7b9-1f24-4c13-a943-a59e36f512a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abfa9457-06a9-4073-a153-08ed05679dbc",
        "cursor": {
          "ref": "be9bb74a-2dea-4d03-85b6-961c4eafa6ea",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "668e83a4-7b28-4386-99e2-024c1985b089"
        },
        "item": {
          "id": "abfa9457-06a9-4073-a153-08ed05679dbc",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1fffc471-fe33-43f9-a4e9-4cf07cdf009f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c63ff9a-6513-47ef-bd96-2f00f54b5293",
        "cursor": {
          "ref": "da88e243-ef6c-45d5-a0a3-5499440c5082",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b93d0c30-bff8-48f6-9fc5-57ba94c71567"
        },
        "item": {
          "id": "6c63ff9a-6513-47ef-bd96-2f00f54b5293",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "fad91af2-c8b9-4a29-944f-7d979a757d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373f8319-eacf-4b6c-83a5-1e01f3413c70",
        "cursor": {
          "ref": "b5505bd6-d5a1-4d1c-8d88-94344f8e01b3",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8c0e8503-6b64-4556-bc4a-d3ceb86e5f3c"
        },
        "item": {
          "id": "373f8319-eacf-4b6c-83a5-1e01f3413c70",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c5b8e38e-718e-45c2-8f98-4e78ff320635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c8bcb7f-abda-4114-8f2c-bb3ffbffe4a8",
        "cursor": {
          "ref": "1e8fe03d-bab7-4bb3-b612-1fa9dcc68b45",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "5112d912-ad31-47ec-a14f-8d8c6a640b75"
        },
        "item": {
          "id": "5c8bcb7f-abda-4114-8f2c-bb3ffbffe4a8",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "cf231693-52c7-498e-9ed4-87b9e1c56f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71c27f7-1f3c-454e-8fd8-5297ce8a41e7",
        "cursor": {
          "ref": "4445cec5-913b-423e-ab6d-c15bf9ccff07",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f5b37b80-aa53-4efa-8f98-3f5752d4a793"
        },
        "item": {
          "id": "f71c27f7-1f3c-454e-8fd8-5297ce8a41e7",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "28d84a42-44f5-42f4-8d59-2bd88fca48e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "390cb8ab-22f9-454b-b589-68242a8043fa",
        "cursor": {
          "ref": "a9693e4c-bfef-41a3-87ba-61afe902c4af",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "85246f4f-ba9a-4c45-8d27-f8c5aa95c69e"
        },
        "item": {
          "id": "390cb8ab-22f9-454b-b589-68242a8043fa",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d4024e71-d87c-475e-be52-ae71ca6c1513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92734e66-bada-4a85-8566-6d0a420315aa",
        "cursor": {
          "ref": "ec46b8f2-f106-434e-a1c1-2f09baff132e",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a93350c4-3138-4a3e-9d49-750b9c1a5129"
        },
        "item": {
          "id": "92734e66-bada-4a85-8566-6d0a420315aa",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "464812ac-e33a-4d9e-bd1b-2927b09a8080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ff2875-ee81-4a03-ae57-21b99baf785c",
        "cursor": {
          "ref": "2835b745-9ba9-4474-bbf8-1f7e538807a3",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "fd716e91-3e8d-41b0-a951-9414626831d9"
        },
        "item": {
          "id": "f5ff2875-ee81-4a03-ae57-21b99baf785c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "53fc69eb-c487-4eff-970c-3f7acb3b8a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b830fe42-62d8-41b1-94bd-a5f45dbe6987",
        "cursor": {
          "ref": "185c0aaa-b366-4fa7-931a-7e562bbd6bfe",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "25e884b4-0fb6-446a-b5ad-5acf643c37b7"
        },
        "item": {
          "id": "b830fe42-62d8-41b1-94bd-a5f45dbe6987",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "b87f38e0-6a19-4ea5-9124-bfd4555e3c2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2295d630-aea8-4767-bb30-2c694cf84bfc",
        "cursor": {
          "ref": "020f982c-94eb-4fd9-811a-18bcba204a22",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8eee923b-c669-4677-be8e-c576df58e9b0"
        },
        "item": {
          "id": "2295d630-aea8-4767-bb30-2c694cf84bfc",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "41b846dc-4faa-4019-9f58-f59a2d4639dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd90c7f-98f3-48b9-a6c5-59e663d687bd",
        "cursor": {
          "ref": "c1b11a52-0103-47e4-b189-6aca82a4bdec",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1222f536-a5cf-4ded-bef4-06a2b642e51d"
        },
        "item": {
          "id": "1dd90c7f-98f3-48b9-a6c5-59e663d687bd",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a5d69fd2-85cc-41c9-84af-38919e66ca98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b626d855-c626-455c-b153-b14c4a28b85a",
        "cursor": {
          "ref": "5c4853d8-ef8a-4d5b-81ed-c54628cc6379",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "eeda9e51-5211-42ab-b019-be7620f80d9c"
        },
        "item": {
          "id": "b626d855-c626-455c-b153-b14c4a28b85a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2ba57a19-d596-49e2-a530-ddfd33454d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8b2db9-0094-483e-be74-09cbe058de77",
        "cursor": {
          "ref": "a638797a-2a97-4c18-a9f5-af560717ae71",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "74d1f4f7-9200-41a5-9166-50af849955f9"
        },
        "item": {
          "id": "1e8b2db9-0094-483e-be74-09cbe058de77",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "8b2fd760-a036-4a41-921d-f81d2fb02cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c301bc73-2b68-4566-89a6-d3845d11c1d3",
        "cursor": {
          "ref": "6e5ef2f0-a7b5-43ae-8e73-1307039c7e83",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f3b3a92b-224d-45fa-b2ea-39e967a29044"
        },
        "item": {
          "id": "c301bc73-2b68-4566-89a6-d3845d11c1d3",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "6ffd465c-bc1d-4ba4-b544-18cdc3ee05e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ced3cf-ad49-48e4-8628-4cf895a50c9b",
        "cursor": {
          "ref": "904982b5-22d5-4a19-97e7-d05c035155cc",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "fcab8445-3a25-4f42-a408-d75f98d2f823"
        },
        "item": {
          "id": "58ced3cf-ad49-48e4-8628-4cf895a50c9b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "9f9fa453-c1a9-4f37-9e74-d9c0b656a865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "471dc5d3-77a0-4368-a5d5-3393370bc548",
        "cursor": {
          "ref": "05878a0f-dd99-4e8c-b6c4-c22ef4bf7478",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "fc9978ca-52e0-42d7-812e-7430fd77d1f1"
        },
        "item": {
          "id": "471dc5d3-77a0-4368-a5d5-3393370bc548",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "1a208ee6-a59e-4c0f-926c-4f1853302b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41185ea7-3aca-4c81-8ecd-2a66758ddc19",
        "cursor": {
          "ref": "2ea239e6-539a-47cd-9c0b-451381256718",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "28965481-e757-4420-8c94-56c3ab709b47"
        },
        "item": {
          "id": "41185ea7-3aca-4c81-8ecd-2a66758ddc19",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b2f57b83-7b62-4de9-8bc7-c6876d3bf46c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dcaf1d0-099d-423e-8c91-92cadfb505aa",
        "cursor": {
          "ref": "fa6027d7-9743-4d3c-b49d-3ec3807f4df6",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5bda5d38-36ac-4b8e-b1cd-aa84920b69b0"
        },
        "item": {
          "id": "3dcaf1d0-099d-423e-8c91-92cadfb505aa",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "cb8d7b5e-0f23-44a4-9cd0-99ae39250309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf28bef-df1a-419c-9cc9-f5af7ce00bbb",
        "cursor": {
          "ref": "93b2be37-3150-482d-aaac-29b933ec69e2",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "12f94c24-58d9-4af4-8e1f-858f356f76b7"
        },
        "item": {
          "id": "adf28bef-df1a-419c-9cc9-f5af7ce00bbb",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "4ebca07a-e8d9-44ac-a229-b64cd0d3d50d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ae3ed5-05f3-4abc-8e29-973442c5580f",
        "cursor": {
          "ref": "ef7df6a1-f373-4622-b68d-31a537ec3031",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c6b8650d-f1b8-4f5b-9389-a9ddf5785492"
        },
        "item": {
          "id": "20ae3ed5-05f3-4abc-8e29-973442c5580f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "35ecb65c-51be-448f-8f70-b4f03fdd0fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d56c369e-18cf-4e2d-8484-2557b4c2a732",
        "cursor": {
          "ref": "89d856e3-8003-4aec-8806-77cb1be03932",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a911e3a9-9562-4c22-b9ae-e484fcde65f1"
        },
        "item": {
          "id": "d56c369e-18cf-4e2d-8484-2557b4c2a732",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d9c83c34-2713-4574-bfe3-f808b9992d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab5d87e-5070-4028-894d-d5b5742ba19e",
        "cursor": {
          "ref": "5fddd1be-a49a-4640-a1d1-92ed054b6ec5",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "0e75c050-4b89-4d40-94b6-3e9715c17327"
        },
        "item": {
          "id": "cab5d87e-5070-4028-894d-d5b5742ba19e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "2eb2683b-3abc-4e02-b31d-9b43385eaeea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb5cb2e-31f5-40a4-bbf4-e7a47dd9b364",
        "cursor": {
          "ref": "2a109eda-dd15-4301-9cb3-a154990aeabe",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "dd68ff1c-d0d0-4f9b-9626-b7fce1c26abd"
        },
        "item": {
          "id": "0eb5cb2e-31f5-40a4-bbf4-e7a47dd9b364",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ed6d5acd-7842-4b30-929c-8543d12d6d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7965fdd4-e161-4409-a246-0ad0281cc15a",
        "cursor": {
          "ref": "d63cf683-9b02-44da-bb0e-9a6d3bcd3dfa",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "26affe89-59f2-4dea-937a-d4ec34c30801"
        },
        "item": {
          "id": "7965fdd4-e161-4409-a246-0ad0281cc15a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ff0bda9b-d81a-4285-9a0a-04da1c8b79dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d7bcfc6-6484-4511-8430-e5df4baa9714",
        "cursor": {
          "ref": "90bbd96a-18fc-41fc-aadf-051e70f9316e",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d1d13ca6-b99e-43b9-b9b2-5cdf52e719a9"
        },
        "item": {
          "id": "1d7bcfc6-6484-4511-8430-e5df4baa9714",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2cac2cfc-4ac8-4cec-9614-090ad40869a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "644bb43c-eccf-4858-86d4-3041938a1c72",
        "cursor": {
          "ref": "4214bd3f-efdf-4d57-b5ec-3ea3be78bccb",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "592dd629-5a7e-4e20-90f0-3900ef5cc9c2"
        },
        "item": {
          "id": "644bb43c-eccf-4858-86d4-3041938a1c72",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6da8f08c-7d79-453d-aaa2-44f2e181867a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aeeb4aa-6510-4bd8-b9bc-ffa572dad166",
        "cursor": {
          "ref": "52c934da-2393-4e81-b18f-e32467f3611c",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4032d70f-c21e-4265-9831-6d35ef1051f7"
        },
        "item": {
          "id": "5aeeb4aa-6510-4bd8-b9bc-ffa572dad166",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "31999b64-2da8-476e-89f0-414a8627c23f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369570b1-dd4f-40f0-9913-33a09c12e991",
        "cursor": {
          "ref": "3c70efee-3448-46b0-a019-21e8f5f387cb",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "0e73ec06-73c2-4f0c-8ac1-14568f2ab136"
        },
        "item": {
          "id": "369570b1-dd4f-40f0-9913-33a09c12e991",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ac1e136a-ec0c-45cd-ba55-1d3a945162c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598cc889-dcfc-49b6-8729-659af6d7f8a1",
        "cursor": {
          "ref": "06efcd8c-b022-4bfe-b15d-dca012d934fb",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "625d3336-e9e9-445c-aea3-ee2f67f49d9e"
        },
        "item": {
          "id": "598cc889-dcfc-49b6-8729-659af6d7f8a1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "088028cd-6ebc-4172-a096-6b082ce41e35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa456e2a-2f9d-4953-990c-d0f0f4c8b386",
        "cursor": {
          "ref": "821aa7f9-6d98-4c00-9fff-01cf28ea9fca",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "54868ba5-8640-445f-ab93-2a52857f972e"
        },
        "item": {
          "id": "aa456e2a-2f9d-4953-990c-d0f0f4c8b386",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7055fd18-8d5e-44dc-bd98-16f3de99a109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e72a11a2-ca2c-4ecf-bd63-16087adf16ac",
        "cursor": {
          "ref": "99f389b9-5ef8-4a08-8368-f2e862fb93cf",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "741d654d-1c0b-4753-b31b-6c6f171831fe"
        },
        "item": {
          "id": "e72a11a2-ca2c-4ecf-bd63-16087adf16ac",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "61facf77-81c8-4de9-adf4-0ca060592973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973448be-92ea-4aa8-b28e-9d091816321d",
        "cursor": {
          "ref": "6c2c3b2f-ad08-4fc7-9591-83cf1c353f09",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "fd652229-dc36-4578-8021-e8303c250cb3"
        },
        "item": {
          "id": "973448be-92ea-4aa8-b28e-9d091816321d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "8038d04b-b9d9-4001-b88f-14e43b8c35f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a8eb8be-d162-4319-8f2d-490dbedd7c97",
        "cursor": {
          "ref": "6faeaed7-7cd7-4726-8ccb-5313278e8ab4",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b9d3440a-7f87-421d-8e46-9f0601d82a89"
        },
        "item": {
          "id": "2a8eb8be-d162-4319-8f2d-490dbedd7c97",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "49ded31b-d8b0-43ae-8f57-6eb77591b309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc6e912-1640-41a9-b088-ba43afd8e5c6",
        "cursor": {
          "ref": "6a75e2b2-e16f-4527-a8a9-f63dca50aa3e",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "933b5a2f-6bde-4b70-bc58-1929c3adde4b"
        },
        "item": {
          "id": "2bc6e912-1640-41a9-b088-ba43afd8e5c6",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "b91d209c-8d14-4537-9531-b2e723a4da0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b9a4a1f-383f-4096-bb75-d45a31fec08d",
        "cursor": {
          "ref": "b9c7cef7-5cb8-4f85-aef7-9a48911b051b",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "cd33d21c-8956-44c3-b33a-4f3b2d3db1d1"
        },
        "item": {
          "id": "8b9a4a1f-383f-4096-bb75-d45a31fec08d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "2d4f4583-b505-4998-8c48-1fd581c2601f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66567b5c-a6e1-42aa-b4cc-69ca92bf437b",
        "cursor": {
          "ref": "2e123c7e-51ed-4d9a-9cd3-d66fe7ee9cd2",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "dd48be2c-8407-4607-82a3-acfe53b42402"
        },
        "item": {
          "id": "66567b5c-a6e1-42aa-b4cc-69ca92bf437b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "93fdd325-c28c-4ca8-9a17-ebe92e8568a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "134c1738-c8cb-47f4-9f02-c54ae798be6a",
        "cursor": {
          "ref": "777eedce-daa1-41bd-b9e6-99f26de9af03",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "31ea00d1-878d-49fb-920d-9de2bcb136dd"
        },
        "item": {
          "id": "134c1738-c8cb-47f4-9f02-c54ae798be6a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "3f79ed54-a229-40cb-a564-09141db59330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf3db01-063e-49e1-b455-203c15756718",
        "cursor": {
          "ref": "108cf4e8-6e03-4d32-b98e-a7450a397640",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3a83144e-dc45-4da2-a049-aa9bcb5cc6d6"
        },
        "item": {
          "id": "caf3db01-063e-49e1-b455-203c15756718",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "1f8cdff5-934d-4787-8fa2-aaf8fca7db9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af8c324-1d2e-4361-89d4-da51286098c5",
        "cursor": {
          "ref": "b46f7274-352b-4425-be8b-97aa9cafdc31",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1a59cc0c-8582-4b67-8f89-f51020ca742c"
        },
        "item": {
          "id": "0af8c324-1d2e-4361-89d4-da51286098c5",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "93ac2ac3-e54c-418b-8906-03eda865d783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a93621b7-2451-4810-96e3-f069407cb103",
        "cursor": {
          "ref": "e092926a-b6cd-431a-9f1d-622a6968af9f",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a9f04c20-101d-43a8-ac17-c4ff048e694f"
        },
        "item": {
          "id": "a93621b7-2451-4810-96e3-f069407cb103",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "72084c0d-8618-41d9-9fba-cf0f2334e8a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f327c8-2a22-4477-aa37-28fe8c44d21b",
        "cursor": {
          "ref": "e1088903-8ab6-4497-ae51-617a0035e20b",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "2fb0048d-2930-418a-81f0-1e72c474ce9b"
        },
        "item": {
          "id": "13f327c8-2a22-4477-aa37-28fe8c44d21b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "27403071-8406-433c-ae60-656d426038d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca396ab-94b4-492c-a1e1-6c755497b4f3",
        "cursor": {
          "ref": "50c93213-4490-4c2e-8078-cbd2f8e19cdf",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8b98d139-4953-4a53-8330-81b63f9be6e6"
        },
        "item": {
          "id": "aca396ab-94b4-492c-a1e1-6c755497b4f3",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b78a15b7-256b-4279-a40c-f25e263c8056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2debeec9-b363-4bb5-a449-9f3eb27511c5",
        "cursor": {
          "ref": "1225a670-ea99-470c-a5d5-90c6d98685d1",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0b392a17-a4bb-4e18-a9dd-544091f667cc"
        },
        "item": {
          "id": "2debeec9-b363-4bb5-a449-9f3eb27511c5",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6f3bd45c-54b6-457f-942f-c1ab3558394a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4848383-41e9-45d0-a7c3-55d7214f152f",
        "cursor": {
          "ref": "a97d5ceb-4540-499e-a98a-04200442e7a5",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "07bcdcf0-b9ed-41c6-8af9-ed142f087323"
        },
        "item": {
          "id": "f4848383-41e9-45d0-a7c3-55d7214f152f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "95881a3c-3959-44e6-96ed-fe5e86965389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd83a2f-051b-462b-b10c-527099983f46",
        "cursor": {
          "ref": "6c28586b-e266-4161-8df2-6bb400e9265d",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "5981132b-57c0-47e7-beac-2ce40d440ffc"
        },
        "item": {
          "id": "fcd83a2f-051b-462b-b10c-527099983f46",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "363ca4a8-9599-40e6-a60b-e6ce15dde762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591d16fd-f2ef-4e6d-acbb-04e8769790a2",
        "cursor": {
          "ref": "9e82d4ca-331a-49d8-8b6d-dcd9ca75f57b",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "cbd7fefd-d2ae-48a5-b601-687ecee163f4"
        },
        "item": {
          "id": "591d16fd-f2ef-4e6d-acbb-04e8769790a2",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "4f6e3cd4-a143-4893-92a4-b1c5dbba0211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eceb24c-9c53-40ff-9b78-118c6af5a5e0",
        "cursor": {
          "ref": "c05e080c-17c9-46b0-9c56-1277aab7e70b",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d8258482-815b-46e9-b9ee-08c24cd87d25"
        },
        "item": {
          "id": "2eceb24c-9c53-40ff-9b78-118c6af5a5e0",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "02924460-52ad-4bb2-9fbe-a6312c5d55e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1731c562-32b2-47b4-8e36-26e9cdaeb025",
        "cursor": {
          "ref": "d142b54b-c377-40c9-a3f7-3b9fdaf82879",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "7aeadbc2-fe50-49af-a37f-dfaed750f548"
        },
        "item": {
          "id": "1731c562-32b2-47b4-8e36-26e9cdaeb025",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "4393f4da-b9ca-4227-8b92-b1cec9b16f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a35e230-4d7a-447a-804c-c092a585c7b2",
        "cursor": {
          "ref": "87ce9457-4b15-49d6-adc8-a6d2a8aa4ba3",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b29f06ff-bad4-44cf-a920-28a8942e3597"
        },
        "item": {
          "id": "7a35e230-4d7a-447a-804c-c092a585c7b2",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "8f5afcbd-ebc2-42fd-9e42-e433eb3892eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c50837e0-4e04-45a7-94a6-d9da4411f4a1",
        "cursor": {
          "ref": "1e6bbfdc-cc40-4f04-9c78-c2ee5ffa6d5f",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "fd484390-d1ea-4ebe-a15d-d0ceb820fa2e"
        },
        "item": {
          "id": "c50837e0-4e04-45a7-94a6-d9da4411f4a1",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "45fa4498-957c-4942-a9ac-3a13cc7c2c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4269027-9147-411a-9b15-5d15c2ef2579",
        "cursor": {
          "ref": "7da16d6f-eaa4-40e5-af44-169b3d962481",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "859d6fa6-18cb-445a-9d5b-bfdd3284dfb2"
        },
        "item": {
          "id": "d4269027-9147-411a-9b15-5d15c2ef2579",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "83a6e8d0-2600-4c88-afae-1d3238ada50c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9a4500-61f8-45a7-80f5-7884c1f77534",
        "cursor": {
          "ref": "bfee424c-ab06-4611-b402-9568fbac93ab",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f663d63c-6a60-400b-aae9-90f00c3edafe"
        },
        "item": {
          "id": "fa9a4500-61f8-45a7-80f5-7884c1f77534",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d2d708f2-9282-49dc-bdb8-e566a8be2b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2593978-7c7d-41ec-883d-c86cf0474282",
        "cursor": {
          "ref": "37a3e6dd-cee7-4b11-9c7d-8f834aaf4dc1",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b504ddca-4b87-46b4-8972-b62148d06f0c"
        },
        "item": {
          "id": "b2593978-7c7d-41ec-883d-c86cf0474282",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a2164172-cfbf-46ea-8499-020d7a5a3d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ad0f80-a870-4271-9bc7-3875231088bd",
        "cursor": {
          "ref": "6a6a7469-c08b-4e9a-8396-c06e3fc81abe",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "aa2f103f-1ee3-4bb0-8c99-65d9baf7bc48"
        },
        "item": {
          "id": "58ad0f80-a870-4271-9bc7-3875231088bd",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "dfbcffb2-5954-4bc5-a3d2-6c1fc3faa0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1ff62b4-9b02-454e-8571-632250637039",
        "cursor": {
          "ref": "94a46a6b-f40c-4899-a518-ebd796fcd4c8",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "fd02f2df-9bc2-4234-ada5-1b9b47d22e3a"
        },
        "item": {
          "id": "c1ff62b4-9b02-454e-8571-632250637039",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "5d6ee07a-ed1a-4375-afa7-5820947cae88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab6809f-dd84-43bd-ba25-e6a5ba0ab12b",
        "cursor": {
          "ref": "17849bc4-db23-4b38-8031-8338aaceb8cc",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c9b12e77-dbcf-4351-9f3a-f5d4f5f3256b"
        },
        "item": {
          "id": "0ab6809f-dd84-43bd-ba25-e6a5ba0ab12b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "719329c1-924e-4afb-a2d0-227f92c4348f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c185bce0-6fb7-4e5a-92d7-48fd4850f91d",
        "cursor": {
          "ref": "1f661193-42aa-4c9f-81ea-6996c3ddefc7",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4dd3a2ba-5ab5-4ed8-a4bc-f1c9de3eb734"
        },
        "item": {
          "id": "c185bce0-6fb7-4e5a-92d7-48fd4850f91d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "df463c7b-96b5-491f-a3e5-a5849bc5edc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f15440-9100-468e-a506-e46297de4e76",
        "cursor": {
          "ref": "08ccfb18-9b08-4627-845d-d3b7b5233ae6",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "5062465d-f358-4d51-b643-55884ddda7ca"
        },
        "item": {
          "id": "f7f15440-9100-468e-a506-e46297de4e76",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "e7288a62-e3dc-4ebf-8c70-87345cc73200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffde1214-776c-41df-8e51-d2022e63d476",
        "cursor": {
          "ref": "56f4a76b-eadc-4b68-8d80-35be08b235a8",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "7b6796f2-fb5d-46ce-b575-81f4ccd3cb7e"
        },
        "item": {
          "id": "ffde1214-776c-41df-8e51-d2022e63d476",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "884d6f81-e1a7-4f76-b9de-273d41ac26de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d71d1be9-de64-4b73-872e-d9dc51d8d15a",
        "cursor": {
          "ref": "030e3961-32fe-4089-8d2a-397055d30e49",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "0c77e8d3-dcc6-4fb1-b574-9005c57f86dd"
        },
        "item": {
          "id": "d71d1be9-de64-4b73-872e-d9dc51d8d15a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5c52d54e-8073-4623-a93c-0bbb1289a3f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28c8d4b-292f-4113-bcd0-02c95afd834d",
        "cursor": {
          "ref": "4771ada7-2a33-49be-8524-91fe8a6ef3d4",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a8a5cfd0-c72f-4601-a290-bd0bd53fd026"
        },
        "item": {
          "id": "f28c8d4b-292f-4113-bcd0-02c95afd834d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "00db13a1-9b33-4301-8629-4da04b08f171",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37d5020-45d6-4a2b-bcc8-02f3c90de29b",
        "cursor": {
          "ref": "e62fb5a0-a97d-490a-9cf3-751d73f7a0ac",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "3f3db8d2-e6b9-4447-9c8d-6aa9b0fbf94f"
        },
        "item": {
          "id": "d37d5020-45d6-4a2b-bcc8-02f3c90de29b",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "01704bb6-fdca-479b-a39b-20df7d5b926f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "5afe76aa-a4f5-43f1-b449-b1d0692cf2c7",
        "cursor": {
          "ref": "7393acc3-d5cf-4182-ab90-b42c3f05175b",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e374b9ee-a08e-4006-885f-83af534f2f3e"
        },
        "item": {
          "id": "5afe76aa-a4f5-43f1-b449-b1d0692cf2c7",
          "name": "credentials_issue"
        },
        "response": {
          "id": "dd702b8b-73be-4f3d-b58e-d073624e5e28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "0a3e2c7e-09ee-4e05-acd0-8ee847cb8858",
        "cursor": {
          "ref": "5d7a7be0-76f7-42ed-b5f6-0c941f01b344",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c11972d9-27d0-47f6-84ed-e6139ed853d2"
        },
        "item": {
          "id": "0a3e2c7e-09ee-4e05-acd0-8ee847cb8858",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "fe954a69-31c1-4985-b05a-6ccf01858fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "c34de7e3-1074-4e43-8983-3a4bbd0efdd1",
        "cursor": {
          "ref": "6681f494-5e95-4b9d-a523-5c3fc9a09e63",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "4392a4e1-272b-4f81-a5b6-353ce937ed24"
        },
        "item": {
          "id": "c34de7e3-1074-4e43-8983-3a4bbd0efdd1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0bcdae0c-65e1-4431-8d94-d73ee6f3c148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "98b7bc2e-b928-4cf9-8e25-ecc808394f8f",
        "cursor": {
          "ref": "1091c117-94e8-401e-8b3e-4517fb68dd13",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8772ee95-3b76-4c24-826b-72a8234b1fb5"
        },
        "item": {
          "id": "98b7bc2e-b928-4cf9-8e25-ecc808394f8f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0611d8e9-7863-4227-8592-ade284a00d84",
          "status": "Created",
          "code": 201,
          "responseTime": 5041,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f313bbf-59a7-4e83-a2a6-1b9268caca85",
        "cursor": {
          "ref": "b36e1524-7f51-47d5-8044-14c9789106d0",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "9694bcb0-e3be-494e-926a-d6057ab9f2fe"
        },
        "item": {
          "id": "0f313bbf-59a7-4e83-a2a6-1b9268caca85",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ee4f7c6c-0764-4b2b-bab4-ba63bea686e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "748c639e-709b-45a5-8006-bf4a8a79940b",
        "cursor": {
          "ref": "0b336821-1903-4f30-adf1-b11912fa8bfe",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "6f9d8717-15be-47eb-8bd9-58242d576b4a"
        },
        "item": {
          "id": "748c639e-709b-45a5-8006-bf4a8a79940b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "9c0853a3-c4d0-4ef2-84d0-30680e50a53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "66fa48a4-796a-4ecd-a7e9-f56ee04bc9b6",
        "cursor": {
          "ref": "4b12ee27-18e5-4cae-8e22-a1a7c2608c51",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b1304795-da1f-48c5-87cd-9b1c37d9106d"
        },
        "item": {
          "id": "66fa48a4-796a-4ecd-a7e9-f56ee04bc9b6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "dc045fb0-ec2e-40b8-9c94-5e4759d8b0d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d07b4232-e1b7-4cb0-bf6d-be388d6ad097",
        "cursor": {
          "ref": "09b0aa66-03ef-4d02-b6ed-793c73abe19e",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b7120547-1c76-4c38-a7b0-17e5758acc1f"
        },
        "item": {
          "id": "d07b4232-e1b7-4cb0-bf6d-be388d6ad097",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a2fa4dcd-a46f-42c4-a74f-29813b4b87f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e7140e9-dd91-4d68-b9f5-2a3bbbb126e0",
        "cursor": {
          "ref": "093994d3-e366-4429-8dee-b1a2cf9b415f",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "8a1e8fc9-5bc0-4922-a5b2-4e50d40a87a5"
        },
        "item": {
          "id": "9e7140e9-dd91-4d68-b9f5-2a3bbbb126e0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "05ea86ba-a81e-48df-9ee6-0be3acc03589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6131e1b-90ef-43df-81aa-1d156bc2d623",
        "cursor": {
          "ref": "c141bf55-7f71-40c6-925a-eb91bc43f8f9",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d94a04d3-696a-4eef-9cfe-6a4120678f84"
        },
        "item": {
          "id": "b6131e1b-90ef-43df-81aa-1d156bc2d623",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d85ebba1-2b46-48ce-91da-aac8b0ed3e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d87a2eac-6231-4ac8-a189-a2c4571a0e8e",
        "cursor": {
          "ref": "5deb06ba-1f5e-41e7-838a-b9563308eae9",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "efbeb0c6-563c-44c2-8279-8f23d363adb2"
        },
        "item": {
          "id": "d87a2eac-6231-4ac8-a189-a2c4571a0e8e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c2eb0794-43ed-441c-a07f-74762f97b98a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30a48bd-1fd7-425b-b616-306aeecd880b",
        "cursor": {
          "ref": "0cbfb31b-302e-4a09-9f2c-77c764130b51",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a585045d-2221-4ccc-80c9-62974018d6d0"
        },
        "item": {
          "id": "b30a48bd-1fd7-425b-b616-306aeecd880b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0cb00829-efc5-48be-b604-5ae515f13642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d094498-e95b-46d2-8e0c-dfaf8f367187",
        "cursor": {
          "ref": "795fd464-a492-4ca3-ba80-245c4de4ccba",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "38eaee5a-92c8-49f4-94eb-d56f1af10e51"
        },
        "item": {
          "id": "6d094498-e95b-46d2-8e0c-dfaf8f367187",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b1dfc1fa-3852-461f-80af-1b743c9d312c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4940214-8ec7-47cf-9fd2-5e3e53ad2fc7",
        "cursor": {
          "ref": "7b9bd4c9-fcd3-4e7e-adbc-5409cd03d703",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "0afccc74-9b0b-46b9-aec9-8f27a3653d08"
        },
        "item": {
          "id": "c4940214-8ec7-47cf-9fd2-5e3e53ad2fc7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d5ca0145-97f8-49d0-bd35-1f68fe72f31b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "966c971d-131b-4927-a6f6-d42e48c3830a",
        "cursor": {
          "ref": "4fc915c5-d967-4eb3-bd72-d806471a55eb",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "96b7a9aa-664c-4ab2-9f83-f459c396f6e2"
        },
        "item": {
          "id": "966c971d-131b-4927-a6f6-d42e48c3830a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5397e05e-b309-439c-9925-9f1052e61ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06068082-71b3-4aae-ae0e-c8cce8f47a27",
        "cursor": {
          "ref": "0e2c0c6a-660d-48aa-a89d-8217d02be6b5",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8b59d927-e503-4d92-8aff-2c18f0578388"
        },
        "item": {
          "id": "06068082-71b3-4aae-ae0e-c8cce8f47a27",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a299ff8f-de7f-44b7-a942-228be18ab425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f428cea-93ac-4748-9a83-5ff5d318e4c4",
        "cursor": {
          "ref": "4f35e9c1-94c4-4348-b931-a159c420bef6",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "34f8a780-0651-407e-b9d5-49cdd25a01ba"
        },
        "item": {
          "id": "9f428cea-93ac-4748-9a83-5ff5d318e4c4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "11cf27b0-7a87-4e12-b095-93323584581c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de884409-52da-48d8-a61d-2bbc95e1aceb",
        "cursor": {
          "ref": "a5033930-2c6e-4750-9ff0-1398aa599c0a",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d4a241b4-9eda-4f6d-916b-a4ee615207a3"
        },
        "item": {
          "id": "de884409-52da-48d8-a61d-2bbc95e1aceb",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8fd4eac6-c54f-43e5-99be-a9aad6aabb53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eff1569-ffc1-4cf8-a089-24f93e132345",
        "cursor": {
          "ref": "791974be-780c-42c6-a7a9-dfb2d565f323",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b20d321d-1b97-47af-bf08-4606e2cb76b1"
        },
        "item": {
          "id": "8eff1569-ffc1-4cf8-a089-24f93e132345",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "04b5aec7-3bf2-462a-b01d-1f846b73d8c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "509e2af3-bd28-4e1d-9ba7-49c10cd6886b",
        "cursor": {
          "ref": "781af2e9-5dfb-4e97-8647-7ce62db40309",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "de142563-4300-4183-9829-c3658fa562cf"
        },
        "item": {
          "id": "509e2af3-bd28-4e1d-9ba7-49c10cd6886b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "20e2e5e0-985a-459c-bb68-2054bd1e459c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8045daba-7465-4788-be66-ce649f603292",
        "cursor": {
          "ref": "4d0c000c-e3a3-4bc7-a60c-479021178bdb",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "bc94652f-fd86-440c-ae62-1b701d156aa7"
        },
        "item": {
          "id": "8045daba-7465-4788-be66-ce649f603292",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b3201111-6a80-4cbf-9956-23d24151680d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4482805c-2ebc-4a25-a40c-f94d502ca65b",
        "cursor": {
          "ref": "c713b5af-7a51-4d13-bbd9-63c98779ef59",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "fc1fe33c-0a2c-4153-9fdf-5e283a567376"
        },
        "item": {
          "id": "4482805c-2ebc-4a25-a40c-f94d502ca65b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b23d02b0-cfc7-4ae1-bd7b-a0590a806c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d279cc19-7f97-4a97-b1d1-7053b62579e5",
        "cursor": {
          "ref": "a187b03f-22d7-4c85-b45b-dfd50f5eb86d",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8096000e-12c3-4467-b28b-d942c4ea9783"
        },
        "item": {
          "id": "d279cc19-7f97-4a97-b1d1-7053b62579e5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "bb6e73ac-8109-448c-a932-c93bb6c34bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eeb4c4d-02c6-45e6-849e-84f4ae22605d",
        "cursor": {
          "ref": "ce7ee79e-29fb-4fe9-bfc7-e0e1d818d21c",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f6e0e1c0-76a7-4530-a4e0-391be12d20e4"
        },
        "item": {
          "id": "0eeb4c4d-02c6-45e6-849e-84f4ae22605d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "11e0f6f5-030a-43a0-86b3-708a635f6d78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6946a183-a34b-48ed-b1bc-8992a76606bf",
        "cursor": {
          "ref": "1ddd008d-e398-4bd7-a2f7-174a41200521",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "6a5c34bd-ee4c-485a-996a-2764724b4481"
        },
        "item": {
          "id": "6946a183-a34b-48ed-b1bc-8992a76606bf",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "15195318-5325-4ba4-a63c-593604558087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e3f077-5805-47cb-ab49-4f3714fa8fc4",
        "cursor": {
          "ref": "c88ad196-dd8e-48e7-98c1-7cc767d7307d",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "fe97f5ae-bc6f-460b-be4d-a7810e580411"
        },
        "item": {
          "id": "16e3f077-5805-47cb-ab49-4f3714fa8fc4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "00cd6cda-d162-41b5-8796-fde36e3715e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4af10e1-be53-4090-8cf6-0cd13977ce70",
        "cursor": {
          "ref": "67da1f38-8d03-48a6-b7f4-6dc51cca87cb",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "8888e283-57c2-4405-b470-4be6f264cb31"
        },
        "item": {
          "id": "d4af10e1-be53-4090-8cf6-0cd13977ce70",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9bf6c684-118a-4245-b9f6-28d0206abb7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5982c845-5fd9-4a40-bcbd-85a3a9dbe7ba",
        "cursor": {
          "ref": "83d6d748-caf1-4d91-8878-3e55d0d2e359",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "529147c4-100b-4997-886f-e6a642638f0e"
        },
        "item": {
          "id": "5982c845-5fd9-4a40-bcbd-85a3a9dbe7ba",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "efc28273-8c16-4210-a625-4e00960bec44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3164125c-6b67-43fe-93a8-f8d0691ab35a",
        "cursor": {
          "ref": "9ebc1307-de12-49e3-8f37-9e19ad0752a4",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4dc4332e-5f75-4560-a1d4-a941d8e8d43f"
        },
        "item": {
          "id": "3164125c-6b67-43fe-93a8-f8d0691ab35a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "fa95c29b-8df8-47e9-8b50-5370fcfa6867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "047a2e36-c3e1-465e-b42c-9f4414934334",
        "cursor": {
          "ref": "0fcdeeda-2211-4345-90d8-7ccc2e3a3b3f",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b84b85aa-bace-48f0-a457-2527bd270129"
        },
        "item": {
          "id": "047a2e36-c3e1-465e-b42c-9f4414934334",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "98712505-7f3c-4c2a-913d-08690071d953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65190314-55b2-4e77-800c-512ebff99297",
        "cursor": {
          "ref": "84541ddb-aa9a-44f5-be3f-8bcadb13b470",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "62b15099-293f-41ab-b40b-8560b8d61ce6"
        },
        "item": {
          "id": "65190314-55b2-4e77-800c-512ebff99297",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0299f3ad-d188-488b-b65a-17a27e0f01f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4457ea2-40b3-4b47-af16-2821904cf612",
        "cursor": {
          "ref": "0ff7c729-17cb-4c9e-8977-066c3a44392a",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ece91c94-d26f-4843-8294-a1be6192b624"
        },
        "item": {
          "id": "e4457ea2-40b3-4b47-af16-2821904cf612",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1d92fdd5-9bbd-4be4-9d65-9e331a9a0e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c053ae-282f-4805-9858-34bcb55b0e2f",
        "cursor": {
          "ref": "3e56c965-8a3d-4f81-ac03-ad5bbfbc7a39",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "88db977f-f47f-4bb8-a49b-572f65fc56e8"
        },
        "item": {
          "id": "31c053ae-282f-4805-9858-34bcb55b0e2f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ceb8d334-2672-44f1-9798-24aab75c29d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de0e1ca-9fc1-4dcf-a684-c803e2022de6",
        "cursor": {
          "ref": "1f7f1af8-ec02-4357-b2b0-a0652ed550fa",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "facd274d-d752-462e-b377-4f272c9a76fa"
        },
        "item": {
          "id": "1de0e1ca-9fc1-4dcf-a684-c803e2022de6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9552ad71-2921-45f0-913d-0b9928eb0f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7d80ee-40b5-4d35-8528-281c40f23479",
        "cursor": {
          "ref": "aaf57d41-446f-4030-a98e-59cacf5462a4",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "68ac93a2-2230-479f-8a41-dadc449e2b17"
        },
        "item": {
          "id": "9c7d80ee-40b5-4d35-8528-281c40f23479",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f0cd0ee6-d912-4810-aa6a-447a70ad7dab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28aeac64-815e-4221-8252-d019a11d88f2",
        "cursor": {
          "ref": "08898308-be96-4115-8475-0fdc0d3be14c",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "769fe268-716e-4f1d-a8f7-7291b24243ff"
        },
        "item": {
          "id": "28aeac64-815e-4221-8252-d019a11d88f2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b9b88ca5-d398-4035-be69-de2b86df0df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34807467-ce76-47ad-a816-c9390e0e9c1b",
        "cursor": {
          "ref": "1cd69aaa-2d62-4a00-9c04-140a08465749",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "cd7e7fc3-17e9-4db1-ad88-f8787b34d172"
        },
        "item": {
          "id": "34807467-ce76-47ad-a816-c9390e0e9c1b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "abff6c40-0b75-4317-a8f5-748a23872f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0722f131-ccbe-4512-8fbd-8e69023743d8",
        "cursor": {
          "ref": "ea8e120e-4a00-4b60-a89b-e529fb099bb4",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "06beec44-da82-4405-a1ce-e27883e1cc3a"
        },
        "item": {
          "id": "0722f131-ccbe-4512-8fbd-8e69023743d8",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "71a6cde8-7656-4386-8621-01cd70eaa679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d1e14e-4013-43a8-a73a-a742c328fa5a",
        "cursor": {
          "ref": "4a6bac5b-d3e5-431b-aa53-2955ee8ed287",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "21c0aaf3-751f-4ffb-aa74-e5afa9bb5188"
        },
        "item": {
          "id": "31d1e14e-4013-43a8-a73a-a742c328fa5a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "76d48dc0-fc64-4942-a66f-8493e4407802",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb31d3f-62b4-4258-8f07-838ab3c82b8a",
        "cursor": {
          "ref": "3bbe8c00-e9e7-4f9a-9d86-660c68ff3572",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "dde987c4-c881-4613-8504-58a3b26811e9"
        },
        "item": {
          "id": "4fb31d3f-62b4-4258-8f07-838ab3c82b8a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e8503d8c-a2ef-4676-aca0-f518edf9e0d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4aa95c5-842c-4a7d-91f2-d3fd29828642",
        "cursor": {
          "ref": "0b7aeaa1-b3a6-4f06-947d-7aeb7296f62b",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5a32e0d0-1b30-490c-8a81-343b63013b02"
        },
        "item": {
          "id": "d4aa95c5-842c-4a7d-91f2-d3fd29828642",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d581872e-831d-4fe1-aece-3e70b45ecdbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57a5376-f874-432c-8522-8ba59030491f",
        "cursor": {
          "ref": "46631de7-dfc9-4781-86e8-39ec6037d3c1",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "95aac1a3-c8f2-45f2-aab5-85b466cfb342"
        },
        "item": {
          "id": "f57a5376-f874-432c-8522-8ba59030491f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6d616ce2-50bf-4bb5-beeb-9c20d37f39d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d45804b-2bd2-47e0-b740-a924e684d83f",
        "cursor": {
          "ref": "2c200f01-5411-42dc-a2d0-bd277d50d5c1",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e96e2475-aab6-4440-b09e-8625a35021c3"
        },
        "item": {
          "id": "3d45804b-2bd2-47e0-b740-a924e684d83f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ef8e9d76-80ec-4283-b91f-f93ca73b3769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d43e891-297a-4c0b-834b-b054b36a0833",
        "cursor": {
          "ref": "c650b230-bdff-4a1f-b305-7a44902e35ad",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f234f17f-8415-4c9d-bdf0-94149239861d"
        },
        "item": {
          "id": "8d43e891-297a-4c0b-834b-b054b36a0833",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b0fd72e2-94a9-4fbd-89bd-e1708e0aeb31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da237cc-4026-4ffb-a245-825a94cab0a6",
        "cursor": {
          "ref": "3a334874-aa59-42b0-a5f3-8e8ec8f3b077",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "5c93d781-6a8e-4fb8-a879-4d4bcd5f7602"
        },
        "item": {
          "id": "5da237cc-4026-4ffb-a245-825a94cab0a6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f540de0e-f6bf-4c1d-bf74-4ca266825ac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022d2a1a-b041-4ab0-8de8-e061e8cb79a3",
        "cursor": {
          "ref": "7470f717-3aa1-4946-a2fd-8396d1009c92",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "40f13699-080f-45e9-be98-0be5212c58d5"
        },
        "item": {
          "id": "022d2a1a-b041-4ab0-8de8-e061e8cb79a3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "557eed61-647a-46f4-b6a5-7bb11c1d19da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b5813c-a099-45a4-874f-0986cdbfd70a",
        "cursor": {
          "ref": "5441b07b-ef10-44bf-9d38-049e641777f8",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "cb159596-5efb-4501-a4bc-de795b915331"
        },
        "item": {
          "id": "39b5813c-a099-45a4-874f-0986cdbfd70a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a6044568-1a01-40fa-93d3-a1ca05d67ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b48b30-3af6-4474-90f2-5fc8b788dd38",
        "cursor": {
          "ref": "ca9abc68-ec61-4c3f-9061-14a1a5505853",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b8f8901e-addf-4dd0-a8d4-486581c707aa"
        },
        "item": {
          "id": "85b48b30-3af6-4474-90f2-5fc8b788dd38",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e2fb0b57-4f9e-44f0-8c95-9512e5bf2376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fda9d34-4277-45db-82df-1c84ae07e2e3",
        "cursor": {
          "ref": "ec885496-1f40-4b8a-bf4f-bbc328f44cd1",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "57cd8b1d-41fb-47a3-a117-0bed642741df"
        },
        "item": {
          "id": "1fda9d34-4277-45db-82df-1c84ae07e2e3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0abf71be-8c94-4f2d-8cec-d31f6d5bba20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c751e23e-90cd-4776-9bc9-577df918fb4e",
        "cursor": {
          "ref": "0dbc4fb0-77eb-4568-9dd6-69a6d017b4bb",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "76a6c2d5-ecaa-40af-b1d5-2d1d34feb0fa"
        },
        "item": {
          "id": "c751e23e-90cd-4776-9bc9-577df918fb4e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "70313571-74a4-425b-bd54-53fc7668a6bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec6791c-f02e-4bd6-b5dc-541d2ac6afe4",
        "cursor": {
          "ref": "51127509-f2aa-4c11-adb2-a21bc63ceeba",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "28bfb485-5207-4a06-8cf2-2128afda3a16"
        },
        "item": {
          "id": "2ec6791c-f02e-4bd6-b5dc-541d2ac6afe4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ca3fd6ca-5ee7-460b-ad30-8dd3e1994bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc3001d8-2539-499c-997a-ce4da2137319",
        "cursor": {
          "ref": "f945f0f9-e2cc-4d04-aeb6-775fd6ee6b8b",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "9c4dde3b-8984-45e8-9ef9-f1382365b319"
        },
        "item": {
          "id": "fc3001d8-2539-499c-997a-ce4da2137319",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "fe71d92c-2d04-494b-930b-59ff1db3b6d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4fd908-7147-491f-9aaa-82ef98111e6d",
        "cursor": {
          "ref": "8bf6d4a6-0a6f-44db-a6fd-9aa200c42a60",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "12d579e0-7a88-4a41-8589-8246bc9ae1cc"
        },
        "item": {
          "id": "2d4fd908-7147-491f-9aaa-82ef98111e6d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2b072176-7b26-4ba3-9ae0-e2a16b32784c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb7b7f2-8ffd-454f-b2aa-7b05a1263998",
        "cursor": {
          "ref": "dd363806-4fb3-4a3c-89e9-3164dec0014c",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "6ae7d258-f4c9-4649-949e-22298b021f76"
        },
        "item": {
          "id": "7cb7b7f2-8ffd-454f-b2aa-7b05a1263998",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2bf79e1c-3902-4586-81a2-9d36bebbcdbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f197b2-3511-402b-822c-03e6a3ec3ea9",
        "cursor": {
          "ref": "f18612da-c917-495e-af40-7b0a91da6a03",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "888d1392-cc64-44bc-a7b5-ee28a3145d1e"
        },
        "item": {
          "id": "35f197b2-3511-402b-822c-03e6a3ec3ea9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "be1d3fb0-1215-4f15-b02c-b5307ba16ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea59d674-dd94-4961-99d0-c26915d3dfe9",
        "cursor": {
          "ref": "28c9d879-3199-4fa4-8c5d-c2d1f3fddf52",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f306e3f3-6305-4c6d-b21d-4ba54b288b18"
        },
        "item": {
          "id": "ea59d674-dd94-4961-99d0-c26915d3dfe9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ce31af19-9a3b-419c-976e-70e58031b058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f81bb5fb-298a-4b34-be4b-92eecaa990e1",
        "cursor": {
          "ref": "dda53a40-8439-4713-9218-cc66928254f4",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "cc202aac-3322-403f-8f99-f9955ec9246c"
        },
        "item": {
          "id": "f81bb5fb-298a-4b34-be4b-92eecaa990e1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8c207796-9dc6-4044-91ab-fb5c7e278c9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0b7f01-b3b2-4e04-812b-d2f03e30acaa",
        "cursor": {
          "ref": "803755e0-7b5f-4847-a629-d6e208bf4b20",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "cccd81d9-e150-463b-b49e-f5dd72421700"
        },
        "item": {
          "id": "df0b7f01-b3b2-4e04-812b-d2f03e30acaa",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4a2667e4-90d3-4813-995c-14c7fd9d5c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cbce20d-27a5-441c-a746-ef353806cbfe",
        "cursor": {
          "ref": "39d1951b-c6d9-4d99-8cfe-0c1a76885e8f",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "df7a6196-0f71-48a5-af5f-e38b9587eb84"
        },
        "item": {
          "id": "8cbce20d-27a5-441c-a746-ef353806cbfe",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6c61169c-bd8f-41f3-80d3-44c67205a143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb93cf1-25a2-43a7-a47d-c0d16b6ac02d",
        "cursor": {
          "ref": "1128802a-b2ba-4c51-9a1c-a22a860e5c91",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "5eafeb35-f4d6-425a-8670-39bc8b36d739"
        },
        "item": {
          "id": "9cb93cf1-25a2-43a7-a47d-c0d16b6ac02d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "08b4bb91-a168-4e13-8bf7-136d9ce2996e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f45a95d-4e48-42bc-9999-c75a0af73896",
        "cursor": {
          "ref": "a441ac36-a7a1-460c-89e1-405c287d7e53",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c6917665-7f9a-4caa-bf27-73651305e361"
        },
        "item": {
          "id": "7f45a95d-4e48-42bc-9999-c75a0af73896",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "372f4766-7e74-49c6-87b8-bcfc71b8c02e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6333ba63-2571-438a-ab39-2882b9920048",
        "cursor": {
          "ref": "dcc42f95-333e-480c-98f8-9dde8fd4a295",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d8f47a3f-349c-4138-9e21-767506ef6a87"
        },
        "item": {
          "id": "6333ba63-2571-438a-ab39-2882b9920048",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "087ac785-f636-4e66-b24f-f5e299b749e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a7669b-34a8-4636-b02b-b838cc35a2ef",
        "cursor": {
          "ref": "33dce0be-e3b0-44b5-807a-326cb93ba36b",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "8623aac9-9c06-4338-9986-02eef538296f"
        },
        "item": {
          "id": "40a7669b-34a8-4636-b02b-b838cc35a2ef",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4bf19ee8-2692-4486-88f5-626309a92814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8dfcead-778f-49eb-b013-ce491cc0de41",
        "cursor": {
          "ref": "a19765d6-77f5-45ba-b09b-5ea656c78eb6",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "bb31d540-e518-4921-b070-73a223ea3bde"
        },
        "item": {
          "id": "b8dfcead-778f-49eb-b013-ce491cc0de41",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "38c655f2-c53a-4af7-9700-90bb8458cf38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b88122a-cf5f-4011-b3c0-a9aaa44e0aa7",
        "cursor": {
          "ref": "ce2cbe50-d007-4f9c-aa7e-6f64fad06b7a",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "40d0c03a-22d0-4f52-b00c-830e319c2b88"
        },
        "item": {
          "id": "1b88122a-cf5f-4011-b3c0-a9aaa44e0aa7",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c5361d82-9f46-4b13-9df3-1e5d584b95cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d93f4c0-1157-45ed-a401-bd7038437f77",
        "cursor": {
          "ref": "df88632e-a217-4871-9338-e20c6c45900d",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "63052a90-19bf-486c-82a4-ca71e8866389"
        },
        "item": {
          "id": "5d93f4c0-1157-45ed-a401-bd7038437f77",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1e16bee4-1c4b-4083-8c31-aeae9a5f186d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76daad49-cb25-4f1a-b026-f6c277051f4f",
        "cursor": {
          "ref": "5a7d4799-a08a-4b63-907d-b3ae17183b46",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9fb0a7ac-bb20-4bd4-8850-84faff5319bc"
        },
        "item": {
          "id": "76daad49-cb25-4f1a-b026-f6c277051f4f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ce7435f0-c326-4b3e-98d5-e17137c05e06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd2cdb8-9657-4b39-b044-428c40d888af",
        "cursor": {
          "ref": "59e24549-a2c5-4f35-be25-a89d9ff5fb0d",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d534fbdd-b726-457e-b09d-5683d1bbad18"
        },
        "item": {
          "id": "edd2cdb8-9657-4b39-b044-428c40d888af",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a688d156-1279-459e-8235-fc419de90fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0726d0f-61ab-4dc9-b666-e391051f08d2",
        "cursor": {
          "ref": "cb2c4fa6-7952-4108-8974-5e21bfc77957",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "9f4eab32-9ab6-416f-a647-02c4e6e90c96"
        },
        "item": {
          "id": "a0726d0f-61ab-4dc9-b666-e391051f08d2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6be63409-140c-427b-b198-08140324c1a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1e51e0-82f0-4ccb-b219-7cafd69a7fdc",
        "cursor": {
          "ref": "cd950fa8-65d5-47ea-98aa-849bc8b7236b",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c3697dd2-70c5-4136-b317-07d7c2e62563"
        },
        "item": {
          "id": "ad1e51e0-82f0-4ccb-b219-7cafd69a7fdc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "cb73c104-6bae-4716-bd2d-23e1201aace2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5192ad-3cf3-4e9b-b3b2-da1e7a6b31c4",
        "cursor": {
          "ref": "6ceba4f3-5005-4f4e-a8a8-13fdca7766ee",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c908abf7-8c08-4330-86f9-58c3e1617264"
        },
        "item": {
          "id": "9f5192ad-3cf3-4e9b-b3b2-da1e7a6b31c4",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "2fe691ca-9d70-42fc-b3e9-d17df221340e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a72874-9e26-49fe-8025-5496895e6c6e",
        "cursor": {
          "ref": "c6dec664-90d1-497a-b018-7f21d3ab9e8e",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2b342fd5-69d7-4c53-be8a-c87b4dc004a1"
        },
        "item": {
          "id": "f5a72874-9e26-49fe-8025-5496895e6c6e",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "8cb6fbba-04b8-45af-ad38-0a22d14d5a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f148f59c-e4b0-40b7-8b20-9b955a77f0da",
        "cursor": {
          "ref": "536ab2c7-d1e0-4d87-85f0-14fc875b8573",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "54438516-022c-4f58-8b3a-e4ba1d511398"
        },
        "item": {
          "id": "f148f59c-e4b0-40b7-8b20-9b955a77f0da",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "08327005-4807-4869-92d7-28091a53d6ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca18e0d-7d95-42e9-93d8-12d21d55ca9b",
        "cursor": {
          "ref": "893069b8-82f3-440c-8ba1-60717185eb3f",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "2cdb1aec-8558-4e46-a682-3952705a3ba0"
        },
        "item": {
          "id": "8ca18e0d-7d95-42e9-93d8-12d21d55ca9b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "8125a998-af02-4bb5-b396-12949878263b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53636a08-36f2-4fbe-819c-364a4bda72f4",
        "cursor": {
          "ref": "25d51f86-50fd-4ae4-bb50-12e898f2475b",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b89a2293-b35d-48bd-8ef1-8788949ed4ec"
        },
        "item": {
          "id": "53636a08-36f2-4fbe-819c-364a4bda72f4",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "25b0d113-7205-4115-a6d9-73087692e540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7edf7975-9440-4ed8-83f4-39356e6cd23b",
        "cursor": {
          "ref": "f9825278-9bbe-49f1-bb82-6fd501215e9e",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ccdb1cc2-b43d-437b-81ac-12b324472a9f"
        },
        "item": {
          "id": "7edf7975-9440-4ed8-83f4-39356e6cd23b",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "6d41e329-4a89-45a0-bf0d-eedd6f6eed5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c67907-cb88-4f1e-9b70-57ce788b5024",
        "cursor": {
          "ref": "db8a4788-2b27-4717-a73b-46bc563e1ea6",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "c55f48f8-ee6d-4490-a4f3-4a86515007fc"
        },
        "item": {
          "id": "b2c67907-cb88-4f1e-9b70-57ce788b5024",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4b45124a-51fe-4f8e-a77c-17f24b971d6f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e34f41c8-d096-4fef-b1d5-23cbf063b64f",
        "cursor": {
          "ref": "fdcd0252-ced3-4cff-95a7-1e04fa5ccf76",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "0596f8eb-23c3-48ed-9f38-af835cc8d88a"
        },
        "item": {
          "id": "e34f41c8-d096-4fef-b1d5-23cbf063b64f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "89109c3f-99c0-4fe8-938d-0b56308b2f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309b9893-9ba2-422f-b4e3-c4af76b1b140",
        "cursor": {
          "ref": "804406a9-a97a-4943-bb16-8b1f7341a073",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "cbb076b8-d304-451b-aa13-65bbdabc8959"
        },
        "item": {
          "id": "309b9893-9ba2-422f-b4e3-c4af76b1b140",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "aaa71867-afd0-4aa2-9527-984312330918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f8c20c-e76b-4dfa-8857-6c02b69d6c6c",
        "cursor": {
          "ref": "4feb5bcc-f8f4-4e80-93b5-8a1fbfea3eb0",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c52a4fb7-5f76-4597-b647-9a2369cca560"
        },
        "item": {
          "id": "c2f8c20c-e76b-4dfa-8857-6c02b69d6c6c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "792650b1-7300-4f06-9c8a-794c4265b0c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b18b6dc-d6a6-4aeb-a0b6-fe49fb40c1e2",
        "cursor": {
          "ref": "692eb880-4ac0-4be0-b616-3019af587d24",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d950f316-57fe-4e66-ba2e-cfc28a2c7aea"
        },
        "item": {
          "id": "8b18b6dc-d6a6-4aeb-a0b6-fe49fb40c1e2",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "30d8705c-aa86-4775-9ca6-3a6ec64c222b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "537b8bb0-401b-47bc-98cc-67f7bb776aad",
        "cursor": {
          "ref": "0cea75ae-cbbf-4469-9baf-d68aa4e6b208",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "17da7e2c-0c9b-47e6-9d25-c60fc5d7d797"
        },
        "item": {
          "id": "537b8bb0-401b-47bc-98cc-67f7bb776aad",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "adc77314-f8c6-40f9-a024-c0057513a532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3929b443-6911-4c96-806f-f662d52fff0a",
        "cursor": {
          "ref": "cb4da672-d421-415c-a3d1-a08b358b640b",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "13fcb15f-434a-46a3-bed6-ab878d678228"
        },
        "item": {
          "id": "3929b443-6911-4c96-806f-f662d52fff0a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "43e60854-e6b1-4cde-90d9-f56af4307541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca9be23-792a-4671-8037-88c9651afd57",
        "cursor": {
          "ref": "c8d8b95f-ebb9-42c2-aa9c-456f62f52489",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "69f10efc-8239-46e8-a369-9093d66a4b9f"
        },
        "item": {
          "id": "3ca9be23-792a-4671-8037-88c9651afd57",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "168752e6-bcf2-49ef-8ea8-2f8093b80cb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de337553-593a-414c-a3a9-74071796e5cb",
        "cursor": {
          "ref": "46f88499-c5ac-4231-b4f6-6ec8b0a702b6",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "8e9f1908-345b-4970-8610-c479ed8fc16c"
        },
        "item": {
          "id": "de337553-593a-414c-a3a9-74071796e5cb",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "31d9cafc-0e67-47b6-8a14-78c9f09d31bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc9b2933-8c4b-44d4-9961-ead051e10ce7",
        "cursor": {
          "ref": "a0e08f99-7a14-43f7-b3d9-410612377ce3",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e64b1e7f-ba77-427e-90f2-0a6ef5d357f5"
        },
        "item": {
          "id": "cc9b2933-8c4b-44d4-9961-ead051e10ce7",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "95247fc7-0efd-49b5-b019-3c68fd2d8f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec4489e-ed9f-40ff-8740-18d902ddbd2a",
        "cursor": {
          "ref": "afb3ecae-309b-465b-9cde-b66fff79d0bf",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d5f99d66-2049-4c1b-aced-0acf430d209a"
        },
        "item": {
          "id": "3ec4489e-ed9f-40ff-8740-18d902ddbd2a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e038df2b-0680-4918-927a-8816796940c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdfa95c2-5991-4186-9cf0-4ac40a60a15f",
        "cursor": {
          "ref": "eefb8573-a546-4c78-9188-77769f5acb0d",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b9711452-9d7c-42c3-844f-0c18e6c0eaa0"
        },
        "item": {
          "id": "fdfa95c2-5991-4186-9cf0-4ac40a60a15f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "3e7ec2b1-5b6a-4f47-aec1-501dfd65f51b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4236924b-2e7b-48f8-804a-6b927b3b8b62",
        "cursor": {
          "ref": "7ae79a1c-676f-4ac9-a517-a2dbcb93dca1",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "815dcc82-3f93-4cfb-bc02-bd373984f48a"
        },
        "item": {
          "id": "4236924b-2e7b-48f8-804a-6b927b3b8b62",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "cde6d0d2-0bd0-467a-9455-3162e18e9380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d07aaacb-3ef4-4206-85a5-b351719abd01",
        "cursor": {
          "ref": "5c358535-0a0d-45d5-b9f2-6055adf08b05",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d36dc707-f4ca-436f-ac49-46cafa2d8c43"
        },
        "item": {
          "id": "d07aaacb-3ef4-4206-85a5-b351719abd01",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a41e48dc-96f1-4ca9-860e-22be137d50c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae414f13-4de8-4589-8a65-6213c014a136",
        "cursor": {
          "ref": "9add1c74-2a75-4cc2-92ee-fb623de94f8e",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f33d57ac-245c-47a4-85e7-5bc9855faa06"
        },
        "item": {
          "id": "ae414f13-4de8-4589-8a65-6213c014a136",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1925ccc8-49e5-4ef3-96ab-494b9cc9f709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "412af403-f3f2-4bc0-a54d-3a37dd32f185",
        "cursor": {
          "ref": "4d38b4d0-6000-4eac-8d7d-bde2d7b60fa6",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f50d559d-3c1e-4107-a82b-f56e17d07fba"
        },
        "item": {
          "id": "412af403-f3f2-4bc0-a54d-3a37dd32f185",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e7c4c17e-aaae-4c57-8525-90d6d4246d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec9275e-c5f5-4727-8dc4-4d56d4fb12ba",
        "cursor": {
          "ref": "5ae968eb-8526-4a03-acfe-391dd26e42e9",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "abb8d775-a103-4404-85e2-cb07a956fcfb"
        },
        "item": {
          "id": "aec9275e-c5f5-4727-8dc4-4d56d4fb12ba",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "469fd490-6243-4fe9-81a4-5d5f9148df84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec158deb-b79c-4469-8787-a2a2f4fd2e4d",
        "cursor": {
          "ref": "dc086820-a429-4abe-aa44-da58c2acc923",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "dcd1c1d7-1edb-4d1f-b473-9fff5225bccd"
        },
        "item": {
          "id": "ec158deb-b79c-4469-8787-a2a2f4fd2e4d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6737af11-61ab-464b-9403-efb80fc60e3e",
          "status": "OK",
          "code": 200,
          "responseTime": 103,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "cbb20b6d-3214-481d-b6fa-af24d651775f",
        "cursor": {
          "ref": "17500b4e-6106-4d15-a518-cd9e28aab09b",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f0b6f549-c826-46d0-9098-f3b85a17240d"
        },
        "item": {
          "id": "cbb20b6d-3214-481d-b6fa-af24d651775f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "1f60c86f-e51b-420a-aff0-9747c078e974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abcc4c58-71dc-4a99-b45f-edce9b7f1f6b",
        "cursor": {
          "ref": "b561fd5c-0a08-447d-b736-05f294d2694b",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "22554508-3d42-4aff-a147-d84f6e37d16a"
        },
        "item": {
          "id": "abcc4c58-71dc-4a99-b45f-edce9b7f1f6b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e0af1d56-dde9-43ca-abb3-5caa211da72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e24706e-b136-420f-a31a-c5d711a9de4b",
        "cursor": {
          "ref": "824ef0ba-d234-4ab7-8fa0-4b3a0a5001f9",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "950a7f4b-2332-450a-82e5-daeb57af8c5d"
        },
        "item": {
          "id": "4e24706e-b136-420f-a31a-c5d711a9de4b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "bc9146f9-083b-44cd-be27-897b1fee6c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "608eefa2-46e9-4798-b54b-24e2967450e3",
        "cursor": {
          "ref": "9ecf13c0-7f6a-48d7-a013-67510077cae6",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b0e18946-2361-4cb3-a954-606bda9a19c9"
        },
        "item": {
          "id": "608eefa2-46e9-4798-b54b-24e2967450e3",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d494c06b-c1a0-460d-8906-0a1785c32d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44753df-1859-47b9-b8fd-1c5307ce5da1",
        "cursor": {
          "ref": "78f5795e-8a22-41f4-9cab-7cc62de76a4d",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f60c168f-3b10-4a9a-bd40-71d2c67529c3"
        },
        "item": {
          "id": "b44753df-1859-47b9-b8fd-1c5307ce5da1",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "049e6ea0-9c79-41c1-8b43-2f272f8c694d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c010a71-5af9-4e91-be72-a817a8b4eaad",
        "cursor": {
          "ref": "3eb8c124-e9c3-4723-b33d-bae7a9952417",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "276772e4-ebdb-4325-ad2c-e039c9071651"
        },
        "item": {
          "id": "1c010a71-5af9-4e91-be72-a817a8b4eaad",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d239709e-2677-4d7c-8122-3698f249a6f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9575d888-0e3f-475e-922e-76fad5bfce2b",
        "cursor": {
          "ref": "3fcc5d85-9e99-4989-843c-3b62ab0465c0",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "6b3bd1fd-4a8d-4dff-96c9-c03320c25340"
        },
        "item": {
          "id": "9575d888-0e3f-475e-922e-76fad5bfce2b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b2069751-71fc-4050-b882-d5a121ca807f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9450f31-4e06-4546-b6bc-da568f71d48d",
        "cursor": {
          "ref": "a383b7ad-219f-4b48-969d-83df7aa15846",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "984ffb86-2b53-4acc-bf73-381e0a760668"
        },
        "item": {
          "id": "b9450f31-4e06-4546-b6bc-da568f71d48d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "55d31c90-edf0-4f9f-b91d-844dff004404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9963b92-b50c-4ab8-af3d-bc72ba06d44c",
        "cursor": {
          "ref": "8a42f165-c562-4045-b97c-44c70a8c3a7d",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "7e3e52b1-f800-4ce1-83ab-e86a90a096f1"
        },
        "item": {
          "id": "d9963b92-b50c-4ab8-af3d-bc72ba06d44c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8b6e0067-c355-4eba-b710-b5bde05a0715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82aa7943-0091-412d-94b9-27e1f9515c1f",
        "cursor": {
          "ref": "72c48b22-38e5-45e9-9fc4-1b05e59e6c03",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3f904a07-14cc-457a-9302-9008ad971912"
        },
        "item": {
          "id": "82aa7943-0091-412d-94b9-27e1f9515c1f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a55c986c-3704-4ff1-89f7-60363e9ec460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7747325a-0ad7-4e07-bc19-77e557924771",
        "cursor": {
          "ref": "58904fda-cfe0-4efc-be3c-53e3187f577c",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e8cfc1ed-9127-4a0e-9857-32e139991fb4"
        },
        "item": {
          "id": "7747325a-0ad7-4e07-bc19-77e557924771",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "cb17d632-7e3d-4968-96b2-7bf4bc370985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1110980f-71cd-459a-97bd-7fc23a62df9d",
        "cursor": {
          "ref": "eb65d90b-65d5-429f-bd5a-e400dd337e8c",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "01b11df0-e2db-447d-8922-a0661760df86"
        },
        "item": {
          "id": "1110980f-71cd-459a-97bd-7fc23a62df9d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "b98cfde6-d71d-494b-84f7-2825fc5a6c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87b0eec-cdfc-412b-9596-94cfdf1231b8",
        "cursor": {
          "ref": "b6858c1d-6613-4369-8055-8b187bdd4aed",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ac3038de-faf5-4a62-9154-b75b58f3c96d"
        },
        "item": {
          "id": "b87b0eec-cdfc-412b-9596-94cfdf1231b8",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "fe89f37d-1a36-4089-950a-4358d35d3399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b0e936-8b08-4753-99bb-c8df988579e5",
        "cursor": {
          "ref": "cace8335-3756-479e-b899-fce1e96394b0",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d3207025-bfa4-41f2-8d02-d5d059711456"
        },
        "item": {
          "id": "39b0e936-8b08-4753-99bb-c8df988579e5",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a6b83fe0-3646-4760-95a2-1911cfbc8249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0095731b-237e-48d5-93b0-5e077da58932",
        "cursor": {
          "ref": "4716e127-5115-4d55-8fc2-ac1dc24ec294",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "493c8b2f-e962-49a6-94c9-a06cb66ac368"
        },
        "item": {
          "id": "0095731b-237e-48d5-93b0-5e077da58932",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0c8e4110-d3b7-4289-8263-d715e5c44c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9c776f-2525-4ee4-b8dd-e56adf564921",
        "cursor": {
          "ref": "9292348d-abe3-4ba0-85b4-c2cf11ec5291",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "13037fcf-337a-4b20-9649-c9299808c9d6"
        },
        "item": {
          "id": "9c9c776f-2525-4ee4-b8dd-e56adf564921",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d8004495-a393-4775-a777-a13ce0c17a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21fe2ad7-e29b-447c-b202-f305d8ae54f5",
        "cursor": {
          "ref": "2e9a7f26-4bb7-4822-9261-cf41a8d55ec7",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "8a164640-e904-4c5d-b4e0-46c54b43edd8"
        },
        "item": {
          "id": "21fe2ad7-e29b-447c-b202-f305d8ae54f5",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "131fc14c-5702-41d7-856b-a7a7fce4826c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb00b33-f0c2-4309-b745-f3f9248ee919",
        "cursor": {
          "ref": "e5d54186-bbe1-4d8a-b5b7-1830c1c045c4",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "51e48dcf-53cb-4e5a-a589-168a724b423f"
        },
        "item": {
          "id": "6eb00b33-f0c2-4309-b745-f3f9248ee919",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "7583e2d3-d11e-4c4d-8041-ab32db5cede7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d992315-7c96-4e84-bdcf-64517d03019c",
        "cursor": {
          "ref": "8812ac90-e8e2-43c9-96ce-6317c053c4aa",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "15798409-7c5e-4b07-aad4-55e4a83be49f"
        },
        "item": {
          "id": "2d992315-7c96-4e84-bdcf-64517d03019c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1917aaf1-8fba-4a20-a4fe-dd35beb14fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b12acdeb-d135-4bd8-a9d6-e532e5e8f136",
        "cursor": {
          "ref": "7b581258-10a9-42df-8456-c5656962bf3f",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a07c3a43-fd85-4782-ae9e-574c53a35a8d"
        },
        "item": {
          "id": "b12acdeb-d135-4bd8-a9d6-e532e5e8f136",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c031cde4-dd65-497d-9801-c17ce1779304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571659fd-38f3-436b-bc41-39b6b432fc53",
        "cursor": {
          "ref": "f3165767-40d1-4f23-be8b-4e51313183db",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ac03e889-6faf-4d9e-99a3-89ca999257af"
        },
        "item": {
          "id": "571659fd-38f3-436b-bc41-39b6b432fc53",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "25bd2c1e-69e5-4b78-80c2-2ddef89a7ecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4585326-9a77-4f2d-8e37-1850f6add791",
        "cursor": {
          "ref": "55a63863-f993-43e9-b086-fd479b28abda",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4e5d7014-65bd-4116-a5ad-ed36264e46a6"
        },
        "item": {
          "id": "a4585326-9a77-4f2d-8e37-1850f6add791",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c58aa506-5847-4540-aa3a-21e27a6cf4d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "337d448f-2001-4784-81dd-dbdf56323d75",
        "cursor": {
          "ref": "55e2205c-6472-42e7-a3ac-b87c60ad7c7d",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "736f28e0-67d7-4ccf-a260-ec5c420272d7"
        },
        "item": {
          "id": "337d448f-2001-4784-81dd-dbdf56323d75",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1c0a1182-6438-419c-91d8-c9658bc81e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "774ccbdf-29c3-4785-8331-de31c79ba0f0",
        "cursor": {
          "ref": "49f89441-0813-4f3d-9f61-b82c9776cc54",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "3cc98df7-d081-452e-b8a6-32bde506bcf6"
        },
        "item": {
          "id": "774ccbdf-29c3-4785-8331-de31c79ba0f0",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1ff89af8-6a69-4740-bf4f-5b1ea5f80121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8add0a9f-4901-4a45-a30c-6e3ce800aec4",
        "cursor": {
          "ref": "e3333122-ec67-4581-bc61-db0e23fb361d",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "0dae2596-de45-423e-a30c-b58ba555dc61"
        },
        "item": {
          "id": "8add0a9f-4901-4a45-a30c-6e3ce800aec4",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "30d8b465-61ad-4b09-9fe4-8acdd754ac19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a753c429-02af-4511-8e0d-7f136c680693",
        "cursor": {
          "ref": "34662e1f-5bdd-4f43-b84e-1d44398c0ad1",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "4b438a00-9a48-4707-a29c-6f571f43dcb1"
        },
        "item": {
          "id": "a753c429-02af-4511-8e0d-7f136c680693",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c6dd56b4-9043-4072-ab6f-8925b003c776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76efca2e-cb13-4c11-980b-690d28c463e3",
        "cursor": {
          "ref": "e87e3127-288d-4ff4-b601-ad80b55d00aa",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b6a0b8b8-a053-42c9-81ca-9fe9edba96e3"
        },
        "item": {
          "id": "76efca2e-cb13-4c11-980b-690d28c463e3",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "bd50ce7a-51d7-419e-90da-116509002fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca7cf194-7a67-40ca-bd15-e34f6c85e2eb",
        "cursor": {
          "ref": "596c4de7-e7ee-4580-9af9-6fc1c33a160a",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "9adf1ac4-24b8-47cd-9373-322590c5e51c"
        },
        "item": {
          "id": "ca7cf194-7a67-40ca-bd15-e34f6c85e2eb",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "93ebba8e-50b4-4883-9582-b5a3ef67100d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52135568-8f80-435c-b241-5b958af661a1",
        "cursor": {
          "ref": "25217bb4-ce43-4962-b06e-7e95ff533254",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b6dfffbe-86d4-46a3-ba12-efe817971fa3"
        },
        "item": {
          "id": "52135568-8f80-435c-b241-5b958af661a1",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "72d5f5ea-8211-4e71-a0dc-522d2527610b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a05b0230-998c-4283-950a-db6019131833",
        "cursor": {
          "ref": "6e59e01e-0eca-45de-aef0-925b00169a08",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a68bca29-548a-4818-a77f-227c48de2873"
        },
        "item": {
          "id": "a05b0230-998c-4283-950a-db6019131833",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "57d65480-9598-4364-a348-5a3fdf56e1ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccbbc7dc-f471-43b6-b474-f2e28c7d4191",
        "cursor": {
          "ref": "58dc6ffa-b377-448c-9095-4ff2846cd64d",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a4610fc3-eeb6-4da7-ab28-fdfb3b8d302d"
        },
        "item": {
          "id": "ccbbc7dc-f471-43b6-b474-f2e28c7d4191",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "7c8d1f65-2c77-4ef8-a04e-1642b9a4f8f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de510427-0518-407a-9f91-25efddb0e533",
        "cursor": {
          "ref": "d3a826ba-cd1d-479e-9d57-259235b89406",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9f0c4b8d-09c5-4880-a823-441f752d4739"
        },
        "item": {
          "id": "de510427-0518-407a-9f91-25efddb0e533",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f196af3c-55fa-4013-9787-a34da17578f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f461476-34dc-4cac-97c7-7ea18e448ea8",
        "cursor": {
          "ref": "254c89d7-ebf7-4266-b849-d0bb8b2e9d9d",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "3bd1089d-f7f7-4ec9-8bc9-3f6f0a1d47f7"
        },
        "item": {
          "id": "2f461476-34dc-4cac-97c7-7ea18e448ea8",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "07640754-0b4f-4bcd-b564-008b7cc06d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "209a8552-1ca0-4758-82c7-9090cf937ee7",
        "cursor": {
          "ref": "b4d4d53b-cf12-49dc-a70f-bcf27bb986c2",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "5e462993-f99a-475d-9037-15f5b5a6d61b"
        },
        "item": {
          "id": "209a8552-1ca0-4758-82c7-9090cf937ee7",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a0cd63b7-bcb3-49e5-8901-3faca8dfb706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ce029c-1330-4851-812e-c62a88b5a565",
        "cursor": {
          "ref": "ce156454-1537-498b-b15b-7f168c693ef9",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d780a992-4671-40d5-a62b-c4c915826482"
        },
        "item": {
          "id": "00ce029c-1330-4851-812e-c62a88b5a565",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "cddb5401-81ee-465d-9cb7-f6a04ae18a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd14c4be-b241-4f0e-87ca-4b1abdb2e966",
        "cursor": {
          "ref": "0b1337ca-b1d7-4cf1-9ab8-3b24271a2aa0",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "52588e53-5ffa-48b8-bbfa-c4e0e3b2cd30"
        },
        "item": {
          "id": "fd14c4be-b241-4f0e-87ca-4b1abdb2e966",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2b832e7e-0dac-47d7-9507-f72ae1ec03ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d0330a7-6c20-4131-a1d9-0c2f31354881",
        "cursor": {
          "ref": "e54971e5-ee48-45fc-a9ef-8aa62b391d5b",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f4bed5eb-e0f4-402d-a96e-a4d4cb063db6"
        },
        "item": {
          "id": "6d0330a7-6c20-4131-a1d9-0c2f31354881",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1cd5c10a-3db0-4c9e-bf98-7bf2b382a4fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350cc8a2-1b0e-4891-a16e-24248c2c498d",
        "cursor": {
          "ref": "61fdae7f-c3c0-4217-a5bf-03693772d6c8",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "703c9b28-e578-49e8-bf8f-7ef4d5e0610c"
        },
        "item": {
          "id": "350cc8a2-1b0e-4891-a16e-24248c2c498d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "7ed09aeb-aab7-429a-bc62-70808878ad4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d74094a7-2f0d-4975-8f58-acc868c0da47",
        "cursor": {
          "ref": "ec0b731f-cb62-4de3-b88b-a09a43fa1d13",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3db44a2d-b979-43ae-999f-058312c41545"
        },
        "item": {
          "id": "d74094a7-2f0d-4975-8f58-acc868c0da47",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "bed7af9e-c368-494c-90af-74b74d0c2daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "258e4332-2123-4955-9de4-b80aedee4171",
        "cursor": {
          "ref": "1d879e98-5d95-434e-a550-2eca11a6821f",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "7004c6d5-6e2c-4417-bc08-c92f7b8195ab"
        },
        "item": {
          "id": "258e4332-2123-4955-9de4-b80aedee4171",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "288b53f4-d451-4826-ba85-c0d842fa98df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e01bf5-73d1-42e8-b0d6-d1943ecb8730",
        "cursor": {
          "ref": "53260281-ec6a-4d98-8ef1-04c3d2200afc",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "67d45df6-02d9-4e27-9221-1202819b8f8e"
        },
        "item": {
          "id": "08e01bf5-73d1-42e8-b0d6-d1943ecb8730",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c0401148-ab44-4afc-b7e1-a1b6b83c6fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75e9e1f-d422-4a13-9eb9-862b7bb4a285",
        "cursor": {
          "ref": "e7b8dcbf-b8e4-4ba3-abae-9fe5966d762d",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "fdc752d5-7937-4dc4-b061-4bf6a6d5e502"
        },
        "item": {
          "id": "c75e9e1f-d422-4a13-9eb9-862b7bb4a285",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5541a382-d01b-43e6-812d-bf7ac0bff079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c554bba3-1671-41e1-b58e-e6d523aafb5f",
        "cursor": {
          "ref": "8c90cf7e-fec4-405f-aed6-a0d1980ee915",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e90b8998-4326-4f71-b114-66e869a89e8a"
        },
        "item": {
          "id": "c554bba3-1671-41e1-b58e-e6d523aafb5f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "5521fd23-932b-4244-a1ac-20aa8b777729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd9ec685-1fee-4a9a-a758-02e62b33ce17",
        "cursor": {
          "ref": "b158fdc4-aa92-45f4-8abe-5f41539d0295",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "6c4e137c-6d72-4bee-8953-e60ced166277"
        },
        "item": {
          "id": "bd9ec685-1fee-4a9a-a758-02e62b33ce17",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "bfb62722-cefb-4ce3-90a1-a93d9400e14c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15eeb9d2-fd95-4c3e-848a-2dbb19b28f5c",
        "cursor": {
          "ref": "99f27bc4-58fe-4f2d-b466-5e69f59ba707",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "b7e5654a-62b5-4d15-9b96-43dc0a2236d6"
        },
        "item": {
          "id": "15eeb9d2-fd95-4c3e-848a-2dbb19b28f5c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "af2eceb0-98b2-416f-96e2-d9a6fed78f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81fd178f-f1c7-4378-98ec-7ad89b05d1d0",
        "cursor": {
          "ref": "9ec34d60-b945-43e7-8879-293acd675fbe",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c7b534ee-fbf6-472d-9813-9aa90f120363"
        },
        "item": {
          "id": "81fd178f-f1c7-4378-98ec-7ad89b05d1d0",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d902e50b-de41-4999-adfb-31c70180f2a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6eecb2c-aaff-4c76-aec9-cdc7e31daeec",
        "cursor": {
          "ref": "44f17e08-8ac6-47ff-bd1b-b0cc0435ac14",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "785d7e94-3cbd-4a48-a156-865f292e6984"
        },
        "item": {
          "id": "e6eecb2c-aaff-4c76-aec9-cdc7e31daeec",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "600f25fd-1af0-456a-8739-5859453f3ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f8837d-5c57-45d9-81ec-784c08ac71cc",
        "cursor": {
          "ref": "b71c33b4-3be6-486d-9db5-998797aa7892",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "bc9555b3-ae0c-429a-b5db-9da5f77a4b94"
        },
        "item": {
          "id": "69f8837d-5c57-45d9-81ec-784c08ac71cc",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ef2eb23d-f510-4a6c-b41e-636fe3c338d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "808ad0fd-f312-45ea-80b1-ce76d44bf2e1",
        "cursor": {
          "ref": "26fe9cdc-f3e5-450c-aa22-1e6b5baa866d",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d596a6e6-cb00-44fa-b03c-e7004a073140"
        },
        "item": {
          "id": "808ad0fd-f312-45ea-80b1-ce76d44bf2e1",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "aedfcb45-bb79-425a-b91b-29bc231a8fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a9300a-8108-435e-95d2-7d20e5c09fab",
        "cursor": {
          "ref": "719288a3-65f6-435e-a5a4-ab1fdf07e5b4",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6b648ac3-ce8b-426d-9ec5-f075d36e9aad"
        },
        "item": {
          "id": "b1a9300a-8108-435e-95d2-7d20e5c09fab",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "959f92fe-c57e-44ca-9e2c-61815b4cb19a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a760389-1ef1-4141-9832-0fd7dafbfdb1",
        "cursor": {
          "ref": "4b6717c1-c0fc-42df-9013-f1792b1612ea",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e1959987-3cbe-44f9-a158-62001ce76efd"
        },
        "item": {
          "id": "0a760389-1ef1-4141-9832-0fd7dafbfdb1",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "3f82d2bd-367a-4d24-b65a-35f3e4f30bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd032d6-23ee-48b8-8ab3-6f90abc5be96",
        "cursor": {
          "ref": "bd7f7a9d-3338-4a03-bd04-4da09b396c39",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ed23a4e4-6350-4f46-add0-b04f1e3e5db8"
        },
        "item": {
          "id": "0dd032d6-23ee-48b8-8ab3-6f90abc5be96",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "18550397-1d0c-474d-b352-3aa030f09eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd730bd0-bc87-4907-a9be-f0ed2b8ecf59",
        "cursor": {
          "ref": "1553a62e-6e7b-41c0-8ed3-7d79fe688b00",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d5049f7c-1a7f-44bc-a045-e370d803e5c5"
        },
        "item": {
          "id": "bd730bd0-bc87-4907-a9be-f0ed2b8ecf59",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "7d40ed5c-c1fc-48f2-a9d0-ffca7ae69193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd3840c4-b724-4933-9036-d92004b56b45",
        "cursor": {
          "ref": "ee91a557-1951-4668-bf4a-4325a68aec60",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "aced7cc2-309b-4d98-85b9-472fb41b1976"
        },
        "item": {
          "id": "bd3840c4-b724-4933-9036-d92004b56b45",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "92601bf3-22c5-4ecb-b1bb-957bce423ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c067c23e-baa3-4a00-a96b-21b1ccb3204c",
        "cursor": {
          "ref": "fc28fba4-e235-417d-b0d6-f8f33e7bdfd5",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "7814035c-1a4a-450c-a20d-7cc4f40967fd"
        },
        "item": {
          "id": "c067c23e-baa3-4a00-a96b-21b1ccb3204c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b3c6c7b0-f978-4985-9c45-c4fe521b3065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0efe36fa-5f01-4a05-857f-507c3122e631",
        "cursor": {
          "ref": "2b252dad-6aa9-437e-9c6b-1e1c163a1dd2",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "a55bd693-7953-4f25-b1a1-b1950b1763e9"
        },
        "item": {
          "id": "0efe36fa-5f01-4a05-857f-507c3122e631",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "bd089d82-792e-40a4-93ee-06fb0edb551c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5fd3a1e-dbae-461c-b559-7b232bb6bc4c",
        "cursor": {
          "ref": "fe3e36c7-182c-4ff9-aef8-56e1fd71f6f5",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "424db870-b7c0-4532-93a3-222909d937a6"
        },
        "item": {
          "id": "f5fd3a1e-dbae-461c-b559-7b232bb6bc4c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "fbe08e20-23d1-4657-9d36-49adb0c926e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1599c941-a3ee-44b4-8d30-001220858380",
        "cursor": {
          "ref": "d7410f76-3d1a-4080-b687-fbdc6d0f7e53",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "d62aa7ca-617e-47cc-8b57-ae567e486647"
        },
        "item": {
          "id": "1599c941-a3ee-44b4-8d30-001220858380",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "4eccb5ec-3582-4db4-924c-41764b524a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "548e4466-ea99-4952-9922-dcedd82f12dc",
        "cursor": {
          "ref": "f646aa33-e442-4cdc-aceb-230cd6cb4c49",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "364865e5-0ceb-4462-a930-5c4e90134db7"
        },
        "item": {
          "id": "548e4466-ea99-4952-9922-dcedd82f12dc",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "3a1218c3-d089-4f08-8ced-49f1ce90e70c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a9ab62-7ee6-4d04-b61e-bdbd97ffd28d",
        "cursor": {
          "ref": "2d5adea6-8f80-4bf9-8c87-d63443eaf3a0",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "e89102e3-9aa7-4c08-96bc-34b3de1e6a25"
        },
        "item": {
          "id": "73a9ab62-7ee6-4d04-b61e-bdbd97ffd28d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5d0efb73-47ae-4e88-9cae-6a44f8253a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "007dc56b-da7f-47c6-a0e8-4a714d6711b2",
        "cursor": {
          "ref": "16f0e093-508b-4449-b34d-bcb10522f0a9",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "c5b6bea9-1acb-4eef-a401-5c42f2ecec8d"
        },
        "item": {
          "id": "007dc56b-da7f-47c6-a0e8-4a714d6711b2",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "96884f80-3b85-45df-a57a-9c4b32706ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81eeba84-3c21-4088-a1c1-e18d0c9ee414",
        "cursor": {
          "ref": "15b02e3d-f5ce-4e82-bb07-ad770c0d6ec5",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "686c1929-1e52-4f51-a179-2e76b6adbdad"
        },
        "item": {
          "id": "81eeba84-3c21-4088-a1c1-e18d0c9ee414",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "412fb8a0-2e2f-491b-9469-66ed698665db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2220001d-8030-43af-829e-c6b0da578858",
        "cursor": {
          "ref": "e378c567-a295-46a0-a722-7836484880cd",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "591e7d5e-110a-4b04-9147-c98db060721c"
        },
        "item": {
          "id": "2220001d-8030-43af-829e-c6b0da578858",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "55c92330-74f4-45dc-bbb0-ddcbd054ff2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a338d09c-4dfa-4a83-9605-211ecc13a93b",
        "cursor": {
          "ref": "aad09c01-dbe3-44cb-9233-214e57b29ebb",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "8565121d-72e1-4ad9-a6aa-46f16c2e9f29"
        },
        "item": {
          "id": "a338d09c-4dfa-4a83-9605-211ecc13a93b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d2c0395d-3d08-4c27-9d7e-612803029c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb15cfad-55f3-40a2-a53e-7d755eec5e5d",
        "cursor": {
          "ref": "eed8f949-22f7-4fc4-8e0a-026bd7a57b39",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "3223d422-b19c-4f80-8913-a79bc0366c82"
        },
        "item": {
          "id": "cb15cfad-55f3-40a2-a53e-7d755eec5e5d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4ff4c997-0031-4b08-9d77-f0652f5673ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ee719a-487f-44fc-9f9b-a9e081cf40ac",
        "cursor": {
          "ref": "9274719d-66e4-45db-8441-eefd3e98a2ef",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "7736816e-3750-4448-9b2a-e2c7b7b1b515"
        },
        "item": {
          "id": "85ee719a-487f-44fc-9f9b-a9e081cf40ac",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a4db7280-0673-4119-928f-28d843ee3618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bae5588-8b1a-4f1d-b0c6-aae16f806c25",
        "cursor": {
          "ref": "12fa7c0c-da4b-483c-8442-d5d50c2cb251",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "29d53e8d-b8e6-4092-9727-ca6833b9484b"
        },
        "item": {
          "id": "0bae5588-8b1a-4f1d-b0c6-aae16f806c25",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "32a8a4f7-463d-421d-a4b6-1ccebd2ea110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c779a56-dbc1-4669-b7e5-72f9b41e14e8",
        "cursor": {
          "ref": "d1d1927d-6c71-4599-a4cf-641e9decfbc9",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "f5a3440e-dcf5-4860-903e-cead46411bec"
        },
        "item": {
          "id": "3c779a56-dbc1-4669-b7e5-72f9b41e14e8",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c7fc8dfc-9767-4a3a-a1cf-9ccd437deedc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26227d74-3297-4065-bf13-0dae51a54188",
        "cursor": {
          "ref": "f52221e2-d789-4573-bc7b-5a2334a84b25",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "ce2884d1-7ee6-4541-b814-6be528e0a402"
        },
        "item": {
          "id": "26227d74-3297-4065-bf13-0dae51a54188",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "34a40fc5-561e-46c7-b37b-7782da1193cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50023522-dddc-4688-aeb1-3bfa787aeaa6",
        "cursor": {
          "ref": "c5f11a49-b611-4b2c-9683-e400f11e0f2e",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "a7930f1e-692b-4999-b345-914c1af95da3"
        },
        "item": {
          "id": "50023522-dddc-4688-aeb1-3bfa787aeaa6",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5cb65ec4-7dfc-4672-aad1-fd24e6192632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97c9347-70e3-4299-98f5-e4a375860f7d",
        "cursor": {
          "ref": "38514670-06e3-45c1-b328-2fc91e7f6483",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "86f1efec-438b-4699-a533-12c106887f9b"
        },
        "item": {
          "id": "a97c9347-70e3-4299-98f5-e4a375860f7d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "dca2641c-122b-4afe-94ab-94e4d131bd1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e3bbff-3de6-4b63-9ee9-d3a298585d8a",
        "cursor": {
          "ref": "a2be5fd0-b18d-40da-ae21-237cbb996993",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "6d937f97-7f6f-4803-b2bd-c88477deb984"
        },
        "item": {
          "id": "a1e3bbff-3de6-4b63-9ee9-d3a298585d8a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d92f562e-80ed-4f9a-bc14-97484c1fc19d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce802e8-71bf-4ac0-af6d-4264167b70de",
        "cursor": {
          "ref": "29cdf751-a656-4c4e-b201-1207d41fc8a0",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "126a2e98-06bf-4b8a-a07f-47e46fbbac14"
        },
        "item": {
          "id": "1ce802e8-71bf-4ac0-af6d-4264167b70de",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f03d3e61-22de-4370-b6da-0af6d714b355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "012544c8-0334-4c78-b5e3-271ea68be5ff",
        "cursor": {
          "ref": "b3ed9634-e5da-4bed-af89-e05ca46fae32",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "1262e785-727c-43b8-8e30-94c0d792d0da"
        },
        "item": {
          "id": "012544c8-0334-4c78-b5e3-271ea68be5ff",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9428e098-68bc-42d4-b388-056d7a67eca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df6d303-004c-40f5-87e0-0ab12b6382f4",
        "cursor": {
          "ref": "802054e2-c73d-4f6c-ad48-151b18e1b725",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "8a4d47b2-848a-4c62-93e1-af18ca371084"
        },
        "item": {
          "id": "0df6d303-004c-40f5-87e0-0ab12b6382f4",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "0db2ebf0-5850-45f4-9d6c-fa427c3160c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e97d7b-5c10-4636-92bc-ed0f88faadc9",
        "cursor": {
          "ref": "55dce1ce-2d97-4ae0-9caa-96007f995ea6",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "563a2faf-45bf-46c4-9cf7-9df38978e385"
        },
        "item": {
          "id": "c6e97d7b-5c10-4636-92bc-ed0f88faadc9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e435d252-134a-488e-8580-702115837f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ac19499-e2fc-476b-9209-01237a611b5b",
        "cursor": {
          "ref": "7ffe2808-2c36-4129-8166-2555d31afc72",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "d56f0b52-8ad1-4597-8da1-f982746b64cc"
        },
        "item": {
          "id": "7ac19499-e2fc-476b-9209-01237a611b5b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "33c2a0b9-c745-4e01-a68e-e9899134d581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bdbb683-ac19-45f0-9846-8304a6bbff0c",
        "cursor": {
          "ref": "5c1fe644-6f92-4590-b3fd-ec3f3c3701ac",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "150b7c84-1695-4ea1-95a0-5c16d37c252f"
        },
        "item": {
          "id": "0bdbb683-ac19-45f0-9846-8304a6bbff0c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "093f268c-41d9-4280-b414-8947211c0553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da02a7c3-4a98-4fb0-b0a9-0847656f6f93",
        "cursor": {
          "ref": "567e4ef0-ee18-47e6-b8bd-da0af7bf8258",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "c5b50430-faec-4afb-99ab-a5bd0682b1b2"
        },
        "item": {
          "id": "da02a7c3-4a98-4fb0-b0a9-0847656f6f93",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "5a7380aa-0ac0-468c-ab43-f2125f2597bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1524ecde-8022-439a-88a7-5cf39b85d51e",
        "cursor": {
          "ref": "22932dad-bfbe-4b71-a1c1-4dfb7e83822e",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "341b6852-adb0-4719-ac11-e52cdb8db770"
        },
        "item": {
          "id": "1524ecde-8022-439a-88a7-5cf39b85d51e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6422f107-ad2b-4e16-9598-10a91765d93b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd6fd8ad-48ee-461e-9d10-6bd9821301d0",
        "cursor": {
          "ref": "e7d2054d-c0e5-472c-ae4a-1923da6295e9",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "74774fa2-dc07-4ec5-a243-4b6ebb4f99ad"
        },
        "item": {
          "id": "bd6fd8ad-48ee-461e-9d10-6bd9821301d0",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "5c89599a-03e3-4a70-a5f6-be9e48821c86",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3ab444-1801-4ad9-974e-163b5a03aa08",
        "cursor": {
          "ref": "f14743b6-be41-4222-926c-9eff5a70ab3d",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "11467d01-e650-4858-8ed0-03a93b698709"
        },
        "item": {
          "id": "0f3ab444-1801-4ad9-974e-163b5a03aa08",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "092476f4-577d-4cf9-bc36-d591ef3c0502",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c22d17-c950-4968-8968-49049025d189",
        "cursor": {
          "ref": "36699b3b-f8c6-4ad1-aa2f-9c1aa9d07e16",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "d6565c5b-7f49-412a-bc77-f61fd9a0087f"
        },
        "item": {
          "id": "a4c22d17-c950-4968-8968-49049025d189",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2a524062-4d3b-4d9b-8cb1-411121b6d30e",
          "status": "OK",
          "code": 200,
          "responseTime": 3052,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d80cd02b-c8b2-4290-b7b2-e6383f67ad58",
        "cursor": {
          "ref": "492ffd66-d8c3-49ee-a844-9e335e279487",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "f92b24c2-dc54-4f29-9a6c-7474c1333de7"
        },
        "item": {
          "id": "d80cd02b-c8b2-4290-b7b2-e6383f67ad58",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a0fec3c2-24f7-4f70-9e3d-fca164fea3c4",
          "status": "OK",
          "code": 200,
          "responseTime": 3184,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6afa2064-5aba-450b-a83b-037a9ac83e35",
        "cursor": {
          "ref": "7e96dbdc-6784-49f2-a343-0fd2bd9983c1",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "1d472adf-3777-4695-a30f-72eaea1d4626"
        },
        "item": {
          "id": "6afa2064-5aba-450b-a83b-037a9ac83e35",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4b9cbf5a-c13f-4dcc-9f6a-6562c1f48a5b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6afa2064-5aba-450b-a83b-037a9ac83e35",
        "cursor": {
          "ref": "7e96dbdc-6784-49f2-a343-0fd2bd9983c1",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "1d472adf-3777-4695-a30f-72eaea1d4626"
        },
        "item": {
          "id": "6afa2064-5aba-450b-a83b-037a9ac83e35",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4b9cbf5a-c13f-4dcc-9f6a-6562c1f48a5b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d116bd8a-89b4-4c27-8f65-0e288ad8a5fe",
        "cursor": {
          "ref": "385da297-b2ce-4380-bebc-8dc575685f90",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "ac174d28-7b46-45ae-ad5f-ff404d140a74"
        },
        "item": {
          "id": "d116bd8a-89b4-4c27-8f65-0e288ad8a5fe",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "278ae4c9-9cec-45c5-897d-c27fea8f516a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b940610b-0737-48aa-9227-da19b647a66d",
        "cursor": {
          "ref": "7255c744-3d81-4109-bc34-1763877ed4f7",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "8c2c3a0b-52f4-46a1-be9a-73618959bee0"
        },
        "item": {
          "id": "b940610b-0737-48aa-9227-da19b647a66d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "aa646271-16d1-477e-89b0-a687fbc44d7e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}