{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "f2709b02-8e9a-425c-ba3d-43ff2b97c934",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d8031f49-2af0-4124-8146-b51e09aaf2a7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "12bfce69-145e-41e3-be45-a439b8325bb1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a0f43c76-ec49-4850-8768-66b12839ff4c"
                }
              }
            ]
          },
          {
            "id": "e6f62e7b-e695-4738-abd8-3b71cdfee1e1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d072078d-2036-4646-8ea2-95a668dc7400",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8bea3272-73db-40b5-9095-328860325109"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "dd23b119-fc79-47cf-b97e-f2694f9a1741",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c7d01c65-546c-4ee3-a68f-bddccf7c15d5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6df266e0-21ed-4f2f-bf02-5a594d7387f0",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "df2feb4b-71a4-4a50-9af4-8f744a715c98",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1df1425b-4993-4485-8363-fea6f5e5b1d6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d76d7c63-f5c3-4502-a3c9-509a557ed6de",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2c0027b9-4f67-4ce5-9ff2-8068ece31fcf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "22821206-7269-4491-8a08-c9cabc9d8b8c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4e4d0731-b268-4cb6-8c47-bcad9b85e435"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0486e6e1-d20c-4e75-a15f-21bfff138310",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8e6bbd1d-57b6-4dac-984c-7e0bc961326f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "715360c6-ac78-4dd1-a94a-16bfcb479734",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c6f0d7e4-b5ad-4c2c-90b5-8a2f0b4e0dcc"
            }
          }
        ]
      },
      {
        "id": "acd7d8a0-069b-4ab2-b5c5-3bc6fe666462",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "fd004987-a6c0-46b8-a660-9f48788e2008",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7d2b7337-4e84-4564-a54b-c5f262b8a6dd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "288787c6-c828-4341-b150-e7b1283000dc",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f314bc-2004-4912-ab5f-e107c29f4172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4cf474c5-ebe5-4b6c-a9ef-e5ac04cb7461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07b560f5-9534-4bae-ad8d-6a48a18410f2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "508524c5-55a8-4c45-a223-9746c0a90a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c024a122-a434-41df-8c94-04d9d76174e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c322c2-3e2a-4412-9c1c-d20a35106890",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f022032-6fa4-4291-9343-4cc9f5d1136f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cdeba0cc-8a34-47e4-b0cd-462b67f16d88"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f1afb1e3-a15e-478a-b112-1eb020d78d1a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ec529940-0f22-46c3-8e6f-5e3d5f9c3d65",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b3daaf-5fd8-417e-b0cd-4627fbdef57a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be92f691-59e1-4bc5-acb8-695f9d0975ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c663855-30d4-481c-bab8-96680773aad5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1df21255-735d-462c-b46e-deca51f3a017"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1c96086f-ab17-4ea9-b93a-6baa9346e9df",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fe64cee1-1e37-4c49-a4b0-c6fb634f0e2f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff2062f5-a734-479e-bec4-b4d26fcd6b1a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "8b17f902-536b-4c62-a1b4-9fdfe860ece0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "df45ac8f-3263-43d7-9ad3-482a10ed77c6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c077ca54-3d65-406b-b2a6-835c750ab78e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2c47b1e7-db44-4ffa-b236-9428916bab8b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "44786766-c205-422b-a040-480656a53563"
            }
          }
        ]
      },
      {
        "id": "6ef3578b-dd8e-4273-99c2-e8aa2d3526b6",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "74537533-e99a-41fe-9b85-e0d4b946fd92",
            "name": "Negative Testing",
            "item": [
              {
                "id": "77c3d6b3-624d-48ce-823a-82e893680532",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "8d615e29-4198-496a-9f49-329747a88ddd",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf16d80-6786-40ce-bcc1-0fd4a6aef619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f77962b1-7bba-450a-94a1-6bfd7ca98596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9cc0db1-30b1-48f3-869c-f56f026c5c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c7cfeb9-90e4-483a-9fa7-73c9be83844b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca938a9-e600-4e95-899c-f255bb1a438e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b98fa610-e31c-44db-bdfd-de0965ee7a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa5f8d15-b840-4d52-93d4-cf342708422b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6484d5b-5d09-4069-bb1c-37750c1dd758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2618d695-e6ea-45c2-bd39-87b90b794d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0911776c-3fc1-4b0d-a580-f2aeb2e52e85",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cdc66ff-3690-4ca6-89ba-d7937b6dc0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d18393e-53bc-438b-96ce-86766a06cd8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b220a382-2aec-4df3-8f31-6170d8824ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c1666a1-f4c9-466e-8d77-5cd626494727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5928b62e-b15b-47f5-8d43-34659e3c5f21",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d87a5ce4-56b7-4cb8-8e9b-61406a6ee135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "140bf4ba-ebc2-4174-a3e9-7a606be59d8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709c5ab5-139a-45a8-abcf-d78f1e16fdd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d86909b7-1511-4d46-826a-d490bf3dbaf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f555b85-ba97-4ebe-8190-38433d7c777e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee62c24-a726-4b31-8c3b-2ea97e202912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "854e4bc9-dc22-4d89-8781-b70f37899ac3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c089a0-9869-4188-980e-ec3142728a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aca36bed-fd33-48fc-88c6-9f9e3517ea87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b97ae1-0d8f-42bc-8d44-0d37bd039a42",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cc23b96-100f-402d-a245-c527b2bab5a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7c3f184-bef7-4d48-ad87-d36b1560923b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f208e04d-e609-480c-8176-1757b717f8f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "919ae5a6-33fb-461e-9f23-ac6ac1bbfab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c17cd0d-ce8f-476f-bfa2-93fa872879c2",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86253556-9a80-491d-ae42-86b029fd8793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47e5825e-6b65-4cc8-889c-2bd81206e980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d19e725f-c297-4ddb-a194-42e8cba37786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b1854a1-c706-4f5d-9677-75c46775a3ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe3a6d5-e01e-4873-8c78-5ce4004acf7f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c430d1c5-e621-4029-b800-8ccd507d1493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "909fde08-6959-4a4f-8196-d1d3ece78f9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef10f2b2-fa6c-4d2a-a0f2-0cad8ffcdf9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a568f26a-d225-4ba6-98fa-1f4053b90534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c770f2-29eb-4aa0-b434-104ece7b1ac9",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd484473-ac32-4a00-bb71-90c518e7af6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66839050-ca3a-42a7-96bd-aacd76200bbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c71859-5d4a-481a-a35c-6e6fb9a3f30f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c5feb98-70a7-4132-ad22-2656d213497e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cada42d-822c-4924-b512-78805e4e0b6e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2d1536c-a13e-409b-b134-12d10ddebd13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "823e75c2-fa50-40cc-954f-166ae30ca2b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b800b7cd-d206-4968-912e-160cb6b0cc02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71d0b3a5-fc9f-489a-9694-82161fc6e265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076cc24f-6db4-4286-8676-70ddadb8f1d7",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38203fb5-03f2-4acb-a48d-0b8dd6636750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4d5cea1-28b4-4249-853f-e7c2dab43ac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d82cde-a50e-4234-a8c6-f1479983031f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92ccdd08-c8c6-48d2-86c1-ea391ec32701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0892817d-227e-43fe-9649-ab370208ea36",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79edc4ab-8333-4537-8b0d-0252ce1e97e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec6c52ec-a6bf-449e-a316-b249837803b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4043046a-433d-4bff-a252-f5d64b2e52f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6893cfb-d47e-4288-b245-be9968781514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45887629-44a8-42cc-9dc1-7613caf5af46",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdebc1a0-5b00-4400-b7ed-6275990a2fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b881dbda-4c95-4c79-ad30-d3e8b138202b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "788aee9b-5b30-4ea6-a96c-f9e827cf61b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8501d305-e620-4d5a-b656-82e3a9a10da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e69b2924-727c-4d35-8f4c-77726097871d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "922901f5-8a44-46f7-ad1a-455390993ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79b8abeb-9397-4b19-92fc-f6b892c264f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e78c09a6-6ce7-41a6-b96e-e03d1e55b1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d6bd234-e2b0-4e18-a293-88154225e53b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b148006f-f0bd-47d3-b1bc-af27695aeb6a",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37eaf6b9-bca1-472d-9113-b15af347c59e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c9dc893-c580-4f39-956c-0098e36b705a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56262e69-2387-4914-a93b-973fcc220e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5feb18b6-4feb-44a2-bab4-31cbe3e5d939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88278141-6683-4516-adef-67f45c8934c1",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79be47a0-0333-4022-aa46-b0b388d559bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d13ec59-db88-47b9-9a1b-e580cd4fa063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52caa3c5-30ae-4146-811b-0c81dc4786c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "811f143b-f71f-4509-9930-040854ad3d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a1cf68c-bc61-40e2-8f48-b5c3fb828190",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a9c97c1-1ead-4eb2-88cf-8bed89706477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "446af842-4afe-4310-b060-5b23db93408e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f5c8ff9-22e3-4281-9e70-df15558c616f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69c9319c-be93-4039-8a87-4d6120342e6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e2c89a-6d1b-4665-9ead-a6497d8bcf82",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39dc1cc-dd80-4dbc-b78e-e010281f0901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed467c9f-0fce-4c80-9dbf-b30fabda571d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d3759d2-2257-44f7-98af-f83276f07bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bc4f593-be13-4fcd-8835-7d1b06640fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c2d0442-2542-45c0-9769-cdd9f05e2de7",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a166dce-5975-4d6a-8ab8-d4d860618b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0ae9045-fa37-4dd4-8ed4-b96657e8d2f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86056579-2da1-41f0-8a49-fc8260d0c321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c5763c2-2151-4b10-9841-96ae2fc3bf5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20989753-e0df-4b2e-8173-fbe0cc989e35",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8504446-0832-459e-8574-1391b9763e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa4fa4d5-865e-4fdb-a188-98f1304960b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d27f97-86b4-4be1-a6aa-09a1702c3b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bea0e994-fcd4-4f12-8f76-29e5bd250d60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ba609f-9329-4b85-8eb0-8c8ad2dccc01",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7a1c1c-10a3-48f5-b5a8-7d4f4c93fdbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c35d96b3-3cf9-4e69-8b31-dc23782ea483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595780d9-5142-45bc-9a3c-5a9f82903750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "31a800a5-003e-4a6b-b0bd-5ee41434ff24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bb54316-a634-492a-a3ad-be4f687b8eef",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e1c720-be58-4b10-9ddd-0c6e038d954e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8f80c81-21d2-42e8-876d-d1ff9c06afc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc1e93c2-65b0-490f-bea5-2a4e3ff212ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ac7f615-d7a4-443c-a70a-2e599eb12102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9809efc-7afd-4aff-ba23-8c98c87590ba",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6fefb6-b74d-42f6-9602-7ba642652555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "221fc1cc-091a-4b28-803e-ea556994cdc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc557faa-efc2-417c-9853-ecfa81ed68a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "875839ef-25ea-492b-8a2b-6c1442ead82c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50bd4262-d7a1-4b4a-9d2f-145af0320c12",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7764398-f518-48d0-a3c1-334ebd000c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66de3676-7812-459e-99ac-1edb6dfe500e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff9cafa7-a14b-4764-a003-21aab6b8e02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cdebbd8-fe11-408f-aaf2-ebd74626f9de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0dd95b-67ed-417d-b386-73a1c8ce6f4a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d93b138-58d1-4091-8002-3ea5ee86105d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1150bf6-a494-4a25-8863-86624a741103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a19c134-af8e-4c51-bffb-bc9e78dd2588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "695bf289-1bfd-4484-a4f9-a59487f472cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c244d1d-ea99-430e-9718-426f53db1703",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89aa2e8b-8eb0-43d2-a64c-9b4d55073300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "075c7a30-1f85-4e0f-a80e-b754946fbbd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d2758b-4c9c-45a1-bb42-95d274a884cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b79ce741-5f68-4b3f-ab1f-0b75e9dab89a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d1a329-dfd2-4f2d-9070-fd03e8cae8ff",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7516cdd-639e-4d47-9627-21c51a24cbb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "907c38ed-157e-4ece-ad02-006cb0e47921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a01bdd-c727-4640-aff9-dce88e7c49f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa4a81fc-456e-4a12-911f-ac4c522300ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd5f74c9-8466-450f-899b-d07d247321de",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c13554e9-a441-4acd-84a3-42acd71eae55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af0c3e52-5e7e-4763-a0f2-6bb37243b97d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eddbaf2-990a-44c5-b166-632ea724b6f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6cad1b8-b80f-4ab9-8c5e-c911126e2a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f342cc37-f668-444c-bba8-8b0a05934497",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "206f5b4a-cefa-430a-a9f9-a805ee406987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01e1598b-cde4-4fb7-94fd-b905427c34b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde83658-cd46-4d2a-9cee-ed5b1b8b0755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4c80c87-8049-403c-a307-892017e75cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdba454e-b030-4872-b86c-49ddeced8d1d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5688b965-b8a9-4ba3-849a-df0e302a73cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34f0a9f3-86b7-4bd5-8746-78f6fc109d30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34df6c8c-7963-4877-a85b-766572001a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "304f6a19-1def-4d56-b838-6d2666aa8e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13d21b62-5c20-45aa-8626-279eb779b5a3",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f6a8e2-edac-4569-91ac-31ccc03591f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c641cf4f-d87d-4519-9888-47ebaff6d40b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e3294f2-29c8-463c-97b6-4bce2c72bc20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ad2fc7a-cbd8-4a65-8852-17576e5d0761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "024f87bd-31e6-48ee-b75c-59944d1bb593",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c97c64-ae16-47b6-818f-128d32062058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb5b605f-a52e-4211-b943-86ec0e974181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "820c52c8-a1bc-4b14-a789-d412925bec35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc16e426-4599-4601-8cec-9e9f11c590e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf8ed455-fc49-41c6-96ab-fde226210cd5",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7438540c-e11d-4d68-8904-c11e434340e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "544fea83-75e2-49af-9308-010ab8a26dfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0006fe-08f7-41bb-bed4-588f44324ffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9899c73b-8038-4e0c-b09a-28941e947a67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a3e249-5a01-4838-ae11-dfe886af4b4a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe1cd3e-dc51-43f7-87a8-ed9c010e5d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "982c50f1-597e-4d2a-88ec-0163068ce2dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84646c17-3c22-4c7a-b676-1d5e238760e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5636b47f-c55a-4e33-8c4e-dbe7853c5128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b51bd47a-103c-4992-a460-4f1930401fb3",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69526e66-c22e-45d4-8b4d-db00e8197236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7f8a393-8762-47a9-8815-c2b1caedb399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9f8ef5-953c-4dde-9f6f-fe0348f0ce03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "85a1c798-3a78-4db7-8b1d-1bae36d24c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15fff984-1e71-400b-9ade-0f150387ac0e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cafa021-2600-4bef-ac2b-592a7c9418e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31ce46ba-ace4-404a-99e3-649f11642bd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2acdce69-8e45-45c2-8a4b-8363163d0a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b0fd4f20-869d-4878-a85c-81d0be3f9d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd5b818a-dd87-42ac-8f79-2e9711fc1168",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db80ba8f-5481-4280-ad60-8009324c532e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d2eaccd-acd9-4f4d-864a-66f67f70e734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a46f4c-bd4c-4fd1-8b52-64deb85690cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "47df127c-4206-42b6-b846-f772da1ac77b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ce7ffbe-03ba-47a1-acf2-bed07c75900f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1511dbe7-d940-43f3-9710-f9946289fdcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f8cdf2a-cca6-4be3-8304-3a25b8725e30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd6bf76-cc68-4915-8c64-43aaa2af6bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "25a8d2fc-7a6c-432d-9bad-dbc8dee23710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9bb0585-d371-4341-a8b5-c166b8f80a81",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b40d510-6afc-4f7c-8746-2a7727bf777b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a12d789d-d34b-4913-9285-e412c2faaa5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019ae16f-cf2d-4fac-9e62-fa2eef9f14b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0c7dd49-ad03-4106-a783-34910815e54c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e4c25b8-bdab-4d52-84d1-ba31cfa6fb85",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "222c9d65-92d1-418f-bef6-a04c6bd53bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c12d35d9-ba62-41c8-90ef-bca28a030377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e74bbfb7-f37e-4477-a969-74c2c7ccc729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a31e21eb-03c2-4818-9831-78cc7aa06677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37eb3179-7a60-45ca-b35e-674e5a24bce5",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5277387a-8319-4677-b592-e70daab8b086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ede37623-de05-4f68-ab3f-06437387253b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff75c17-3af4-4f9b-873e-77ff77012894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea5e611b-42f9-4566-a76a-dfe96b6b604e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3549fcdc-f7c4-4346-8220-7c587250f55e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "877a8b24-8a7c-4f4c-955a-c0d23d521e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d74f8441-7dc6-456c-b759-81764644e7f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e4572b-e33d-4b2d-86b0-8f87b7275e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "72dac1af-b185-4040-979b-a785a07450ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a678047d-0dfe-45fe-8f31-8f2d85488f8f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bbbdf7a-b6e1-4827-8c71-eb813bb1a41c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "556a8b2c-dad5-4b8d-afb7-912012a4b32a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "224834f3-e5e2-42cf-904b-4c6c2e840970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "800df29a-7b15-4bc2-99a8-e1980aa53eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "661c223d-d1c0-4d07-841b-c7c105f97c74",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea36a52-eb75-45ee-b12c-4692a55e28fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7539fbae-f752-4c1c-9740-13283cfc75b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa3552c-f370-4269-8e50-9a2423272eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8410dff-5e81-4c7b-ba0c-4fb2897330ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "184c6eee-992f-4e02-9009-bb68806aab6b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb3a113-d1a4-4d12-a3f4-44fe69d9577e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8455aac0-3176-4846-9a76-50b9c5c3166f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f57aa95-f7e4-42d0-8be4-6af8584617f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d754920e-b8ea-45f9-9ecd-1bc0e8c4a10a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "135716f0-acce-45a4-8d73-93558c3b27b3",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2f4a1a-296b-42ca-88cb-eaca01c07870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "027c7fcf-80bd-4d2d-874b-99d72c015adf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2cf189b-4ee5-4349-a1d1-d4a5b927af52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dc2477c-6c4e-4938-80c7-f475d740a907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a7a854e-566c-47cc-849e-76453eb86473",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c5c6935-5aa2-4f4c-b848-02aaa8f733a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b745830f-91b3-4618-aafd-3064c4feba84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8991f5ff-ac82-4c03-ae45-356a6c6217af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0574d22a-7578-42f8-8062-8601b509765b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39cbacda-f16c-4af2-a099-1e06ca26a488",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66b25021-94d6-4057-8528-8af67165da30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34823fc6-cb0f-4406-9ef6-28db6f6fa990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc746e2-ce55-4081-8c6c-d4d7ecd27f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e461fa7-97a2-4178-9690-08261ea7885a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79bf3ffc-8a08-446e-a520-393b31401490",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b2969b-3d76-4521-8bab-ba57e323e18f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2085de20-45da-4c9d-ae7a-4e304e3c3abc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be0a452a-26b4-4c6d-bdc7-a02de6ae1091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "19c2f88c-7370-43c6-b367-2b7cbfe4830a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f14ecef3-30b6-47d2-b87b-453db44e7e6b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23167152-caea-4439-9c56-f9534521043f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c88df2ff-e916-40c4-9ea5-8ec4d142dd32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d5722e-bdae-4fc1-8fdc-dfad689be746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d7955e64-31a3-4e28-ba23-8287bc12b0af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5736fc-d583-412b-bff1-07d73f9eba85",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33af718d-0a97-4ade-a54a-7e9f47562f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "826d47c7-8039-4395-90b0-e784ace68a70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709182c3-6fb6-46b4-81ff-1a143bcc9241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d20f5f7f-aa34-4ec3-ab16-9bec9f8eadb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d2f894a-6466-4994-8673-4b776390688a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87249026-c864-45a8-8175-b561a0b77ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61d5117a-09d4-4354-b8aa-cb19da71fe1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a18218ce-8b3d-4e8b-a5ad-196b7a7764bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9226e57-aff3-46c3-abdb-e5135787519a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19bd4a04-def1-4b45-bdfb-ce7da549551e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a920304-ce69-41c5-b8dc-e9b738ad2898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b306d07f-2ad8-432d-9cd8-99b51c3777d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c43d668-fbaf-4b2d-a86e-2deb94d281c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4da6994-9d1e-4535-8dac-211a59b67710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e82841d8-1c62-4d05-a23a-24ec7575251f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2c4324f-e90d-447b-b189-0c10d22ea2cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c28c01f9-6f0a-4957-a8ed-3732b7ecd5e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0a9ba2-32de-404d-8af2-039d9a33805d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b2f9e67-b06e-47cc-8d51-b463100be474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09219d9d-fe9c-4d39-84aa-2507bc4a8957",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a5234f-c150-408e-9905-048c2098fcbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d953c7d-423a-4c37-9cd6-85b65e6c6fd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c830b9-ec1a-48c0-a0e0-57c1de9e0225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ad0ab6a-1a7d-4670-8502-505f05c26a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a79d0e6-87a6-45d2-bf40-4e11941e87ed",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c64dd6-ee33-4f1e-b2b4-cb834a199c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad4514de-9088-4daa-bcbc-9f8f419f22ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13215051-29c7-4154-a15e-950b0ee3e7e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "dce7a415-361e-49d2-a043-892cfb9f2b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e1b61cf-1d52-43f1-8569-ce46381d0cc7",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d00ac8-7261-4a28-97f4-57c32840698d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b6a79f4-0736-43df-aab1-9aee7039d18f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2846112d-0bdf-4120-a156-9ac532905cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7c50ee2-1da3-475f-9b1f-1167aa76541f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18037af5-5e18-4f01-8572-96b826952fb9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5505d14-3d5d-4dbd-a406-70d3e06af586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d987c394-1f9c-44de-9163-93df13d4aac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc3ee54-e0f5-42d3-a6b2-f3fa8b96d8c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad110895-8060-4526-aedf-32ab8e1abfde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "022af640-c595-4c6d-9c8c-16a48ba77050",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32c9891-58ed-4678-9381-b97c6e6da67b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1313025e-668f-4fcd-a5ea-51d0093cbbc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef5c8565-9877-4f56-91da-dc66bcc794c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d22f6a5-ddef-4c7c-a21a-a905d4dae048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ae2eac-7e22-4cc5-91b3-7f97b0f4fd24",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e82771-26b2-4346-bf63-fc6030959ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cc36a23-9f02-4aa3-a693-181385ca0761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d74788-be6f-4592-ba48-dd30e2af63cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "41f1dbde-a7df-40ec-a060-0b57634f00e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "695db3c1-bcd6-4a61-9542-2c2cac7e464f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7082169f-4be9-4297-bfa8-70f25e882959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9810b65e-725c-475b-ac6d-21a56327e7a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6966a750-9cbe-41b9-997b-6bf9db7b18a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8bcd2ee9-6970-48d4-95c0-b7ab8d1521da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "255dc286-0222-4b82-aabf-7366de1699cd",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb29e264-f21f-4b31-a382-3ca476b46e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fba7018-cf8d-47ac-9905-5dbc86a892db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df812b6-ed0c-469f-853c-bbdfa94985c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fe3cc4f-4d75-41ed-ba30-6ba59720c130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb10f7cb-f44c-4ede-9e05-3eae4a6b2c8c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d8b2dde-d0f8-4bef-bd79-aac3f0c103c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2055d27-c7ad-4976-9c35-8eb31841024b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d60591d-5621-4e09-91c0-f111f2b3da46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "daab82a7-d0e8-4d31-8f13-2248aabce0f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4263bbd-1c2a-4b02-bae9-20a04c53023e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd83edb-38fa-46d3-8be6-1f898cc88ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d72f15cc-915e-4f3a-80c2-6fd3424a19bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac5f3d23-8a02-44fd-a3ff-a1e2555bdd0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4713336f-aa6f-4765-af8c-6a82267ada01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3730467b-70db-416c-84a7-3b997a9aba13",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69eb2131-81a8-43a0-9036-9657f53e0dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f527e8a4-5654-4609-8762-76fc0a12557f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d3a854-fc22-4664-b2c6-b907c08eae37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "73b0acb0-e17c-4e72-a838-e2d746f31741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141cad56-7ff0-43e8-815e-27426575047c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8dc261c-6112-43ef-af8c-dd4c20fc5e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce52c887-7285-468c-8b36-ae0486822019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff27d32b-3137-4039-b66e-6483554043ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "90b62271-93ed-43b8-8e94-63a1c409f7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150be39f-dba7-43d1-8f72-b3a16b62fd65",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9658761f-19cb-40c4-83fe-a2560804f45f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b23e0f17-609f-4cdb-948a-30284461ca6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f704ae8e-27d3-4dea-ba39-fbabb4789073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d2bb8e3d-39bb-48d2-940c-3f5f0104d511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70334af1-19a9-42d1-9598-550653054d15",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e288cc3-86cd-4b1c-ab5d-9416e4138cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8474cdb5-eb06-4a08-a49a-3ca307067e99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "905c4fea-f8d7-4cba-a076-ffc5a5cde204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2ec6185-0e6c-4fb8-afb4-1516fcee385d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b42ab0-473e-4873-b3ff-57aaa0bd2bd6",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9bfacb2-616b-43da-b2ae-834deb49a8f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5465588-9bc2-411e-85f5-222884d91981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7696930e-334f-4bb5-be61-b7249966d8e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "81a6f8b4-1d9c-4c69-80b9-d3b71ca86a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c65488db-1833-4a33-94e4-e1e9a33dbdca",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ca7b63-7020-4b34-bacd-e180d82aa42c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93eac640-09fc-4443-8cee-8dac4a98295e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da9238a-d8e8-4082-a3a9-4ea22a2dd3af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "03a9e7e1-dfa6-4929-890b-f6a201e47a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630eb924-ab51-48d3-bfd7-6a68b6a27017",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dab4e1c-6af7-49ca-8b08-6c6fbcc4721e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0716c26d-ccd7-437b-9d9a-d2b389130794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77733106-5dd8-482e-a412-946b55933a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b2ca0f5-ca90-4ad9-8127-97d28af0e0ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ad786b-1252-4cf8-99ed-4fcff81731b8",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c09382e6-6ba6-4c4d-af56-45325c69a4a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ab04e6a-d9a6-48fe-875d-36b86df00abf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee3b8611-06ca-4b8c-945b-388566da0258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3139db9b-994e-4df7-baf7-4775a70b941c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ed60ab-c4dc-4569-af1a-70f3db4a8dd5",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2df03fa-018e-4b74-b71b-8139af425aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0434f6a-a7d2-4912-b6b2-bcdc5e191b04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7976de-1f19-4115-8638-6d361a8f970e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "709bf84a-6af6-44d3-8a65-bb9002bc0de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb38769-2cec-43e4-ac41-a24460997a36",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d89f98d6-d2cf-4cdb-a5fb-79fb97df69a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4a8984f-36f6-4d91-9b46-dce2c5450d2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee25da8-d95c-4b96-b0ce-b788db05b30d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1e89b846-cc15-41aa-9bb2-f400889d37cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b07ed78-ffc5-49ad-913b-f0e13389af6d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3153fafc-2a2e-4089-bc78-a11157dabce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63bd757f-64ec-4629-8e31-2f3b39f9b6ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e3bb5ba-12f6-430b-84c1-00ba09aed363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b810f69-41e5-4d66-a9ef-fdb1bea48ece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b79ea45b-86a2-44af-9427-464cc266c658",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99f78672-65cd-403f-9ac3-ba1ba26007ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7749a47e-5e3a-4869-a51e-b7153a3cb50a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b9c95ee-a069-490e-8971-1fc8bc47b05b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2eaabf4-f4bd-4d99-8451-9b91ddc3ddde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e507231a-4720-4ab6-bb4c-4b9d0a288efe",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f939db-f902-4f74-9026-ff6f22c958c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb863545-f460-40b5-8a59-323a5891070f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb121d2-893f-4502-bc3b-de6c255acaf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "06e88d97-df09-4921-8988-6af3c60fd7aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b51f468f-cc16-4026-9995-7cb16e9b7e81",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2df5670-5975-4e38-8d61-31ca3bdf7020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99a8ef3b-2cea-4c0a-97da-6fb3c9e7c952"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a486172-407d-4cbb-9f51-e2741d609537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fe5d360-a6cf-49ab-800f-b50070f7e395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39189606-2840-4fad-b276-7a60fecaf984",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52eeee90-6a49-4c16-b28d-97fdfd4516d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61e73015-343f-400c-a215-45da3d13cf64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f2cac8e-23b6-4f52-9fe7-665fb5c93761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "66066f31-4d36-4a42-ae04-4ea19626c393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05cb03f0-da61-4d71-bafb-91e3397cbee2",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "434dc3ca-a37d-46cf-9ef4-794732f1e895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ed2743a-2c02-4da3-a421-4fc8874d27f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e83709b4-85ec-4bd5-bc2d-e95b1c5646b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "585a89e5-8883-4b14-97de-36d94e309276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c2b0e07-3e6c-4ef1-ad68-e3c7fc7bba28",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc2151b-14c4-4133-a710-3563cd462f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba0666c7-b4a1-4769-bd0b-956035055190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbcc5b11-6c4b-4206-aabf-2d7de8b1c35d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c5c4837-2acd-4c31-9393-4cd5d319b9b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc4118e-ffd9-4785-ae07-00992a479fc3",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a237845d-f125-4994-9aab-4143cf7df658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91989d07-a8b2-4a2c-ade2-4cd1545e86f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1037e43-8734-405b-b83f-9b3413e62f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bc7f537-0e2c-4cb8-98f3-4264e7959fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf4726b1-d498-4068-828f-9b4fd0ff6b74",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c062bcba-9e1f-4b1f-89b2-1bca608ff4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f15e690-2b84-433c-9b2f-40707b9779bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6ee0da-232d-4cf5-ab44-2aa97e28f146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c161cbda-e685-4398-a890-ba694f721f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b46952b5-7d78-4025-b39b-bd25d28352a0",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "281fbe26-9f68-4dd2-838c-af118ad4e0bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2f30bff-7101-4459-aa3d-645ee678dddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c56d904-5583-467b-a11c-6845ba80d58f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "77dbb161-b239-4951-95ff-05c185a9e1e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa91bd79-e51f-4318-8468-1c38bf31cc79",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96afb4b0-4e6c-4409-b24c-2a8a89e46621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f16088d-beff-4973-9416-18ed5cc40356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc0dba12-5ca0-4a91-ba2e-d478c79716f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "384ae1ed-7024-4680-878c-760294191ea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ffafa8-dad9-4f1a-a2c6-118c0d4c1a3a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9c11f4-2f0f-464c-86b3-a331583fe944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65291c30-31a5-44ed-bd75-d716d47eb91c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e5e590-997f-402f-a8f4-cc7af9a69fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "035b0ac3-a7eb-4a7e-95da-7f6efb8ed8d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e5d381-7fa3-42e5-b0ba-5e98ad7a6255",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd7e085d-058a-4da9-9937-df67659ded03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d82d64c-dc65-4fe8-9d68-e2e850e1d3b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d798717-3ea3-48ba-be08-0defb1775911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "57ad688b-a7d8-44d2-85b7-4de3703445e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3bc519c-4943-4eea-a489-10302d17484a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc9b96c-6f05-42d3-bc3d-f4fbd572ff0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be44fcc0-2d91-494f-8241-cbeb929bbc72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dad9569-ad0e-4187-b38e-382c91021c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "42e14ff3-f16e-4d2b-8498-2a02b7210e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "739c8476-2ed3-4b67-b784-36d8c09029be",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e0885b4-3186-491c-85b3-53180108046d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d614a102-28f8-477e-81e7-db95afc6ddb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e057d9-60a1-4711-ae0f-f3abab7fcc28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e6893c5-195e-425a-9f8c-e99a504976d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69df2b45-d9e5-4b75-8d8f-1caeb154c2ff",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9e2c29-c12e-48b3-92dd-62c82bda6f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc1281e2-3736-4665-8122-773b7d2202f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c4fd605-bbb9-4f69-a665-bab54072d6aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "624b1745-a3f4-4ee8-9d18-2b6e705947c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b81cbce8-bcc0-4a4c-83e9-7747aa07a4e9",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a214d1-d0dc-4f02-91c4-84fc7d13f22f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34a3779f-e22b-45e5-9417-e51f980fd5f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61182185-cd47-4e55-8190-27e614f0ae3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9516782c-a7af-4d3a-8f83-6a7e9f12d62b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "252cecb2-16c9-4b36-be8f-bf81d61df91a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf0d3b7-16cc-443b-a538-db41458ccafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3f4dc7da-5611-450f-bf49-e421afa55d7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64001e6-d152-4e14-a777-ced32621e9ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8be2fc78-f972-4045-95f1-fa0253b70957"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e2b201d6-1bab-42b2-9ad0-53bf6914fa7c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4cb6bd84-04ff-4992-beb9-1d1aa6b66a54",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b58e20e-5acd-400d-9c46-0fa13901702a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7819a35e-bf55-4141-9520-ada4ab494adc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d7c21a5-3872-4e1d-be1c-0dcc58390808",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "327c46a3-4e48-4f8d-9691-43b5f144f8bd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1802617-411e-4514-9d8f-89970b9dc4d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20291ccf-493d-430a-82bd-4d8b0d8148fe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f4186f60-d70a-4cad-8dcb-f8ff4b4ecb52",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9642a92-0197-47d6-be4d-725107176755"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "37a7622c-040b-423b-b7f0-d62c20caeb80",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "34e078bd-b800-48df-9f8c-f8e4213a1027"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "82c0dc62-731f-4056-91c4-584b2aaa0ccd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fb38b44c-a4c0-497b-81cd-c161fef50abf"
                }
              }
            ]
          },
          {
            "id": "e1373ce9-d108-4a94-8fce-39d0a5e67e01",
            "name": "Positive Testing",
            "item": [
              {
                "id": "65779613-4c72-4883-84d2-c0fa58c24338",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba434a16-acbf-4b89-a75f-7c8cedca12af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "780032b3-6f8b-4ca2-a2e3-8a60bccbe8c2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23ad86ba-3e32-41df-b698-f9d582ef031d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e03a1ff1-6eed-4e09-9f98-0c8cb3c73fdf"
                    }
                  }
                ]
              },
              {
                "id": "69052fa8-3393-4b8b-8fa2-d8e38d93f179",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c9bf1cc-0ebf-43ab-b185-1773eabc98d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "05153c92-4c9c-4aa4-a9a5-8d16ebfdbed9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b77b9a55-b68f-41ee-a1e5-f9255ea87509",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "40f33e27-ddaf-488d-92a2-4597e9b7b406"
                    }
                  }
                ]
              },
              {
                "id": "b8e7d195-2975-4848-9218-8c26cef935b1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5f55458-15d0-4709-8cab-83c8636ddf4c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3e76844b-9643-40f0-9c58-fbfa54727b12"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "937b023d-8221-4cd7-b918-e6553a528e7d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "55a146a6-49af-4c46-b867-1581c7efc262"
                    }
                  }
                ]
              },
              {
                "id": "b61d6152-f684-4ba7-ad55-684cb892d3ad",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9a21fef-d232-445d-9ba0-b77ad241e6cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "298f63a5-6c51-4b15-a5de-940c2688122a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e00246a-1087-4fb5-8b4c-8e08735f39cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "67d44499-89e4-402b-a1f4-240417f03e8e"
                    }
                  }
                ]
              },
              {
                "id": "58c91e9b-eb75-4581-961b-254f4d1e7dda",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef3f2afa-e74d-47e7-a5e5-c41fb30b30bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c77f1da4-2e29-41bd-b67d-84ed92dcfe78"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c437b3ec-d7f0-48e8-b682-915f16a08c8c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5eab3f43-a39f-4386-8ee8-e18dce58fd3f"
                    }
                  }
                ]
              },
              {
                "id": "83897805-4f55-4ae8-9ad5-fd5f3d008574",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f57ecf2b-b247-431d-8273-cc2a23bbb9c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2bcba0a1-e4ef-4d43-bc37-de201dd3a2f0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6dda2b47-41f1-4eba-b225-9c586d43b7e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1ab607f5-b4b0-4776-b0c6-0aef790286bb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "704181bf-1521-4e62-8b01-e8f1a462ffc4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9148e0ee-f6a7-41d7-b8eb-07ba7ae143db"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "492027d0-fd2b-4347-a1a6-b7ae0e27baee",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d610c560-c544-4099-b726-b4f77218f718"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b9976fd4-5362-4443-8df1-438915500333",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f5c7e372-c83d-433f-8e92-682fdb21eace"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b79ce68c-5745-4d9e-be64-27cc7d7d1256",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bb8c7767-3aee-4884-a673-642534a32684"
            }
          }
        ]
      },
      {
        "id": "bf6b9f36-7732-490c-a800-44f9df0afd08",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "00deccbe-072c-4468-b649-fb0e18182d8f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "127ac467-4d24-46e1-8c3d-9786d83724d8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1c6f1604-22db-4c8a-ada4-6b930a0e64ed",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7166214c-c160-43f8-8868-97ec6bf8b293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4963cb8e-3993-4dc0-9c97-105aeba531b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8244678c-7865-4824-91ea-e73981e28534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f75822f7-20f8-4715-a879-0d35d8445d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db49386-c884-444e-8779-c21a40f6aeaf",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "984ceec2-22fb-42f2-91e7-913a988ee228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1799f03f-d389-4815-a669-7995dea43954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ababdb-f7bc-455d-b771-0228e84929be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e855c59c-1757-41cd-af83-055ddc548723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf0bc27-7ed0-44dd-b909-22d644cbc70f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a74cad9e-d907-4ce4-aafb-c916750bdd1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f863785b-b1e8-4f0f-8953-a9de7a4b0fda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a01e7d79-15f0-4f7a-8a81-625b72648bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1399f273-7352-473a-bef6-ef7c8f42739b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dee2e1a-80f5-4093-a0d5-d899efafe3f9",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d81ef49a-d7ea-4d8f-b7c3-216ac1d8cbc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13d7ddc0-a3c4-4da4-8e1d-91e64db1ab54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eeaa6d7-b0e1-4f0e-a2e7-5584b698e5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d60a4e99-df8a-4dfd-ab52-9522fb331e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46dbfa49-ef2b-4147-9af9-f8d203251ae1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d309fd-1328-4a76-9eab-aed7ee58a838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "648d185e-bcf4-45f7-928e-fc0a854bbd84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea273a3-b4d3-41c7-81d2-fa9a63c1089d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d039c6b-3178-47a8-9b27-48992fdd7d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71a218b6-71a9-492a-92ae-6d7145ca1082",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef1ce625-8fe6-4c25-8f7e-c57ecc8304e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4818b9ae-e456-435c-941d-d3fc1c50706d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d9a19f8-8763-424c-89db-ea193cd72e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2494d9c-f42c-48ee-a3fe-a6a016305345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce765b3-dc75-461f-8c37-07729c6be21e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a1b7814-ff91-4f0d-932e-8056cfa12c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2654e28e-f42f-4dc6-92c9-e545461119e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce49b1be-94bd-4ce7-af7a-32f6bfbaa65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "509c36a5-f86d-4dd2-b463-789326e1675c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c385d4ac-ef0b-4488-a22a-d9b8f56f8d5a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ab8a0f-d155-4a0c-b0eb-57913952fb3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a29e95c0-a8ab-4865-ae19-e8d37fe86722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14340891-031d-4523-a13a-0e11d8d9ef5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aba583ea-cf86-48e8-8fc0-4d8cd1a59f15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aba16e2e-6a5b-473e-bffb-d4443357fb54",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "208c6042-e7de-4a3e-b692-64929adbb481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7203fcda-2eaf-456d-b9df-cf3b1694f904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc8e85f3-1f35-4cae-895c-daf6a6432a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3877e9ca-673c-4eb1-a5ae-c6ae3d3bed4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c14387f-a9f6-4704-93ba-4aae09bbc218",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc95493-d909-4abe-b6a1-dcab573f4b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbc43a86-4348-4017-be2e-4c5e5dac27cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "981001eb-a0af-4086-9e19-58661f2f4164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b13ba41a-5cc6-4247-b486-4f69d16aee8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69092c67-aef4-4206-8c08-777d967dd5ec",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff57a9a6-3fb5-4f53-a42d-594f8f90c1a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95e72768-d304-41bb-87e0-3b5e0d719444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273d26b8-e0fc-4569-a033-038eda85c9a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b391687f-4f25-48ef-a06a-85b7fd55f416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27689a7a-1dd5-4431-8059-cb15ea4d7baf",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b7d4a41-6f09-450d-97c8-ff877cb60d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de091fa2-a689-4c24-8586-0bf57f3cd2ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d527fd08-f92d-46f4-a869-f9aa7709f9ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "57d3df06-1a35-4453-8156-958f1dfe81a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96351cb4-13d2-4c9c-b5e8-8cad685db43d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b82a47f-13f1-4edc-96ad-3f60e5877ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f20aa3d6-f463-4ae0-99ea-359c822164f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ddadec-0314-431c-9cb8-cbf7a33de463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "768ad5ae-3987-4c20-a3ba-233c969e90ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d58cb24-3201-4678-8413-c03b2e761740",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fdf909d-701e-4e78-a45a-ccbe8b0dfa19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8044e36c-b1e7-4470-b67d-e56be5541fb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97734655-c2dc-4322-a083-b9c8b7bfbd7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a35656af-c556-4e8a-b1f5-81684496f144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b41cee6d-5686-4c1c-86b6-255c4cb35693",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db23207-686e-4f59-b45b-30830b7f5f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5a5b8d8-c029-42d3-bc69-31bb86d2f664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e76cf72-8659-44a7-8600-c2f6a1629600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9eb2027a-3ef3-4fe0-b137-c91cd227a519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f88922-8dd6-4ccf-93eb-8f8d3459e5d4",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19325287-c5b7-4626-a463-2e2171323a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c3bb4a0-902f-4020-ba95-5616ca81839e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b69dc9-a09d-4cfd-99a5-f30c42ec9657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "eca9fe68-df40-4ee0-907a-2f68f86d4229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a868f97d-6d00-4e76-b5aa-9a612b6a8883",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc05f16-f3cf-494d-8cfb-5ba071299f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25b55873-4408-49f7-a5f7-b645480fe586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "151a348f-27ed-4ddc-9f95-d883b3b15c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0887b3b9-24bb-4f55-8446-b02b60c2f307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b16861-6ac5-409f-b80d-147c9f320056",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05765ea-1c36-4396-b47f-4b0523633ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d391fd1-280c-4c1c-81a8-806c6b5b472d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db5fefdd-279e-452c-acf5-c29623a48cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a42ac51-0168-47fe-aec1-d30154d3daff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844a3adb-0fc6-4c75-8295-f4181a4ebe92",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb39636-a527-4275-a380-076b1fcdc7e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d8fd2a1-2b54-424e-a086-adc4cb0ba102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd6bda25-2c77-4179-9b90-14869d4c9c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f6b36f7-0cc8-45f6-9680-ecaa198b9440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3be9de1-e7f0-43f6-97a6-c0d139d77af1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18069518-dc4e-4d33-8639-0c7a4d5830da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a867807a-6ddd-497e-bf55-e51fefe93074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2982e380-a17e-4366-a12f-f781f44c6308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "792b39e5-9281-4c62-a228-ecd31555a745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e9d9c4d-14db-4cca-baf5-cbf98ffd8004",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc2be405-f28a-48ed-ae1b-f1b0769fba73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d811a991-2815-4e1d-9d2f-1c59c8acb94e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8d038c-027b-4acc-939d-2c99b881a6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ed146e9-119a-4f9d-a2a2-712f9ca723c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfdc5200-59e5-4ad2-af3a-48f04af73211",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5fbdc64-93d0-486b-90bd-baaaddb3f0b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f382c9a0-01d7-4e55-a04f-6d442da24673"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53596552-bf11-40ef-93b8-efb797b3fee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b989ff1-01a5-4cc8-adb4-cc75e34e7b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b5e0d80-17f7-46b5-af26-7f4e0eef2506",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92819e00-b25e-49ab-b99e-6dacab939289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "075bb5e6-f739-47d9-bb18-005fe9d97982"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba132f5-4fd3-438d-8beb-af88597daaf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d666fcfa-5ba4-4b9f-b21c-b48e20ab75a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "154e10f9-c934-4ab2-b66a-ec7a13b685b2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a1602e-1f1f-43b1-959f-add42f88c8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4020adad-3806-461e-8751-d60e61a11e64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "438011db-c096-4dfe-ac28-0eb4f95569e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4837c4fb-8b05-4b74-9b1b-902177f1ea76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4347db0e-6c38-438f-a593-3247f35cdebd",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d7d6f6-14fc-44ee-b353-c4bd244eaebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "306c3fa0-bf35-40e2-b05e-7198f50c64a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad311333-fd64-4c2d-8ab4-d2f95979d591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20f9ede6-34a4-4be0-aa9f-97ab70e13492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d34b39a5-d0ad-4566-848e-4a2f61ab629b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e339e2-cdf6-4966-ab1b-6f959cd89fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "849f91e5-2838-4a90-b26e-4fec36dc62e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fecdd6c-cda5-4b69-b87b-c594224c0e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49556ace-4f37-4a34-850e-3e37e163f05b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f573e09d-fdc2-4465-8d8c-686a91bc21e6",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "495c82f3-f4c5-46be-98ef-8be9d2290b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bac9efe4-4a4a-44d7-91e7-c1f7102fa335"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcce7562-7a8e-4142-868d-4bcef3da9da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3122fed-6d7f-452b-a27a-73f250a14618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4201e30-a1a0-4789-b40b-0f864fb56eec",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c42909-24e9-4349-9fad-5e43c4d44d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7659b639-f9fa-4676-8225-c8b05c1ca66a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1387f95-75e5-429a-8be7-30aedd2adbcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1410f3f9-1e40-4957-9477-17f6db5eef48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae327064-4c27-44e5-a609-bc897f4c8652",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d69ab1e-2efb-47e4-b9bd-de86f6309ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fa5ede5-af2e-4826-97fc-e1ce732dd425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7bd58b-037c-4747-a35f-dfa9690efb02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dbbdece-3060-46cb-99e5-36e1574ec4a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6874a1c-496a-4822-8787-7c8efdd2f818",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81f43da-7c17-4402-8c49-c73043a55de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fb76938-2707-4c0f-8f2b-9e799f947296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac1c044a-8531-4de6-bd70-3ff89137ff5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "352351cd-e960-46dd-b8eb-9683dfefbef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e02c240-e9a1-4144-9f9e-7d3a5c024b4c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b92823a-ed98-487d-8b67-4064d2ecaf4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0be5864e-5813-4b67-b45e-939b84dbd9a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b535c3e0-cc90-4c1e-b8a6-58df9e73562d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46ecb76d-01a3-427b-ad8f-695535574ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5d9f23-538e-41f3-9871-0de559e07b42",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2a9da4-0e3d-466c-bdf2-bbb101cbbcf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90021196-41d2-4a0e-82d2-a6d1e4e3166e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b64e967-119c-4ae2-973e-b05f94ec5f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a95b7f9-daec-4846-9b05-3d53113094dc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e90d4ecd-b3e5-45aa-9480-e9d5b842c190",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "884ec7ec-5541-4ab3-9c14-b6b486968f17",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d04a0d-627c-49a2-9269-665b710663a2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "49cef2e8-7ed9-4b25-83a1-3c133046d09f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce5f80b7-ecb0-4b0c-8d2f-9ae22eda8d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7168e80-240d-4d40-ad64-ef9358d9d983"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "114d14ad-e4de-4d74-89c6-a0209885119d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b510fb85-cec9-4b83-8fcb-4297243ee648"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac28cade-7a05-4974-bb94-5377bdbbf343",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca32b4b7-8c7a-4f7d-a60b-01f64846d6f1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fe05762f-cad3-4b3c-b621-e261c882290b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "57a689de-17da-402d-aa48-251c16b008f0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6c503b24-1140-4c7e-9763-7fc3a8849181",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f0a14b03-e7f8-43c5-87be-8abc3f2607f0"
            }
          }
        ]
      },
      {
        "id": "d9f7bf65-7f86-4aa7-a6e9-fe7cd1b07788",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "8d5d97b2-b56b-4f1e-aeb8-473ff5f6cd6d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3bdde4c8-15d1-4da0-8b38-82bb85750d19",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "96664118-16d3-427a-9b7b-bbd2188f7389",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c54d66-29c8-42ab-9eb0-9a80747260a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "511e8d7c-f45f-4413-9d92-8677e3b3820c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9092300-c1f3-43bd-bc72-73a2fbad8488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8091381e-bcd1-4c25-a884-4d186071dd5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd963a8-da77-405f-9912-ecff05b8c0f4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5177207-98ef-4162-a0d5-fa7ad60abef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e188699-3fc6-48a2-92ad-5cda16cc23c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdbab6b1-c176-4321-8360-8b1182dcf73b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7acd717-581b-46f2-8106-a2542428a86a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6e9225-4f80-44a1-b4e8-15385515ffc0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "204f9ad0-8e23-4e70-a031-d6165e9b2752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bc5a9a1-fea6-4eef-a380-fedbf93d41b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e3d74c6-45f8-4c1d-8178-0b0b01c39d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a880fc3-90d6-497a-9fb8-2a9c71ab5ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e3745b-ac4a-46b7-86ab-0e4969557161",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f76b74-8470-499b-a4a4-017ee0190177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51499070-56a0-42dd-9d44-adee50928830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf88b165-68fc-4024-9384-9df04c31ee2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "77c4ea8e-89e9-46a1-bf6a-cc4381e9dc82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de90099e-5c32-4286-9466-3b1c85f61884",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "491c3fc3-fdf2-45ca-9f0b-0da7cdbee3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e561b6fd-56cb-4a35-95d0-610ab0464978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ce9820-6e56-4fad-8f0c-dc3fd84a5715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "45b9fa76-f173-4955-bef6-97e467ada456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91161bf9-0240-4e26-963c-f97d9af3a178",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "866dd6ca-373a-4942-9935-5e256df3934c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28988144-b60f-4818-9f4c-bde5077d16a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96fa8649-77fe-4dc3-ae41-e854cf6c641a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9dbd9b54-277f-4722-910a-319d8e874331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f51c16b9-238c-4cc9-960a-32bfab692230",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae77227-bb34-4065-bfec-78072ce8f795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a502871-3dad-42ba-a436-28d534207e11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "858b75a7-f6b3-4728-8172-c9a60d58d647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1e89992-fdb0-49f0-ad07-1252907cc25a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8eee817-28a0-4541-bf92-43b2cb1baa59",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a59be2-9f5d-4d69-85f7-cd4f99967d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65fa9319-0ea3-41b2-807f-bc336abe76ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3d581c-0bbb-4479-9253-a2aa51fdce04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1daf14b1-4442-4a3d-97a1-a3128ecacee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa83e30-02e5-4a26-ab16-b4e31fb165a5",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1044c5fa-4d96-45d9-b60a-94f928ba7036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9d6b832-a176-4045-835b-41f5404847a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d776d7-0fce-492f-9fe7-5bd4b846283e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "256ea657-fae5-43f1-86ed-a20bb6536cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a85e54-5343-4de2-b22b-7993b22fb366",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "160fd99e-c8a9-409b-93f0-ffb3277d10d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b447673f-5034-4528-af7d-e0296c468d64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "178e3468-0f4a-4a24-8530-9225ed0deb21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c536e6d9-a74b-476f-a07e-dbc4bb4aaa50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e9497c4-36c2-4969-9e54-160bcf70074b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f4ee2bc-467e-408d-a3e7-2e202e83289b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f48bd5e-9c96-4d81-a8dc-a981d034792c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba59677-411a-4d07-8a8e-bfb12eae7d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "73be345e-154a-4eb4-8d18-59bdbd1222d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d95302c-b718-4a22-b470-59452f04d58b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5611e1a8-23a9-43e9-9c3c-8dcfbbec0976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51dae19b-5477-4177-99f6-3f9215c4fe74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a77c3e59-df95-4274-b5c7-f8864d58e3aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6036ee48-44fd-445d-afa3-00f9fce57ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d94e4e-8f40-4ebc-b8f9-b56ad7cb56b0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c0f096-d379-4021-9e83-53440012a320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8f26a08-2094-4e27-b6d1-43428212402c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b2b3dc7-4f8c-4d0f-8b81-d0840926b85f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "afa22e33-3d2c-40ad-96b2-5df7b252ee03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "304bf389-2624-4c7d-94aa-218113ba7618",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0062cab8-917d-4da8-9767-59637e6ea35c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06e742a1-5461-4cc2-b9b3-177a23260177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfbe0861-5ab7-4f8e-b921-32f8432ae2f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "469bf66d-11b3-4c60-a29e-7f7d77796759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a36df216-6d2e-41ce-83d9-047881021618",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c8e24c-2ddf-40d5-930b-7ab4a92c0f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2352f9b2-4cbc-4fd1-a807-857c37f3baa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f0eb27-3a27-4d6f-b714-8b3285176c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bd57c78-ee31-4d2d-a9d8-58fe68ba8649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "434187ee-7154-40f5-a6bd-4fd1613731ec",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2837034-0043-4731-80b8-ba095a675ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "485f7508-e2ab-4b16-af79-9f286c4545a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751b519b-d828-4880-ab97-ab6787923cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "59d9f913-c2e2-4782-b4c7-729a89a1dcf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a807541-d858-4d88-9e8d-370062bc9eb4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad65558f-0085-4dcf-a933-94d543c4d011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3defb193-9b63-4186-9539-eeee0651fada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8adce3-4f18-4381-8081-f893b2aadbde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "67e007f7-51a5-43db-8dd7-4d5f52f711db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d80e43e-923a-450b-bffd-efe5de76a189",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24bc626-8793-4374-8882-b474e6681604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea5e9b6a-e4a7-46ae-9a4b-03472cae8dba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2576c607-29c0-40cb-9606-704d311a6a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a990957-e7da-4fd6-a674-59cda5f01f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd1ac21-8fff-40b7-8cbe-1403d3c74382",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5fbec6-f685-4346-9e48-5605b4f45020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98fef7c7-b60f-4dd9-bdfb-c019b141b1d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0888dc-9100-45f0-b77e-207df5cea5f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbc3fe6f-1e50-4f79-a546-08e26f04ebc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d53a463-67e3-4be3-8257-26a6a7a35dc1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f2eefa-d9f9-403d-9c56-068e2ea43029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "715b5c74-78f7-420c-b5c2-76050d5bc4d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc70bc3-e63d-4a66-a0f0-7aeb7dfde154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1867d0cb-4a34-4b60-b091-1cd41a41153a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d40207-a2b7-409a-8693-accd70602a66",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a72cb932-fd26-413f-90df-b1b61413f2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7996a12-fae3-42f0-a3e8-4151da6eced5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94dd27a6-e381-42f1-ba8d-22a0a981699b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf2ebf4b-4b44-45f6-92de-bb7a9963a23d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c9d421-a307-43ea-858f-20daa09dc48f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0e3346-fe72-43ec-b5fd-0be0060c8ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45a964fb-dc2a-4f2e-a140-9112e94f77f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca5e3fbc-2367-40cc-b962-a51ca9bb1a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6c512f3-ca3d-4f8c-86f9-dad4afb18f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e0a0b9-b3f9-4d7f-b80f-c829ca04a13d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2f8748-5b5c-4a75-ab3b-de659e66a895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ffab54f-e9fd-412c-b484-e9f6846872dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c232e7b0-dd69-4f4d-a70f-ee045710a493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7a42f8a-86ab-476f-a1ff-d86a1c215655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "079eeeaa-9b71-49a7-be6d-9d398a6e1c0c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d2d717f-3329-442c-b11b-b1b40b5ca627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edcb533d-3f2a-4a7a-93ce-e3a66ecdfeb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64bac5f3-abe6-44d2-a5e7-dcfd1cb2afed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa97038c-288a-4835-b762-3074f1d0ee3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d88cc0-e0fc-482c-aea7-4120f4e5dac0",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b49f465-5647-433e-913a-ace3ca668570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f082ab6b-3863-480a-bdde-781375207fff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e80f3240-be25-45f7-b59b-142f8cc31f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38130526-d4a4-44d8-b2a2-9a17a4679d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec9a7a36-4fe6-4ae0-83c9-f58fae29be84",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e225f03-fc2c-407e-9d5e-cb89388ed448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4dea52b-5451-4401-a1bd-21990049f0f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a7dac3-51ea-4c73-8b54-637cf70c091b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9b4d9a9-9ecd-4ced-bc31-90efa44da887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b40ff362-e3b8-48ec-ac49-4e49a0eee563",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35deb756-64ea-4316-8a7b-f4d5be37a073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "310ae2f8-5608-48cc-9816-1c1387c1edd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748fd8da-7c40-463a-bf7a-036ea6ca015e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cacf0ab5-8207-4395-adbe-e55e07f6279e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83c0f93-9125-4a2a-a6b1-b39777efc3da",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6370ecb6-ab49-4521-ac55-9ee33ec7e617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e19e22de-9828-4e38-be40-de8477b67575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f955d1a0-f60f-40eb-8550-acb7e4de6131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0fe1280-68bf-4de2-9be5-85f7ef3d9cf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b201bae-cce1-4fbb-918e-799ff4d80a46",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ba2ae4-43bc-4919-b527-5e4c8e4afaa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61f153da-9a97-4597-9a94-031039b0fd93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd1cc61-d726-44fd-b201-df59fcf4c255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90fce8fa-61b8-4207-b38c-3f8fc63396b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed66f702-61a5-4c68-ae8a-d2e3bbedcdad",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4385e9bf-86e1-4d13-8f04-373edca774d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42946810-2593-4f6a-a3a2-6283c5430c19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e66504-a4b0-4de2-8a80-f1d1e50b5118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26c4d3d0-14f2-41ba-aef8-224ced8d38cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02cd2070-c041-4ccd-a8e7-30a600fb9352",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a906bc96-a5ca-44b7-afa9-a644d8985148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7197b710-9429-4515-8dbb-213d937a508c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58fd4149-93eb-4895-98c7-665ef848ab34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c74b3368-7664-459e-9c9a-bf0bf2b26d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d17d88-ca58-47a9-ab1e-0701b968cbc7",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c576d2-b494-4ad0-b08a-7b082d30dc49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6638f738-b9b0-417d-887e-84e05af52825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0844fb8e-78e6-4951-8ffb-39b0c8b289ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "000615d5-007d-4e6e-a337-da1d44a8a05a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7627318a-7d1c-43a9-8e6c-feb71bd99ab7",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbfc19c9-59db-4efe-9c14-ecdbd669b4dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f14ea5c-7649-43bb-8c25-4280dc883cea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b752c770-1ec2-4f63-96a5-861d34391ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdf86def-3c0b-4ace-a959-314d31ee263f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b248e54-b096-4b2c-a11f-a9f8ff997328",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1260d0f-c0e3-48f6-b8d1-22d093487e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "984bb329-013f-47c7-9736-11f77290e40a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09444713-1fed-4eee-affe-a0dcc6483ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e49b5be-b150-4a39-9c06-0deee2729544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b824b42-0d25-4adc-8a9b-b5d924662ae1",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc92edb-c9af-4d34-b35b-b599ec12783f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43c1c97d-7604-4af0-b4cd-abdb5dd59db9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00514847-dd36-43a4-a2e9-fae274bceeae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72899b3e-2cc0-4d02-aaa0-6905c5dc9936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6748261d-23cb-4b82-8d01-29e2cab83cca",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9352550-220d-40c6-9632-4242654be989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9a92197-7efe-4a7c-9cda-dc67b195abca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c7528c0-8ac0-4620-916c-32d3bd2d07f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7aea69f9-8289-4b04-a47b-050f0565f87c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76684ecf-a3aa-4d2b-93e3-a023a98d91ae",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2bf09f6-04c4-43bd-8613-cfc4bdb50c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73da7c80-dcad-42df-ab7f-dd210b0fe7f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "502e0682-8a47-4f0c-af99-a6df349ebff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "563f389a-178a-42aa-8782-0ed10c9c79d0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5b3e3307-6588-4217-844d-1877fd8c8bca",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bcdf3afa-27a8-4fbb-b11c-9fc012a4bcbf",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f13a44ef-9d41-414b-92a0-3088ef0886ff",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f62319f8-3c1c-4edc-9451-9d41ee615a6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3a047e-a648-4019-ae80-6795fde7210c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a9311c3-bab3-4152-bf87-403e95160743"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1195736a-acaa-49ce-b435-3b2c3f916f0e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3cb6b953-ea55-40d1-9ffa-3ae177094bb8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b52a0a62-fe89-48a3-8ffd-5de82b896dd5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f0f2b94c-c8ab-4a4d-8a65-2b63f2555b0c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c7f64422-e70d-4054-9146-22ac77831ea7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e686802c-0b8a-440a-abe6-5b7a48dca882"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1b57dd7c-54ae-436d-83ba-b2cc33283f73",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ccaecb0d-797d-4a62-ab06-88b8b044dd2f"
            }
          }
        ]
      },
      {
        "id": "8117257d-0f0e-47d1-8a7e-2b8a402f9345",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d034153f-18c9-4367-b10a-354ccc1264ab",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3a7f0918-2828-487a-9772-0abedd630d76",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ac39cbd4-a690-472d-82b0-94cf25a66139",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0909c00a-bd6b-4bc7-a44c-cc0122d278a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1458058-706f-4630-8d21-b06fac38580e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f26582b9-0f77-486d-9aaa-654f98fc518e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15eef63-8d39-4486-b151-0b22d88e2b37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bebf785e-6a65-442a-9065-ff69c7b6752f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a766818-74ee-48ba-9edd-38b0c60d9c26",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3be2341-ebd7-43f3-9a28-31ac6bf63303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4661617-7d0c-4dba-9103-89c89311c07e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6283f2d-612b-4eae-ac7d-e8bb902f5883",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3ea5df-7be9-4308-97c8-3f440937ffdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41dae40e-d02c-4eae-86e3-ff1a225c384c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93401476-6c2e-4a75-a579-d8e362711e55",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d21eec2-c99a-4b60-8cb2-e6ecf306af45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "445061b4-c7d6-44de-8dbd-2699af8c4c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ab992a-ddd0-4416-b4e8-919988ceabca",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24e6dad-7a35-474c-bd8d-1fb44a5ca639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c29773a4-20cd-43b9-bef7-ecbdf90bd735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d67fc9e4-0681-4c40-b2a3-3ab91055389b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373aea57-a419-4828-abed-434d227ad9d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "656d086e-082b-4595-9d61-f56f68edc830"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd35938b-3b1e-4749-a32e-7adc09a8fd81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5e391fd-f4d6-494e-949c-78edbb727e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e3509c-6fa8-406e-9bef-44a3e70cc371",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5fc70d2-1ec5-4c65-9549-8fbd3a65fd39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a07b3784-7293-49d4-8957-5aea3c9f3158"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf59e00-513d-40ec-954e-6e8a78094f40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ee5a8b9-5d65-45b3-8832-9c52675074be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407ac0e7-cb2f-4a9d-80d7-bae0af8ff650",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e6aecd-c7a9-4a3f-b9b9-65f78d822f35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "618cd529-8d6c-4c43-b347-3a9a05b3163c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba716c07-f09d-4162-a4fa-0e33ef163de9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32862ab0-73d5-43df-b05c-6c62cae9e5fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab86673-d443-4490-b47b-bf65e02552c0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85003f24-c223-4041-9946-51b52716653e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8635584f-3f3c-4ef2-88e3-008990246e6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f494176-7b9a-4609-bcff-d969c79e29b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4bddf71-e555-46c7-a6cb-53d8e6345783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da8799f0-3327-4d49-8171-b7d666552d7c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d916aba1-c7ed-456d-9df4-ce7114c499ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f19bf42-fbef-4c58-ac47-aeeac32aec21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a44f2fcc-85d3-4f2e-88cb-c0132e08b444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a92c03cd-c814-4b93-b2c4-a41238395a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a6f7d5d-6024-4c2c-9396-72f57f552079",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f845720-0d5f-43d8-bd87-db4ecdc8acda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3a1844b-2dfb-4c27-9e09-576c47b31658"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "735e7bea-9aca-42d3-871c-92653c677d53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46188473-1fb5-42df-91df-4e689a623817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18f16972-e6dd-44a7-b034-22520dd92132",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b40718b-b4d6-4fce-96f1-ab9616f92351",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdd255ed-8304-48c7-8949-da8a3e28fae5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43727783-ecf0-4219-ba56-e2e9d3914406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fabc404-abac-4a13-ab95-07f736dda31a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dae9657-eb96-46f4-9656-2f29bc64c123",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec7cb6ac-efeb-4e00-be1f-2c88b64773f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "741a676e-c983-4b1d-b671-fb1f2525932c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc2c772-73fe-460d-bbfc-327901365c8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0585dbc3-b9f4-4297-940c-e24a5780c0ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa43d46-5cf1-4ac8-ad39-45728452e4a2",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "753e5240-125e-4e96-8348-8231a4612a5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dde16433-c7f9-493c-a126-f529692e2f24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27f621c-7b48-440b-b2f9-cb1fd80ab776",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2ed3ad3-34ef-4d98-8947-f4bb4d6d771f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c86406-ed47-4095-a53d-1a9828fda031",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a16c98-8faa-49fa-a443-2de739a322d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82899307-7364-4e3b-ba74-360d78e1f3c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a05a75-08da-47f6-872f-ff16f3b7c055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28319482-3c5d-4024-bdc0-caabee460c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0418adf0-17f8-4c79-975e-f43cdbe62152",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae70ac1f-b280-446f-9eb4-b340f93aa838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5080ef5-75de-4320-a1a9-64340f777e2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a647939-20c7-476c-8c09-7d6a06788092",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6d2d185-5505-4431-9647-14faf175b53a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96417ba-a743-4855-9fa7-97639551e0a8",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a09720-0d42-4b51-b8e8-2820e0f5e23e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "940e4fe2-dfc8-4f94-8c6e-d7bed6c58a9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfbe8ff5-9e88-4f01-a590-5bc85291987d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cef93fea-ead9-4af1-adbc-22847abcab05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63e8692c-2723-40a5-a646-5ba80a5f4e94",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086cfa40-a110-4967-97e2-06960ed487c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "108cb20a-8f67-4844-8817-c5db0ec290f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec61211d-f361-40d3-a09d-da3607409ed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "615ed497-a415-44d0-aa0d-76079720c319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff86cf1d-ab2d-4b24-952c-ab152b07d5a2",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43aa88f5-48b8-4d58-ab1b-c7c8c593904f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64ac6f00-c6fc-436c-bb40-8c19f964a274"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "122cac4e-e5fd-4848-a034-9b453a83d616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dd72707-3b7e-428e-937f-00efa54c67b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a71cb74e-da04-46fc-bcb7-e7f857720dae",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b043c48e-6d3a-459a-bd54-276c34b2d06b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1af23793-c560-4b08-8590-865999e407fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a497db9-8012-429f-9726-d72465de9a3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8cf3220-da72-40b6-b7e8-672aca974ee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8246096a-1eae-4d65-867b-30435cb05ea9",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a54fc0c-1f52-4bf9-9ccf-b7e862c483e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42c044db-2d7d-423d-8ad6-77378ac87f90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f64e7be-68ce-4a74-ada1-4d91861779a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7b1c8ec-0407-4919-bb84-77094cf9f442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb757d7-253e-4198-af0b-d76f9f767030",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db79b23f-2934-430c-a158-7924d61b3de9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9628578c-5959-4ee3-adf5-0973d343b0d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a3c917-def2-4924-a80a-647a29417b6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d921e35-2045-4e1b-8938-3d2bdcaab34d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b9676ed-a07f-4d98-be20-87450088742e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3446132a-b10b-4684-858f-e363fc8e7076",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ac67717-7ffc-4e9f-b63b-ebd4fae5d928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "442ca3f7-68b4-4143-aad1-6bfde754174f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de69e3a2-9bb6-45a0-ba35-03eea83f0778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "174fe37d-bf64-4cb6-b079-dcb03902210c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdcf81d2-9e8b-48d7-b008-a0006c14eaaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec444476-1b72-4bb2-a1e1-1f45cae8f670"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "390799af-f335-4e08-ad19-69fd075a3079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7db69c09-7eca-4aa6-b31a-0ca54165ed24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b388aa-bd2e-451f-b460-5c0b175a68fa",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6381c9c-ce78-4f53-99b2-65823185b128",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e5a1034-38bb-4972-9c63-d48e647c4230"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab58c42-7ca2-4825-962a-8c7043b430e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40aa7713-a36b-45e2-8fc9-6f8bb41e50f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d29f2a1-75e9-49be-96cc-97e0edea6583",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de1f065-fd34-4508-a72c-ebaefed3feb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5ce677e-a46a-4f5d-a355-fc15a979617f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "330288fc-5937-4e2b-992a-b664ef7415ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "083cefc3-68b0-4f30-90b7-10c810ab25af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "955161f7-68a6-41cf-9a9d-48a3406867fc",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187df28a-f0e3-471a-bac8-b84a9e0b23c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dbaa122-6e02-42e1-a57b-bffbdf06d989"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f44a2baa-9fd3-4942-ab63-9759d0ec79b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffdef3c6-0994-4b7a-b307-691b57952296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c582d3f7-541f-4754-9af6-2ab3f0917f30",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1af09c6-b55b-47de-8df2-bf28a3dedebd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78b051db-323a-4ca7-8b71-e7380ec14e8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a037560-c66e-4649-a23f-9e2ef536e040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "659e7d01-fc6d-4856-bac8-1e43f6e55906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0138206-e95c-4d4e-9df7-cf2eeb3cf554",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b422ba1-35f5-4cd3-93b5-8aeaea259512",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e654c51e-4bfa-4955-a664-df5f090df530"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0690d5e1-0457-45c5-b24b-8a1ccb14a613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0605b48b-1ff3-4106-a94e-b49aa4316714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95da3f48-8b4e-40ad-84b7-908f8b40e101",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "706d08ca-162a-4723-95d9-2dee83c92ded",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "801d82fc-00ab-4cad-96d3-fad7148937a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3240693f-5ea7-45a1-bccf-963f956c69b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41aab1f7-9899-476c-a29a-a2a6407c18ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a8ba2b2-40ac-4205-ad60-dab50b27ddd3",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a077cd43-3891-480e-9aea-dc90c5725773",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e168c708-b87d-4899-91f8-7f790b99cc47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "769fe8bb-c942-420f-9774-b5b189d210c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61c24bd6-8bd8-409f-b90d-c2aaf11b314f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb66f7a-a898-494e-bbce-d7e2d5fa8761",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b748ffba-9a19-4755-814b-277ae0421eb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1de237bb-d23e-42de-a333-4d5a51a1ca37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c88a2998-b64a-465f-8f3f-5c1f30594cd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da0c150d-b76c-460b-83d1-63d071a42b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa786d5-b28a-47d2-9e99-65f9b7c2226e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5934eeef-5e4e-4784-a763-f800dda636f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11ce7db5-31b7-4f65-8745-17c6eec941af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af1f77fa-ac5d-4c3c-b37b-b1e38cfd0af8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53eb52d0-60d4-4a44-a2f8-9d90b492acf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e740758-1e21-4d36-b4af-7981844fd39f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84463d2d-88d7-479a-8084-69812d824162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c99f4869-3f67-44ae-a304-8f83afb714ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14e9acc6-5139-4f44-8b95-5f6510d54ab7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b000d547-4b0c-4c92-a3c9-589256547ce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d3b294b-38bc-4142-a40b-9599bc28aa82",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b53789-57f4-4a96-bc33-e240ff7786b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d141782-ac29-4bdd-a492-46ee4465727c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e83d6a-bc00-4ab4-bebc-54403d804218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90891827-d425-4cb6-b838-257b56463d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6282e5d0-a258-4526-ab59-56dc73e71eb1",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83041e9b-bc86-4001-9d02-bcb9e3135c59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89981357-ed66-4cce-ad8c-24ecaffdcab5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc4b4b9-0f93-4312-ab44-db45aa11bce6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7258d3fb-93b3-4d29-a572-aba7ebc916a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d6977ee-8487-47e9-9937-13af48853024",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bddad6f-0727-41fa-b639-6f0923f4b3db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf3010ea-8bf6-4ebe-9dc7-f4c10d4254e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf40f93-b757-44ab-9840-edf5c612e7f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "278e6546-be7e-4be9-8b44-1eeb567881d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae4a97f0-335f-4fd1-b7b8-0c8508578ce6",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825c066f-6769-4164-bab6-1e827432a467",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b870d250-8bff-4211-8d41-feddf0d87141"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4806c6-b835-440f-b66d-c26dce13a36d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14fb51b4-9d3c-4454-b1cb-12d9bbe8bd5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b01e597-ef27-4464-b8c8-b0d52c9eaa8d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b57263-c3fc-48db-a345-e5c9f7f04e85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82264159-457c-439c-81b5-7da9cf6f72bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f080c6c-a660-422e-94c8-caed1946d6f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16b47823-837e-4a31-aabd-01836e110d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a12803-d42f-418c-8f0b-d5dc4286e289",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b805a4-7aef-4924-b342-81783174eaa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e36a300-ca3b-46a5-9c22-24fc8377effa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a98e29-a5c4-4e39-b282-a87addfd038a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d355362c-a7b6-4f0e-85fa-98630d3bd4ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403b55e1-ec91-45ec-a8e4-1c36327f2e37",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe559035-ea66-484c-ab84-0d3dd37fc583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5249a2a-d380-414e-9411-8ca2f2466aa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "340bfea0-46c1-49ad-9417-83fd52d5916f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cabba0e-8cdb-465e-baee-bc4029deedb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34fd957e-8fb5-4519-ab00-ae44be06dcd7",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c87d6165-e106-4c54-9532-c8485757e308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44f1426e-d1b1-4b96-81a1-cad29b6c8fed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c7e46c-7238-44fc-981d-9da2080ab654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2df4f4c-e6b6-4857-b39a-50a11279c35b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e787350b-90f7-40cd-bc6a-8c52c0ad173b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b155ff4e-57d9-49c3-ab62-0ad9824e4532",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1996e93-e581-4682-9bdc-b4364c4e43fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d76473a5-6192-478f-bcaf-ddc0fb5ac144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74514244-1377-4109-b3be-3e29d30f638f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89158f90-b8c6-437b-b008-208fe8af42a1",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f32de27-0fb9-4bfc-bb9c-1083410d8a1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bb97bd2-6877-4ff8-ab5e-7e1bf17601c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e961ad-a88e-4c90-bd00-264b56f3a08d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ccb9818-2ae6-4ad4-bd20-45d0516a845d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af8f1ac-ebe6-4b29-859f-231cdfdfc291",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d58a736-ba0a-454a-bace-2f45d8a845d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce2fd3a7-9cc7-4f3e-8719-fb2a7cd9950b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d918331e-74ab-4547-8d33-f509de6f175e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "648d050f-c72c-44a4-8967-23dd30249953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "300c048d-2b5d-40f9-90df-1359c256d436",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea990bf-69be-4ce8-9d74-b65f9ddd9720",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "814bb409-a052-43a5-ba93-aa8627d169e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cde40b4-2d05-4897-90e0-5015326af39a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1606ae75-7757-41b8-bff1-337ce64d57a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe9250b-d2b6-4852-8dee-8a06af524c2b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d9ee60f-1f6b-4d5c-a436-38370ba7801b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "715f53f5-84a5-4beb-96ff-5ec0a4bfbc54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f38b60-9b5a-41f6-85e7-56719e9731f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25316a61-9a72-431a-9363-28cea483a775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10656adc-6f0e-425a-9f5c-ffe219952053",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb16d42-2864-40ac-a711-52f0bc4de903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef5d6980-4692-4009-967e-5b22934eabbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a258495-e68c-438a-9790-93697b85d480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e68fb11-db91-4cf6-8c21-45a012caef36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ebe4190-d613-419a-afef-83573392e187",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b747f7-eb9d-494a-9f57-4739725d237e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b82214a2-b328-49b0-8e04-dfc82119ac6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a36389a2-1db2-4f2b-977b-f8b4be98c353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c25eb8a6-347e-4dc2-8e14-79600ad59662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "385b00c5-bbea-4b68-a5b4-58fd28802c58",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a9feaa9-f4ed-48a8-9d2e-1979a334ce4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b69000be-b2e8-456c-b240-3afcfeb8d261"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2510ed23-d2ea-4d92-bd66-fa1c1724422c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "368d54f7-a822-4f3d-8651-2acfcc682780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789811d5-594c-4334-ae7b-20a20de39ae8",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3207db23-54ef-4559-9527-c25df6f2fd20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df6dabc4-a176-4ef1-a1aa-418e14ca91a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e188d95-863d-4c8a-aac2-c0ca03151998",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fc309ee-080e-4006-b32e-4cdda0c1357c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689ef5cb-1eb6-4a0f-954f-3893eace84ca",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14754886-d61d-44e1-be60-28616a8c8eea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bca57b17-e923-4a31-88c1-2ae6d85ced88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e41855c-84a3-42d2-b263-0ef28963faa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48ffbaf4-bbb9-42d5-b373-8413bc703d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa10c48-0d01-4212-ab12-a29eda3cefe1",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e83c53a-e76b-4191-8d1c-0028cc90c7be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19b76dfa-a7b0-40a4-9900-aa58bfb22b2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "873a2a53-fb58-40ac-b2ea-458e62b11ca7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be2ee678-2307-4870-90f5-ad9c0cca274e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d077d0be-dff4-424c-89c5-f1fbac3a4492",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c4a20ec-1e9f-4592-9612-c9c5c7fa17a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2bc93b7-7b5a-4837-9b09-72d0844346e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd6c5bc-f964-4718-ac98-48a01535b56a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eeef24b-e1ad-48eb-9e83-acb9421d222f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbab9a32-716b-49e6-8dc7-cba2e6a9b66d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9174eae-0bd0-4516-9b5d-1aff0099125f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0645987d-c9e5-42f6-ac60-eb32f51971e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c62430e-071e-4d95-b38b-1a4721bacf4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6ff754c-5755-41d6-ac98-481aa04d82e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8ccb431-9bad-4ff0-9c6c-896ff0bccfc1",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412bbd3a-7af4-4cce-8595-fa65925843f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b609e3e3-7cf4-4f0b-97d1-900384f623e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b272347-5e0a-4eae-ad6f-60989b728707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6b7fab3-35db-4e0c-91c0-dd887fb61732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba9574d-7513-4837-9909-96d15cbeefe5",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a22e63e-fc60-41b7-8955-0cf06d881cf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "800038d3-3f3d-4339-9b30-26e6bb15c5fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "858b9ffa-4766-427e-9b19-83a78a1fcf8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a83dca99-796c-4783-93e0-5ddd7f71ea63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f73c1fd-868b-4675-982a-c237b06baab5",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0169df74-9136-4075-b311-4fa4bca6fee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d08ea8-9cb6-437a-9138-cd86d8d12cb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0ae08ed-afd1-4790-92d6-e3c5aad23d26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d92ff760-a445-412b-9ed4-61d299bf89e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b70dd53-871f-45b2-a014-1546342c5d3a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "584422e5-00ef-470b-8c2d-1bcfd854d221",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32d35ba6-4faa-4dd4-9d35-464771600573"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b429326a-b079-4029-aee7-0b79ba0a965d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e709116-1a5c-41f4-a580-7ee1409d3ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "321c7065-5ea9-4567-b20d-b47e479f23ff",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fbfa784-4719-4dce-bf3c-852617e4db80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a200ea6f-e1e5-4319-ba18-991945528ce1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c527a4cc-efac-4af0-b001-4e00ff942d3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e82961bf-440c-42e9-8ecf-7e43712a12b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "547528ae-0db3-43c6-88b8-775ba12d0b08",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4fda456-d493-4120-a742-5e45c85af224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35e46e4c-4c88-4702-9722-86bda10a3627"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1fa3a56-bced-430e-8a79-c865454bb9d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69f92c64-97ce-4a47-aace-e3b7162e0e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbdfa870-4f8a-4f2d-b0d5-cdd623a8ef00",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "177ebea9-3688-4ad6-a59e-83c7c5208aff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "028178a2-73de-4ee0-912c-b869bd9f7639"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc7b8315-9dd1-4144-8d86-c111d4df690d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d849ebba-45f2-4778-8b10-2642c6f0da62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e00281b2-dcf8-4aca-b628-374deb67d87f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7d9f2d-589f-4af1-a95d-adda396b0704",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38ac04a3-c669-40c1-a63c-4d8d54ebe27a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a3a093-4f0c-4a40-92b2-a5dbffd9e734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1e826f2-6289-4cca-b1a6-287085de76f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dfd3890-b5b1-418f-8362-a5abc0479226",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077cc684-29e2-42e9-9af7-12c99c0754a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f73a849-50ef-47e4-a638-99a6bda74684"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37711dc3-2b75-4611-b81c-ee5e78c7ee1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd3181c6-e5c2-4232-a21d-f1cc197cbb96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a662893a-c1d3-4327-bcf8-2a76d0cd3576",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "221c16d8-4f1b-49bd-9e23-ceff31b6e82c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0c9c01f-aef7-4030-ad93-5526cad0f377"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "591024c9-9b25-48e4-bc0b-aceea2349fbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9bf41e3-e3fa-46a5-9aae-38196a72a808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc80ba12-0d7d-4281-adf3-3fe6c31e1e7d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "583bb876-cc35-42d0-b36e-d7ce62e6788f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13a93de6-4868-422c-8e9d-7d82ea42676c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dfb9878-af6f-4a16-a862-f8c3bc15ecca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70b25a77-7c59-40bb-af49-77ffcb329a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5fb49c-9225-4932-962b-ab8eeef6ae26",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4ec99a-b20e-47b5-aa0c-9610d76ebb7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8601ad9d-4122-40f4-8d38-aff592ba406c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6259f10-be5e-452b-b4c6-de7d3ab44df6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eed2f48-cda0-4692-92aa-590ba408dc24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f0a97c-e9af-4d2e-ac32-4adcc6b30c59",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe1575df-9d5a-4365-9985-59043598335d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7d6b421-b9ec-45b2-b3fa-baa8a5e79963"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff38c71-a4b7-4a35-8e15-4305c99b553b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79010e42-f5d4-43c7-86cb-044849ef32ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f0cc93-11ed-4491-b1b8-1c590e3bb2ca",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "916fd1b7-8428-427e-8c95-e4d0a4f8b0f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4931eff1-5082-4f6b-867f-e11dcfb4601d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ff168b-94b9-4ac7-b66e-0973cd5c9438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04d340f7-b698-4fed-affe-e22c2887df55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d33c10cd-2223-4f0e-959f-23726730dc09",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc757a97-632a-470b-b511-330adddafbe9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b8a0646-91f7-4a05-9f3d-1c39e2089576"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c45eaa4-1950-4816-8536-1e2bf84874b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcc36faa-ea24-49db-b60a-c44c8dfd4b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7666481-9c9e-404e-9510-173d03a4cfe4",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0796fb2a-b370-491f-8276-5024f84cb519",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "362e91d5-4b21-4d49-b521-c6fc1bda8fde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5879ef66-eb91-43c1-a3c4-ee3174d6dc3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b66e403-0998-401c-994b-0faaff26c3f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a02ae4c-17d4-4761-b050-97b96ace797f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd196f99-e67f-4a9b-9873-94e16d75727e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d958fa5e-2d9b-4725-be30-cf3e2b83c080"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80919e35-7f15-4aa4-b532-4be5f3736fdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77490117-0886-47b7-9e37-a364e1f44af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27763594-5a7e-49eb-8f9e-57b5934fd967",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3094562-3b42-44dc-979f-f4b8c0b3280d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "515ae538-d2e2-49c6-b2d3-03d2addcfb94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "690cbcec-692b-436a-b937-a6aaa3346a0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b2c2f78-0672-4740-b18f-10849c06f9b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f543ba-3819-4951-b449-998eb5cc89b1",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "badbc78f-97f3-4bbb-9ef8-5e9d2f92f4d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7653230c-0ba3-4bbd-9d2a-c52e8f5edabd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab12993d-2edf-4a7f-9bef-bf26bd799883",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70d4c6fa-689d-4007-917c-f305042067ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74ba15b6-143b-4ce5-be4b-a3d074b52be9",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ad6a84-977c-46ef-ba25-e3a2d593d86e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1578837f-fa78-48c8-8873-6dfac6fabf58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26a8910e-21ea-4e30-be6f-4ade9edc30af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a360b8f-8ddb-4cf9-83c2-f307a203ff30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d5472ca-c26a-4595-9577-37fcb41debe4",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb18cb5-894e-4ffd-95c3-a7cd3e47de0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff76fd4c-1c4f-4551-92fc-06337fda7e57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5958ad5-72f5-44b0-812a-eeb97f427684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32618a31-6bcf-43d5-8fd5-23c1541b067e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a1ea622-7143-478a-a026-f362eb0071a2",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f2b62d-46be-43fa-90ca-6dabe6af1d42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65682297-f2a3-4782-a050-3f1aeefd7079"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd98d117-c403-47bd-95ad-7110e6687508",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f4ff665-2bae-4fe2-91e1-64b7a5c5361d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fae4df8-af43-428e-ab12-1197d5a3b3ea",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "849990f0-cfb2-45cd-a0da-0ddd03386a91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3afaa0e6-8d6f-40c4-bc98-ceabdd4046ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e63e9ae-52af-4343-a084-27de0b81fa17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b931984-00a9-4438-a321-15a71d0719f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b0119c-eec2-4a43-b3e4-46dcbc11fe5e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a77f0f-964d-4686-bdb9-5d23a21667d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7e1e7ec-61d6-420b-b479-caf06c68a0d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdbca78c-3d08-470c-a504-05f125657ef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b4dd872-c434-4b19-bc5a-f71d9d828498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e7b5e9-f546-4272-8044-df1379ba0245",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aade28c3-d41a-4de0-bca7-c1bb878362e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5c021a6-d263-49a1-85cb-a736cb494537"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c842a00f-a78e-4ed1-9350-36935349801e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba1bfb37-0cb9-46b5-8c33-8faad29ec9fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44012f5e-1d3f-433f-bdf4-7e3f517e5301",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef5c5c8-244f-44ba-a839-49bc51753043",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b392e129-a5ed-43a4-8695-32415f514824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "592ebbdb-f048-4a28-a0f7-cc1ce5517758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f97bbde9-90c2-40b6-b779-aee2bd57dc5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a31c82f-ba7d-47de-8514-234b6573b193",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c24d51-86dc-4331-9331-f32ebcd50612",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66ea4543-6be1-4fd4-9a66-2dd497cd61ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "322271e2-bf9e-4e8f-8ac5-fc6af3b22546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e66d9188-4141-44f4-980d-556fc050d4d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f582a3fc-baf0-48f6-8acb-97f98a145833",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b7029cd-63b5-4149-9306-37a3e72eb3d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "662a32e1-08f1-4910-a266-2096af4538b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f8f6123-fddd-4334-9c7e-cea7f81add1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68fa98b0-4227-43fa-b60c-2d55803f302f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1db8ab95-151f-4bfc-b9c9-04f36395281d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e0aaa8-0b51-4892-a3d1-cdf5d66563a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "400d8d41-2ed6-46fe-94e3-431a3c48de6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86baa007-e49c-4aeb-ab55-3072fb69cc12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6a53f96-4c37-4beb-bed4-008cab08ab9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b535e80-510a-4975-b9f7-8ba4e6ace284",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51db2f22-7297-4b41-9362-3d9c9fd26650",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a42dccb3-99dc-463e-9ce8-2e611b1e155e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c360ee8-c34c-4ca4-8bdb-37403ae08f0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08738c6e-7065-4055-8f12-69740c87268f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aa29ebf-f637-44ef-bd90-c62a82c19dfe",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c687f47f-ae0e-4fc6-b094-3d3a25e570e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94b8e981-29f0-49ea-8796-3d55a6d32d46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d31bfab-c7d0-4621-97a7-9566677ed76c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7920fcce-3ae3-4449-86de-439bf473b405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "402e01f6-cea9-4539-b6e6-b8ea828fad8b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b1845f8-c5ca-4a32-8b81-f104dca8a5c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1255dfb0-7f87-4024-9456-0ae6232a34f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e00e93-5554-4ce2-a031-bac829c5b16d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a739ade-31df-4f38-a386-8e11bd87fb12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b5dd07-c461-40c3-b267-a32e7f7a9f4a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7848b76f-8135-44e2-852b-aca3a3f59dc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b005b5ac-1488-4225-ba87-4e175a6a4fd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9693df9b-59c9-409c-9e91-658f57a2ebbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de4019b5-179b-4c76-ac09-ab0b806093f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df292221-ef1e-4af0-91eb-b4a27c0b5133",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f3c42c-8511-4666-8ca5-d07cdff729de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c218245b-7e82-42e5-8528-d46c0a767180"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a05d189-0af7-451d-b785-918fd93c5ea1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "375af1a2-7fb6-4b18-900a-c75da0950c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c325999-9be6-4193-92c2-e721ab6f9c20",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cdf05ed-3a25-4e82-a154-c7eb90b25b8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f52d72c-dd95-4599-9c10-bbe5355ea1b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "291e808f-c0b0-49f7-9025-38541478d7ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12248c15-12be-4883-916c-4c9c8127876d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6aba4e6-b00b-41c3-9140-e7702652ffd2",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "417a24f9-31d9-49fa-8f15-176484288020",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a777d1e1-5bc2-4285-8ea4-122d91166178"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e4d442-f86a-496a-bbbd-c732ddaa535a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b817a77d-4ac7-427d-90e3-1ad8f162433e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "274130b6-b177-4701-b4db-f1abcc56750f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d19add-fcae-4a24-ae4f-4df7ffc2be79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ba02514-73cd-4544-a64a-baa574fbaee8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e935b4-c74a-4080-84ef-b964a616a99f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0847ad2-55d2-4942-8898-bff35a79ebd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b433acad-466d-46a0-ab92-e14668e0b00c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca38698-a98c-428f-b895-078a8f88efe8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15d2238b-0a6e-4658-b18a-c15fb124b765"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d80870b2-c6a2-4960-8970-b42e286f7f62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "682690b9-4e5d-4b11-a9fd-a3fd0e0439a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ec9809-9cb1-4402-a64c-14dc9bd89bc2",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f64452c8-4ea1-4130-9520-1d7c581055d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f14b5fc0-093b-471d-b5ab-faddf3131b59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4382044f-2305-4cfa-8948-0a798b7a5d94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84669ea5-ee9c-42f6-b7ca-0ee7045c8162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af35f1c-0d7a-45ad-ba03-0a6d08d0a94d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af9d90cb-e0a4-48c6-82fd-ce2dc32e8af1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b302d311-a32b-413b-b95e-252a989e8fde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5bfd93f-1ff1-4160-a1d3-8a80ed571c3a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3151e1c5-3aa7-403e-9d20-24e0a5f4b22c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c9624fd-443d-4303-8788-18f05f2c472e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0148ca3-ca16-4aee-83de-124ba085504f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e91374b-77b9-433b-86a5-92f6950e505c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff2762c7-6ddb-47e6-97f8-f73a1400b89e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0894ae53-8444-4a9a-b607-c351627180b3"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b7d1c9c-fa86-4a9d-9a55-e60e5410766b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5c170e9-85c7-411c-b7da-9efa3da83724"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5eecf2cd-7a09-4dd8-8516-de6ef52bb720",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3f3774a8-a0db-4ff2-8f6b-74fede6f83cd"
                    }
                  }
                ]
              },
              {
                "id": "a4b34a43-af5e-4152-a1aa-9dfaf158fab4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c3c4f8cd-a89b-40fe-b422-bb081b799d0a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c49c593-2096-469b-b2c4-ab5fd9ac884f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3412a30d-de05-413f-81d2-6b6772a5a2ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a30e9fee-7694-4d5e-b8c9-6f67e37200cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0a195097-101a-4f51-b60a-cb1192eafec4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a6b9fa7-0190-48e9-98e1-27631bde2102",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e75a086-b09b-4d01-9a85-c558b15ac1d3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a23ea708-538a-43e1-8f4a-7e3fb3c9171e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5389fc16-09f0-4298-ab54-ba3f6a234672"
                    }
                  }
                ]
              },
              {
                "id": "0e6eb1f7-7956-4593-9d36-0e5cf186aa19",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6f5cbfe8-b8a1-43f1-82e0-c1448dd50e89",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bcd0fa4-2d12-4604-9178-4d3346a95192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "60891486-02cc-4747-a312-0accf874a9a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69365e4-0b4a-4fc7-bf1f-d3e5627d0180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60eb9375-d5bb-45ce-b42f-fe138fc8ef9a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "81923b8a-72d6-41a1-b628-160d18c298f0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d48a5ca5-ed5c-4913-970f-aaebfdca3dd9",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a17fd969-bf9c-4e56-979b-31d8eec6aeea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7e9d40e7-12b6-4a2d-9d66-b3f4c1a735d1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca02a328-2c87-4f52-a835-4b8c77affdeb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "304ab2e7-26cb-4867-b131-54d0b1d1af74"
                    }
                  }
                ]
              },
              {
                "id": "07955cea-15d1-48d9-a91a-24efc30ec65f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "93306a93-efa0-4f40-9598-8ab2325c9ef0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "40ee53bf-a89c-4d04-b5fb-55e938b848ba"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2efbc0f-0475-4e4f-a99d-9a6516c5873b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7991876d-93c0-4742-a307-37ae3c8a9986"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1e61abc8-64e2-4d21-bba2-c40aec8e2091",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "11e71890-c73b-45ed-b72b-f4b97853e6e3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6018db21-b4f6-40ad-a770-f7390baef204",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f5b4d078-02de-4cc7-85a0-65ee78abf5d6"
            }
          }
        ]
      },
      {
        "id": "9e6f653f-e07e-4599-ade4-4dd2de20fe0c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "33132924-7f13-4a2b-8cea-15d58da9f83d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eb84be7b-4089-476b-a86b-6233c8fed183",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b646e172-d2b9-4937-8f55-c837f2a58ef1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da626e4e-321f-4ed4-8ad2-43da164731b6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d2075252-de3e-486e-8257-9c19664fa0e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d974b14b-153b-4c98-8001-df33a28f37ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c6f3b6a3-e64a-4147-8033-dd5d7509f0a1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e0b0b43-5a1b-4841-ab13-64beb444105d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "06cf9c90-38a1-46dc-9783-aceb47dcdde0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "01765c31-b725-4505-bfb0-1fe8cf80414c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0338a883-5c83-429a-ac7a-356e84af11e6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8fe9dff1-63a8-44ad-97cb-b9989ec11d8b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a8c9ddcb-9a47-4684-bd9e-49e334d88944"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3f9ec32b-2bd4-4bab-bf81-a40c78faf4c2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e6e9059a-b77f-44e0-8dba-54c0e5e76eb9"
            }
          }
        ]
      },
      {
        "id": "9e06e2ea-8a70-4eae-9623-029354c09298",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d1d78539-e833-40d7-8be2-e607b763e216",
            "name": "Negative Testing",
            "item": [
              {
                "id": "af1e0ac2-0ba5-4ebd-818a-0137657e96d2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6d308b4d-f49f-4d35-94d4-7744c4bfe8d1",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb71e5f4-cf86-40a6-afdb-22926bdc1779",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a600737-c719-4fc3-aa97-fd1699000c9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "687c84e9-f1c3-4611-9b19-993349fb7805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b8bcf8c4-0111-42b3-87a5-0934f822ae55"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb8bd893-e926-4dbc-b8ac-e53667bd756c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26682cfd-5f1c-4ba1-8dbd-2b9018b7aad6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "264b5607-3327-43bd-8aec-8968013a50ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9a3a1bb-8e9f-4e2c-b7fc-484017319ab5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2dacf76-6b27-418e-b2d2-d246ccc94d2f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ba553c7a-8169-4f23-936e-607a394d42b7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c548b36-b341-4549-9770-c82d95e1dfe1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "08b29e04-9639-45ad-925e-a43de486b22b"
            }
          }
        ]
      },
      {
        "id": "40d195d8-b39a-40ba-b1f8-2e2190cd566a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "4d9ff06a-7d63-4496-bae5-ff8ff8ddc13a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bc2a50dc-40cf-4e68-886b-0ea208d81954",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e307558a-4244-4773-8cff-587d4ea5ef45",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b47635a-19e2-476c-b1a6-f016e143e505",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b61665b-21e5-433b-861d-cb56e4edaa69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c29dd26-7414-426c-90a3-95b56f22883c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c9d27238-1e00-4fc4-a273-ba2cc7393799"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "857fc46f-a655-4f54-b7f1-80c23124186f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cbfcbcfc-6a4c-4935-bf27-046c580b3066"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4fce553-a655-458a-b618-70a7e893149c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c66fbcf7-85c1-4a33-ae7e-9550b03a2a50"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "93e85c6b-f4db-4f6a-b2e2-71d54dc39e03",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "54729526-4d00-404e-8705-806210353f00"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8b00f1d6-d13d-4d79-9456-1f11217b0470",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "85851922-be0b-48b7-ab73-a8b58d18c60c"
            }
          }
        ]
      },
      {
        "id": "3698a0c6-ad7b-4746-9ba3-5330f0076650",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cb74c21b-2c86-48e2-a286-16b048ed92e8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5102831c-07e8-4c73-b161-ccc14463285c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e12e07e4-a3a2-4eda-b959-17654801c3cb",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0acc1862-ab84-46a4-9936-e81ebb0380f1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "10c04353-df60-4b77-a5dd-e79717f15cb3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 324.7676056338028,
      "responseMin": 10,
      "responseMax": 7960,
      "responseSd": 913.1891506506736,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1694306089673,
      "completed": 1694306194149
    },
    "executions": [
      {
        "id": "d8031f49-2af0-4124-8146-b51e09aaf2a7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4372e82d-9298-4710-8782-575928024804",
          "httpRequestId": "cc7618a9-6a0f-4e70-966b-29d40426c4c3"
        },
        "item": {
          "id": "d8031f49-2af0-4124-8146-b51e09aaf2a7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "bd0366ea-3227-41bb-8144-f93132015db3",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 0
        }
      },
      {
        "id": "e6f62e7b-e695-4738-abd8-3b71cdfee1e1",
        "cursor": {
          "ref": "bd0202c4-cb7c-46f8-a0a8-81bbe9e1170e",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c7a8be9d-6651-4d52-ac81-6c3747662523"
        },
        "item": {
          "id": "e6f62e7b-e695-4738-abd8-3b71cdfee1e1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "43f2e5df-a576-4b9c-af63-ea400e6f076a",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "6df266e0-21ed-4f2f-bf02-5a594d7387f0",
        "cursor": {
          "ref": "e1fe97f2-3571-44d1-9b6d-1727b00b3e55",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "07558647-a199-4e78-8d8b-e56d1f0229c5"
        },
        "item": {
          "id": "6df266e0-21ed-4f2f-bf02-5a594d7387f0",
          "name": "did_json"
        },
        "response": {
          "id": "59ef1437-fd04-4fec-bc3a-e4fc68dc37d9",
          "status": "OK",
          "code": 200,
          "responseTime": 1668,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "288787c6-c828-4341-b150-e7b1283000dc",
        "cursor": {
          "ref": "accbfacd-d5b5-449c-bf17-366076774cee",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1a40f101-af8e-422a-b43c-9bac8bebfcd7"
        },
        "item": {
          "id": "288787c6-c828-4341-b150-e7b1283000dc",
          "name": "did:invalid"
        },
        "response": {
          "id": "3a525c15-1ed5-439f-884a-fee741c0b602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "288787c6-c828-4341-b150-e7b1283000dc",
        "cursor": {
          "ref": "accbfacd-d5b5-449c-bf17-366076774cee",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1a40f101-af8e-422a-b43c-9bac8bebfcd7"
        },
        "item": {
          "id": "288787c6-c828-4341-b150-e7b1283000dc",
          "name": "did:invalid"
        },
        "response": {
          "id": "3a525c15-1ed5-439f-884a-fee741c0b602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07b560f5-9534-4bae-ad8d-6a48a18410f2",
        "cursor": {
          "ref": "2a5cb03e-ce97-44e2-aab9-8627318b1526",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "0cd07912-31b8-48cf-a3d7-bfb97f361e4d"
        },
        "item": {
          "id": "07b560f5-9534-4bae-ad8d-6a48a18410f2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "5ecde64e-d63c-451c-8a1e-84e716d43bfa",
          "status": "Not Found",
          "code": 404,
          "responseTime": 340,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c322c2-3e2a-4412-9c1c-d20a35106890",
        "cursor": {
          "ref": "102b2c48-0623-4f9b-b812-10c3234bd25e",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "bb14cf9c-187b-43f0-84fc-41da9d1fdb72"
        },
        "item": {
          "id": "a0c322c2-3e2a-4412-9c1c-d20a35106890",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "3c2a0d40-ee3d-4957-b8a3-4ad37cbd82cd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 388,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec529940-0f22-46c3-8e6f-5e3d5f9c3d65",
        "cursor": {
          "ref": "13e566c5-542d-4a66-9294-0c5518df1371",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "cc013d2a-91a0-41b0-8111-5aa8da7d285f"
        },
        "item": {
          "id": "ec529940-0f22-46c3-8e6f-5e3d5f9c3d65",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3b2349c4-fdba-4a47-9b9c-6e894f4585b6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe64cee1-1e37-4c49-a4b0-c6fb634f0e2f",
        "cursor": {
          "ref": "69960e0e-0f77-411b-8712-219b61bef1a2",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "02ef3a8e-24b2-462b-b793-b817c7d8ae56"
        },
        "item": {
          "id": "fe64cee1-1e37-4c49-a4b0-c6fb634f0e2f",
          "name": "identifiers"
        },
        "response": {
          "id": "27751c99-a414-4dab-95e4-074f4e711281",
          "status": "OK",
          "code": 200,
          "responseTime": 1450,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d615e29-4198-496a-9f49-329747a88ddd",
        "cursor": {
          "ref": "1dc9bbdd-0e6d-430e-a0e8-3b1fcba84553",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b9a05f9e-68c0-4c27-8aa3-044337b681c5"
        },
        "item": {
          "id": "8d615e29-4198-496a-9f49-329747a88ddd",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "52bfc23d-b84d-4310-bb89-c8ebfe33a97d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca938a9-e600-4e95-899c-f255bb1a438e",
        "cursor": {
          "ref": "ed3ee7d8-dea3-4f2a-ba94-2a4dd53dd8c0",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1efb4f44-9131-48e0-bab5-5a104df37f4f"
        },
        "item": {
          "id": "4ca938a9-e600-4e95-899c-f255bb1a438e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "cb91f75c-34b7-4311-a0b2-f2a455cec04d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0911776c-3fc1-4b0d-a580-f2aeb2e52e85",
        "cursor": {
          "ref": "7c35a2c7-512d-41dd-8842-7f7a76a18fd8",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "32b23710-afd6-4027-8ab2-ad3a9fac8a35"
        },
        "item": {
          "id": "0911776c-3fc1-4b0d-a580-f2aeb2e52e85",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6815af50-fa99-4004-a0c1-09232baa32b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5928b62e-b15b-47f5-8d43-34659e3c5f21",
        "cursor": {
          "ref": "397bc326-ee86-427f-8fc6-91ac9d9b1806",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b7bbfd12-6a86-4442-aea6-1a654dbfcaaa"
        },
        "item": {
          "id": "5928b62e-b15b-47f5-8d43-34659e3c5f21",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "83e4c3be-0702-444c-916f-8810a0436d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f555b85-ba97-4ebe-8190-38433d7c777e",
        "cursor": {
          "ref": "fbb93625-543f-4da9-ba3d-315699a9b8b9",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8d9d521c-001c-4636-992f-6bdf081c3d4d"
        },
        "item": {
          "id": "6f555b85-ba97-4ebe-8190-38433d7c777e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7dc646a4-1f1b-440f-9f07-528238e5b43c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b97ae1-0d8f-42bc-8d44-0d37bd039a42",
        "cursor": {
          "ref": "1d1b4626-55b4-4f75-aefc-4c9ab611ad19",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c77cc930-d0d1-4232-9b11-5c1d3b76c750"
        },
        "item": {
          "id": "80b97ae1-0d8f-42bc-8d44-0d37bd039a42",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f84d4f10-5340-4288-9631-460601f05c2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c17cd0d-ce8f-476f-bfa2-93fa872879c2",
        "cursor": {
          "ref": "c282e2ce-1440-4d4a-a48e-558cf690e49f",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a27140db-83a0-4e69-9844-0b020bdb6c19"
        },
        "item": {
          "id": "9c17cd0d-ce8f-476f-bfa2-93fa872879c2",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6295cc92-b5f4-4c18-bc3d-1965eb7c5284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe3a6d5-e01e-4873-8c78-5ce4004acf7f",
        "cursor": {
          "ref": "a47a31b9-7a18-4c76-9bce-6e991eb1bb8a",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "914e371b-b781-4e6f-819c-68f2189f7352"
        },
        "item": {
          "id": "5fe3a6d5-e01e-4873-8c78-5ce4004acf7f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2c40ce67-aa9c-4a11-8d90-87e863fdd613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c770f2-29eb-4aa0-b434-104ece7b1ac9",
        "cursor": {
          "ref": "cf42d83e-bed7-4660-bad2-76da24f3149a",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "63d8592b-e125-48ef-8224-4ec849ca373c"
        },
        "item": {
          "id": "f6c770f2-29eb-4aa0-b434-104ece7b1ac9",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "417a0903-dbde-4777-b7a9-09db7f7f3bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cada42d-822c-4924-b512-78805e4e0b6e",
        "cursor": {
          "ref": "f377c40d-716f-4227-9610-adfa98ac1584",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9f2bb0b3-abb6-485a-98da-a74db8dfafe3"
        },
        "item": {
          "id": "8cada42d-822c-4924-b512-78805e4e0b6e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "454f36cc-7dce-454a-951e-904bb37893fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076cc24f-6db4-4286-8676-70ddadb8f1d7",
        "cursor": {
          "ref": "efa232f7-937f-4cf4-9fde-82721bcbb853",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3a0b6f67-6188-4dcd-9785-25c4b2b9479b"
        },
        "item": {
          "id": "076cc24f-6db4-4286-8676-70ddadb8f1d7",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c52b0ff6-afd9-4d46-8e62-61573ded6bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0892817d-227e-43fe-9649-ab370208ea36",
        "cursor": {
          "ref": "8a029518-ec77-4a80-aaba-28a37c1dc0dd",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c37260ba-1477-4861-b1ec-57f58d04e462"
        },
        "item": {
          "id": "0892817d-227e-43fe-9649-ab370208ea36",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "4d3920a5-1850-4406-b8f9-305563630c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45887629-44a8-42cc-9dc1-7613caf5af46",
        "cursor": {
          "ref": "5110e943-a933-441d-be49-21506270e0d6",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "439cc5e5-a35a-4d33-9b7e-b2f967fce5b2"
        },
        "item": {
          "id": "45887629-44a8-42cc-9dc1-7613caf5af46",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "2bbbd47a-d60e-4018-a467-5a0dcc0a8ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e69b2924-727c-4d35-8f4c-77726097871d",
        "cursor": {
          "ref": "8a16024a-d476-4ab4-baec-88e65bd98f2e",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6d59dd86-bee1-4f17-a864-c90b757864c3"
        },
        "item": {
          "id": "e69b2924-727c-4d35-8f4c-77726097871d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "de5f8eb9-3e53-42d3-a9ea-ed6a3d313851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b148006f-f0bd-47d3-b1bc-af27695aeb6a",
        "cursor": {
          "ref": "fe6da709-eba6-4f6d-b4b8-cbae5bd5c803",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "18350c69-63ea-47f5-80f9-7a51a2d7102e"
        },
        "item": {
          "id": "b148006f-f0bd-47d3-b1bc-af27695aeb6a",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "cf094967-9a66-4a8c-a731-200d8fc691a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88278141-6683-4516-adef-67f45c8934c1",
        "cursor": {
          "ref": "efbb01a9-9951-4de3-8dfa-9a1721aff724",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "68840d26-3c8f-4f5f-b9f7-cc6f1b57a21d"
        },
        "item": {
          "id": "88278141-6683-4516-adef-67f45c8934c1",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "0c531e64-bcbd-4da2-a085-4b40e8bdf9a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1cf68c-bc61-40e2-8f48-b5c3fb828190",
        "cursor": {
          "ref": "edd92c1a-feb5-4a08-8515-e0b388bcaf24",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "221c8c50-a881-42c9-8aae-cc1a8533e265"
        },
        "item": {
          "id": "1a1cf68c-bc61-40e2-8f48-b5c3fb828190",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "56659069-dd05-45b0-839b-507fd940693d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e2c89a-6d1b-4665-9ead-a6497d8bcf82",
        "cursor": {
          "ref": "0d7650e6-753d-4c28-8bbe-4d5f3f6f0204",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "cfb72709-4c3d-44ce-9c8f-786a56b5f4b6"
        },
        "item": {
          "id": "c7e2c89a-6d1b-4665-9ead-a6497d8bcf82",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1c8947fb-c477-49e9-9908-8e1175fd1bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c2d0442-2542-45c0-9769-cdd9f05e2de7",
        "cursor": {
          "ref": "65ec9174-5259-4af4-a1ee-854abce0b2c2",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "9e89318c-2907-4373-8e8b-353ec7d96af8"
        },
        "item": {
          "id": "5c2d0442-2542-45c0-9769-cdd9f05e2de7",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8126a22f-c626-4ff5-987e-86c94d32a739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20989753-e0df-4b2e-8173-fbe0cc989e35",
        "cursor": {
          "ref": "04daaaea-5565-47f4-b817-f28b8a03dc3a",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "4b2b41b5-5a70-4bd0-8f9c-56a04b691736"
        },
        "item": {
          "id": "20989753-e0df-4b2e-8173-fbe0cc989e35",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "311016ae-aed6-48a0-8402-216686f554f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ba609f-9329-4b85-8eb0-8c8ad2dccc01",
        "cursor": {
          "ref": "dbb81898-ad30-4009-b48d-f4cf6014e4ba",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6f9cfb38-060d-4f26-944a-5fc2a93de46f"
        },
        "item": {
          "id": "66ba609f-9329-4b85-8eb0-8c8ad2dccc01",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "c9746b31-8351-4c04-9b9b-4473726abbca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb54316-a634-492a-a3ad-be4f687b8eef",
        "cursor": {
          "ref": "ee5009cf-252e-47a4-8411-baf86ae9922c",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "481c6011-28fb-4891-9b35-37ebe697ba7f"
        },
        "item": {
          "id": "4bb54316-a634-492a-a3ad-be4f687b8eef",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "575497ec-cb54-4220-ae79-ecc0a7de903a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9809efc-7afd-4aff-ba23-8c98c87590ba",
        "cursor": {
          "ref": "c8ef1973-d668-4eee-b021-9a42e9d723ca",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d5c9238a-82d3-4e54-87a8-056e190e20e3"
        },
        "item": {
          "id": "d9809efc-7afd-4aff-ba23-8c98c87590ba",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "cc8a86e2-4db6-48cb-8ad5-0731c9f1e800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50bd4262-d7a1-4b4a-9d2f-145af0320c12",
        "cursor": {
          "ref": "2ab117f5-07ea-40a6-b96c-a93d60407ecb",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "45cd259a-5193-4868-aa3f-4b3ba22be98d"
        },
        "item": {
          "id": "50bd4262-d7a1-4b4a-9d2f-145af0320c12",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "5d31fda8-d22c-47bd-a5b8-f0875fb85207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0dd95b-67ed-417d-b386-73a1c8ce6f4a",
        "cursor": {
          "ref": "dfff0952-5b4d-444c-90e2-97e1bbb3bb3f",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d02eb899-55f2-4138-aefb-aa7d671bafcc"
        },
        "item": {
          "id": "1a0dd95b-67ed-417d-b386-73a1c8ce6f4a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "104ef195-4abc-48d8-9858-7fb2e2c9ce34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c244d1d-ea99-430e-9718-426f53db1703",
        "cursor": {
          "ref": "7de3b362-569f-4dab-acfe-c9bb611df61e",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c8faa747-08b4-4835-924e-f93b0b85afa7"
        },
        "item": {
          "id": "9c244d1d-ea99-430e-9718-426f53db1703",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "9e577814-f829-4c01-8775-7dccbc229ef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d1a329-dfd2-4f2d-9070-fd03e8cae8ff",
        "cursor": {
          "ref": "a8ed144f-b315-45d2-80ca-e80af4dd90d9",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "94672749-415e-4111-bfb5-62b96b22a12f"
        },
        "item": {
          "id": "75d1a329-dfd2-4f2d-9070-fd03e8cae8ff",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "89178de5-cc1f-426d-83b9-17dc53c8670a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd5f74c9-8466-450f-899b-d07d247321de",
        "cursor": {
          "ref": "6eb357a0-f0a6-4730-a5ac-b73b951b7a58",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e7af1f98-9997-4fe8-9702-290c09b9db72"
        },
        "item": {
          "id": "bd5f74c9-8466-450f-899b-d07d247321de",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "7446ae5b-f313-4518-ba48-24ae01103855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f342cc37-f668-444c-bba8-8b0a05934497",
        "cursor": {
          "ref": "1ec01804-6acc-4afd-a21b-08fa7b1d213c",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "97a3d25b-fe4c-4b86-b855-b29c0e46cc60"
        },
        "item": {
          "id": "f342cc37-f668-444c-bba8-8b0a05934497",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "84575a8a-0ed1-4099-9465-f7a3ba4bc4ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdba454e-b030-4872-b86c-49ddeced8d1d",
        "cursor": {
          "ref": "183f6670-60c2-4b49-a5c4-badd36559bdf",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f5d8c0cf-e844-4b90-8e53-841a7db2b8aa"
        },
        "item": {
          "id": "fdba454e-b030-4872-b86c-49ddeced8d1d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2441274f-bcec-4eaf-a3b6-46d929f94bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d21b62-5c20-45aa-8626-279eb779b5a3",
        "cursor": {
          "ref": "afebdfea-7dae-4755-ad2c-324241e17ee8",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "7f8b6eea-0e1f-4017-af43-f37bb6709f53"
        },
        "item": {
          "id": "13d21b62-5c20-45aa-8626-279eb779b5a3",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "7445baef-4286-4c75-a83a-c94cfc698550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "024f87bd-31e6-48ee-b75c-59944d1bb593",
        "cursor": {
          "ref": "01725087-5276-4917-a275-ec3dbb974c15",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "682e6f86-4034-43b4-9ff5-c66a624f61ce"
        },
        "item": {
          "id": "024f87bd-31e6-48ee-b75c-59944d1bb593",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4c962ee6-a29e-471f-8f40-6ddd67a4c9e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8ed455-fc49-41c6-96ab-fde226210cd5",
        "cursor": {
          "ref": "df3e9589-cf74-4988-9b97-cadca4a27b38",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "4708d75a-fcce-4cfb-a79b-b6ddc8b6f5a5"
        },
        "item": {
          "id": "bf8ed455-fc49-41c6-96ab-fde226210cd5",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "972597ba-6ded-4ac5-85dc-270300b8196b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a3e249-5a01-4838-ae11-dfe886af4b4a",
        "cursor": {
          "ref": "2cbcdc02-574c-47c4-b520-0b8894e2ea43",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "1ed7a76a-3528-4079-a899-9558d796d6a5"
        },
        "item": {
          "id": "34a3e249-5a01-4838-ae11-dfe886af4b4a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "169ced13-7b2f-4cc9-bd21-a82eeb7e5b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b51bd47a-103c-4992-a460-4f1930401fb3",
        "cursor": {
          "ref": "41b1f81a-93ee-46fe-88ba-1d7311366103",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "84324861-9062-49b0-85b5-6d272516bb8d"
        },
        "item": {
          "id": "b51bd47a-103c-4992-a460-4f1930401fb3",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b68a6c15-e312-473a-8f23-b89d87b3f099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15fff984-1e71-400b-9ade-0f150387ac0e",
        "cursor": {
          "ref": "fe2eda5e-578e-4108-8707-e873483613cb",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "54dbf52b-e4a8-4c41-8f00-3785ba1e5268"
        },
        "item": {
          "id": "15fff984-1e71-400b-9ade-0f150387ac0e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b5a6a779-90d1-42ae-aef1-10c4f4f4b558",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 631,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd5b818a-dd87-42ac-8f79-2e9711fc1168",
        "cursor": {
          "ref": "2783e05e-ae63-49c8-9286-b1cd780ee893",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ac925eea-6d7e-46a3-99f8-6095c6e2c926"
        },
        "item": {
          "id": "dd5b818a-dd87-42ac-8f79-2e9711fc1168",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6161ed1d-2540-4498-990a-396461ebfe05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce7ffbe-03ba-47a1-acf2-bed07c75900f",
        "cursor": {
          "ref": "1aa90927-826c-47be-bd00-0b94caa59635",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5889a857-a212-4b41-8094-589c0f2bcd39"
        },
        "item": {
          "id": "6ce7ffbe-03ba-47a1-acf2-bed07c75900f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "de4b9abf-73cc-435b-9d6b-94ad96af734d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9bb0585-d371-4341-a8b5-c166b8f80a81",
        "cursor": {
          "ref": "6d5f1be2-3c75-4781-8e19-bb0ca4a2e74d",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "0b315c6a-0c32-4635-bd96-6a8af226ad44"
        },
        "item": {
          "id": "e9bb0585-d371-4341-a8b5-c166b8f80a81",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "0de337ca-1ad5-4912-9c3a-7c49a8bfe8b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e4c25b8-bdab-4d52-84d1-ba31cfa6fb85",
        "cursor": {
          "ref": "a9e89ca3-c56a-462a-8ae9-e07f181070b6",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "23eb971a-c536-4c7a-892a-1b8caaba7c47"
        },
        "item": {
          "id": "2e4c25b8-bdab-4d52-84d1-ba31cfa6fb85",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f2672b83-5053-431f-b6d2-12895b6732d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37eb3179-7a60-45ca-b35e-674e5a24bce5",
        "cursor": {
          "ref": "03997e86-0637-4e15-8016-bd04f21b8486",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "2483f047-3d3c-4fd5-a3de-c274e09d765f"
        },
        "item": {
          "id": "37eb3179-7a60-45ca-b35e-674e5a24bce5",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "49470dbc-c4d6-458f-9a7d-283c8a6e6349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3549fcdc-f7c4-4346-8220-7c587250f55e",
        "cursor": {
          "ref": "cc9397bd-8321-4781-81ba-5c6ecd386518",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7e13224e-5421-4fe7-95bb-bc7f7a46ed44"
        },
        "item": {
          "id": "3549fcdc-f7c4-4346-8220-7c587250f55e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f0cdb11a-0fc6-49d2-8a34-9f2e4ff14cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a678047d-0dfe-45fe-8f31-8f2d85488f8f",
        "cursor": {
          "ref": "07250e85-e70b-4e39-866f-0675a1d8324d",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b74efce5-8867-4c0b-9b82-3e5927d38a8b"
        },
        "item": {
          "id": "a678047d-0dfe-45fe-8f31-8f2d85488f8f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e79e4ebc-6d2e-4c7c-8ee0-9e0f34c46181",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 655,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "661c223d-d1c0-4d07-841b-c7c105f97c74",
        "cursor": {
          "ref": "ac4e9ea7-07cd-49e8-a560-4ea485166a66",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ed92eccf-8174-4af5-a2d7-d30d2e0949f9"
        },
        "item": {
          "id": "661c223d-d1c0-4d07-841b-c7c105f97c74",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "074735bd-bdb5-4cde-a436-55fd8b9e75a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "184c6eee-992f-4e02-9009-bb68806aab6b",
        "cursor": {
          "ref": "97e45044-9d03-4b9a-b37c-2c64ebb5cced",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "9c221eed-2cb1-48cc-ba13-5e789dbf38fb"
        },
        "item": {
          "id": "184c6eee-992f-4e02-9009-bb68806aab6b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "13c53e75-f76e-45c9-b9a3-4d4e251ae587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "135716f0-acce-45a4-8d73-93558c3b27b3",
        "cursor": {
          "ref": "dd77e867-f27d-4f8e-858d-7574fdf433e3",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "2b48adfd-38d8-4951-9300-eda4de6ee8e3"
        },
        "item": {
          "id": "135716f0-acce-45a4-8d73-93558c3b27b3",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a5b4eea7-24c2-4fb3-b5b2-b5a621a662bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a7a854e-566c-47cc-849e-76453eb86473",
        "cursor": {
          "ref": "01299d81-4e7f-49c2-9356-a4dcbe0229b0",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d963b42a-d8c9-446d-9e31-8e9901b82244"
        },
        "item": {
          "id": "0a7a854e-566c-47cc-849e-76453eb86473",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "825382c9-7922-44f3-a32b-a95b7e2bd6aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39cbacda-f16c-4af2-a099-1e06ca26a488",
        "cursor": {
          "ref": "17a7ef0b-6812-4ed8-9a58-38b1a4efd265",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "3d1fdd03-a5c9-485a-8be8-43672bdcfe72"
        },
        "item": {
          "id": "39cbacda-f16c-4af2-a099-1e06ca26a488",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "1034e3d1-4eb4-48cb-a47c-e02a3824ad6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79bf3ffc-8a08-446e-a520-393b31401490",
        "cursor": {
          "ref": "a6127c7d-5e01-4970-a317-aa759c755664",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3a110d1f-e5b8-46ef-839c-82ff3f6a87e7"
        },
        "item": {
          "id": "79bf3ffc-8a08-446e-a520-393b31401490",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a34d566f-d63c-46cf-95d5-1fa63b2e2df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f14ecef3-30b6-47d2-b87b-453db44e7e6b",
        "cursor": {
          "ref": "b821d170-53a6-4c94-a9db-df14ce9895c6",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "cc0477b7-ee75-45ba-a16b-b7669b625885"
        },
        "item": {
          "id": "f14ecef3-30b6-47d2-b87b-453db44e7e6b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d9786bbd-dc15-4f31-a357-fed32a2d579d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5736fc-d583-412b-bff1-07d73f9eba85",
        "cursor": {
          "ref": "8a13a7f3-f1cf-4767-9327-b30973937468",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "bd977818-94ae-4a71-a02d-51b7b9265c2f"
        },
        "item": {
          "id": "df5736fc-d583-412b-bff1-07d73f9eba85",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "45287b7b-f49e-4b12-a52f-efba4e471a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d2f894a-6466-4994-8673-4b776390688a",
        "cursor": {
          "ref": "c4a3e0d3-ea88-4828-854c-3c3c5d2e9901",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d935a769-4fe7-4d6c-bf0e-41130e6d784a"
        },
        "item": {
          "id": "1d2f894a-6466-4994-8673-4b776390688a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e2fa2eba-ec6e-434f-a4b6-5ea5daff8423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19bd4a04-def1-4b45-bdfb-ce7da549551e",
        "cursor": {
          "ref": "656944d5-35bb-44c2-adec-ee9be4c40c0a",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "40f81a4c-cfd4-4bb4-8b77-2f533b83d482"
        },
        "item": {
          "id": "19bd4a04-def1-4b45-bdfb-ce7da549551e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "873e28fe-cec1-4299-832a-afa9ba4b199b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e82841d8-1c62-4d05-a23a-24ec7575251f",
        "cursor": {
          "ref": "0612a97e-55c0-4b3b-8c0a-158a96a4dc3e",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8dedb7b5-8629-48c3-9337-30096b6105b0"
        },
        "item": {
          "id": "e82841d8-1c62-4d05-a23a-24ec7575251f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "7e889607-de0e-42dd-8276-2a1db9b5b6d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09219d9d-fe9c-4d39-84aa-2507bc4a8957",
        "cursor": {
          "ref": "bd3f9ebb-061e-4084-b05f-c78427a41239",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ca2e84d5-7502-4935-8821-a564eb083fb6"
        },
        "item": {
          "id": "09219d9d-fe9c-4d39-84aa-2507bc4a8957",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "2eb16623-933d-4757-a970-4d507939a533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a79d0e6-87a6-45d2-bf40-4e11941e87ed",
        "cursor": {
          "ref": "23bc31d3-11ce-4f84-b86c-04e02a9c658e",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a9ebe8dd-d223-485f-a2cc-d756a8b2d800"
        },
        "item": {
          "id": "0a79d0e6-87a6-45d2-bf40-4e11941e87ed",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "d8f30ae3-502a-44c8-8366-351c2f44769b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1b61cf-1d52-43f1-8569-ce46381d0cc7",
        "cursor": {
          "ref": "7dc095c5-6c70-4d6e-a908-88c4d57c83fb",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "6edc8c57-e91c-4e91-a09b-4d8384280b54"
        },
        "item": {
          "id": "0e1b61cf-1d52-43f1-8569-ce46381d0cc7",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "eb112d5e-0968-48e4-a638-1bbc12c8d2b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18037af5-5e18-4f01-8572-96b826952fb9",
        "cursor": {
          "ref": "0421f7c2-84b2-417a-88b7-e8cd204dad19",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "3c94aa7e-1eb7-45fe-a56d-9fc4542e0bdf"
        },
        "item": {
          "id": "18037af5-5e18-4f01-8572-96b826952fb9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f5e90fb1-de6f-46ba-afac-85361a531611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022af640-c595-4c6d-9c8c-16a48ba77050",
        "cursor": {
          "ref": "b399d35b-c2d3-4cc7-98b7-7b228065098b",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f897b27d-15a4-4b2c-9020-3cda9980c373"
        },
        "item": {
          "id": "022af640-c595-4c6d-9c8c-16a48ba77050",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "de1c84ef-5fff-47fa-80ab-01d9a783f40f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ae2eac-7e22-4cc5-91b3-7f97b0f4fd24",
        "cursor": {
          "ref": "4ec942c9-80bb-406a-a572-384d4cdb275e",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b458e012-aeee-4d23-b331-39b7c9a262cd"
        },
        "item": {
          "id": "80ae2eac-7e22-4cc5-91b3-7f97b0f4fd24",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "469bd7ca-4164-48c6-8eca-2d73db195a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "695db3c1-bcd6-4a61-9542-2c2cac7e464f",
        "cursor": {
          "ref": "d256ae81-5f06-4f62-9781-0922fb0a7ef2",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5e80d570-a3a7-4e84-a20b-81b3e268447f"
        },
        "item": {
          "id": "695db3c1-bcd6-4a61-9542-2c2cac7e464f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7b8a1567-155e-47cf-ae7f-7a2fdf10fc1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "255dc286-0222-4b82-aabf-7366de1699cd",
        "cursor": {
          "ref": "b09e5e58-c2b4-439e-9c56-bb0099b32d58",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "75e49ae5-c6af-42ac-8cf9-29f92a1379d2"
        },
        "item": {
          "id": "255dc286-0222-4b82-aabf-7366de1699cd",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "fe1a8168-ae93-47b7-95b7-9d52309baa8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb10f7cb-f44c-4ede-9e05-3eae4a6b2c8c",
        "cursor": {
          "ref": "b70ed4ed-e358-4bfc-854d-5d635d0b327a",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3112006b-85c9-4aa0-ab41-cdd8e02da9c3"
        },
        "item": {
          "id": "eb10f7cb-f44c-4ede-9e05-3eae4a6b2c8c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "7682fc2b-4da7-412f-a030-67abf37de953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4263bbd-1c2a-4b02-bae9-20a04c53023e",
        "cursor": {
          "ref": "5e66e31d-e9da-4a13-859d-727f3a6631e2",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "520d9c65-1397-420b-ab2f-e1b39d32deb5"
        },
        "item": {
          "id": "a4263bbd-1c2a-4b02-bae9-20a04c53023e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d03bd8f7-e53c-4de5-919f-7800ec9e25c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3730467b-70db-416c-84a7-3b997a9aba13",
        "cursor": {
          "ref": "1f5c0fbc-9971-4cb5-8cfb-3c8f64e743d2",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "02868ed6-8fc4-4902-862b-f6710ce55d0d"
        },
        "item": {
          "id": "3730467b-70db-416c-84a7-3b997a9aba13",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "441705b3-3498-4dd2-abeb-ad7f0b20cdb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141cad56-7ff0-43e8-815e-27426575047c",
        "cursor": {
          "ref": "5c189a7c-cf8d-424a-ac82-de24ff43efda",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a23899b3-217f-45b1-9851-f50d32ba2c9a"
        },
        "item": {
          "id": "141cad56-7ff0-43e8-815e-27426575047c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ed36d5b5-1b67-4720-bbfd-f80aee96e453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150be39f-dba7-43d1-8f72-b3a16b62fd65",
        "cursor": {
          "ref": "8beb31a8-fe0a-4892-bae2-486619038ffd",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "fc68ba8d-415b-4203-9e67-dbd69ba9b171"
        },
        "item": {
          "id": "150be39f-dba7-43d1-8f72-b3a16b62fd65",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ba6d70de-2d5f-4606-8805-ed17f1db27cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70334af1-19a9-42d1-9598-550653054d15",
        "cursor": {
          "ref": "bbb2ad54-cded-4305-9462-6b2d5f662ecf",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0f58251f-dd1e-4021-ba9c-d01e1c7a2c3c"
        },
        "item": {
          "id": "70334af1-19a9-42d1-9598-550653054d15",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "cad3f8d4-daf1-43b4-9726-858d264801a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b42ab0-473e-4873-b3ff-57aaa0bd2bd6",
        "cursor": {
          "ref": "f8d2f26d-2e9a-452e-b4aa-81b5bbc0304b",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "077933aa-a056-4b4d-8e65-b95358774bed"
        },
        "item": {
          "id": "95b42ab0-473e-4873-b3ff-57aaa0bd2bd6",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8d22481b-f524-44fe-9b23-4cf675506167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c65488db-1833-4a33-94e4-e1e9a33dbdca",
        "cursor": {
          "ref": "5ddc25a8-b68c-4101-9472-6039a837f662",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c3a027a2-a3b0-4f5f-8015-aaf4a9e0fc10"
        },
        "item": {
          "id": "c65488db-1833-4a33-94e4-e1e9a33dbdca",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "bb94dcd7-d44d-4f56-8331-5f0729c0a6da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630eb924-ab51-48d3-bfd7-6a68b6a27017",
        "cursor": {
          "ref": "0c5d4536-6ef3-432a-9668-d496a1d7f082",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "aa425b2b-2ba0-4dbf-b1db-9467694f59dd"
        },
        "item": {
          "id": "630eb924-ab51-48d3-bfd7-6a68b6a27017",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "2d30e477-ece6-4007-a877-7d94db9ee31f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ad786b-1252-4cf8-99ed-4fcff81731b8",
        "cursor": {
          "ref": "f10c1fc9-a9bb-414e-8e97-4050ef853662",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "37a8a2c1-d2ae-4791-9757-536c35de3609"
        },
        "item": {
          "id": "b7ad786b-1252-4cf8-99ed-4fcff81731b8",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "38243e51-5ba0-46e1-82aa-aeee4fd8f290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ed60ab-c4dc-4569-af1a-70f3db4a8dd5",
        "cursor": {
          "ref": "561677a9-94d3-44d2-8386-581faf0b8a92",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "87d19f6a-4b36-4603-a7c1-0f521c4d833b"
        },
        "item": {
          "id": "b7ed60ab-c4dc-4569-af1a-70f3db4a8dd5",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "60cca5d4-5a27-4559-98f6-4e4b883b7f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb38769-2cec-43e4-ac41-a24460997a36",
        "cursor": {
          "ref": "e5049dc0-4002-4be4-830a-03ad7d22f647",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6ec5b951-38d4-46dc-8c06-0a4259464f63"
        },
        "item": {
          "id": "4eb38769-2cec-43e4-ac41-a24460997a36",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ae4b36dc-7798-4829-9317-00826544733c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b07ed78-ffc5-49ad-913b-f0e13389af6d",
        "cursor": {
          "ref": "3900a2d0-c6cc-42cc-a835-d29f9c53ebe7",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "279e66d9-bc55-4966-8587-1be14a434574"
        },
        "item": {
          "id": "3b07ed78-ffc5-49ad-913b-f0e13389af6d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "5402b916-dead-4e8d-9591-1213a59babd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b79ea45b-86a2-44af-9427-464cc266c658",
        "cursor": {
          "ref": "324352bc-ae99-4b44-86e5-7ff2799308f4",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a847482d-5e21-4ec7-8cc4-9d649daa38f8"
        },
        "item": {
          "id": "b79ea45b-86a2-44af-9427-464cc266c658",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "cceefcb6-f476-44ae-948b-a8d8aea18e4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e507231a-4720-4ab6-bb4c-4b9d0a288efe",
        "cursor": {
          "ref": "deb3093c-b856-4d57-ba53-43d9cfe27f73",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "3ada2809-8031-43b6-b655-d855f3e56cb0"
        },
        "item": {
          "id": "e507231a-4720-4ab6-bb4c-4b9d0a288efe",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ec5fbcfa-3705-4d2b-8f26-b92f7d56696c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b51f468f-cc16-4026-9995-7cb16e9b7e81",
        "cursor": {
          "ref": "1f5c77d5-4248-4e23-8ec8-1a227cb899ff",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "482a5b22-0a8b-43ca-aaef-62a760c62c77"
        },
        "item": {
          "id": "b51f468f-cc16-4026-9995-7cb16e9b7e81",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d7855b99-ec68-4396-8994-ad26b194fdc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39189606-2840-4fad-b276-7a60fecaf984",
        "cursor": {
          "ref": "3dd33dae-4cc9-48fd-baf3-1cdfb23c9ac6",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "1ec29962-b1bb-4d02-b693-8a4ed5fd97ca"
        },
        "item": {
          "id": "39189606-2840-4fad-b276-7a60fecaf984",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2e10848c-a6f8-4afa-81e8-2e7e5b6c6a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05cb03f0-da61-4d71-bafb-91e3397cbee2",
        "cursor": {
          "ref": "70c2e8ad-a446-42b9-86ba-1cb85bf36fc0",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "310ac4df-8c94-48e5-8278-e389c7444181"
        },
        "item": {
          "id": "05cb03f0-da61-4d71-bafb-91e3397cbee2",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "8ff5c529-a5ea-4877-8ee6-78534c6f43e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c2b0e07-3e6c-4ef1-ad68-e3c7fc7bba28",
        "cursor": {
          "ref": "06101cac-8ad5-485e-a37a-8f3e5ef8055c",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "25ae6aa9-e734-49f0-9953-0b7df3772569"
        },
        "item": {
          "id": "1c2b0e07-3e6c-4ef1-ad68-e3c7fc7bba28",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f699df54-3e48-4b48-948a-2a713852a616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc4118e-ffd9-4785-ae07-00992a479fc3",
        "cursor": {
          "ref": "bb1c8cef-0bcf-4cc7-ad16-954deda9cd05",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "9d9d4c1f-a4af-48e5-a667-b801ed048394"
        },
        "item": {
          "id": "0dc4118e-ffd9-4785-ae07-00992a479fc3",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c82a17b0-09d6-426d-83e9-047117479f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf4726b1-d498-4068-828f-9b4fd0ff6b74",
        "cursor": {
          "ref": "0fd9b818-e980-4aa2-9174-7aef863f4fbd",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "0f99f0a1-6e4d-4621-b0f3-1d5d53da4f83"
        },
        "item": {
          "id": "cf4726b1-d498-4068-828f-9b4fd0ff6b74",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "17bfd002-50e6-48a0-bcc5-26356c13747b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b46952b5-7d78-4025-b39b-bd25d28352a0",
        "cursor": {
          "ref": "9052ba52-5336-4ff8-890a-3b3ccd0ba931",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "27434cee-5640-45fb-b076-90bcc9d5148d"
        },
        "item": {
          "id": "b46952b5-7d78-4025-b39b-bd25d28352a0",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d3ae89dc-d37e-4cf5-ba9b-7012e9cfbe04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa91bd79-e51f-4318-8468-1c38bf31cc79",
        "cursor": {
          "ref": "540d7e67-a1d4-40b7-969b-903f15907126",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e6b5b888-3486-469c-9f54-fae7f2f9ada5"
        },
        "item": {
          "id": "aa91bd79-e51f-4318-8468-1c38bf31cc79",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "3d674e7f-a8a2-497d-b62c-4cccd14d2a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ffafa8-dad9-4f1a-a2c6-118c0d4c1a3a",
        "cursor": {
          "ref": "3cde2387-8264-4877-a33d-269452b8b4d9",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "42193d88-4efe-4641-b280-ed72be7e8a39"
        },
        "item": {
          "id": "c6ffafa8-dad9-4f1a-a2c6-118c0d4c1a3a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b6b35803-17c4-4a5f-ba47-e0e998d11504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e5d381-7fa3-42e5-b0ba-5e98ad7a6255",
        "cursor": {
          "ref": "f74f3aa8-d496-4c0e-bd60-64db582b30a9",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "df72cbf0-6393-4104-b331-5e5390f0a3ca"
        },
        "item": {
          "id": "39e5d381-7fa3-42e5-b0ba-5e98ad7a6255",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "5d7519ae-1819-48b7-b624-8414279f6fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3bc519c-4943-4eea-a489-10302d17484a",
        "cursor": {
          "ref": "db56d7da-73d4-4cef-b038-c91f449bfde6",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "74de6866-3c4b-48aa-bd67-7659690315bf"
        },
        "item": {
          "id": "b3bc519c-4943-4eea-a489-10302d17484a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5d21e4e1-f46d-4ecd-8b6d-4ab7e2d612eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739c8476-2ed3-4b67-b784-36d8c09029be",
        "cursor": {
          "ref": "7996efec-0b9b-4a7f-97e7-51909d409e7c",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "8beca300-e91a-4233-be42-f02c4bb5da18"
        },
        "item": {
          "id": "739c8476-2ed3-4b67-b784-36d8c09029be",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "c091e099-55d2-4d0c-afbf-36a20b6ba182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69df2b45-d9e5-4b75-8d8f-1caeb154c2ff",
        "cursor": {
          "ref": "abdfaf5f-767d-4265-8fb6-f706d541a203",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "7ab2298a-5f25-494e-a874-d13926269bbb"
        },
        "item": {
          "id": "69df2b45-d9e5-4b75-8d8f-1caeb154c2ff",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5b4b9b99-a67d-421c-9d4e-3f70c0a716e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b81cbce8-bcc0-4a4c-83e9-7747aa07a4e9",
        "cursor": {
          "ref": "ab7aad21-396e-4c58-aee6-fabb239e1930",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "807eb931-6f07-40b5-b4b7-02377a70e953"
        },
        "item": {
          "id": "b81cbce8-bcc0-4a4c-83e9-7747aa07a4e9",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c029e81d-69f9-40bc-a1ef-fb093dcfe8d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "252cecb2-16c9-4b36-be8f-bf81d61df91a",
        "cursor": {
          "ref": "fafe3823-96a9-4889-9015-f3b82bfefb75",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "55d417e9-2064-49ad-931b-db04d1a2a0bf"
        },
        "item": {
          "id": "252cecb2-16c9-4b36-be8f-bf81d61df91a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "062abbc8-637c-47c1-8689-c4383281e268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb6bd84-04ff-4992-beb9-1d1aa6b66a54",
        "cursor": {
          "ref": "b6eb2700-5482-458c-b2e3-b95fd6cd4081",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "fd5ec7ba-7a84-4704-866f-a8a4b939af5e"
        },
        "item": {
          "id": "4cb6bd84-04ff-4992-beb9-1d1aa6b66a54",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "691cac76-3158-4ae3-9aaa-d804ce75c4b1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65779613-4c72-4883-84d2-c0fa58c24338",
        "cursor": {
          "ref": "bcdf6c90-1231-4eb2-97ec-b4042545ef9f",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d8427af9-86ef-4817-9c92-a351a09eb044"
        },
        "item": {
          "id": "65779613-4c72-4883-84d2-c0fa58c24338",
          "name": "credentials_issue"
        },
        "response": {
          "id": "747dd62a-8f63-4a25-a02b-c2858bb62444",
          "status": "Created",
          "code": 201,
          "responseTime": 7307,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "69052fa8-3393-4b8b-8fa2-d8e38d93f179",
        "cursor": {
          "ref": "dc2eda30-ce32-4780-8563-36bf05307180",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "2a08a864-33a3-4ffc-8938-662b1b95b658"
        },
        "item": {
          "id": "69052fa8-3393-4b8b-8fa2-d8e38d93f179",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "4ddf8679-dfc1-4233-a3b3-380bda55cc2a",
          "status": "Created",
          "code": 201,
          "responseTime": 7223,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e7d195-2975-4848-9218-8c26cef935b1",
        "cursor": {
          "ref": "0e19ea15-8803-4e72-aab1-181baba455a8",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "839777cb-efc5-40a1-a2bc-81dc378ddaa7"
        },
        "item": {
          "id": "b8e7d195-2975-4848-9218-8c26cef935b1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "94d82181-4a92-4326-bed2-eeed34e50b3e",
          "status": "Created",
          "code": 201,
          "responseTime": 7960,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b61d6152-f684-4ba7-ad55-684cb892d3ad",
        "cursor": {
          "ref": "0becb400-bc4f-46e4-bf1e-f1bc34ac8368",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d700bb04-b20f-4793-8fa3-8bf939682bc6"
        },
        "item": {
          "id": "b61d6152-f684-4ba7-ad55-684cb892d3ad",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4cb81d77-c13b-41fa-8ddc-b1b67341af79",
          "status": "Created",
          "code": 201,
          "responseTime": 5900,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c91e9b-eb75-4581-961b-254f4d1e7dda",
        "cursor": {
          "ref": "d172e4cb-8b17-4fcb-8abd-dcdc8af45044",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2d77e852-5b4e-4fa7-b5d0-745d7d6a2f44"
        },
        "item": {
          "id": "58c91e9b-eb75-4581-961b-254f4d1e7dda",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "7c6e6a00-2b98-4948-bebf-c71ba40f1259",
          "status": "Created",
          "code": 201,
          "responseTime": 6292,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "83897805-4f55-4ae8-9ad5-fd5f3d008574",
        "cursor": {
          "ref": "7af00966-ff1a-4947-9161-2cd6554fa189",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6267a3de-328d-4f6a-84d3-6ceb466de5bf"
        },
        "item": {
          "id": "83897805-4f55-4ae8-9ad5-fd5f3d008574",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "9626d2c4-3085-4b6d-869f-4dfca2542978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "1c6f1604-22db-4c8a-ada4-6b930a0e64ed",
        "cursor": {
          "ref": "e7356c80-942d-47df-8479-4521dae2cdab",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "6fd6d239-530d-4746-9520-c8aaffbe55fa"
        },
        "item": {
          "id": "1c6f1604-22db-4c8a-ada4-6b930a0e64ed",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e1eac868-ba3b-46be-8a45-aae283432492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db49386-c884-444e-8779-c21a40f6aeaf",
        "cursor": {
          "ref": "0b592a54-8cff-49b3-ba68-035fb80f40b3",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "5e431abd-d294-47d3-ab6b-623fb72f7a60"
        },
        "item": {
          "id": "0db49386-c884-444e-8779-c21a40f6aeaf",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "02a669df-e29b-4d71-9679-20c0d16a6c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf0bc27-7ed0-44dd-b909-22d644cbc70f",
        "cursor": {
          "ref": "f144e1d5-436d-4a2f-ac5a-de84f7673548",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8f6c3979-4157-4934-8657-82607d309ec6"
        },
        "item": {
          "id": "abf0bc27-7ed0-44dd-b909-22d644cbc70f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3688deae-b3e8-4529-989f-e739ff227c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dee2e1a-80f5-4093-a0d5-d899efafe3f9",
        "cursor": {
          "ref": "5c28a417-51ff-4ff4-a22d-0ed7e3f8684b",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e912015e-8884-4b3c-af73-c417c61221da"
        },
        "item": {
          "id": "1dee2e1a-80f5-4093-a0d5-d899efafe3f9",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7265e7bb-ce1e-4009-aaf5-aab40ec30694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46dbfa49-ef2b-4147-9af9-f8d203251ae1",
        "cursor": {
          "ref": "9a53273f-8e46-4d90-b9bd-2f8b06dac48d",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "aeb0537d-7e68-4f7c-bebe-ad1d9e54955e"
        },
        "item": {
          "id": "46dbfa49-ef2b-4147-9af9-f8d203251ae1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "dd253027-0ffd-42d9-8664-ed0181edc82a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a218b6-71a9-492a-92ae-6d7145ca1082",
        "cursor": {
          "ref": "53fae775-1e13-461d-a99e-b09bde635b4b",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "fd3012ed-e968-43ad-a478-4c83274f248f"
        },
        "item": {
          "id": "71a218b6-71a9-492a-92ae-6d7145ca1082",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2406f9a0-e88a-421b-b7e6-a774750e34a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce765b3-dc75-461f-8c37-07729c6be21e",
        "cursor": {
          "ref": "d4159a12-8062-4a2d-be1e-3b67fbf36898",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e0893032-8751-4747-8c17-bc3565622fa5"
        },
        "item": {
          "id": "8ce765b3-dc75-461f-8c37-07729c6be21e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1012b8de-75d7-4642-b2e7-bae9ad17b03c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c385d4ac-ef0b-4488-a22a-d9b8f56f8d5a",
        "cursor": {
          "ref": "5d3d4884-f5eb-470b-b96e-99ba3648c6af",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4afce495-0ef4-4040-92af-070c88b06d52"
        },
        "item": {
          "id": "c385d4ac-ef0b-4488-a22a-d9b8f56f8d5a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0c2f11ea-33c2-4c6e-b7fd-eacdb3f7dc98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aba16e2e-6a5b-473e-bffb-d4443357fb54",
        "cursor": {
          "ref": "caa3a87e-29d3-4d5c-84ba-ad0cdb26a666",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "dec53452-25e5-4672-b4f8-cc47d058c5e3"
        },
        "item": {
          "id": "aba16e2e-6a5b-473e-bffb-d4443357fb54",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8498c892-d2c9-4b8f-a04a-2968079853ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c14387f-a9f6-4704-93ba-4aae09bbc218",
        "cursor": {
          "ref": "766327b5-9e98-44b0-988c-7c1f2b76cf8d",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "94e2de2b-8c6e-419d-aca2-cb5923440429"
        },
        "item": {
          "id": "2c14387f-a9f6-4704-93ba-4aae09bbc218",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e0b027f6-8258-467e-9cd1-37d6ec4f209b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69092c67-aef4-4206-8c08-777d967dd5ec",
        "cursor": {
          "ref": "1f693a55-3d10-4af3-9fad-20bbe3b1a8c4",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "69783518-5683-490e-a8fd-144d8b888793"
        },
        "item": {
          "id": "69092c67-aef4-4206-8c08-777d967dd5ec",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6577c1b4-68d8-400a-993a-c62661c21099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27689a7a-1dd5-4431-8059-cb15ea4d7baf",
        "cursor": {
          "ref": "e215a617-01c4-4df5-b322-5e4673e03546",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7da5dcf0-2659-4a63-98de-c52977caad7d"
        },
        "item": {
          "id": "27689a7a-1dd5-4431-8059-cb15ea4d7baf",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6897c32c-8552-452a-8536-15e2cd58afa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96351cb4-13d2-4c9c-b5e8-8cad685db43d",
        "cursor": {
          "ref": "dc80b2c0-ff23-494a-9a5c-5b9cb61627db",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "0ba23588-7da9-49ce-adea-3d8ab512fcea"
        },
        "item": {
          "id": "96351cb4-13d2-4c9c-b5e8-8cad685db43d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "555e7a47-dabc-4469-9c28-b2984d5b09ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d58cb24-3201-4678-8413-c03b2e761740",
        "cursor": {
          "ref": "6c35e50d-78fe-4b5a-ba21-151ffdeead77",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "83f34a98-209b-4fee-b5a6-c056af0621a9"
        },
        "item": {
          "id": "4d58cb24-3201-4678-8413-c03b2e761740",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "02ff89af-a48c-4fdd-8f59-be72bff1b794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b41cee6d-5686-4c1c-86b6-255c4cb35693",
        "cursor": {
          "ref": "285027c3-f939-41f2-9f50-38115c3751c8",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "aeb56d59-e285-4448-b514-43f93b6a1b3a"
        },
        "item": {
          "id": "b41cee6d-5686-4c1c-86b6-255c4cb35693",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "84c740f9-a0a8-4726-9bcd-58b9967fd6d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f88922-8dd6-4ccf-93eb-8f8d3459e5d4",
        "cursor": {
          "ref": "65d2eda5-3906-4c42-a755-31752b2dba9d",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "2a9e4d26-e27e-4ac6-9d26-cd66044264f0"
        },
        "item": {
          "id": "e0f88922-8dd6-4ccf-93eb-8f8d3459e5d4",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b298d73c-4c83-4c5d-8bcb-f7377e5efdd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a868f97d-6d00-4e76-b5aa-9a612b6a8883",
        "cursor": {
          "ref": "6ca7431e-5846-4627-a2ff-072c39e5a6a4",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "497bde84-6481-4d8a-80bb-a7b1b47ffdc8"
        },
        "item": {
          "id": "a868f97d-6d00-4e76-b5aa-9a612b6a8883",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6d5ab936-ac40-4a7d-b99b-f25bd778c6bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b16861-6ac5-409f-b80d-147c9f320056",
        "cursor": {
          "ref": "dffefd1e-4b61-4415-985c-b3bafdd8e950",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "66a34a8b-d8e1-4677-822d-ada03d45f4ed"
        },
        "item": {
          "id": "83b16861-6ac5-409f-b80d-147c9f320056",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "87f7f65b-0408-4cbd-a90d-79842cb2ddc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844a3adb-0fc6-4c75-8295-f4181a4ebe92",
        "cursor": {
          "ref": "43d9ba63-f1e0-4846-911f-4c683a430d14",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "2b91321d-34fa-466a-9d51-54c3e3c456a6"
        },
        "item": {
          "id": "844a3adb-0fc6-4c75-8295-f4181a4ebe92",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "012ddcc0-321f-4ec5-b7fe-9f485ceaf48f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3be9de1-e7f0-43f6-97a6-c0d139d77af1",
        "cursor": {
          "ref": "c167b058-1c76-47c6-b199-c660420e3fc6",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a617419d-c1ce-4d31-99ad-1e273fa6061f"
        },
        "item": {
          "id": "a3be9de1-e7f0-43f6-97a6-c0d139d77af1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "16bd3520-80f4-4a4d-aa49-6897f0ea649a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9d9c4d-14db-4cca-baf5-cbf98ffd8004",
        "cursor": {
          "ref": "21e3f330-1cef-4931-8162-457168c8be0f",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "3c896064-78e7-48b3-b989-85993d4963be"
        },
        "item": {
          "id": "2e9d9c4d-14db-4cca-baf5-cbf98ffd8004",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "985e1c63-a0db-4814-a3dc-98e22f7d5b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfdc5200-59e5-4ad2-af3a-48f04af73211",
        "cursor": {
          "ref": "8522e30a-b913-41f8-a2d9-65b8025da09b",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ff6ad9dc-e82e-4e73-b9f4-932025b2d9ff"
        },
        "item": {
          "id": "cfdc5200-59e5-4ad2-af3a-48f04af73211",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b3458ccd-6675-48eb-bf30-8e3742e2882c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5e0d80-17f7-46b5-af26-7f4e0eef2506",
        "cursor": {
          "ref": "e5a549b0-f641-4482-ac01-9eb416fb85a7",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "58d15c6a-c23c-44d3-a511-6a80bfc20c8c"
        },
        "item": {
          "id": "5b5e0d80-17f7-46b5-af26-7f4e0eef2506",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ef0c2335-ec8a-4d66-b143-eff3a8e258d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "154e10f9-c934-4ab2-b66a-ec7a13b685b2",
        "cursor": {
          "ref": "bbfdf572-42ab-45f8-8ab6-95dfb100e4da",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1baef2ec-4016-445e-bec0-9a2b50dbb107"
        },
        "item": {
          "id": "154e10f9-c934-4ab2-b66a-ec7a13b685b2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5fc628c1-899a-41c6-ae15-853f72687e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4347db0e-6c38-438f-a593-3247f35cdebd",
        "cursor": {
          "ref": "01703338-97e0-431a-93bf-d2579f23f757",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "7ae819cf-3483-476c-9f43-33a60530266e"
        },
        "item": {
          "id": "4347db0e-6c38-438f-a593-3247f35cdebd",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ca82a38f-ea15-48ca-8b03-0491d67f5328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d34b39a5-d0ad-4566-848e-4a2f61ab629b",
        "cursor": {
          "ref": "7f746158-28ae-4fbe-bd71-4cc340fa8e16",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "03a3d582-57a0-4b01-8c40-d83e2fdafaa7"
        },
        "item": {
          "id": "d34b39a5-d0ad-4566-848e-4a2f61ab629b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d07f1671-06e2-4352-9307-cde923be66d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f573e09d-fdc2-4465-8d8c-686a91bc21e6",
        "cursor": {
          "ref": "f66e1676-2406-4d2a-af6c-7d56467ff2bd",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "37e5f982-35a4-47a4-985c-78a2d286c18d"
        },
        "item": {
          "id": "f573e09d-fdc2-4465-8d8c-686a91bc21e6",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8735cee5-a4af-4dbe-96f6-6f3513aef771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4201e30-a1a0-4789-b40b-0f864fb56eec",
        "cursor": {
          "ref": "f66e2965-739a-4bf8-8911-2745a4f118b0",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e3471681-e144-4f54-a2ba-2a3235f7cc67"
        },
        "item": {
          "id": "c4201e30-a1a0-4789-b40b-0f864fb56eec",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "997aeff0-3f5b-4df3-9b15-a26624d32eeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae327064-4c27-44e5-a609-bc897f4c8652",
        "cursor": {
          "ref": "8061bd87-4636-47c4-8770-9d4256e0b14f",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8aa67f29-be4c-4c9b-8015-bc3014037c78"
        },
        "item": {
          "id": "ae327064-4c27-44e5-a609-bc897f4c8652",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4711554d-513e-4c38-b99f-f5ff4acb730d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6874a1c-496a-4822-8787-7c8efdd2f818",
        "cursor": {
          "ref": "1cd4864d-57da-451a-9213-73e74448993c",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "843d702e-0257-4d01-85ad-5b0b7198ee25"
        },
        "item": {
          "id": "e6874a1c-496a-4822-8787-7c8efdd2f818",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b20c7b19-a4a5-4062-8918-6090910eb087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e02c240-e9a1-4144-9f9e-7d3a5c024b4c",
        "cursor": {
          "ref": "4f48debf-ef25-41c8-aabd-309454ecddcd",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "20772842-3d07-4054-a03c-530882766328"
        },
        "item": {
          "id": "3e02c240-e9a1-4144-9f9e-7d3a5c024b4c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "76387c08-2fa8-42d9-bc08-fda5edd2951b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5d9f23-538e-41f3-9871-0de559e07b42",
        "cursor": {
          "ref": "c6d41443-40a4-4394-b28c-fafd2737dcef",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "94ab9a02-efab-437c-abb0-e2227c6777aa"
        },
        "item": {
          "id": "ae5d9f23-538e-41f3-9871-0de559e07b42",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "e56b28d3-7de7-44ef-87e3-53de6211c0c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "884ec7ec-5541-4ab3-9c14-b6b486968f17",
        "cursor": {
          "ref": "f7a6fc09-b260-4cde-8735-5ba58572cc47",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ce589f70-a665-490c-bf55-f4bb34a0fee7"
        },
        "item": {
          "id": "884ec7ec-5541-4ab3-9c14-b6b486968f17",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "62f8b567-63d7-4ea4-b665-d14d34a92c6d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96664118-16d3-427a-9b7b-bbd2188f7389",
        "cursor": {
          "ref": "e760f0be-3cb2-483e-a512-3819d4eb7fdb",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "8727e792-13a6-4d7b-b2ad-475e654dead6"
        },
        "item": {
          "id": "96664118-16d3-427a-9b7b-bbd2188f7389",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a4cce6f5-0916-46ed-83ca-da6a8e27eca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd963a8-da77-405f-9912-ecff05b8c0f4",
        "cursor": {
          "ref": "2594803f-e713-465f-a86f-bdc982271ecc",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "95e82c19-cbf5-4036-9334-ea44eff995c8"
        },
        "item": {
          "id": "cfd963a8-da77-405f-9912-ecff05b8c0f4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8164de58-b135-4f23-bf9d-a9085ea3dcc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6e9225-4f80-44a1-b4e8-15385515ffc0",
        "cursor": {
          "ref": "725a6d90-6fae-4d9a-a407-cbeb4cf21586",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5a4e4ce9-f562-4301-8bfe-a7d3fbfc66a2"
        },
        "item": {
          "id": "ff6e9225-4f80-44a1-b4e8-15385515ffc0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f23c71f0-830a-4b6e-b5cf-8d3f0f27cba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e3745b-ac4a-46b7-86ab-0e4969557161",
        "cursor": {
          "ref": "6a9bcdb6-4eae-4998-ac8d-ddf29c5861d0",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "88420dfd-1464-4b63-8a62-0e8280810ec3"
        },
        "item": {
          "id": "21e3745b-ac4a-46b7-86ab-0e4969557161",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "186f8d96-6d2e-4904-bbba-32fd44e148bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de90099e-5c32-4286-9466-3b1c85f61884",
        "cursor": {
          "ref": "da52e49f-94e6-4e30-bf78-fa6b46c5dd53",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "45f230ed-ca38-4542-a14a-ddaa1b3787af"
        },
        "item": {
          "id": "de90099e-5c32-4286-9466-3b1c85f61884",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7f92b655-ab8b-4a49-9bdd-3fd2467fa1e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91161bf9-0240-4e26-963c-f97d9af3a178",
        "cursor": {
          "ref": "1446632b-a567-4e8a-aec7-cc7dcba61bf3",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "60794d84-e27c-4feb-8b9e-dd3137b467d3"
        },
        "item": {
          "id": "91161bf9-0240-4e26-963c-f97d9af3a178",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "384f6407-3c70-4e96-bc4e-10d200f0a6e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f51c16b9-238c-4cc9-960a-32bfab692230",
        "cursor": {
          "ref": "2179afa6-9017-4618-abd0-dead7ee2bf8c",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "58f20ed3-fc94-43d7-a87c-4d9fc2fcb3a0"
        },
        "item": {
          "id": "f51c16b9-238c-4cc9-960a-32bfab692230",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2587380e-522f-4860-abdb-01156d48b63f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8eee817-28a0-4541-bf92-43b2cb1baa59",
        "cursor": {
          "ref": "b310e64f-5c3a-4bcc-8731-220f17c30bd0",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6fab835c-9af1-4314-9f54-15d348eee9ce"
        },
        "item": {
          "id": "b8eee817-28a0-4541-bf92-43b2cb1baa59",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3944de66-5f72-4ff4-8125-f20aa0bc4fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa83e30-02e5-4a26-ab16-b4e31fb165a5",
        "cursor": {
          "ref": "c73b8836-b5b2-403b-b81d-23ca9e1ac19e",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "853ad4e0-48a0-4d55-8b78-f0da3108e5ee"
        },
        "item": {
          "id": "2fa83e30-02e5-4a26-ab16-b4e31fb165a5",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e729ff7e-d288-4fe4-92c5-a4562f158d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a85e54-5343-4de2-b22b-7993b22fb366",
        "cursor": {
          "ref": "b78ffe45-f235-4636-9aa9-403569f85e55",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b3d2ec8e-4b1f-4559-a7ef-cd770486c996"
        },
        "item": {
          "id": "04a85e54-5343-4de2-b22b-7993b22fb366",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e622febd-60e5-4574-814f-cca3c9e1391f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9497c4-36c2-4969-9e54-160bcf70074b",
        "cursor": {
          "ref": "dc485abc-8b01-41a4-975d-4bfb27b58009",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "8befa32a-30fd-441d-b08a-55c414c96575"
        },
        "item": {
          "id": "0e9497c4-36c2-4969-9e54-160bcf70074b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e1b6a7e7-d217-4c92-9081-a84b5446f101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d95302c-b718-4a22-b470-59452f04d58b",
        "cursor": {
          "ref": "24510e4d-bd0f-4536-8851-d14494eecbc9",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2bfdbcfc-56e2-4b1a-bf01-f277993aaffb"
        },
        "item": {
          "id": "6d95302c-b718-4a22-b470-59452f04d58b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d29fff79-4510-4b04-a17f-0cc88843cbe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d94e4e-8f40-4ebc-b8f9-b56ad7cb56b0",
        "cursor": {
          "ref": "31c3be0f-cc76-4d24-9683-4dd5a9cad9f7",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "64f2f054-6fa4-4ba4-a1a0-fe86d17e9a54"
        },
        "item": {
          "id": "d3d94e4e-8f40-4ebc-b8f9-b56ad7cb56b0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c1f4eaa1-3c5d-4c77-b59d-c0483ec21972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "304bf389-2624-4c7d-94aa-218113ba7618",
        "cursor": {
          "ref": "62048afb-6b52-496d-8033-96faf31f2c46",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ceb80479-74b6-4943-b8db-9ab37adbffd0"
        },
        "item": {
          "id": "304bf389-2624-4c7d-94aa-218113ba7618",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ccc91d28-ff4b-4569-a309-6686354257fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a36df216-6d2e-41ce-83d9-047881021618",
        "cursor": {
          "ref": "6f6225aa-6ffb-441f-bfc8-dcb09294b725",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "98f24a31-d39a-4100-a848-c0bfcf1d6900"
        },
        "item": {
          "id": "a36df216-6d2e-41ce-83d9-047881021618",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "db22ba34-1740-4433-8446-36354aad80a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "434187ee-7154-40f5-a6bd-4fd1613731ec",
        "cursor": {
          "ref": "fff42d86-9bf9-4f63-bb99-926510d7cee9",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "54c4a460-2e7c-41d8-8b75-1f3a2f65c89e"
        },
        "item": {
          "id": "434187ee-7154-40f5-a6bd-4fd1613731ec",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2fdd4fc4-6b29-4b67-8880-c1b24ddb683a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a807541-d858-4d88-9e8d-370062bc9eb4",
        "cursor": {
          "ref": "0c72a4e0-9f30-4fb8-bdd2-a7e58c2d336e",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "eb8bcafd-bbca-4551-ba46-c78d073f3e48"
        },
        "item": {
          "id": "5a807541-d858-4d88-9e8d-370062bc9eb4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b01cad8e-9dca-4c82-bf07-26c58330ff51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d80e43e-923a-450b-bffd-efe5de76a189",
        "cursor": {
          "ref": "bb39ab56-3577-4b9f-bd2c-3e370384b337",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "aaf098a3-a8a5-41aa-a6b1-e684e404659d"
        },
        "item": {
          "id": "1d80e43e-923a-450b-bffd-efe5de76a189",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "baa47412-2630-4cda-9ceb-6a4282e09155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd1ac21-8fff-40b7-8cbe-1403d3c74382",
        "cursor": {
          "ref": "d8610f53-cade-4426-8da4-88906cb71458",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "1a17a5ad-ef43-44e6-900d-fa53e9b52508"
        },
        "item": {
          "id": "efd1ac21-8fff-40b7-8cbe-1403d3c74382",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "07bdc6ea-22f7-4f30-95c2-12c69b10841e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d53a463-67e3-4be3-8257-26a6a7a35dc1",
        "cursor": {
          "ref": "7f055412-75f7-4011-be27-00e5249b2ab1",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3a113aa4-9752-4f6a-912d-332a0bf0aaa5"
        },
        "item": {
          "id": "6d53a463-67e3-4be3-8257-26a6a7a35dc1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2e00443f-693b-485e-b3bd-4d934174309c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d40207-a2b7-409a-8693-accd70602a66",
        "cursor": {
          "ref": "26ff1d93-cc23-4ceb-a283-aef915c5161e",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "7547792b-8ea6-456e-9436-6a1f3a3f6c42"
        },
        "item": {
          "id": "60d40207-a2b7-409a-8693-accd70602a66",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d5e259e8-5ed9-4d09-be04-42c9fa342173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c9d421-a307-43ea-858f-20daa09dc48f",
        "cursor": {
          "ref": "30e288ca-5010-4f8c-bf45-5cdaec2a680a",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a341c6e4-9795-494f-a549-2433f550b621"
        },
        "item": {
          "id": "a4c9d421-a307-43ea-858f-20daa09dc48f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ad9ea7e7-9f74-4508-b6b2-830ff3e07afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e0a0b9-b3f9-4d7f-b80f-c829ca04a13d",
        "cursor": {
          "ref": "032deea8-e043-45b7-aa44-eb9be12d34e7",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "8c644883-bd01-49f3-99e2-53c2aaa501fc"
        },
        "item": {
          "id": "a3e0a0b9-b3f9-4d7f-b80f-c829ca04a13d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8158b80e-49f0-4a51-bfa4-558d74ff8062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "079eeeaa-9b71-49a7-be6d-9d398a6e1c0c",
        "cursor": {
          "ref": "79d25274-9756-4e7a-9bdb-fe041ba7be8b",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "06b4f7bc-f2e6-4a74-8f6d-0691736990e5"
        },
        "item": {
          "id": "079eeeaa-9b71-49a7-be6d-9d398a6e1c0c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d9de8081-e7fb-4bfe-b035-09d767c914c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d88cc0-e0fc-482c-aea7-4120f4e5dac0",
        "cursor": {
          "ref": "afa86f03-9b4b-4d03-b6b9-05ca45abd101",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e51065d4-63c9-4614-b0aa-05d0f57b5e0e"
        },
        "item": {
          "id": "42d88cc0-e0fc-482c-aea7-4120f4e5dac0",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "afd1c0cd-acbf-4209-90a4-c8e5b347c00b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec9a7a36-4fe6-4ae0-83c9-f58fae29be84",
        "cursor": {
          "ref": "fda6dd58-01a9-43ce-81d3-5118fb9651f4",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "146c951a-66c8-4e95-a7f2-71171402d755"
        },
        "item": {
          "id": "ec9a7a36-4fe6-4ae0-83c9-f58fae29be84",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "98bcbcd1-6696-43bd-80ae-3862ab539289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b40ff362-e3b8-48ec-ac49-4e49a0eee563",
        "cursor": {
          "ref": "31161d26-5715-49f1-a09f-21f3adeaac89",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c43c955b-a2d1-4b6b-9305-0739faaa089f"
        },
        "item": {
          "id": "b40ff362-e3b8-48ec-ac49-4e49a0eee563",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "24c5bdc3-206c-4a1b-8fb8-db07a5611563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83c0f93-9125-4a2a-a6b1-b39777efc3da",
        "cursor": {
          "ref": "9d905f58-154d-45a6-b411-4540a2d56862",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d52720e7-5128-4d92-99e9-46855376b2a2"
        },
        "item": {
          "id": "c83c0f93-9125-4a2a-a6b1-b39777efc3da",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d4f17e0d-c075-432d-874d-c606de956582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b201bae-cce1-4fbb-918e-799ff4d80a46",
        "cursor": {
          "ref": "7e76a110-701a-470b-9973-a28c81055526",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ae9e0761-c374-4f44-b50c-db27f290c601"
        },
        "item": {
          "id": "1b201bae-cce1-4fbb-918e-799ff4d80a46",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "895b30d1-dd32-4ba7-936a-6ca1fdb20cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed66f702-61a5-4c68-ae8a-d2e3bbedcdad",
        "cursor": {
          "ref": "48ec0f09-258b-495d-8fef-79b1774f6cd6",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "dfeb6eed-73c7-4ca6-98f9-96cd9e626083"
        },
        "item": {
          "id": "ed66f702-61a5-4c68-ae8a-d2e3bbedcdad",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "11273092-67e5-456d-b63c-f8b84c30c97e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02cd2070-c041-4ccd-a8e7-30a600fb9352",
        "cursor": {
          "ref": "d07c75e1-6db7-41cc-8287-8334312958a9",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "88a084d0-694f-464b-9295-876ee2e47e96"
        },
        "item": {
          "id": "02cd2070-c041-4ccd-a8e7-30a600fb9352",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a0394d28-5126-4e05-ad48-be37ed57a93e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d17d88-ca58-47a9-ab1e-0701b968cbc7",
        "cursor": {
          "ref": "f0ed644e-c3b4-4568-b437-02b15659942f",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "8650ac77-eed4-4e8c-811a-b482cce6aeec"
        },
        "item": {
          "id": "e1d17d88-ca58-47a9-ab1e-0701b968cbc7",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "95ad4e33-a4aa-439d-8a52-cf27ed7f8a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7627318a-7d1c-43a9-8e6c-feb71bd99ab7",
        "cursor": {
          "ref": "baf45de3-64b4-4a42-887b-129dd63f3a78",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c5368e0b-81ca-47e5-82e7-fbaa7b9edfa2"
        },
        "item": {
          "id": "7627318a-7d1c-43a9-8e6c-feb71bd99ab7",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "1686a61b-8fa7-4761-a29c-4ad740de55b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b248e54-b096-4b2c-a11f-a9f8ff997328",
        "cursor": {
          "ref": "b80c4585-0c00-4bea-a068-3cc3902a3587",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "364af43f-4cde-4c55-9e17-e00ddb132d2a"
        },
        "item": {
          "id": "6b248e54-b096-4b2c-a11f-a9f8ff997328",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a31f752c-cc5d-4618-9230-812a403db30e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b824b42-0d25-4adc-8a9b-b5d924662ae1",
        "cursor": {
          "ref": "5eb1b099-1807-4315-9f8d-ebc14207653a",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "525c6352-9da6-4268-96a9-e1fdcbeca3ec"
        },
        "item": {
          "id": "8b824b42-0d25-4adc-8a9b-b5d924662ae1",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c3ce604d-821e-499a-8692-b41120ab962a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6748261d-23cb-4b82-8d01-29e2cab83cca",
        "cursor": {
          "ref": "4b4e97d8-1e4e-4eda-ba4f-8c6ccbf46a07",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b767af78-d9cc-43a1-ac00-d5add675cccf"
        },
        "item": {
          "id": "6748261d-23cb-4b82-8d01-29e2cab83cca",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "a3d4db81-2604-4a42-8c08-d149f9b3ea1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76684ecf-a3aa-4d2b-93e3-a023a98d91ae",
        "cursor": {
          "ref": "da0a13da-97c4-4324-8f93-dfb15ab88791",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "2e86ed92-0ae3-4725-8cfd-3602ed13f7a6"
        },
        "item": {
          "id": "76684ecf-a3aa-4d2b-93e3-a023a98d91ae",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "1e0c89ce-2d4e-434e-8861-38e13076358b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcdf3afa-27a8-4fbb-b11c-9fc012a4bcbf",
        "cursor": {
          "ref": "4d700085-8de0-45ff-a8d7-958fcdda6f83",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "6a1910bc-f2da-431f-bc04-c84966147b9c"
        },
        "item": {
          "id": "bcdf3afa-27a8-4fbb-b11c-9fc012a4bcbf",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "46edb7b8-537d-48f7-928b-7fe23a7807fb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac39cbd4-a690-472d-82b0-94cf25a66139",
        "cursor": {
          "ref": "35f4fcef-fe23-40ff-b6db-7139e6588f90",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "0e03ba97-74ec-4a1d-bede-2f2c8855babb"
        },
        "item": {
          "id": "ac39cbd4-a690-472d-82b0-94cf25a66139",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d378c606-0006-4c6c-a2bf-080b7123398f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f26582b9-0f77-486d-9aaa-654f98fc518e",
        "cursor": {
          "ref": "83272b3f-e595-411f-928a-e4cc48d90f48",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "bc2e3fdd-4180-4c21-ae50-d3f774a562ac"
        },
        "item": {
          "id": "f26582b9-0f77-486d-9aaa-654f98fc518e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1c7ce1af-4f2f-421c-a7e5-e0b2c40dd8e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a766818-74ee-48ba-9edd-38b0c60d9c26",
        "cursor": {
          "ref": "1abb91b2-ae90-48db-9ead-924e6fa27b27",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "a5f4bbdb-ae0d-4461-87c3-8c2f547b8e1e"
        },
        "item": {
          "id": "6a766818-74ee-48ba-9edd-38b0c60d9c26",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "315aae36-b26f-4576-8edd-46d5d3526d2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6283f2d-612b-4eae-ac7d-e8bb902f5883",
        "cursor": {
          "ref": "4f0f38d9-bb47-40ec-9bf5-30e98943b15a",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "107d6855-0443-4a7e-a652-4b68d5d0f4f3"
        },
        "item": {
          "id": "d6283f2d-612b-4eae-ac7d-e8bb902f5883",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3cf3d7e9-d886-4492-935a-4cf61efa5461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93401476-6c2e-4a75-a579-d8e362711e55",
        "cursor": {
          "ref": "d38f97be-14c5-4245-b9fa-971ed2d2240d",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "621f5edc-5f19-435c-ac48-5168704a4d9a"
        },
        "item": {
          "id": "93401476-6c2e-4a75-a579-d8e362711e55",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "191c7eb5-cc6b-4e2d-880e-eb8b010036c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ab992a-ddd0-4416-b4e8-919988ceabca",
        "cursor": {
          "ref": "30806e8c-c977-4bba-8cd5-fb756f48d9e8",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "dc749654-61c6-4c22-996d-3aaeaff6094f"
        },
        "item": {
          "id": "15ab992a-ddd0-4416-b4e8-919988ceabca",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f68ed36d-3f11-42c0-ae0d-f2221b6f2e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d67fc9e4-0681-4c40-b2a3-3ab91055389b",
        "cursor": {
          "ref": "47deabfe-5ea2-4b1b-b579-f8a9419fafd0",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "5429ab58-03cd-4111-b671-8276fff66bbb"
        },
        "item": {
          "id": "d67fc9e4-0681-4c40-b2a3-3ab91055389b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "97989776-16eb-4e23-8b3b-992916707884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e3509c-6fa8-406e-9bef-44a3e70cc371",
        "cursor": {
          "ref": "32db8747-785f-494e-8572-3cade73e3a91",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b1412d95-1efc-431d-8de0-8b1e07b96815"
        },
        "item": {
          "id": "98e3509c-6fa8-406e-9bef-44a3e70cc371",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "cac223a3-a544-42b7-bcd1-58f544148258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407ac0e7-cb2f-4a9d-80d7-bae0af8ff650",
        "cursor": {
          "ref": "23ddaddc-dd96-4c9f-b925-23b8418e9a41",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3dc81073-83db-4a10-8c63-4c242a9e8b03"
        },
        "item": {
          "id": "407ac0e7-cb2f-4a9d-80d7-bae0af8ff650",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1b25655b-2cb3-4c9f-ac2e-7f0dd7e75169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab86673-d443-4490-b47b-bf65e02552c0",
        "cursor": {
          "ref": "de634c92-f36e-4e8b-ad1f-e0a00eca83cd",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a601ce9e-13aa-42c8-bc29-3336f58fd777"
        },
        "item": {
          "id": "2ab86673-d443-4490-b47b-bf65e02552c0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f165e842-0c7d-44bc-a699-65cebe7e5953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da8799f0-3327-4d49-8171-b7d666552d7c",
        "cursor": {
          "ref": "9c6f1e98-0a44-401a-aacf-cdd6265b9045",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "8c4f90ef-bd34-4cb5-aeca-52010ed5d7d4"
        },
        "item": {
          "id": "da8799f0-3327-4d49-8171-b7d666552d7c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8fbdc83b-8f9e-4055-8893-5fe4f687cbee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a6f7d5d-6024-4c2c-9396-72f57f552079",
        "cursor": {
          "ref": "f3641a31-ba6d-48de-95b6-c150938d8101",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a2c21745-1698-4f86-90bd-aad342ed4d62"
        },
        "item": {
          "id": "9a6f7d5d-6024-4c2c-9396-72f57f552079",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8937c6a3-02bb-4d2f-a6d8-6ee4c6a72d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f16972-e6dd-44a7-b034-22520dd92132",
        "cursor": {
          "ref": "65eccc73-65bb-4f20-a50b-ad189a9fa66f",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "611dce7d-6329-4952-a5c2-8be9c70d28a1"
        },
        "item": {
          "id": "18f16972-e6dd-44a7-b034-22520dd92132",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6201ec98-9207-443e-a05a-3db8d909380b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dae9657-eb96-46f4-9656-2f29bc64c123",
        "cursor": {
          "ref": "c7a8de32-9352-4d80-bef3-eb8c625f29f6",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e54e7911-6876-4064-8db6-cc446accd618"
        },
        "item": {
          "id": "6dae9657-eb96-46f4-9656-2f29bc64c123",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c8286e00-c0df-4e41-aa6d-971a8ca38eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa43d46-5cf1-4ac8-ad39-45728452e4a2",
        "cursor": {
          "ref": "8704b9f5-0487-4980-b941-bd013ee9c08a",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "38e49934-2b69-4eab-9ded-fe982adcd5f5"
        },
        "item": {
          "id": "3fa43d46-5cf1-4ac8-ad39-45728452e4a2",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8aa90105-15bd-4006-961f-66d9b476f128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c86406-ed47-4095-a53d-1a9828fda031",
        "cursor": {
          "ref": "f66029f2-0032-4c58-9ac2-b01699848afa",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a438dc8d-2023-40d2-b070-717d4ae38c68"
        },
        "item": {
          "id": "83c86406-ed47-4095-a53d-1a9828fda031",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "57bbdd8f-ae1f-4443-a3df-0818b43193ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0418adf0-17f8-4c79-975e-f43cdbe62152",
        "cursor": {
          "ref": "46485ff5-5639-4141-9b2d-c122e57e4f51",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "553e74d3-7aae-4ebc-a8dc-3eb4b918fe9d"
        },
        "item": {
          "id": "0418adf0-17f8-4c79-975e-f43cdbe62152",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9a248863-d8fd-4cc7-9bfe-7e747b054922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96417ba-a743-4855-9fa7-97639551e0a8",
        "cursor": {
          "ref": "bac62ab1-ca71-4e84-b16b-543aefd07c73",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1b27ba1d-b98b-48c8-bd61-cf0bd962b6d4"
        },
        "item": {
          "id": "f96417ba-a743-4855-9fa7-97639551e0a8",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "948f0e8d-c450-41dc-9a54-783080af6505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e8692c-2723-40a5-a646-5ba80a5f4e94",
        "cursor": {
          "ref": "faf480ba-de10-465d-a327-cd2273907b8c",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "e5488fae-d719-4e2f-9962-200346e965ca"
        },
        "item": {
          "id": "63e8692c-2723-40a5-a646-5ba80a5f4e94",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "07084f59-b848-459e-8389-f893110915b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff86cf1d-ab2d-4b24-952c-ab152b07d5a2",
        "cursor": {
          "ref": "5aa5012e-7c70-4d6f-bc95-3a2c791a6a73",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "2decac18-125f-415a-9c5d-940193f789ad"
        },
        "item": {
          "id": "ff86cf1d-ab2d-4b24-952c-ab152b07d5a2",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a3761c8e-c37f-43a6-ae62-5033fa0093e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71cb74e-da04-46fc-bcb7-e7f857720dae",
        "cursor": {
          "ref": "3a4cdbe1-bd00-4dcb-857b-ab7a056b2df7",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "fca157ef-0b69-4187-b3a3-17aa2e92eb45"
        },
        "item": {
          "id": "a71cb74e-da04-46fc-bcb7-e7f857720dae",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6fbdd9da-7d64-424d-b5a5-68e3bd8c92e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8246096a-1eae-4d65-867b-30435cb05ea9",
        "cursor": {
          "ref": "57101641-97a0-42c8-977a-881d53bb6ad5",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d1736496-ee5f-4ff0-8f94-566aa3709ba9"
        },
        "item": {
          "id": "8246096a-1eae-4d65-867b-30435cb05ea9",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "fbbff727-9444-4c46-bef0-f30a24535861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb757d7-253e-4198-af0b-d76f9f767030",
        "cursor": {
          "ref": "c9689851-6bd5-4c5f-b0a3-fe9f7fe5a4cd",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "37c63580-4963-4258-90aa-c1d5c4e5ad36"
        },
        "item": {
          "id": "0bb757d7-253e-4198-af0b-d76f9f767030",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ef16bcea-9562-43cc-bbc9-6e78d7398bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b9676ed-a07f-4d98-be20-87450088742e",
        "cursor": {
          "ref": "48f2303e-32fe-464b-9783-c049ee378aeb",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "a36259da-1f3f-499e-b551-604821c7dcfe"
        },
        "item": {
          "id": "6b9676ed-a07f-4d98-be20-87450088742e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "0225718c-2afc-42a7-a792-5a31d055c543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "174fe37d-bf64-4cb6-b079-dcb03902210c",
        "cursor": {
          "ref": "5efe1f7f-ad08-4a52-a623-7a45228b914d",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "9a6083a6-58c4-4bdb-8f18-2761222f7387"
        },
        "item": {
          "id": "174fe37d-bf64-4cb6-b079-dcb03902210c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "f5383779-a6bc-4cd3-be02-a6868989ffb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b388aa-bd2e-451f-b460-5c0b175a68fa",
        "cursor": {
          "ref": "ba46369b-ce90-4506-b57b-4b7abae1581e",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ba69daa9-1ad3-4030-af4e-280b00d38d22"
        },
        "item": {
          "id": "12b388aa-bd2e-451f-b460-5c0b175a68fa",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "103b83b1-3e85-442b-afb4-ba3e822339a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d29f2a1-75e9-49be-96cc-97e0edea6583",
        "cursor": {
          "ref": "7fc6a9f3-d802-4ba3-abb9-4cbe5f6ca794",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "81341d61-50a1-4421-829a-a9db00a6224a"
        },
        "item": {
          "id": "6d29f2a1-75e9-49be-96cc-97e0edea6583",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "adfbac8e-771a-4607-980a-f1653b48ee03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "955161f7-68a6-41cf-9a9d-48a3406867fc",
        "cursor": {
          "ref": "596ee4ef-b233-4ce6-b715-ef5fca8efb6b",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8fb113f6-798c-404f-8cbf-aeb5b0d4d4ca"
        },
        "item": {
          "id": "955161f7-68a6-41cf-9a9d-48a3406867fc",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d6d28760-ac35-4966-b6bf-ec5869d23245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c582d3f7-541f-4754-9af6-2ab3f0917f30",
        "cursor": {
          "ref": "350fd8eb-1676-4ce0-b8e9-48b9af6d3bb6",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "28ec0ae4-8d7f-434e-a9b9-351e4c12ae8f"
        },
        "item": {
          "id": "c582d3f7-541f-4754-9af6-2ab3f0917f30",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "abe0398e-3843-4b07-bc71-230dbdf9f97e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0138206-e95c-4d4e-9df7-cf2eeb3cf554",
        "cursor": {
          "ref": "0fe11a34-8189-44a5-a5c1-3b99a588bf28",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "81647397-d5aa-431e-ac24-607d39fcca0b"
        },
        "item": {
          "id": "e0138206-e95c-4d4e-9df7-cf2eeb3cf554",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "823fb8b0-10ee-4630-972d-d08692898c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95da3f48-8b4e-40ad-84b7-908f8b40e101",
        "cursor": {
          "ref": "069df576-a380-42d9-8642-e58a1fbf0568",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "45f7f188-25f3-4e0e-9275-c05eb4e591ab"
        },
        "item": {
          "id": "95da3f48-8b4e-40ad-84b7-908f8b40e101",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "bc17cc1b-13fa-4b51-aff0-dbd3951a7a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a8ba2b2-40ac-4205-ad60-dab50b27ddd3",
        "cursor": {
          "ref": "de98567a-6ad2-4dfd-a57f-e55112d437e3",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f0c68818-26c4-46e1-8131-9e744fd8ea40"
        },
        "item": {
          "id": "7a8ba2b2-40ac-4205-ad60-dab50b27ddd3",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7d411dc4-5311-4420-8799-dbaf0152149a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb66f7a-a898-494e-bbce-d7e2d5fa8761",
        "cursor": {
          "ref": "73d9198c-3fb3-4cf1-ae75-259c2fedbc0d",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8e580c3d-7ada-4e95-bdfa-8ec61e3756f1"
        },
        "item": {
          "id": "8eb66f7a-a898-494e-bbce-d7e2d5fa8761",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "52ce69ab-f68a-4778-9b7e-570dfdbd79a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa786d5-b28a-47d2-9e99-65f9b7c2226e",
        "cursor": {
          "ref": "e30e63dc-0eb5-4064-9603-72e6df878585",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5cabea31-ca46-40c3-ae7f-75af6bb32b86"
        },
        "item": {
          "id": "7fa786d5-b28a-47d2-9e99-65f9b7c2226e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "866bd25a-0c8c-48cf-b884-5da6603b7962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e740758-1e21-4d36-b4af-7981844fd39f",
        "cursor": {
          "ref": "ec7d4298-deb5-4df6-8b60-11960e70a5e6",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d7ae8fd9-9670-4005-ae63-c28900188338"
        },
        "item": {
          "id": "8e740758-1e21-4d36-b4af-7981844fd39f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "6fcdf18e-e087-4217-bcf4-d37569341657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3b294b-38bc-4142-a40b-9599bc28aa82",
        "cursor": {
          "ref": "6ca4db76-76ed-47dc-b312-4ed4da40bca3",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "604b4474-5a1c-4c16-90a6-df9f762a04a1"
        },
        "item": {
          "id": "0d3b294b-38bc-4142-a40b-9599bc28aa82",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "285ee0ba-2ac3-4143-9d1f-823ddbf6860b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6282e5d0-a258-4526-ab59-56dc73e71eb1",
        "cursor": {
          "ref": "585ddee9-b719-48d0-8bd6-443121f98f57",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ec194f4e-1ce8-4569-894a-fbc9a7d7b985"
        },
        "item": {
          "id": "6282e5d0-a258-4526-ab59-56dc73e71eb1",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "0445e7a1-fb2f-47f8-8f8a-705df2dc7ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d6977ee-8487-47e9-9937-13af48853024",
        "cursor": {
          "ref": "38b10611-c6a7-46c3-acd9-98a85cfbdd96",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e00207e9-3865-4566-8954-d91eb1d8c7ce"
        },
        "item": {
          "id": "8d6977ee-8487-47e9-9937-13af48853024",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "44be01ea-b72f-44ba-b9df-6a0b609d2166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae4a97f0-335f-4fd1-b7b8-0c8508578ce6",
        "cursor": {
          "ref": "29e850d4-1a9c-41f3-8669-357da5214eab",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "19f2e489-dc17-445a-b1bf-184d5da3865b"
        },
        "item": {
          "id": "ae4a97f0-335f-4fd1-b7b8-0c8508578ce6",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "857f7f65-8f16-42db-8b73-5325d8a05e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b01e597-ef27-4464-b8c8-b0d52c9eaa8d",
        "cursor": {
          "ref": "8200b844-f3d3-4a23-a1f5-2dafbd90d995",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "2ed6753d-6f5a-49c8-8229-4b0e7e60e392"
        },
        "item": {
          "id": "6b01e597-ef27-4464-b8c8-b0d52c9eaa8d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "115c4529-d6b1-408b-9d51-2ba858e02125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a12803-d42f-418c-8f0b-d5dc4286e289",
        "cursor": {
          "ref": "07388393-d42b-44b7-8c14-b0e7c664eeb5",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "893f1ba6-3d81-4c2c-bdad-106428eeeb78"
        },
        "item": {
          "id": "a3a12803-d42f-418c-8f0b-d5dc4286e289",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "edab8806-c867-42a0-9160-fb4b084b279b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403b55e1-ec91-45ec-a8e4-1c36327f2e37",
        "cursor": {
          "ref": "9f7c09c4-0c57-4ef2-8e21-65221986863a",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "70009acb-f2ae-49ab-8a33-205741a0875e"
        },
        "item": {
          "id": "403b55e1-ec91-45ec-a8e4-1c36327f2e37",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "bd9459bc-7747-419a-a861-363d9bf9938a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34fd957e-8fb5-4519-ab00-ae44be06dcd7",
        "cursor": {
          "ref": "a7ead04e-98de-4a02-9b7b-5402abb085a1",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "0a05903a-10fd-42e8-8720-891b9afddbdb"
        },
        "item": {
          "id": "34fd957e-8fb5-4519-ab00-ae44be06dcd7",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e3335e64-82d8-453a-821c-95538c55be15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e787350b-90f7-40cd-bc6a-8c52c0ad173b",
        "cursor": {
          "ref": "e2bb723a-ec02-4eed-9275-c809aaece3fc",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e08d8649-da5d-4e8e-94ef-7b0b2149f0e6"
        },
        "item": {
          "id": "e787350b-90f7-40cd-bc6a-8c52c0ad173b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e28fc0d7-9334-4dd3-8251-7c14bfb618ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89158f90-b8c6-437b-b008-208fe8af42a1",
        "cursor": {
          "ref": "902cc382-15b3-475f-95a2-7c79f6dc1cae",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "090f277a-cd99-4c1f-aee9-e9b83c4e20d9"
        },
        "item": {
          "id": "89158f90-b8c6-437b-b008-208fe8af42a1",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8fe9a5c4-3bdc-42c4-9a0d-3fd89e1d5451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af8f1ac-ebe6-4b29-859f-231cdfdfc291",
        "cursor": {
          "ref": "2554122d-94a8-43f0-b70b-513bbeecc73c",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b9542439-37de-40e4-83a3-004cedfd05fa"
        },
        "item": {
          "id": "9af8f1ac-ebe6-4b29-859f-231cdfdfc291",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "aab9ee33-fbdd-4678-b04b-d70342d2161e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "300c048d-2b5d-40f9-90df-1359c256d436",
        "cursor": {
          "ref": "da53289a-f7a7-4115-abe6-cd35c8d214a8",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e0b20be7-0fd7-474a-be4e-86e3ca057458"
        },
        "item": {
          "id": "300c048d-2b5d-40f9-90df-1359c256d436",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "fab9babe-9ba8-4b17-8a3a-1f794453a8a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe9250b-d2b6-4852-8dee-8a06af524c2b",
        "cursor": {
          "ref": "81d08b79-8a61-41d7-b17f-d2bc80d2f6f7",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ac2b4f30-1110-4f05-b9e9-de1a36a3894d"
        },
        "item": {
          "id": "1fe9250b-d2b6-4852-8dee-8a06af524c2b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "aac12249-7230-4dfe-80c9-15ff36c59f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10656adc-6f0e-425a-9f5c-ffe219952053",
        "cursor": {
          "ref": "85d3f3f1-efda-4acd-a294-9ff09240e6d0",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "fac4e04f-59a9-4fc3-8db4-965570af728a"
        },
        "item": {
          "id": "10656adc-6f0e-425a-9f5c-ffe219952053",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "87b4e9f5-c3ab-4460-87b8-985509988f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ebe4190-d613-419a-afef-83573392e187",
        "cursor": {
          "ref": "d2c0aec4-720e-429d-bf9d-3001d5b29460",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ae8133b7-4d51-4e64-a64f-57d20dfaa039"
        },
        "item": {
          "id": "2ebe4190-d613-419a-afef-83573392e187",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "cc29aa16-10cc-44cc-bb57-2431b4994f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "385b00c5-bbea-4b68-a5b4-58fd28802c58",
        "cursor": {
          "ref": "d4c4b348-1f66-4b23-9363-ecf168bd06e0",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "7aeff5df-947a-448b-a2b0-3c075ef6eb25"
        },
        "item": {
          "id": "385b00c5-bbea-4b68-a5b4-58fd28802c58",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "958aa35f-d6ba-4611-b604-0fcdc3ba7c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789811d5-594c-4334-ae7b-20a20de39ae8",
        "cursor": {
          "ref": "a9f22246-9b89-4602-bfc3-ced2fe99bdfe",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b19f3c70-60ed-4236-b4b9-0400c55e1319"
        },
        "item": {
          "id": "789811d5-594c-4334-ae7b-20a20de39ae8",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f655a6ca-50bd-4942-9b3d-90fd0325673a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689ef5cb-1eb6-4a0f-954f-3893eace84ca",
        "cursor": {
          "ref": "3207286b-aa0f-48ad-9c73-ff055c5d61d3",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "04cfe0d9-f496-47eb-8182-88261ec4fe62"
        },
        "item": {
          "id": "689ef5cb-1eb6-4a0f-954f-3893eace84ca",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "58e7a8d7-a4b0-493f-be02-4fe1af3d30e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa10c48-0d01-4212-ab12-a29eda3cefe1",
        "cursor": {
          "ref": "13c0f0be-fe1c-4712-a286-03a6e9f5425e",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a394aef7-6611-44cf-a862-b0f03021a3e0"
        },
        "item": {
          "id": "6aa10c48-0d01-4212-ab12-a29eda3cefe1",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3ecd0f11-fd77-4bef-acd0-ea3b072f3ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d077d0be-dff4-424c-89c5-f1fbac3a4492",
        "cursor": {
          "ref": "bb29e156-ac87-4bbe-9512-ab2890188df2",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "cbcb84d5-4a0c-4735-b972-ee6a6acd60fa"
        },
        "item": {
          "id": "d077d0be-dff4-424c-89c5-f1fbac3a4492",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "829e2a7b-14b9-4483-90ca-fdfca30e0e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbab9a32-716b-49e6-8dc7-cba2e6a9b66d",
        "cursor": {
          "ref": "5f17ea43-438e-4c0c-a005-d0b8f64201af",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "bde021b3-e29e-4ff5-8866-1bbe3ac11354"
        },
        "item": {
          "id": "bbab9a32-716b-49e6-8dc7-cba2e6a9b66d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "421b7ff5-1cde-48d6-a4e0-f38e26565c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8ccb431-9bad-4ff0-9c6c-896ff0bccfc1",
        "cursor": {
          "ref": "57867102-632d-4ed6-bd68-ae61a6002ed7",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8148ecd6-50fd-4fc6-8b14-37f8f137ce61"
        },
        "item": {
          "id": "c8ccb431-9bad-4ff0-9c6c-896ff0bccfc1",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "afba5aac-58b1-4fe0-b669-1f1aff7bb199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba9574d-7513-4837-9909-96d15cbeefe5",
        "cursor": {
          "ref": "8abb0a51-20d3-452f-8ec1-25520f5e564d",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "7caf4ea5-f7bf-4cd6-9a1c-627497021063"
        },
        "item": {
          "id": "dba9574d-7513-4837-9909-96d15cbeefe5",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d95d1dd0-fb15-4bc3-ad7c-63be31216151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f73c1fd-868b-4675-982a-c237b06baab5",
        "cursor": {
          "ref": "28796274-555f-44f0-a62c-90764096caba",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "59db3a14-97d7-42eb-9f9a-a5e82a50f747"
        },
        "item": {
          "id": "1f73c1fd-868b-4675-982a-c237b06baab5",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d26d4bc6-d55f-48db-8ab8-414f5e740cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b70dd53-871f-45b2-a014-1546342c5d3a",
        "cursor": {
          "ref": "8b4a7c20-5c66-4e81-af72-e90ca9ed6027",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b4cd6c38-45ac-4c14-8a81-5175661a04e9"
        },
        "item": {
          "id": "3b70dd53-871f-45b2-a014-1546342c5d3a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e90bd0c6-e8c0-4bfd-a5ad-97b2ed2b789f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "321c7065-5ea9-4567-b20d-b47e479f23ff",
        "cursor": {
          "ref": "c7223c20-cbf5-484b-bad2-99d10975b749",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d346cd01-5b8d-4637-88b4-3e7c2314c8ce"
        },
        "item": {
          "id": "321c7065-5ea9-4567-b20d-b47e479f23ff",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4fe08ee5-f659-44a0-8068-38d164b7d2b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "547528ae-0db3-43c6-88b8-775ba12d0b08",
        "cursor": {
          "ref": "6240bc41-b8ad-4309-b2b6-35f11225f62f",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ba99f0f6-846a-4807-9451-f1c2c665331a"
        },
        "item": {
          "id": "547528ae-0db3-43c6-88b8-775ba12d0b08",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "62de56e4-0432-4511-8f0d-73f57f9737f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbdfa870-4f8a-4f2d-b0d5-cdd623a8ef00",
        "cursor": {
          "ref": "6b238c08-bd06-4cbb-86c3-68bd9cfb7603",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1a144089-e1d3-4667-a62f-9f5b594c631f"
        },
        "item": {
          "id": "fbdfa870-4f8a-4f2d-b0d5-cdd623a8ef00",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9ae3634a-636d-4833-99d9-ce770d245367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e00281b2-dcf8-4aca-b628-374deb67d87f",
        "cursor": {
          "ref": "49cc354b-9d09-496c-badb-0c57bcfaedc9",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c81f55b6-3006-457b-a8d2-725c63ad4cfe"
        },
        "item": {
          "id": "e00281b2-dcf8-4aca-b628-374deb67d87f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "107c8714-9243-4857-b49f-8ce3aae7740c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dfd3890-b5b1-418f-8362-a5abc0479226",
        "cursor": {
          "ref": "e2041b1c-7a82-426a-af07-bd240d8fe2ba",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "82750f07-d867-4c42-9eb0-548fc67953af"
        },
        "item": {
          "id": "4dfd3890-b5b1-418f-8362-a5abc0479226",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a6518838-7d1a-40df-8040-7947bc45e56b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a662893a-c1d3-4327-bcf8-2a76d0cd3576",
        "cursor": {
          "ref": "7526d8ca-454d-45a1-a0d4-af38c6095cb5",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "8468f423-e48d-41f3-9402-4deb9490f04c"
        },
        "item": {
          "id": "a662893a-c1d3-4327-bcf8-2a76d0cd3576",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "15e101f6-14d3-4208-bfe0-5999cf9b1cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc80ba12-0d7d-4281-adf3-3fe6c31e1e7d",
        "cursor": {
          "ref": "385b3d86-de80-438b-91a4-830e41b566e6",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "05beaff3-4799-41c7-ad26-dfb058ae1fab"
        },
        "item": {
          "id": "cc80ba12-0d7d-4281-adf3-3fe6c31e1e7d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d4e7d1c3-6c9c-4430-b30a-da9415002fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5fb49c-9225-4932-962b-ab8eeef6ae26",
        "cursor": {
          "ref": "8ca50dfa-d33d-45c1-a987-ae6778e39145",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9fa2ec2c-4e62-4f4a-97c6-e3690eb25143"
        },
        "item": {
          "id": "4a5fb49c-9225-4932-962b-ab8eeef6ae26",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "61e60754-757a-4497-a2f2-46ab8b0d2200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f0a97c-e9af-4d2e-ac32-4adcc6b30c59",
        "cursor": {
          "ref": "b3ddee56-6a29-45d3-ac0b-b182f6a2309f",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b403b333-3e04-4a83-835c-bfb8c0b2ebfb"
        },
        "item": {
          "id": "d6f0a97c-e9af-4d2e-ac32-4adcc6b30c59",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b7a71bdd-bb14-45a9-a3a9-351e3bc4f791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f0cc93-11ed-4491-b1b8-1c590e3bb2ca",
        "cursor": {
          "ref": "baac46b6-bbb5-45e4-9525-7a8848fe1911",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2a7ffe6e-75b7-4f77-8a52-0eab6de1cc17"
        },
        "item": {
          "id": "49f0cc93-11ed-4491-b1b8-1c590e3bb2ca",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "0b1d318a-dc5c-42c9-a132-9bac62e3ffb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d33c10cd-2223-4f0e-959f-23726730dc09",
        "cursor": {
          "ref": "21faa460-1385-49c1-b622-95e7962c4ad3",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "061b3ac5-430e-4140-afad-371670985c06"
        },
        "item": {
          "id": "d33c10cd-2223-4f0e-959f-23726730dc09",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e1c52350-c2f4-4572-97c6-0a7d0c41d749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7666481-9c9e-404e-9510-173d03a4cfe4",
        "cursor": {
          "ref": "37bccd20-912d-4e8d-92a7-fdda9c9679df",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b57a074f-0336-4fd1-a762-14c703927565"
        },
        "item": {
          "id": "d7666481-9c9e-404e-9510-173d03a4cfe4",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "9e986391-4b31-4f5f-9ee1-dcd1db2b5da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a02ae4c-17d4-4761-b050-97b96ace797f",
        "cursor": {
          "ref": "e21a9f0e-3371-4f24-9df2-80a439d5ab05",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "b793953c-5f9b-4a66-8646-b46ab9e098be"
        },
        "item": {
          "id": "6a02ae4c-17d4-4761-b050-97b96ace797f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d11f50e0-690c-496c-8216-e5e67275092a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27763594-5a7e-49eb-8f9e-57b5934fd967",
        "cursor": {
          "ref": "dfcd929f-b433-458e-8353-d71dd2c1aa69",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "1fef6ff1-f9e4-41e1-96a2-663c91fe5475"
        },
        "item": {
          "id": "27763594-5a7e-49eb-8f9e-57b5934fd967",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "883538c8-34ca-446e-8bfa-b007c44d0d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f543ba-3819-4951-b449-998eb5cc89b1",
        "cursor": {
          "ref": "86574ef8-9945-438d-b653-823378cdcede",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "453c11fa-2141-4492-b1b1-a1e28d5d50ae"
        },
        "item": {
          "id": "d0f543ba-3819-4951-b449-998eb5cc89b1",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "5386ea10-77a8-41fa-907c-30753dad33f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ba15b6-143b-4ce5-be4b-a3d074b52be9",
        "cursor": {
          "ref": "1cfb37bd-ac5c-4191-bdc8-f1b794b3471f",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "ccb22984-dc71-4ab2-8f56-60bc8e74949e"
        },
        "item": {
          "id": "74ba15b6-143b-4ce5-be4b-a3d074b52be9",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "740d02c4-143c-4274-955e-275b43c59d64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d5472ca-c26a-4595-9577-37fcb41debe4",
        "cursor": {
          "ref": "250cc039-752a-4741-bf8f-817c0ef0e2ca",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "7a57b9fe-e98b-49f9-9577-8a53cff7ee76"
        },
        "item": {
          "id": "7d5472ca-c26a-4595-9577-37fcb41debe4",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "16956dba-219c-43a3-9d0d-4b7a7256dc52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a1ea622-7143-478a-a026-f362eb0071a2",
        "cursor": {
          "ref": "886f4014-14f0-4856-81db-2e54b5e56106",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "315197e9-58b7-4afe-9b25-30c3a89e94fd"
        },
        "item": {
          "id": "4a1ea622-7143-478a-a026-f362eb0071a2",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "fadffdfd-df16-4ce9-9e09-e20b5ef383e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fae4df8-af43-428e-ab12-1197d5a3b3ea",
        "cursor": {
          "ref": "9f2d5d17-b387-4e2c-8c59-20014b8f1dd4",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "24a0f29e-34d9-4d84-bc41-eb0b063dbb23"
        },
        "item": {
          "id": "0fae4df8-af43-428e-ab12-1197d5a3b3ea",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "2047a779-b644-47be-a975-85b06150c1e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b0119c-eec2-4a43-b3e4-46dcbc11fe5e",
        "cursor": {
          "ref": "42fa4b97-b79e-44ea-aa01-1c9c301902e3",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "ef1c5d6c-a16f-42bf-afdd-4ed474effee5"
        },
        "item": {
          "id": "f0b0119c-eec2-4a43-b3e4-46dcbc11fe5e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "5ba04725-e21d-4822-9afc-c46cc1d87b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e7b5e9-f546-4272-8044-df1379ba0245",
        "cursor": {
          "ref": "645111df-8eaa-4a4b-ae90-06ae495e6b28",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "d9a35003-270d-4c32-a72e-c046a9d1f811"
        },
        "item": {
          "id": "b5e7b5e9-f546-4272-8044-df1379ba0245",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "0062c06d-5d9a-4b55-861f-528b811481a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44012f5e-1d3f-433f-bdf4-7e3f517e5301",
        "cursor": {
          "ref": "5a4a1c30-e16d-4d76-bd2d-1846034da235",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "de75e2c9-9b8f-41f2-9454-6c02ecbdbfd5"
        },
        "item": {
          "id": "44012f5e-1d3f-433f-bdf4-7e3f517e5301",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d2d0b4c3-1b31-42f0-8e9c-33772e80bbe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a31c82f-ba7d-47de-8514-234b6573b193",
        "cursor": {
          "ref": "df7cb164-2220-443c-ba9a-c2c3408ed46b",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "ff5d76ea-7697-4928-a089-a60a0a8d8722"
        },
        "item": {
          "id": "4a31c82f-ba7d-47de-8514-234b6573b193",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e447f05a-6222-4136-beeb-87fa48275c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f582a3fc-baf0-48f6-8acb-97f98a145833",
        "cursor": {
          "ref": "9464c6d7-a207-4a57-90a9-d33df9fde24c",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "55022e81-af58-4594-ae99-4ef7fff07785"
        },
        "item": {
          "id": "f582a3fc-baf0-48f6-8acb-97f98a145833",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a8aa60a6-ee54-4c8f-bedc-524f5647630c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db8ab95-151f-4bfc-b9c9-04f36395281d",
        "cursor": {
          "ref": "23602fb4-eb7e-4e32-acd6-fd4256d42add",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "6541c157-a8f6-427c-8357-669a3d43c4da"
        },
        "item": {
          "id": "1db8ab95-151f-4bfc-b9c9-04f36395281d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4d4989ea-5dfa-4cbf-b8d6-3625ff032ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b535e80-510a-4975-b9f7-8ba4e6ace284",
        "cursor": {
          "ref": "3edf212c-49cd-43db-be31-14897fa91a99",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "a2360102-a768-422b-a3ec-3891da9c9a51"
        },
        "item": {
          "id": "1b535e80-510a-4975-b9f7-8ba4e6ace284",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "0ec70664-8134-4bf8-b2a6-a13bf10aa77d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa29ebf-f637-44ef-bd90-c62a82c19dfe",
        "cursor": {
          "ref": "a7a430a7-f2df-4fe5-9f6a-a45d68c3ecc7",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "8910f9e0-4476-41eb-af20-75a5ba8659f5"
        },
        "item": {
          "id": "9aa29ebf-f637-44ef-bd90-c62a82c19dfe",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "25fb907a-04f1-4ee3-9250-ef15f4c2ee37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "402e01f6-cea9-4539-b6e6-b8ea828fad8b",
        "cursor": {
          "ref": "5495f853-159c-4556-8561-33fd60ca1471",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "339711c0-b576-4289-b699-67d93ba5d956"
        },
        "item": {
          "id": "402e01f6-cea9-4539-b6e6-b8ea828fad8b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b96e0eee-dae1-4a79-8148-d93e27dc1635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b5dd07-c461-40c3-b267-a32e7f7a9f4a",
        "cursor": {
          "ref": "9ae99784-401c-4217-9e7d-a35c07913b29",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "fe77c212-423a-4276-95be-2ac20a5ef19e"
        },
        "item": {
          "id": "b4b5dd07-c461-40c3-b267-a32e7f7a9f4a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ce85b479-1271-496a-9c80-245897cb02ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df292221-ef1e-4af0-91eb-b4a27c0b5133",
        "cursor": {
          "ref": "fe99e9dd-0ae2-4934-9b40-913cb8ddea3e",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "92a04af6-dd8b-449c-abbf-9a3a065842e4"
        },
        "item": {
          "id": "df292221-ef1e-4af0-91eb-b4a27c0b5133",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "02479434-e82b-44c6-9d5f-53f34ffec763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c325999-9be6-4193-92c2-e721ab6f9c20",
        "cursor": {
          "ref": "e987eccb-3dbc-4fc8-83b5-493cf79abaa7",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "1cf2cb26-8441-4633-90f0-55db7942ae42"
        },
        "item": {
          "id": "2c325999-9be6-4193-92c2-e721ab6f9c20",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a78b0897-914b-4e28-a9d5-e0a4de31968d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6aba4e6-b00b-41c3-9140-e7702652ffd2",
        "cursor": {
          "ref": "84866e67-de82-475e-8b68-65acf8ad3276",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "51ce6992-dbdb-4559-9f0d-ce92d3bacdfa"
        },
        "item": {
          "id": "e6aba4e6-b00b-41c3-9140-e7702652ffd2",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7e23e091-870e-4023-98b0-926cd5b7e827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "274130b6-b177-4701-b4db-f1abcc56750f",
        "cursor": {
          "ref": "fb39ee2c-5efc-48d5-955a-840d6271362a",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "004d61f4-db28-4cf9-a713-112b4b91a079"
        },
        "item": {
          "id": "274130b6-b177-4701-b4db-f1abcc56750f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c746baf7-3272-4415-b644-2689cfcb9d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b433acad-466d-46a0-ab92-e14668e0b00c",
        "cursor": {
          "ref": "f0e5d2ed-2d3a-4c40-8bac-12933a91d3c1",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "65f1abe0-d47f-405c-a9ff-f4af18f3f379"
        },
        "item": {
          "id": "b433acad-466d-46a0-ab92-e14668e0b00c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7ed13b5e-b951-49d5-99fa-fe86762144df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ec9809-9cb1-4402-a64c-14dc9bd89bc2",
        "cursor": {
          "ref": "f096f947-340e-48ef-b62b-29200d630d0d",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "d2ccb384-bdd4-4348-b8bc-d1037286dca1"
        },
        "item": {
          "id": "64ec9809-9cb1-4402-a64c-14dc9bd89bc2",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "483426e3-0b42-4081-bbdc-8ba9c4889eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af35f1c-0d7a-45ad-ba03-0a6d08d0a94d",
        "cursor": {
          "ref": "f1f05f0a-6809-4255-81ec-3c5bf1e0c96f",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "7d2d5c1e-2293-47e7-ab7c-686b47df7d03"
        },
        "item": {
          "id": "9af35f1c-0d7a-45ad-ba03-0a6d08d0a94d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "68e3402e-6f5c-471b-9127-f3e6546da068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c9624fd-443d-4303-8788-18f05f2c472e",
        "cursor": {
          "ref": "8593b1d5-8b13-4e12-b51b-18509c49e72c",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "5f09056d-f52b-4369-8d34-1754cb3f8089"
        },
        "item": {
          "id": "2c9624fd-443d-4303-8788-18f05f2c472e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "84b90d5e-1942-48d9-9bab-fa94625e7d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c4f8cd-a89b-40fe-b422-bb081b799d0a",
        "cursor": {
          "ref": "2ebbfd5d-8483-47bd-97c8-d5efabddce93",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "2ddee9a9-27c1-4c5f-891a-1a883eddb284"
        },
        "item": {
          "id": "c3c4f8cd-a89b-40fe-b422-bb081b799d0a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "bc8d50be-d224-4ea4-ab86-64adc368c454",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5cbfe8-b8a1-43f1-82e0-c1448dd50e89",
        "cursor": {
          "ref": "ce94bb01-2cb2-4a95-81c4-f8ad0441954e",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "6bd0e6a5-e32a-45d0-9b8c-59eed3415b64"
        },
        "item": {
          "id": "6f5cbfe8-b8a1-43f1-82e0-c1448dd50e89",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "fa4b5dac-ddfd-493d-a751-5ca4a88776ba",
          "status": "OK",
          "code": 200,
          "responseTime": 144,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d48a5ca5-ed5c-4913-970f-aaebfdca3dd9",
        "cursor": {
          "ref": "08fd3825-10b4-475b-93d7-fe75270dde9e",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "be858816-3fab-43d4-bf1c-39d9736a6533"
        },
        "item": {
          "id": "d48a5ca5-ed5c-4913-970f-aaebfdca3dd9",
          "name": "credentials_verify"
        },
        "response": {
          "id": "bc03b2f2-f796-460d-b2a5-92ac77a5455a",
          "status": "OK",
          "code": 200,
          "responseTime": 1539,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "07955cea-15d1-48d9-a91a-24efc30ec65f",
        "cursor": {
          "ref": "6fddc7a8-f8b9-4f13-a0c0-df66c7db7bc7",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "863e19f7-1b6c-4697-a97d-1416fcc51743"
        },
        "item": {
          "id": "07955cea-15d1-48d9-a91a-24efc30ec65f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "999f4c1a-ebf9-47e2-b25e-ad01fdc70d3c",
          "status": "OK",
          "code": 200,
          "responseTime": 1664,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b646e172-d2b9-4937-8f55-c837f2a58ef1",
        "cursor": {
          "ref": "9469d0b1-815c-4eb0-99c7-66071f665610",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ecee226c-d8cb-467c-af4a-7cd062cb23dc"
        },
        "item": {
          "id": "b646e172-d2b9-4937-8f55-c837f2a58ef1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3e06c6b2-8a8f-481d-a86c-8a75846654ec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b646e172-d2b9-4937-8f55-c837f2a58ef1",
        "cursor": {
          "ref": "9469d0b1-815c-4eb0-99c7-66071f665610",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ecee226c-d8cb-467c-af4a-7cd062cb23dc"
        },
        "item": {
          "id": "b646e172-d2b9-4937-8f55-c837f2a58ef1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3e06c6b2-8a8f-481d-a86c-8a75846654ec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d308b4d-f49f-4d35-94d4-7744c4bfe8d1",
        "cursor": {
          "ref": "7af90769-7d55-47b7-8f60-943532b6c48f",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a7743fee-ab97-49a2-8b66-32917c497535"
        },
        "item": {
          "id": "6d308b4d-f49f-4d35-94d4-7744c4bfe8d1",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f49518f5-a48b-4e23-a2d1-b4e4c4757a68",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e307558a-4244-4773-8cff-587d4ea5ef45",
        "cursor": {
          "ref": "e01899bd-5f28-44be-a59a-6f13dd24a71e",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "faf34ec5-f609-46ba-98e1-589c64e04f87"
        },
        "item": {
          "id": "e307558a-4244-4773-8cff-587d4ea5ef45",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "aa3a9313-a66e-4e8d-b43e-504ebf9c649b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}