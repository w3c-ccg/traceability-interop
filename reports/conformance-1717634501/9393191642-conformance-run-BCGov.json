{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a02e2836-4f37-4526-9797-6fddd657decc",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8d595b3e-5249-49ec-9a76-b26cb435c9c4",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bdf41b83-4e71-4414-b9d3-312cf2f91edc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "218709a4-4964-419b-bc0a-ca0822bcd9b9"
                }
              }
            ]
          },
          {
            "id": "5ad96d80-3d6e-4142-a5a5-5607d633b627",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "594de13c-362e-4b48-97d8-f976e3bf73d8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fd05de7b-5d03-497c-a53c-65c53e37fda0"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "282da6de-07b3-4118-833c-4f5d48abc344",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "bd83af16-e99e-4041-bedc-c7bce20e359a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3a39f238-e6b8-4062-8973-45d069214ba2",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "302b8f73-82a1-4b5e-8607-15dbc72f55d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8960bf84-1d64-4361-94e9-6e8f1709f68b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5c7a8c2a-3b0d-43ab-94bc-6ab3fe44db85",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "057594e1-babc-4717-8a53-2aa01665403a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ce347a6f-9aec-4609-abaf-8a36be62ab7f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aac5a900-2e02-4ac3-b838-09dda7f6d282"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fda90f20-9adf-4bea-88f1-6b337a02ebb7",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4026c863-461b-47ea-9f09-7b00ac72eef8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "599b46d6-9720-4eec-8840-bf91c0dc4b4d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9baf37bb-91e0-4845-bc8d-23e63bdbb9fe"
            }
          }
        ]
      },
      {
        "id": "80ad5a53-95c0-404f-860f-3aec241df80d",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d13137ca-04b9-47b5-b1a4-714e6933c7af",
            "name": "Negative Testing",
            "item": [
              {
                "id": "03e0983e-593d-4d62-8401-72cf4164fba7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "49557bd4-1566-4df0-a948-9cbd241bec8c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "168e405f-d9ab-409a-a7c4-97ba6e5eb316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ac29faba-cb87-4c73-b5dc-0f20b7923672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c99ef93-4d36-4228-8c43-92b82443aa5e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0276c47-3122-45fc-a923-1ae8f3f95b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a72e081-1551-4044-973e-17019158e1f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ba248a-adcc-4539-8c3b-827a38b44256",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc96b08-36e7-45a6-920e-f993cb379c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8bda0a80-5468-4f9d-9f94-fb8830bb3366"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "89e69b2d-3ae7-4f04-8395-e25f9465605f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "62288e7f-735e-4b49-8a2e-2c374dffdcf5",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1ff833-0314-435e-a2c2-c08043106962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c954fa0b-ec61-4d51-8344-6a362f2cbf4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c466862d-f1fd-4d18-a32c-50e9f41451d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d7d85c0-6a0c-4738-a957-841adee974bf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "efde3d0b-1ce3-41b4-bf16-3e9b616fe501",
            "name": "Positive Testing",
            "item": [
              {
                "id": "049d6f35-3304-4dc5-bb67-203b13f3ed7b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2068982e-94a0-4c5e-9df1-3461f0d76887",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "4d2c380b-7aff-46a3-9f6c-2bff40bfe0e7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7ac4ed54-0cba-40f4-bb0e-1f056ec1bf13",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "fb2f47b3-d198-444a-9794-f55166dca7ff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5806f610-896f-4c36-b050-e8401b6fbc65",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2f8228b0-5df3-49b4-a786-de65962e1cb8"
            }
          }
        ]
      },
      {
        "id": "268a2c37-be19-498a-ba4d-dea74b7cee5e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "74f8424d-91f0-4d1d-a645-bbd5846ef570",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bba78704-404f-4478-829c-cf47b9d29d38",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5ea3dab6-9f08-421e-a44e-498d0873040b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98973ea2-8a69-40fa-8f09-d8f44ee08003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf00a14f-284c-43f8-b11b-87df2228c693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3069e2b-deb8-4940-a859-f97f1466f422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2873f59c-039e-4df8-b999-b91828d50dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88169005-99c5-4181-9500-4fadac77b0b3",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e9d01e-fffe-45fc-a30f-444914c5596d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cba451b-d777-4685-b37d-8abea1780dd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f990875-f4a0-4c00-b48e-e7b8bd09aa11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "807561ee-956c-4c3b-a241-25dcc2a38c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ba024a-b1e4-4399-abc4-86bf597af6e2",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff8f0e36-63bd-4465-91f0-3963734b2e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21278dbc-7e4a-4f30-9218-5355228004af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5d1a346-6482-4ed1-9946-0253eaab685b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21c1bcbc-17ba-4f94-8132-19598419d796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af87ace-c5fb-4908-b4c8-5be9fcfa38e2",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "743ab10f-a2bf-455b-b5c3-bb4ee5831536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c19d5626-19a6-42c5-9e0d-628941af1d7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c17429-e954-42ef-9f69-65f195bcec73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1a0436a-5692-4379-9740-79c24afbc2c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bef62fe-6103-46f8-93e8-6f6a6fba746c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c05d88a4-865b-4ae6-9f17-41774c1552f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ce136e2-bec1-45ae-ba76-4fcc3f6da8f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a75ab405-5bb6-47c6-9d24-60f78108b551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07f54dd9-47d5-45c6-8394-318029d4405c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3460dadb-e0ca-4713-baed-7d65cb685b8d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b75da71a-2eaa-4737-b92a-fbd8cef25c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e39753e7-980f-4625-a64a-7df09c8eda53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "505813e4-d158-4ae4-a3d4-fc1ab01ebd0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "795fe8d2-b735-4378-a714-49d4e1d1230c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "778b26b0-e817-47c4-b851-5148f63f4b39",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa0f6ed-ee42-43f7-a9c2-417e634c8c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e01802a0-9559-4373-a45a-5b6742fa1918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "061a2061-be87-4b51-8ad9-852f51572881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "985c8236-5c5d-4938-a144-af98b8ae4978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e5d3b1-f9b6-4ea7-917c-ad2535444441",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "716628fa-3669-40a8-9052-019f335d2f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e2a452c-78d8-4549-82b8-b64746c52bd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19021c81-a40c-4f7b-b224-a1c562999823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3b400bf-f344-4974-9d3c-a59bb8366943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f0207b-6113-4c49-b214-167acee0f63f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fed305b-c323-45c8-8087-7c3b3c8d6e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "721b8d89-b079-4298-a683-d736f0df84dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a95330-b0c2-4880-8707-0b7be6241335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8b36ce5-b02e-4a98-bccb-e59f7432615d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c78809b-56d6-479a-964a-0f0bb62feca0",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e322c54-bdc8-4429-9881-bd7d04e7a9d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "909e6565-0a13-4dc0-8205-7ca4804b2886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0a7c0e-23a2-4b3b-9e14-ed6360570fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cfc47330-ddd8-4c1b-bef0-ccdc2bf7b0c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96099041-0ccb-4c0d-84bd-538927e67553",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aaf18c2-c6aa-4a74-a81d-fa5b27c3119a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59c05426-aba2-404b-91bb-a5cbea0b556e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41535f01-3323-4f63-bf8b-1fc18c95b6d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c770815e-e49e-4a35-9b33-f59da8764671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "646c8961-f4b4-43cb-886a-beee12f50075",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a41ba82-647f-4cfe-a100-9de1bbb79778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e0d4913-85e9-45fc-b542-bd48399b3687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d610e9f5-8c08-4e78-8bc5-75a5341e5d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77c9d16f-bf9c-4ca5-b8c4-27c91052d29d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f44e2654-7425-479d-858c-41bd546a6a2b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "515efeb6-8acd-47fa-9b33-b071a96b56b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afee2263-5990-4fc2-9ec6-da01adcdb605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bec6054-abce-4305-b1ce-02299f98d47d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1362a21c-c1e4-4a4c-ade0-969ef1ab7343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e391aab5-769e-4261-8d22-52ee1e967757",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4340f593-5ca9-414f-bc22-afdfd7a7def3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bb3e8bd-9095-4e35-a2f4-b98f25a380da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882ac067-6507-4d36-ae33-6d36573c4ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fbdb9bb7-83ed-4d39-aa55-2f35b1c12bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c9c01d8-1196-4c00-ad1f-05ccad2f0028",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d11a6561-ac0d-458b-9b95-cbd3b8ef24a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da214ae5-f3d2-4b5c-bf5e-9ff8741bd27a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98133437-370e-4d84-9028-dd4eef0bb7e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d1b8ba4-2a5b-4867-b73d-1db34d35ee67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b61deb-adfc-4efd-87f2-57be77f8f0b2",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5a3068-b16f-4007-9fcd-27dd8e2e3eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f797eaa-6478-4ad1-93ad-e3178ee349ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e07a46c-024b-497f-b6ad-1cfd045b3a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "695d560f-9d25-4aae-ac15-dcd64e1012ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42525291-9e44-4ac8-92bf-84503ce168e6",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb307133-414f-4b49-89bd-fdadbe360fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7495e827-33c9-4360-a43e-e10e0bf56229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7671c79-b085-4082-9892-e82bc956bcbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ef1c590-f373-4f02-8ad3-edb30fc98e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c44f94f-741b-4c55-b2d0-fbb12ff16453",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2e2fb3-f324-4510-9c2f-55936f39ded0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "049def66-650b-4e9e-8f37-fd66fbed8f13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd1d3b09-1b0c-4571-85ba-618a582ee2fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "032542ab-caff-4385-be8e-95db74b554bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "397ae8f8-8d57-47d6-8f4d-d647b7774aea",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8006128-b2a4-4ec4-90ae-feca1d879e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c9f0758-bc63-498a-afd5-b74e20f0f974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be9ed561-252e-45fa-8d24-4c273757e1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5026e9d1-78d2-4623-bf2d-608012c60db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "723b00a7-1ae4-4dd8-b79f-f92ca503d53e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e109e210-3a94-4ce5-803f-c74cea562419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "676d7639-91fa-49f7-8020-9f1185734f2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a07273d-1703-4a4c-9916-9e5aa6ffb090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "70d25263-5414-4c64-9ef2-0b462070b0b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7693e96-a413-430b-a8c3-80f8fac2e68f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded376b4-011f-44da-af83-61f54889bb9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2562cc9-63cf-442a-b92e-2a3ba4815ec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01184ca0-ddee-47c6-a3eb-c16f9b1373da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6ffaf03-9152-485e-9aca-03853703fe15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fbe5d00-1852-4f9d-981e-03300c16677f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b64041b2-75bd-4738-9d74-5ed5cb790aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1bd2719-c04e-4f2f-858b-72de50c188bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6643617-8a72-42a6-94f1-06e31a866946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb6f6ebb-6d45-457b-9daf-b481bec60d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e711280f-5c24-4f4e-a1ce-9f76eed099aa",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c7608e-307a-4738-9bf7-de7d231072d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e6009ed-e8fb-4b1c-a39f-b4993443ab89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff59152-994c-461b-bce7-eb48b6f3050a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6567bcf0-8f52-4e80-80e9-7b9e62c96683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3dcb326-9a16-4928-8367-0e9d4c0505ca",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b0e0f6-09e9-483e-8216-c7c474cbce8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1342f73-dcda-452f-9d11-f4f735248e06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e9ec65-6e40-4b65-bb78-7b3b8e2e9005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "35fc9b1a-bb18-4a8f-bc18-14b5407f5a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c7c7291-495f-4876-8a90-43874428c397",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e51df0-e337-49cf-aeb7-64e4c74c965c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50dae3e9-5203-4674-ac0e-57e260999933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf4ccb9d-2977-489c-908b-8598d84f0aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e588a9c-a549-4c15-90af-55f06d80390d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b62c8d27-1638-4273-888a-0c6132093c95",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dad32ac-c0ea-4a72-9392-a00635b0464a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bb1c6bc-f3ee-4ac6-9c81-b025321115bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb723e3a-afb2-4031-9ca5-c7f511b761be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ba36e55-19b7-4af7-96dc-666f64a16e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb7a433-fd0f-43fe-a524-729368f13a38",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd4c4c11-eee3-4818-b5bf-7e7605c447d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08312d23-a94b-4ebd-a58c-105bca8048f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce1a54aa-d8bb-4cf7-bfa4-4287706af9c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9271be25-8aed-4095-990c-f717041f9c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b850f0c-626a-41b2-a692-e2443960b4dc",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b81d1119-cd29-41ed-80db-282e3d210815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d61009ca-9868-48d7-854b-dfeb98cd5a94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62678021-9ad9-47d5-9757-75fe43a440c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a05966e2-a8d4-4aba-a6fd-98180e4ebb72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de95be6-4ef3-46eb-98bd-ceb6481f1a46",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "574ba94c-0e6f-4254-b4df-d9a3576374d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83cd9df0-b336-4ced-bfb6-0fa4985431a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81407bb2-1c5d-4871-adef-af787f4be0cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5820fd48-1709-46b3-bf8c-069d5d8ad7d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d63229d1-313f-4dc1-b50b-c5bd52c890a2",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f59e26c5-f199-4a0d-accb-3c4c76a57bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8c814b5-1756-464a-946f-777f6eb83165"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f28a82-25cb-4c12-8ca0-433fcdba745d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b25bf8d5-3657-469e-8eb5-e7185c2fc19e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72911afb-4235-4bdf-a71d-22032a47b8ec",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91367d69-306c-4b72-aff8-24394d1c5a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e71382d9-ad90-4c34-bf70-f73bed425d2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09db8823-7019-4e7c-b64d-f5827c724bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5394b67-7e4b-4bdc-bf7b-f30b6a6cf750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f25b622-c4ef-4393-a97d-e9863fb47c30",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06efbbbd-5833-4ebf-87f6-5115073f06fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71fd7cc3-e197-4dbb-b393-0ac5ef26c6c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac5b60c7-21ff-490a-a258-bd657d40e25b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea1fda61-5957-4b45-be11-5bd2fb8ca073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f390b288-2e60-4ced-9f6b-70959a3dccc6",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f618f0de-71e4-4387-959d-b038512c6272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f33df6be-5c59-406c-9e72-be6cd3fd5f06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcbc7ecb-743a-46d9-b771-f066da6da4d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "752f80de-bcc8-4595-9c19-a301500f0ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7890bcff-1c87-49c3-9890-6b3dd08428ea",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd82ea21-f2aa-49c7-be73-8b5c5bea92e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6be46c2d-f2ea-4c65-a619-97c8578175f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5320712a-4ddb-4ea4-bf78-d1eaf7ae4a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "06f371f5-e6b1-42cc-8bd3-43d1a0ad8a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2443112c-6c00-466c-a54e-1ccebf859221",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df48a5cd-9af5-4093-bc71-b43dffb0134d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "496d41f1-4b88-4511-803c-2a747c79742f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e5dbf96-d6f8-43d4-9d88-448391cdffee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d50f263b-6277-433f-aebf-b8ca03331016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bdbd760-9e81-486a-bc6e-f8c7d89a28b7",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9373a92-5281-4f1c-acfc-da948d42180d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0963f3b5-9967-4072-a058-f59948233960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7426f44e-ba4c-46c7-85e6-3ec2ed40f14a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "26695742-b6f3-4fd8-bdce-31277549977c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6022d12c-e247-4280-92d7-5482083d0d5e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cfee425-f5db-43f4-8dc1-a9995f08ee83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7117ba5b-ebc4-4517-9489-8d24720c5a6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dec1a8a-cc61-4051-997d-21d3cc98fbf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "70b1c6b5-4b26-4453-87d1-c43a33293e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb42f4e2-d930-497c-a660-ef4cad063d4c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f03e961-9826-429e-89f9-b72a551aacc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3ba5488-1341-4c7a-ab31-928fbcffb2d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "402f9b54-5ac8-4b51-a4cf-527b5171fbda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7a5e624-432a-4720-a219-98e22411ea2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5213544-3461-4f99-83d3-7d169f587229",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "911a9eb8-7054-4c38-8749-f206da47630a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "495c854c-147d-48a7-a6b9-0ab3f16917d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d84dfb4c-ba8a-4b57-bb8f-0e00041ad2b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5016c798-424e-4d85-881a-55336e303020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dbb1bff-77ff-4f0e-842a-3cef94feb344",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0476d7c7-6635-4ecb-b945-e339f1af9791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f05ebad6-0322-4e1c-93c3-e57888a22fa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39b19c6-9d2a-4f3c-a454-6c2d6a9ebb9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "838e6fc4-bedf-4a2b-a21a-ec834202672d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be29582-9314-4e60-94fe-36c0d3ace66c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f1682fc-4d0c-4838-8238-70cc652c8baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6761bb49-1c02-4392-a44a-0500eb2451a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a4b6551-3d0e-45c3-b8f4-70760bdd063d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e985813a-cb83-4f6b-87f3-dd6560a93bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4d17e18-46ac-4f66-a1dc-d9ac99dade84",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94ce83c-a6e8-4316-a357-c1ce4fc91ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38d9740f-0bdc-4413-9e16-136cad92207b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd29c5c-0fb2-4391-8f7a-84cd718907a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "12506f68-6a17-4f40-adc9-fbd017099f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4231bce-ea4b-47fc-8bff-99b7b562cf11",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2400077-8851-4386-b344-ec8ec1ca6858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b70427-3ae1-4348-9d7e-23eee6484f68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b098fded-2a45-4391-9d7f-2ce9f51c3d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "77132136-5594-4b8a-86bb-1f77dcf7a086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa2c53a-f59f-4123-8974-4072559d1502",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda5bce6-8e15-45f3-b13e-00e2c48c8c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8313898-40aa-4cd1-941c-fe53011f397b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb036c3-0853-4b4d-8229-3961fae59068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "162bda9e-2188-4992-85bd-451895521975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06dcacc0-d366-40ee-b0fd-cc3c3e595ef7",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c57c4339-8f63-4838-ad1e-817c1f5a9b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcd1f82e-fcfa-46d9-8228-76abaf00ca37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86dd8285-067e-44ba-82eb-7e76f7b58afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b19e5eff-1536-40cb-a2c3-459f1cb0f01b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58af3e4e-7232-45ac-a40f-6b4b1c8eceb5",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3de639-0a9e-4ed5-b8be-b7bae9ec073d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8756c66-6a8a-4e3b-91e5-f62f456202a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e65b6e3e-f6a7-4a7d-9d07-ba70cd8c7862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f91a7d8-fb69-4c8d-9099-82d23d46ee5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d002d15e-58a5-4cb8-91c2-0b095a5459ff",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb0c781f-28b9-47f7-8c08-4561c3b51230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "265ac2b0-b15e-495a-ad88-f8f03f27444e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea79b3f-ed34-49fc-b5aa-832e478f34c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f6e6c25-7e1c-4bd0-8f87-cd6f0b78b25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa262af-e6d2-4c60-97f0-319a3d072558",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f9182f-ee35-4283-b3a9-cf739c442127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "583ed93a-d3c8-45af-b239-1e367807c4ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c2f6a8d-d6c4-4e68-a95b-ae3056698122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9d25521-21cc-4e7e-a711-5b7121b8674b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce01220c-e536-4e77-b767-eca4d2eedfde",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed46563-57b1-4d73-b3ec-6e68ce05a7fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2442fce5-6f3a-4c14-9b6f-bed8742f171a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80aeb2bd-a35b-43dd-9f3a-46b363c99103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef60167b-bfb0-41ff-a003-5e40d73058e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d4d3605-69eb-4038-8ba2-a77183615cff",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83fe206b-7aec-4dd7-ab8b-c34de88ba796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fe0e01d-dbdc-4593-8582-3593c7b62fa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d12cfefe-8277-436a-97e2-6425a35fb217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3595a7ec-b085-4685-b5ba-0af5f8fac7a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb8d449-b3c3-434b-a4df-46b3598504b3",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4423a93-3111-479a-863b-fe0841ff21c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e84e375d-a6ef-4913-8172-bf1a83c5ae3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202a518e-eb4b-4e4f-a13a-7bcbb964c921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f38f182d-9f46-4d86-b9bc-10a1aa1c2179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9878b188-5b3a-4f80-a780-ca609f46fd9c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c61d26-8200-4d2e-a9d9-d2616b7065fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "256349be-bb59-4a2b-a2aa-d5210a4be78d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4496992a-713b-46be-ae4d-cca990403e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7ae5ce6-e524-4ae8-aa68-2779487b4d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de077e4f-6b28-4d05-aefa-f9bbf2b9dc8c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00de7c1-c06a-4d20-84f8-614f24850754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a70789cc-e6f5-429b-838c-52f55786d358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba3c62f-0317-4d75-a97a-06a8364880c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c2cd279-51c2-4f37-b193-33baba748722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef0e2f02-275d-4fe4-89a2-623a17afd287",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e27ed9c-bc6a-4db7-815f-d34c19b2efb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c85e32e4-50a7-457f-86b0-1ae919471ec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ece8153-1803-4b49-ac08-002a91dbdf4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "01752670-10e1-4f85-be21-bf3843785b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c0737c-d619-4bb4-8cdc-ef038a52ae9c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed1d9fe-4d0c-499e-9790-3145076f4ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb753495-f796-4685-9cc2-bb1d714bab32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f6fabb3-d8fa-4861-82da-3b1e62ccc30c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "08963f18-c6a4-4989-9d32-f006a392edab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af6db8d-d478-4fdc-9574-44b4c594b146",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d422839-0440-4ba3-a862-0523bd2f4a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "087b5116-6011-4f52-bc1d-0b59e0692c46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1beae73-76b1-4531-aed7-76f607c0c6b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "77e68561-3be4-43e2-a06e-d0214d8e4bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25fe8c83-fe54-41f9-ba76-40e4104d0b4a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a2b941-e93d-4943-af6d-7bef0a2f90e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03f8903d-39d7-43b0-8e63-3d936de06962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "681f0ea2-8242-4869-81f1-6981ebb0f662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed78e5fc-13bf-4ee9-86fd-3bf0690ca2b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc3fe02-a82f-46be-997d-098a95ba97b8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef063938-bba3-4b9c-a2b6-489485191a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "067a67a2-a1db-4f2a-be4e-5c8a00d98f19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1653d80e-0076-42fd-9bdc-86381aebe694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c94747f5-003f-495d-9240-c8053ce16c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa127fdd-c5fa-43db-85da-c46917699629",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ab3a92-67fa-4537-a850-a19212bcd339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1358cc5-0134-4eda-926f-93ef7778b681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d748cc5c-d96c-46fb-8346-944f38897562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4be09e12-f381-43ee-acbc-b842a4c1a4e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b7abc2f-28b7-48c3-abf8-40eed26f0de5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b3e48c-341b-4989-84a6-ff72363c5d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a596eec-5962-449b-a226-29408fd0a180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a3264d4-4e05-4cb9-89f7-1413efa47457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c83a2a4-bf3d-4f36-832e-df2933404748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9689e63e-bd44-4840-be86-7919fc4f12f0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5ec87c-5261-449e-aae5-8157e313490c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c58bdfb-510a-4c8e-b6d6-627584825a7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ebc086-3c36-4470-aa33-bdc663ac915d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "40395238-2bf9-4ae2-b98d-3a16559b4b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aefcc11e-5022-497a-83cd-5ef2e98c7919",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5cb6e7-f7c7-411b-8036-a611ee342fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "379b7353-ce47-40cd-9607-fc322c7d9d3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa88c9e-8bfd-4454-9637-f8bd7968fb69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "cacd5ec2-ee4f-4dd6-9360-6f3b4a4f3974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "830bebf6-3553-47ff-b662-fa00c2be428d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac23d04-bbb0-48dc-addf-33f3c1bf02e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "307bbc05-0dcd-43a9-84e7-a6453ee8b2ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea82523-4f5c-4827-b4d7-17d3663d71c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "daf192cd-023c-4958-9480-702e6ee8913b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced430bf-74d8-4310-991f-901cb88ebbe2",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d1b452-10d4-48aa-ab1f-9409684e3d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "029faba3-12d9-45fe-bf4e-23019c574b46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a2680b2-1a2d-4287-a3ee-b2b6d5bd8be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "58b0097a-5d8e-4215-9116-83da4cf55163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d20cafe-29ea-49a5-ac03-5b0e094025dc",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f001a0f-b3ce-4ac9-9fea-589aacbbc410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41b1c3ac-005a-4c67-8c7f-d60c963f5aa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16998d9e-802b-413d-a34b-0d8a98fb9bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cb03289-7f2e-4e18-bb87-f41e9eaadbf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab7b0d1-6f02-4a1d-baeb-4412221e4d61",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a782fbbd-68b6-4e7c-a535-43fdfd6a4cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "557f7eba-5652-4cdb-87c5-3964fc4d0d76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b344a2da-2139-43df-a270-6c73810f32aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2684dacc-ba25-4ad5-9d7a-6bd2bf65b2ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "652ff43a-ed6c-4d21-b967-b29dce5c01b8",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f93c0367-cb9c-4091-b789-e67d018dd02d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "495c1004-03cb-413d-a7dc-abddae8aff88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7edcdd5e-af35-4fe4-a4d0-5685971434e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9690aa47-60e3-4521-b614-3c957474f3a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b82694-0f3a-4585-9145-22567dacf7ed",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b2bf8c2-074f-4c01-80a8-7e60c23b4eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46eef9d9-2203-422f-8714-f921bfdfcfe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5588e9a6-7c37-428c-acf1-8bf713b64ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7606434c-486f-48d5-8b32-b758e9ba40b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06451dbf-f969-40bb-a307-16b8e4e34e2e",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e47b61f-756b-41fa-bb27-ac479734a7c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7837d0b0-bff3-473c-8561-35a87d342886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f766abe-fa7b-4aca-97e8-ca076654413e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5321a654-e296-4833-956f-25ac4c3e1f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c2d007-a706-415d-80de-b315f08c719b",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e97caa5-1613-409a-bd25-0b8d6d1d4ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e5d5b4e-26c9-45ff-9c77-e8152018519e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27239b89-c415-40c4-8ea9-0cf3c2c4b076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c15492f-4f4b-4a64-8927-8d2e31de5d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a49d50-c9ef-4a1a-9915-a8657d353622",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac3b6c84-694c-4288-986b-ffcdd852c6ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24c17119-172e-4ad5-86ae-8ec977a97f9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "957a556f-a376-4e5c-8c97-5e167111d981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6a24de6-ed79-4b64-a318-bbc7954096b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe6dc75-a0af-4875-ae5f-b4428ecc6cc5",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f4540db-2562-4229-8004-3697141a49cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ec28433-4ff9-4deb-a5f0-43106158cb9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a09a1c6-12cf-41fb-9fed-719d2ea5ff44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "37234a65-6056-4ba8-b379-9f662530c63d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d41e8bc1-cc9a-4058-9c37-a9ce2c4f75a3",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d749eeb3-b94b-4422-b3c2-3c66a2fe4abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34d1caf9-5145-4748-a5d7-bb9218f52591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "371862a7-52b6-474a-9a75-4d472d1e160b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6468308-d381-4f36-bb3a-c32ab7e2d833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a08a27dc-547e-473f-8f48-2d306cc676d3",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c049ff-a7d4-4387-a0f2-166b73765478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebc79621-732f-45a9-b74e-e5e28a5bc899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23a7e555-5428-4fe2-bb2a-0f960f74b871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "09ca3ec1-0e3b-4564-8e0f-145c4b159e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85781629-288f-4188-8c59-427e57d39564",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8945ade-16ff-46da-998b-318714d1a275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c82ddc54-b842-47e8-8411-b642d65d19b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5346bcbd-bce9-45f4-b72f-943373f9ed12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5c26ab7-cf96-489b-9c0b-39a8a55b1e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d0b90d-64c2-4b94-a37c-61c3cb388e8b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3693c3c8-68c5-4945-9635-7fd975a3951c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c45d4adf-7902-4ee2-b5bd-2b6ad1c55ad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c78592-79c2-4dca-a9af-a6b91a92ba6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b27e9bc4-5818-4776-b392-2f0e7b7a1025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e40e7ba-0b1a-466e-b110-7cea76948461",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d03408f-b724-4187-ad6f-f7f1df47e10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bc2c211-8619-4068-8833-62536de09490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c032325c-4aff-41e3-bb7c-7d0a83d5243c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "84ee8fcb-f663-4e85-a9f2-9177a57c98b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8dc3467-097e-48de-b5d8-b4a58da87e87",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e925e03-af8a-44fe-bb37-9936719e2b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e31c36bb-99f7-4ae8-adf3-86892038e720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880b0a89-5468-4c70-bd8a-4e32989fafc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "51507dfb-95e3-45ed-83ce-0573ea7f26a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e39eab5a-4e54-4487-ac21-5052f58b5f62",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f599c3d9-94e1-4744-bcdb-7b65dd5e2bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f81c1c53-a4ad-436a-ad1e-bb4bb892822a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "646d9f89-f638-4034-9cc5-0fa6d4a09d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "95f789bd-7794-49c2-9e81-aebaf627756e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e9752a-5d00-4475-8ae2-4a83c2192fe3",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4616b7-3b82-43b2-b9e2-3d42719f3405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3f45a47-b214-4e9c-b4cb-aba1a7bb99c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc3334d-7507-4a3f-9d35-fe6061dcbc71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5901cf96-5187-4b0f-ade0-9ed75f312c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95c9a4f1-2de1-4664-8770-1305fbff7104",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c32efb-7c9b-4185-a810-e07e75533837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2d903db-ac12-4893-8d9a-108144673a34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a57d1dd3-ed1f-41ca-9543-ca1c5df322d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b771560a-87cc-4312-b7ae-1820672392a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ca0528-c920-42a9-9e8f-7496bebeb5a6",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e445f4-34ea-4727-a569-2c3ed33d2027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1423b658-3fd7-4670-a836-50d272993179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54823a91-840c-4d28-9758-cfa697f0a8b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "604c3d24-853a-45bf-8487-55c3a9f48cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a4e412-7845-4eec-a759-0a6e942fd673",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4dbb179-1bdd-4091-82c2-24f39dd31b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6ef77f3-6a67-4fbc-b486-d9a552e4788d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5032f79d-50fe-490b-b273-d6e9b7300363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "df0c709f-a96c-48ad-a6b0-cb8503160092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95cab251-48d9-46d8-8145-e76c4a427f75",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f21b7289-b004-49b3-8811-6b36c1b2ac69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f383635d-faa7-4fdb-bac4-21183e1792b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f3e9a1-2d63-451f-9922-09afa64ce06a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1fcd54a-4dbc-493d-8dda-6eda115617a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8bf6ace-568e-431c-9ec8-a969fca858a1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37461d65-82e6-406c-938f-ca10dcdcae35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0a65d3d-feab-4c7b-a725-2e078bcc3811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007cffcf-7de8-48de-bc13-d76a26ca32ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d09e7ee7-5692-4542-b699-6cd2a1297968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b164d0-8b5c-4e42-95e6-7ce0357d4174",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b93fae84-173b-4340-bc8f-e93109b7803f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "390810f7-7df3-49c0-b5f2-ce9a1bb4dbe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80478d92-454d-429f-b8f4-9677a740f4ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "99330e25-9920-4420-a425-9e6941d903c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13808f5b-f2c3-4712-8cc2-a7b97a830731",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c726e09b-db90-47a4-b491-636c82994db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "799d5b51-43b5-478e-bccf-00321316f245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ef7538-a6e6-4a3d-98d3-7d8f29013a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7e70621-183d-45c9-8e6c-0cbd73924e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b120ce3e-0b79-4832-a387-96cf7f53e7cb",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae88dcb-2e4d-4cca-a2d2-58d22d834222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b65653ee-56d2-42e7-822f-6f0d123707c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c155f507-98a0-4b4b-9773-add53f29fa3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "938b02c3-2b74-4578-a88e-be0d1cbe6202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e64d8f26-be2c-4a58-ab8a-61cd45e28d89",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "587a14fb-09c4-45f5-b7f0-7cc9245d90ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea5ac497-5e9a-4976-8c6b-9773748025da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8010f0aa-2d29-46c7-bde9-4c8f49467b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "12ee5dac-98a1-4c72-aaf8-0db4ddbfb242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaaa386b-6ee3-477d-be22-bd2b12eee879",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3cf9ae4-2915-4ac0-82c8-64f52f002a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe8387e9-e0f9-455a-8cea-1d526bfb5a9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b6bb1b-f3bd-49a7-86ff-9ef68c1e3d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "13bc5cc3-f5f7-49bf-b15d-b803abd340cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9077e9ac-83f1-4e70-b7bc-786f22743d66",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdea9179-3e49-4ead-be88-26d186c1c5c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb23b824-0052-444a-9a27-cd6d02c1391c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f7f5ba-e4da-440c-abd6-28e1980bc74c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "088cae06-46b1-4b64-a666-79810ab91fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97691fc3-b258-41d3-ae10-2d0ec8fc3bfe",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7bf9b33-61b4-40f2-b924-84cfd1b60cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b9ce1012-ea66-453a-bf63-2e18fbc3b799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b54d39-fcba-42ac-bc67-73e36dbbd678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8068bb11-5915-4754-88a2-a3e41b28733e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b4248522-b5c6-4c1e-ac91-21b44ffec59c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2d936151-408e-415d-ac2e-bee997d30f6f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c43bb2-2c42-4944-9b59-5a1b2dbc8f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "00c719a1-e948-479b-8032-b12f864e11d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe6aec6-4531-4e7e-89a7-e6f53b35d432",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e40a449c-ed9f-4a22-90b4-2e7f123e7a90"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a617cc21-dfd6-4e30-8370-7a3382ca2c1d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "57634204-befa-4ce2-9399-4357498c9d0c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc786456-5c81-48ec-8f61-ffac53655aa6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2c06cdb-6450-473a-b277-278bd8f995a7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "019b75dc-74be-499c-b541-4f5809178666",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c025ff14-46c3-4e40-9c9a-87f42f03b1b1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dfdbbaf0-6df0-4ecd-b063-9401bfa86488",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cc2aedaf-f095-43b7-a06f-a8d31edf6aa7"
                }
              }
            ]
          },
          {
            "id": "88048f53-9906-4677-8a83-31b12296cd65",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b7676fea-8018-4513-9747-4c1c1655dd38",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "9ebfa1b8-c0fb-4da0-9c55-754f942e4abb",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b26001b-ff48-4a25-9561-2864ac1ee11f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4c71b67f-840c-46a4-a781-d595763ccd11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f65d6a-1dba-4739-88b8-cb6f5e53adf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e7f7262-306a-42c5-a332-e4db2c3c6fa9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e4ee0ef8-683a-416b-85c0-8249da5577e9",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f50d0fd0-0885-4b2d-bf40-59c8c41c867a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "28f7faba-f338-4618-a603-82aa5d8f6341"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "11dc8c0d-4821-4227-81a5-dea2a756be02",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f419c90c-e720-490a-879e-c5ae08087ebc"
                    }
                  }
                ]
              },
              {
                "id": "afd385b2-0e7f-4758-9016-0319ff99bfb2",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "04f1c964-aef2-4ae1-a027-eabcb771b203",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fca5bdb0-3d41-4b8d-8161-a1062982d047"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34cb8541-45e8-4a0e-a4c4-07e0cfcb6b8c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "afb6aceb-2a03-4c93-ae67-b46e9add6f62"
                    }
                  }
                ]
              },
              {
                "id": "d132755c-b520-45fc-9001-842e54618877",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "77c4a771-e4e4-4d29-a1a3-f7e2307c7fac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "51978721-84ab-4d98-bcbf-eae45f0912d9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d054890a-6bd1-49e2-a76b-6789ff63f4e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ebabc5a0-c993-4d15-a89c-fbd2728acd53"
                    }
                  }
                ]
              },
              {
                "id": "53d7b869-2a9e-4b16-9dae-fe0b45ca88c6",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef8c2f21-7991-48ca-ba94-62df7d15c828",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e252d9fa-4a1d-42cf-baee-6386a2d00894"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3786e1b-ca33-4fb9-8852-ee6a8b4bc4c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a373e9ed-368b-4700-b7e9-e1f5d66a1b29"
                    }
                  }
                ]
              },
              {
                "id": "d64835b8-4659-4158-a8ae-1e24919f05ff",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e68463d-1efd-4368-aea0-b49e28c0db29",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "098ec552-aa0c-43f9-8393-d1b6f2a4008c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62ee853d-ff91-40ee-bb55-838d7041cb21",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5efa6906-7358-4c94-99ce-7ce110e54408"
                    }
                  }
                ]
              },
              {
                "id": "6386f664-0d03-4ec2-9a56-c41d1009e31d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c56a3ce-521c-480f-8bc9-b09cae1ed65d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "072beae9-5679-4402-b158-2a32fc630152"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b8d9aa8-ca4f-49e6-baf3-1ee6e0b08b14",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "962b7fee-e798-4d45-9fec-9d6d2dc0fbde"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "372cecad-0c1d-43e9-bf4d-33442676002d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "41408436-6488-480a-9341-59e2357b9e15"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "734e773e-e9df-4260-b882-03b229dd688e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "abb87f19-cdad-4d5b-81a4-58443667cc52"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "874c3ac6-1c4d-4fec-a9f6-0f99f81f4901",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "386a4b4a-c349-49c8-9157-5a4d0c3880cf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "349bf544-f226-4661-9b9f-d846519a8a0a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "81633b92-433b-47df-bdf4-3660427a06e4"
            }
          }
        ]
      },
      {
        "id": "13e45832-5876-4379-a94e-4ae89ef5dcb7",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c995b998-e268-4239-aae7-4feab95ec274",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5822cefc-a073-4799-a15c-fbc1e5d32389",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ed34aa2b-08d9-45c4-bf68-41c5fdca9d09",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c6c0e51-017a-45b4-ba7c-9fde471f481c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a989837d-aa13-42da-b62e-305b5e7b7330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc5a4c3b-de25-447b-8578-2e2f635e3535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca08f5dc-d1ae-4f09-89db-70dda1601d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "377e6e0c-0104-4e27-bad7-f77ed9ca906c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ff6505-93a7-4653-add5-804dfb0cee6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df083923-6d0c-4c24-af5d-a84299931544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebeeec5c-620f-4d65-9e63-67e2c0ab9d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0cbec0f-b37d-4516-89ff-cdf25896eb63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b80196-baa4-4aed-85ac-a32fb5249d6e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b002b7-020d-4cb3-87ce-86983f705248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44c0f513-f348-44ca-948d-c7dad46619e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29e12742-e4ef-4867-846c-50f7e2671535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "78b739e6-d558-48d4-a607-1b185056f9d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c29d4017-e010-42df-83cd-edb750f7adcd",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11850cf7-693b-443e-b3e3-f4e4fc8ea3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b93c573d-2dad-41d3-aea3-c28ca24975e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e85d14-9f15-4f5e-a690-bb58fe70638c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "832f125c-9d60-4d00-a06f-a14e68dbdcab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d155328a-e778-47a5-8ea0-a1d367bca66e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e420c893-eac0-4f7e-aefd-5feb158fe929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d8e7144-cc3d-43f4-9570-bec1e246254b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005811ac-3a75-4d02-9d2a-f6ab97529f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8badff04-a744-4dc8-867c-b557318e550f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba1cc82-36ee-4cb9-852e-a773f3accb4a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77da2580-1506-47e8-880d-9e14cf7f97e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "067d7826-f31d-4260-9690-fcf3d58856f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d6cdd9-564a-4c49-bbbf-f96fbb720b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2afb2d72-3b54-44b7-ba27-c4f31575e44a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a0dcbfd-b65e-4fbd-9c36-e8094048c973",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89815ce8-a387-4d49-aca4-94df41f94c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f7bcd9a-4d0f-4264-af3a-960190c4e4a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1ddff7-45d6-4f17-859f-9d0af73c1185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a3662c0-41ae-425e-80f5-a746e04d81de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b17c279f-7148-4d82-b4af-36f874f0d15b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3811ea-7a16-4004-b383-1859afc3e027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb9e9e0e-f498-4a8e-952a-cd2b866f5de7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0cdd000-566e-4eea-86f1-8d8630c39272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b18e229-7090-4710-8f63-efe1e59244d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d6316b-95d4-49f8-9ebe-29367da0e6bc",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd9bca05-9160-4c73-b582-4cf91b9e2920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90a71f70-a028-4d06-886c-b9337cb6249b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c17e65e-f0d9-402d-aff2-53d5d3ef503e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bd2805b-1be7-458d-9cfe-413cbfa1896e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd1de7a-e2bd-4437-943b-1057293af817",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d089147-d5f3-4853-92a1-c9db00184e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78fd1817-6fd8-41a1-b1fd-c9abff6e7ae0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc890477-5a5f-4700-83cc-88579b47e096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e068b5ce-56b6-4047-b529-97e82ca20a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d7e2d32-fd55-435a-90a1-7fe5dd093a1b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c0fc6c-a167-45a7-97ac-b94ab413c7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d5ecd04-5894-4852-be7e-7620031991eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98fd9a65-3818-448b-93be-bedb53c2cbac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e5f92dca-d389-438e-b308-75b47a92e61d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8507fef6-9dcd-4d70-9ce1-2439fcc59870",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dfd29fd-90c4-4b92-84d5-16e080819b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ae5b94e-ced2-4961-8de0-a3db0f87ed40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da46c492-c093-4959-ad67-3a403e14eda8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b1fe58a6-33a8-462f-9844-1a7d2fff311b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc91b25-ffc7-4399-bfc5-fbb7821568d1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab76459-2e34-4684-967d-9d42690835de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e091cce5-2b07-4dc1-8960-06e81350331e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "830723a3-dd02-4bbc-b359-7c7f8da6efc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6fa8482-8d83-4297-9c40-615d95d38790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c642c896-b238-4f2e-a417-72063d571181",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f842cb4d-b4b6-4c78-accc-11860dd1dc55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1f1557c-06ba-4749-9fe9-e496a80003fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "701495aa-71e5-40be-9cb6-58c03fd1101f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff4e17cd-75c2-4264-8580-189644b2ae1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53a7e943-eb7a-4298-baaf-4ba1c38d9da3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a88734-ba6f-4836-bb51-de697638c5d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f7eb097-de35-4c36-86ca-b3e4514647b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c8bdbbf-ed63-4da1-a3ce-e7c5a43e3c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f2400f4-0865-43f1-bf98-d9f5d4624840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5895cb-8da9-4061-9926-1aa91e07f87b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc745846-4032-4dd2-b1a9-bbeba1fc93c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51832a73-090c-40ce-82fd-97aae889e2c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4229989d-a6ff-4ad9-98fc-81dc4436cd1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7aa4b82-9799-4f39-8108-304af30dde41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7713a69-8b17-4542-ae04-37c66e6132fb",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ece26e-63f0-47ab-b9e7-f3f146a0bedb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ed457ec-aa9a-432a-858e-fb546ecbe4b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d288698a-364c-4e14-84a6-5a09a11220ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fee07cf-9ece-4706-a26d-b0a101628963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28aa8d68-1d30-4917-9eba-ac9ffed18a3f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51fb962d-32c5-4cf9-979c-dd7c3b127905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fe7f564-4dd5-406f-a7fb-735f7013fa70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91bb53ef-8ef3-425a-a8ab-8de65db196e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6ac4638-44e7-4ba3-b6b4-144b264ceab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88e202b1-6ff0-45d8-b829-60281d0de9ef",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "274f1bf8-7eb0-4d1e-93a9-a393b5957423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7051f9b-feef-4b40-b663-0d5e789fda0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a74d75-753a-499c-be8d-eb16f28ba028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca7b99ec-92cc-4fa9-976d-83464b4fecd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef82ae2-3b5d-4345-82ea-acd8ea78ccf1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c60173e-1ed6-4e86-8922-6ac3cf8fcb8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6102eb5e-2348-49a3-bdf7-6c85391776c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2362f607-8337-4e11-b031-0cd194d3df9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "045127f7-ce93-4c32-99a8-b0b5015a9024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a983bbb8-d6fd-471f-836e-dd402a3bf281",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "846f68d4-8cd8-463f-84f3-f2efef978f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "871b1153-9649-4f40-8e84-b40ce6cdb3bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "940e70ef-0fab-4b83-897d-b83fc78ad934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32290a42-0467-436b-9a49-fecbe3003fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a40959a8-4ee5-4502-b253-840c23fb62de",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0570f165-c3d8-4bd8-a7d1-cb90a3ebf948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1aaa339-1d0a-400e-a588-69e4c1bcb7f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "800f361b-a249-486b-bd37-05129bc716b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "068badc6-5685-469e-837d-21de5cd8541d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d149bb07-d7f2-4ec6-9709-7ca44661d8d0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0532e336-084c-4bad-aee9-12b492ed738f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21cb6337-6e4d-42ea-aa10-aa07c881755e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edbd7b90-b0f7-4b3f-9f2c-baad02208d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23abd0dc-9e54-4caa-b03e-9f59404f9876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b6a63a7-b757-4a19-bcb5-24265578dd19",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bad1bdf-e464-4287-98e1-a387f15f6887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4ae26ed-7d73-4d6d-950f-3f8cf9805247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a478b688-8a10-4288-8f13-978a41b053fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b72930cf-4918-44f6-95b1-117aac73ed93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4239bb01-9883-45fa-9c37-0f3eb584bf1c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4bafca-e035-46fe-85b5-36ca3d624708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a877abc-48e0-4c3c-8218-aa90095ee1d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c6280a1-438b-40c4-a6b5-36a9899656ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a94e69c5-1e09-4685-94f6-e99f60b7dbb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d84deba3-ab99-4e1d-af05-557795cb3f92",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "790b338e-3dd3-47c2-82d3-557dff009bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da53ba66-a727-4b0a-8c1d-5db15f8900bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd294027-fcda-406c-9c62-3ca9dd5dbbf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a295361-e32e-4255-9752-dfef94172159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8df8fb7-40e7-4b42-804f-aeb8bf465f0b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d8c7f48-d1b0-4ddb-832c-46ce0c8fd785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f20b5862-4deb-4932-9610-66e3e4fe1394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cb7cd58-b8c9-4c8d-9218-058a16a2177b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d24ccbb6-9fae-427d-accf-cbe8c733643d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e29cb8e-7713-4fe5-91b7-bd4c44e01628",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf835699-d7c8-44fc-905d-8ab5e1de01a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2be61b2-755a-468e-91b9-2064e61766dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e7c859-d212-4357-b4ba-d74b980a346d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e81a2fa-dc28-440c-979e-dbafaa281417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b251155-7b67-45a6-be05-414ae7fa618e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "361e0075-18e2-4879-8c84-b686433c92dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d4b7562-da5a-4a10-ac36-31fb4eafb1b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24c68a6-987b-408a-9227-7f3fc9e72a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5de1a84c-5086-4fcb-bd70-450067142684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6950ab03-779d-49f2-8845-bcdfcf99289f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "476c7466-027a-465b-b7a3-e93d6ad82596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60f42e04-f7b7-418c-a130-82506d642ac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2175796e-aebd-42de-be72-74f05b09a854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d94e794b-b744-4207-9f92-851c8fbd8c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d212c4-2a01-4c83-b618-b0d84b9b701e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de9464c-90d9-4f3e-a4b8-d5fb539a1ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dbed961-e442-488c-9a38-dc2b63c440d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b271a462-382b-4bdf-b7d1-4e6ff49cc859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b391d9a8-fa23-4557-8a10-5e9c9c974036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d6d2b1f-998a-4cc7-8fd7-991f5fa58120",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e4b513a-d8b2-43f9-899d-a99fec26b9ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "001a996c-79d7-4ef6-9803-4e6acbf23627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8278b8d4-d08e-4e28-abc7-60dad584a7c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3cfc0d5-a499-4751-94d9-ec2fb71d49b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "231cd673-bf04-455a-b769-33756f8df1f2",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "215a6a18-904f-499c-b3a6-b7f3b514af76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ada5e940-c864-4135-afe5-8ab0fb0ec7aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4185243b-fd2c-48ab-8e8c-333f5e31221f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95435130-8081-44cb-92c2-cc8cb077537a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf521059-89f7-495e-a66f-10e78367c921",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb771ac-f250-445b-bfbe-a4d5bab80b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c05e386-23cc-4367-9db9-4f3737504296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34db8cef-a264-443d-8308-f0bb24396937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be1c90bb-d203-4ac7-a85a-94f1cfa89746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ff62fa-887c-4d00-aada-5160e8ec04dc",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c11858dd-c9d3-4523-821a-06412985abc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef8bb08c-5975-479f-918a-b2b678210d15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "262c29a3-672d-41c8-b6af-554b56314340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc0f0924-9d4d-4ca5-b52c-07d47fce4437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2405e87-031f-42fc-beae-9ac4b55b783c",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "866dc2bf-0c5c-49d6-940f-c286738e83f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "442baf05-4649-489b-9f22-62e0de56ee60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca276c6-cb3b-4ca7-9136-b43c4ce5636b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ef9e5e6-d5d6-4f2e-ad01-ff13d75b10f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2ca4cb-f7b3-4d2e-a964-51612c1ee5d0",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52cbb72e-dbaf-4523-b7c2-c32d28b6547c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e865a8c0-0e2b-4dc8-82a5-625f1293777c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c024fc-4e7d-46fc-8d4c-400a99eb8ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc25b6a0-f12c-42b1-a8c8-81e4233b3187"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e7fd0ed6-6e33-42a9-92ab-f82e34d06618",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "89a13104-3276-4f1a-82b2-9a1a51da878f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "827a4700-b373-43f1-b69a-c1e929537b79",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "48d305f7-b22a-430c-9330-625c33413ea9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c10d1dd-41b4-4bd8-945a-2516e1f5129a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "726654e0-ea88-4d58-8155-420618e5f659"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51168fef-fd0d-4ecc-9c4e-5ad220494cae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a31aee2c-f3bd-40ab-abf5-5b540b68399a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "25c2789c-0aaa-4c5e-bd38-ee12d80feb46",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab59a240-ed31-48e9-946e-187bc46182e3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c235ab17-c046-4c22-9e18-b8e59a398c29",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1e4c74a9-9288-41c6-b075-f9b14cbabef5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5ac86628-ed97-416d-a641-452c1233a448",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8b641e63-fbc5-4b0a-949d-9d5fead6b1e6"
            }
          }
        ]
      },
      {
        "id": "65644f50-b80b-4b40-811b-ce5a81c9ac37",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "2686fae0-1bec-41be-b234-8ba07fc75994",
            "name": "Negative Testing",
            "item": [
              {
                "id": "10abb0c6-bdbe-4373-b03a-3e935e0ba423",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6686dfeb-a56d-4799-ab6d-fd8ee5e30ebb",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d61cd36-c4d8-4f9d-907e-a941e848c06d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95a3b41d-4a60-40bd-a7db-a1b7b9682682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce7b705-7d37-4667-a5c2-ff7c01403019",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dfb606b-6b94-42d7-a400-4fc438a73d9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2180dad-4403-43e9-93b2-2ebfeb507309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77fef841-1b41-4fc1-b1a7-f3fbb7276cf2",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b943eda-7d1b-4e87-af13-d11daed22cf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69d52872-7aff-4ed7-8e2d-71b19b61937e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca1ac0d-d735-4ffe-a6b1-1bb5a459d9e4",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd8a0d7-3eb5-4abe-a6c5-2f45b9fa75c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4020388c-6216-4f0b-8901-377f4b494bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a57f954-4133-434e-9e3e-2751a268332e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef7b077-9743-42a2-8881-ea5966aa60da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7846cf05-8f76-46e0-ae68-e198a01a4c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35dfc008-6b42-4fcf-8c39-4e14d2bd8ff3",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f92e113c-98e5-43c8-880c-7f7b6f518724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c136f670-782f-4241-a9f6-08c61f814875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb6336d6-50b3-4834-9ea4-6b37fbcfc146",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dbd887c-c2ee-4328-8a7b-59c7eba71fdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afaeb87d-acdc-4111-a075-6dbd0aa89173"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb6f035e-f003-4b72-87c3-f844b63f960c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3fc672c-01b6-482e-a775-d18014ce700f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6339f2-a5b4-40a3-9d92-929d04b1ec2c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e2556f2-02e8-4411-8106-8114c433a142",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bea0ee2c-bb53-410f-b88d-243dadffd0f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16dd728d-f593-4a50-88ae-cbc9dc0615b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e0f0bba-f404-4066-b100-927c2d1cda17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "187e8d28-d3ad-41f2-a4d4-2224ef2b85b0",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d841ddc-c054-43c4-8c5c-283b6327787c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7421f119-eadc-45ef-8dc6-134e735ae044"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecbe5423-3458-452a-9171-185ae50f6641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0207440-144b-4d80-abb8-14af735aa6c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "490225b6-f49f-4bfb-b5c0-a9e5ca4af67a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f93708-2863-4777-a2da-68479af85365",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8aeec656-c454-4ac9-8209-484611317301"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "967d0fa4-e73f-4f09-ab81-21690c11e361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61406b82-3e8d-40ca-8393-c5a5742672d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c6960a-b782-44bb-ba53-46871bb9e231",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e73a0f-b03d-4eff-b8b1-cdfc962002c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84ec53ef-34f1-480f-8185-fe1653237e60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dada407-5802-4e55-bed4-94846d7e7e69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf571906-86be-4815-8fcd-b96d323b7f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c58d7890-cd16-45ed-8980-0926826686d2",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6de930b-3852-4c96-b974-4a453e188d66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "473f22ae-95ad-4ea1-b14f-c1aea3aaa391"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99755565-e5af-40fa-88ba-1b246215241c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5affaad-b50f-401a-a786-6fc630bf0cb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df96683e-a0a0-4bd5-864a-bfda073e0697",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0fa6174-f7a9-4b21-bf52-d984a1978428",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb2796e9-794c-46e9-bfd4-44904d090611"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef0714e-e4fd-4c25-b398-efb062a73643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bc89c23-f95c-417a-bfc6-64f49c6fc6ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6685337-4458-4577-a013-363d839ec769",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d31b15-cb68-4467-b863-905d47316505",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8da1133-6d38-49ba-adba-4abeec6591f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b185f69-6636-4f28-9269-b00c7f8533ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f78f7277-e398-4aec-8e82-afe634564ce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675cac09-c93b-4202-8d36-54ab08b85f36",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e75433-f665-4938-8dd7-034bfceff1a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bc23f95-ad29-4f72-89ff-2d22b7d644e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c0cdd8-2993-48d8-9842-d2cb1fb315eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a494bf41-21b0-4665-812d-2d5a2c9ce3c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f8441a-3e2e-4da7-8267-0f0564c94c81",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b00d2f-f9ba-41f3-bffc-f6b3620d6506",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e60fe11a-a163-492f-90cd-d8f8630bfd32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e11d4302-8783-46a4-8b15-76b5df039452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9beb9db3-6e7d-4b29-9d5b-86e77efd9451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b681624-5567-4117-9c2e-d23b5fedf876",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b9e3c4-ccd3-484a-bb66-0454681852f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01ccbf6c-f1ac-4d78-8034-8226ad8af852"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7ea817-25e1-4717-81fc-369513886315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9098d0f-1994-4fe3-949d-871dbd1ebe44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad83a61-f515-43af-b3db-e4a6a6dfdd6d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54cb088c-00b5-4449-b4b0-62b9fd8996af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "349a6b2a-0097-428e-8c9d-328c40b0ba5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0600b300-9856-4105-b3ed-33aa09c97c1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a08aea03-2056-4d6a-91de-e419a92d8e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c86386-00ba-4ccd-8942-cd6fbc34a9cb",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c22cb8-6bc4-4520-9500-9a9321ee1ba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "507f78eb-df91-4441-9124-3e0711a985e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "960e8214-78f7-40b5-bc7d-578898be4888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6610519a-22b6-4c59-ae86-32ecabd1365f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea2f182b-ce75-4411-abfc-79abd545726f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00fd97db-cd9d-4ecf-bddf-034024e6e9b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5982af85-18f6-4f02-a67b-a51646b0214a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c906778a-f4c7-4d72-b233-b0e9ceb09306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9adfe6e8-d7d1-4e5e-8232-3e8fbcb9a10c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cc26eab-4ec2-48c0-bb5c-46b7eae6adbc",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cded600-1d74-4e09-9d38-7ec64b20e258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0cab0cf-293a-4e25-b28d-6a4644fe1a45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fda50c2-e200-4ab9-8a64-9ac42c531adf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04243ef9-06da-48e6-9cc0-7b5def804ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9606d710-51ec-49f7-a089-2ac8ca89c317",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ea42d5-dad4-40e2-9f3a-10dadd5225d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca32714d-d1f4-4da8-9fa0-e067d15eb997"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d9aba5c-1cb2-4ab4-82fa-d92de7d17210",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "006a0930-b5bd-43a6-b5dd-8fd15a5992c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46fbed00-58ba-4daa-9408-2577210fa7fc",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ff6f4c-0206-4b29-bb62-a429d6ca9892",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49cf43bd-e1d9-45a9-9445-eaf6732f5aed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b1ee88-1817-415c-8e2b-2bc5967e5630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3398aaa5-d2e9-4d77-9962-7ab00a307f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0834bf49-6838-42a4-b753-b2a39033b2fa",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28993291-db19-4052-b491-e70d42f1f2e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b5bcd8d-b1ee-4056-8343-b19326c67196"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84560ad7-bb88-45cb-87bd-51fed2bcf26c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ac5d49a-3646-4e35-9fb1-94b31ac784b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0b3a364-fa25-45aa-ac7e-bc0c98ce859e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd31d55-897a-4965-9def-9961d961821e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba75fd78-122b-40ac-bfac-67e067fdd2ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "146530ef-b3a1-4105-ba49-c98af8579633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63c007e5-190d-4e1b-8aef-a7735b618d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096dd8e5-4835-4112-b33e-7048a6bf3526",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d28880a-c99b-4b69-9cf9-38e8790e7de4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "103788ee-6723-4930-a16f-2fe4654f7d9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7126dcf5-35f0-4608-9f61-815a453f8046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c3bae2a-f02c-4c9a-87d6-ab7b12c1fd43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c262bd-97e2-442d-aac4-5581b36412ff",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30efc4b0-2676-4a7a-949d-a65164095985",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a9c87f3-c78b-48df-bf16-5abb11168ad3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f94d7a-f340-4982-b630-db9a9dca151c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8841f683-523e-46ea-810a-42dcd535e942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae22c17-bd77-44a0-a173-65489775a64e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036a4f19-7f00-4511-ba7c-d9f1ad440567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eec94538-c462-4bda-a4ae-5bcf6c916781"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f78f53-d0cf-4265-a85e-3ed6347192a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53c45a66-ed40-4764-a0a5-f73b38ee554f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d18b856-75c5-4617-8fb7-300b830f15e1",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "851d7f00-2d37-4c38-89f6-9fed8ccaadc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "329900c1-f788-484d-ae0e-9357d14305c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b45ca6-b65a-4436-9107-f7d72f40a818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f58e47e-aeaa-421e-8ee7-933c04091068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e19a7f-662d-41d2-83d5-24f7ac6a4858",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb566085-f118-4e2f-b9e2-2df832b400dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1416500-d99c-4b8b-91c7-b7c95bc26d51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c050feb-6053-405f-a83b-88d30939baaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a088b811-153d-4ab0-936a-31e5f6a973bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed0f98b-9533-4fbb-aa55-b516435f2203",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55916b75-92ac-4832-a2ee-d940360b1574",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c45168b-a8f5-40f8-baa8-6ab5ada7b8a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a177873c-a2ee-443c-b9dd-3c7930a63950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5238d823-0584-4b59-a3e6-e16ae6f0636c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c223abd9-5aed-4476-97eb-32cbc323b809",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af7ed5e5-abb7-4cc2-9cc8-2f476746c5d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efbc28b1-fa17-4e56-aa24-3f11eaa5f993"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b21b74-804c-40a1-b5ef-8a0882571720",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aeeb058-0a8e-4306-95da-b3b40fb27859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad11f19-bc12-4660-98f8-fef6c669dad4",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab46078-f8d5-49cd-8017-ce07e83f26a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebaeb2e8-2678-492a-a8d1-34612fbee167"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22fe8d44-89d1-4c3c-a8c3-e467a07453ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64c9669f-d289-4329-986a-81fe86525423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "052f38e9-9d44-4beb-a42e-aa87f8e76c6a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2465e355-fe2f-40ca-9506-e4d459ae96ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1cacd6d-021d-4120-b240-a5730153c25e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8663b922-296c-4941-b0b4-e50472c56430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb4c532c-c87b-44c5-a949-fba1040d0bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be02778-0c37-4417-8067-a826c97c43aa",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaadfdf5-29d3-467f-9201-a7e713473fb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "111e061c-3b7f-42a1-9de9-a8e3a864a330"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7db255-7056-4dcf-a800-bf8ae0a294d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a0efefe-1b6a-4e79-8378-7d3352c854f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b5d0a4-94f5-4b0b-8518-59b105d941da",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd23e83e-40d1-4bb2-b9f7-39b99344a0df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3c3c133-32ea-4341-a023-917f19bf6b72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45752edf-9d91-4bb1-b5e9-df1da40091c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9fe1fe0-4b2e-4749-86ed-80ddf0fb0d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be988bd-2b0c-4b80-ae6f-0758d12e8f95",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a71b40a-cb31-420f-ab1f-5f42861fb109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f08e852d-9eb1-4e50-82fb-eb0458a088b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a7d2291-c8cd-4e46-96e3-c70cd129bb58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2ff6322-68c7-4c96-abc3-e71b9c6510df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78438542-6c39-41f9-b5ab-05b5b7df6473",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c769d7cb-f535-4ae0-9af3-968ec7f1e1f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fad957b-3878-4daa-ac72-1a31765fb587"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8987ae5-6bb9-4bdc-84e3-7e18f5e777b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f175b185-221b-4eaf-b116-1a391de53a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c7a5a5-e298-4a7c-842a-1a577700f228",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a2348f-d6a3-496d-bc17-871c0e8e0664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d43342c0-5c77-42fa-a1e8-9c45f3703861"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f78809bd-dc41-4d0a-bff8-3e3af0110774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87a7ead1-2cb3-4201-91fc-ca17a02556d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1292f95d-2be5-43d9-8c4b-3412354aca3c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e287d6f-12a5-43f0-a5cb-9b34e515247e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5abde1a3-c2dd-422f-a99e-586eddfee154"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b2a1cfb-2940-4a22-b7e3-4732da75c329",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53b6fa3c-9a81-4528-b1c1-b9e37b2f025e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a1663b6-1e7b-4680-bbd2-1bd449974bab",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f25f331-2f6e-452d-867a-c5ffda523cf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54f93cf8-d953-4968-acd0-6c2212b4cf5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb183ec2-e19a-4c4d-be46-159d52c60824",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "498e9828-a7b5-4c7a-a5d7-381c83b84ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3059126e-8af3-4f7d-b4f9-d7efd9b0a3ea",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2ca738-28c2-4164-a4e2-186baa24f475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf9718c2-c25e-4bcb-8983-c26389bde60a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21824e8c-b341-4135-866e-d26e7645a3ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06965e62-a2d4-43dd-8b2c-7a57a8975beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c074348-3e32-4ea1-a973-6c7e4e8de877",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f92ac71-f9ee-4607-8458-182068fa5d57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "115bef6b-35bc-4e2b-89ac-01df211f986a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a83b7afd-f0f8-479a-98d9-0a8680acbb6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88f86964-3411-41db-9399-c4f1b43eca34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7480167-500c-447e-acda-d30e0224a5e8",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54619438-9125-4a21-be88-44b41cf013b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66c9ef90-f7a4-4cc7-b585-64b35db56781"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a89a0eb1-4f79-4ad3-8c3c-455ec1c46cad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f62ffc08-d22a-4579-afea-dba3651a6dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3489a0f-19c5-4cf7-8471-64baae60f779",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe8a205-c72b-418b-841e-6bd555731dd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63d87ac1-f0e1-4634-9ed2-f79ab3b54a29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de2c08c-6ce6-4c90-b43f-dc07b6495461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39edc4f3-b939-49ed-8fc1-6a68aa4ab2de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1a1cb93-411c-4ea3-8e8e-ced375e97d8b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8445c87d-3994-40f3-831d-717cd3f79980",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16e63445-83f7-4ed0-a654-caeda970ca58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d92c5d-5e83-46fa-b5b5-5dc1b694f513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e762dbba-d9ce-4563-af1a-cd551df32e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6fc4ad-0556-4188-b1d9-c15e1d7cc381",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e11cfc-897f-4341-92b4-dc5d601bc15d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15f139e4-3159-47f0-8fd6-6ade8f1abf8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "807015a5-953a-4e82-8388-b04a66fc25c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfe130ea-ea40-4e8f-be3d-2ab1a348d911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4efc7809-d56b-4d80-965b-1e24844be5a8",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c80daed1-b5fa-4576-b37f-9a003e7e884b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28da9032-7908-494b-9eee-8d5055c5249d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2f8e2a-d4b3-4fb3-a299-8335d28b4c79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b2095ec-85a6-48dd-884d-2ce5ea57353a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b56635d9-0c3f-46a2-a69b-b6d896793d18",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c04755-c5c9-4979-8f90-f2255ab654bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db23cfcd-0c0b-450d-bcaf-071326206b38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a77182d2-5568-4bf6-969a-26fc5e503438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "492de56f-0de1-43fd-88f8-119ad2fe4293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0779cfbc-2848-414f-a34d-3d35b47cbef6",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52829868-1b6d-4b36-8371-cb73edcfd234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06af60d7-13f6-4d60-92ca-fdca74d868c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d3809d4-b74d-4738-8246-00e35e015a9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fadcce02-5d95-495a-8740-e4499fb80c38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d3ec60c-9a9d-4c04-b272-d95d11969046",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7581d715-4c90-460b-ac6b-46cda2fd19f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98893fd0-6a30-4345-8f8c-ebb122262062"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4981bfb1-e137-441f-955c-b80d03a8692d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5be39f7f-e64f-4ce1-a704-041fa1c5ea4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64ead6c5-e24a-4541-a4d2-711515fdbe71",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb7f9a9d-a242-43fd-bd26-dfdce5aaf93b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a486507-3a85-4522-8eec-6662897edf96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af8ff069-6932-43e8-a5a9-dcca4f50101c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae3012a9-704b-42fc-9ef5-8cbe27560602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bda2363-35a8-4ddb-a5a5-92a1b936a01f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e0cbc5-2f81-403b-8311-a0ca47e1cf54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "849c1aaa-16a6-4914-91e2-255b5834a928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef2d7223-ef18-4d8b-8c86-739fd7d7cd4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "766c99d5-09e3-4fe9-9dc4-21398a207c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d637af9c-2b8f-41da-94ee-b9b177f5b62e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69188cac-3e7d-4202-b413-0373bc56b435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3797b5db-ab66-4c8f-8ce0-993911d7e931"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f40c6e58-6971-4e1c-a856-427700c6659d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbbff91e-2561-4034-af01-8f619280d83c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc18324-ff40-4230-a46b-f7c2d224739b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa10a3f-7ad5-4e0c-9a75-f68a82d5c168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51314b5a-02b4-4e6c-8747-a4aa05eb3fd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75df4c27-90af-425d-a493-c7cd545f87d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a0fd862-66ff-47c4-9156-297dd596225f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b94907-526d-41c6-b1b1-3cb8b173d746",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03798934-2805-4fdd-9afb-bfb95d4d9a08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69c67650-e06b-40e8-a173-b4d5b28ccd12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95b79f9-c7d7-49fd-a1f5-5be249851c28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f565999-e036-4b8e-9aa2-4e50a6db6f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b99b2e-e5cf-41a3-9f82-d138ccb9b492",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f1962d-a66b-479e-a3aa-2c74cb1561a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e584d22-3111-49f1-993d-2befb81af14b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98879380-9aaf-46e6-b92c-ebaf482b5a92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ab7eba2-1367-4563-a91d-dea219769351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fda2430-67a5-4a2e-8490-3f7178885985",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c011855-6d1c-4d58-a81a-e578553234fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25ded49a-09dd-47d1-8ef9-fe1aa13eb71f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "544f4dc3-49d8-4cc0-b030-540542060d9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abd41edd-b346-4682-8c2d-6ddc460c18b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "152ceae5-e5ad-489d-8689-734dd967ed59",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "835e8ff4-cf79-45a6-9b4a-9312df83ae6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95faacbd-2459-43fc-855c-1dc97fa3e83b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f7afb72-7244-4911-a314-b3943ce7361e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d2aa14b-8491-4bac-b930-37335b3cdcbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ff6209-2882-4ff1-806f-bf26baefeb8c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104e6d1f-1699-44e1-b245-f1c65cbbdd01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04a463e0-1e18-4934-a0ce-331a3185a85a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ff93c3-911d-48d5-adf0-cd3d8d7e037a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a330503e-f683-4bd6-b92b-f1e7b5a34ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73f61d0-f5f1-4d4b-8f63-0afd947d04c1",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "430c9f70-2d8e-4a39-a5a9-7d276bf58771",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dee243f5-c90b-417c-ba24-778ef931a779"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "112895f7-737c-4b5b-8390-e3ccf799d703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d0fad4f-6adf-4664-b677-5e97b742a3fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a36c2ca-98d9-4399-95cc-8335f56558a2",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71814395-9cf4-4939-bf1d-bc01c1f29b2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ebf4ea3-dbd2-4a41-89a7-4a56624b7ded"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daeda7b3-209d-49f4-a18b-b62b9588af2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31591612-12a6-4eac-8afd-e83d79bbf549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c85820-6ee5-4215-baa4-269237ff4bc9",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "780e4b8c-1fe2-451d-b9e5-4192d4d5b749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55231864-16e2-43d3-8213-a725ac175a72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba4fd3e-b025-4fb3-a81a-6f60471a7094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88b9ae25-3ef6-4952-ab4f-e4a4c841801c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d1fb1d6-d9d6-4415-b9ca-043546567c10",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3106673-e84d-42ac-b8b3-7d45259c2501",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cf3cbb0-ac14-4727-bf29-3c6580d429af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71dd1578-c3a9-48da-a932-39d8d77937c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cccf431b-ad6c-4add-9601-5aeef19856a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8372ebf1-62ed-4fd6-a3fa-7502a440e995",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c59abd-b62f-4c16-9b56-a1e3df0beb73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e134179-a6bd-4372-9a85-6503ca98e3ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b1db75e-0535-4d01-b93e-df9e3243f4c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "597080e4-d6dd-4ddd-a03a-68bc66913900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "643ccc69-5ecc-499d-8890-8ec28db574da",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a556b360-3e72-480b-a108-fb28b5884b3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5054590-1afc-48f5-8f4d-d258fd4b5939"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ec99a7-0d92-48ef-9871-9b39b1feb93b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a6d1234-a883-4056-8407-0034f47fe8b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1228f08-86c8-4449-85da-b835c23b4c62",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0174d0b3-699f-4a26-b7b1-6cf229be732a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5723abd0-9e11-4ec3-b601-e481780d4642"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1562ebb3-45c2-41fc-848d-084d951be97e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14670865-a856-41b1-955b-e022916eaa6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79450a96-6ed4-4a44-985d-cf665546db66",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2e50d7-c17a-4fb8-a822-37712456dd5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cbe7bc3-49de-4122-9a42-423d878b7e98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89262382-850b-4a16-ade3-27da163fb1a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37e19323-4629-4c48-9205-d0b0a6a54ab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7cb5423-06c1-43d5-98e7-16de14b9f81b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43558274-fb67-4a69-b5be-15ebaeb7e23d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "223968f5-04a5-4dc3-8191-ecd116ebd7d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e69f3ff5-9a4a-4f7e-b86e-99a175b0be87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1861e168-2c7d-426e-b2fa-4a04b00a619b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649b9d39-216c-464c-b551-ffebed35d81e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c1a85fb-2ecf-47bc-833d-60bdf340c923",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffbc940e-3bc3-433a-9a03-0329eba69349"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "167c83e0-e30f-476d-91a9-929dbd4fe85a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "060615ff-0e1d-41b0-8125-cfb1aaf3c5ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99316dc1-c970-43d7-8783-772efbef5097",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c895446b-be17-4ecc-b641-082d9162ae46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58e3dbba-753d-4259-9cb2-084fb0768ccc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e960fb-3893-47da-94d0-4a514898e15d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08933452-9b5e-4186-a071-74216f02ec90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "709aecce-7f68-4343-a2a8-9a3773aebeb5",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d19d164c-f985-4163-b63d-7a9286d8cc54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f1983eb-ad89-447c-abbd-c222f2806606"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d42e35e-c1f1-4a23-a42d-c37e6c78dfed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "970aa713-add8-4e89-ad8b-6e1a9f287e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1aa9227-81b4-4797-b07e-8f73a38ee8aa",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "930fde74-b56a-405c-af11-5c3124867e8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88cce4cb-3304-435b-8979-33ed5c0b058c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ad275c-d213-4a48-bc47-e2a5d62e873e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b58df110-98d7-411d-9818-281d4dd41be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d7bc50-4ea0-4801-8001-1c73739204b0",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea083a3f-e374-4e53-8232-d56111f34a59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50baa052-8de0-497f-84d9-cc503ffc2b35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee32e22-1533-433f-a342-cd85b084125a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83eea441-ad9c-496c-b811-1575facc2e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "887799b4-2686-4f87-83ee-c835d909ef84",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "465c4494-91c9-4c38-ab36-063cd3cf9392",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6aa8324-d112-48ad-8da6-43cc6206ef3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0288bd5-eb81-4721-8cb1-b97c3724ba16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb0156fe-a6f1-4c0e-b4fa-0afba1e2a9a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f49447-3240-44d7-94ef-8debc1151a21",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a94652-5e69-41ef-ad26-4134a78efba8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f47cbade-1131-43ba-b5fe-789b95b311b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "830b5870-aa77-49f3-8024-66a53fb99f82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "915abf9b-96b8-4d9d-a70d-0e9ea3f089c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c2c4e9-cad1-45ca-9992-4f0a6fef5d87",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a175fffa-ab56-4dfa-8c4d-613a11129368",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07fddf4f-d61e-4c10-bab3-06e6296078f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "683692f0-25c3-4f51-b7ae-949dd2b563e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8d2935c-a37b-4e7b-9547-480aec8f9e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef54ed0-076a-47fc-808b-39939ced4592",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d6fbd1-780d-4849-899d-10a32de53dff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5def924b-0165-40aa-8c7f-11e19a20fdc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef3e9c5-3c99-4551-8685-87ea8f8c707a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fab00191-ba02-4124-94bf-bcb778f7643e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa29b023-c5ac-4099-bfa0-1378233a5692",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aaef045-905a-4fc9-8364-7a52714e29d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3624a9f3-a3a3-49e2-8dcb-94dd9f50907f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7dc4f4e-f837-48d2-be8d-19f62d10be63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b5e3a69-39ae-4577-9979-9a90044cb701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d5c866-3ee1-492e-9309-9b2b673a66ad",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f655dc-2930-4e3c-96ad-f2b2a86e230b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df399771-68cb-4595-bb6f-79045c9a5f8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d72a83d-13ab-4345-bbb7-20ce803974df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee4dab09-1a48-4b47-9996-a8d92c11bcba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a674103-8e42-4dbd-8c2a-565f305fbfc6",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "590e037d-b1aa-41f2-8f43-0ed35299eb25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4969f105-dc82-4311-a4f8-e41ae9754b3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01d4546-ccad-4990-9480-44546ea02daf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d69bd604-cb48-4fec-ba58-ab78df83b51d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "401e403b-a5a2-4c5c-bdfa-e72b38402bda",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3beae0d-6184-47d7-a4bf-73374bace548",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b05301d-5caf-4de3-b40c-89739f0b3939"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f99c627b-1d0f-4c1e-8c28-c49fb7b9df05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c07d887e-f8bf-4495-92de-b2ef14f4a07d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88aa5201-eea5-4b19-820b-1c54a9e6cd1b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca7489e-eb5c-433e-872c-dfc50d8b5420",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64432876-be13-40b5-afd5-66cab4165bbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0611b4de-1fa2-4814-b4ee-3fd99dad810d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d08d06c-439d-4474-a6de-90b5412aa858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a465910-4a93-448b-a59d-d0ec1bcc9a84",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94c33b73-5b43-418d-b7ef-a813aee3e0a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee795369-7043-43ae-9493-3b61ab405589"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43812693-192a-41a9-a5c4-81a6d85470a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65c6b847-c524-4430-a09b-5fe50c455fe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f36423fe-0e83-4c82-a240-7819e5127b0f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc2c0f69-16f9-4804-8529-7457a574f820",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47fd22e6-7ecb-4f43-818f-521bf53eb56b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f273e54d-5f86-4ddc-89cd-f4e4cb39ce4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a264e8b-765f-4160-8359-9fe9f2804ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc97397b-36ca-43c8-b02e-bec0bec10994",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c6bdda-3abc-4842-b81f-b71d793ecb29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6c6646e-17c1-4701-9390-6caac17f95fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f6f6e2-c423-4796-8355-4b06e3537b8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18be31bb-fcb6-4171-8ea2-c967782ec72d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f70f1f02-4174-4a70-b6f3-f1bc7520deb6",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd4a815f-a65d-4c9c-89af-f3d7a028558d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2ef87d6-6ff6-4edb-86c9-ccadcfb37375"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddbf352a-8961-41fc-a7bf-83bbe31c0b2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "231e1034-168a-46c7-900c-c5acdee625b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ff2115-83ed-4cbd-b44f-ca87ea0a02fa",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b84d297-bec2-4e08-81ef-7b130a5a6af7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8f51551-91fd-41bb-a7f7-9185bf1795e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8581422-1103-4d4e-88ab-0ee9375731c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a67db572-98c6-4290-997e-79aa35bd3017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34dd9dc7-1cee-4a64-8d77-dff05e181a07",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43102a7a-7ef0-4dae-a00d-24e0857da61a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60f1a77b-3f68-4c80-b302-e2f08d83c9b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ac20f2-7c50-465a-934c-347f74e787d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e66bf319-4a6e-4c6b-ae05-5742c4299829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc07e881-a003-46bf-b7ce-1bc8f8a57f24",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb29856-4a01-462e-8ac4-c246e4a58ac9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1cfdb17-29e6-4d90-af14-29c39fca1846"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e476759f-2a2b-444b-b062-90085297b838",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17639510-8bf7-4e5a-8cf7-a0843ac076d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f526cd3-56f3-4f55-a927-ada872ec07e0",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f69b00-fbd5-4167-882f-cf2c653051ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a7df05c-513f-4082-babf-e8ae516af158"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a44b6ac-ca60-41a5-9a24-871eca2afb32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f451a7ef-9786-48a8-9824-2fe3c1f60e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e283bd01-cd61-47ba-b16a-0d1894e23818",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c93b95-51bd-4604-bbd0-06cfee933e90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "273275e5-9556-4a0e-ba74-4a46d92c58c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad45262-b4fa-4d7d-875a-7ad5e8525e70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78224743-7fdc-49eb-bee4-5bb62f611cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57251cbd-2536-446f-8df6-19c54e01bab4",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8143eecc-42ae-4ac6-8d21-24b73264b577",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "880afe7a-d337-4672-87ad-8df9128fe0ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd7efa0e-510a-4fcb-bea4-e1d154ef7400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "870b482b-48f8-47fa-9419-75c7aa5cda77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e91fd21-b886-4b87-ad34-477c8985db39",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1832eec3-6f14-43a6-92dd-b0007fd8fdf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "881d1730-2b7d-4d42-9d71-c8d39ee920bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e27baf7-ec7c-44e4-8414-8cd647a47113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1adc3346-8b53-4162-81e6-8e4c6635ba92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c3a159f-ee1d-4f10-bb56-95e0fa3e76b3",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "619a474f-d9a1-43ba-b197-bf94465dda4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5123012e-db30-4c0b-b8da-b21d12bc3460"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79913e95-65f8-46ab-98b7-77e0fef82b5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4b136cf-b014-4b12-94b4-090e48ddd29e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9731fe6d-0b5e-4f72-8eda-c61e9d005baa",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e9939d-49b0-4243-adbc-ec3b71c315d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65207faa-0406-4c88-87cd-7262283aaa74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c784e117-b4d2-47c4-ad55-cccbf4d8009d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a5a531c-2174-47f7-b72c-dead42f31dda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a07b478a-c7ad-40db-9a83-fb702116786e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95eb1311-0da8-4a7a-8d0b-47512a4a55f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c97e94b1-39cf-4b15-921c-ff04731e6bab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa92a573-0345-419f-95a1-ef84567e6838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1201753-8228-4e94-9c96-35566dc6dae3"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ba29ee6-048a-4afb-b7ef-d923919f1429",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9afdf1b-889f-4ddb-b30b-75bf01e77302"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "de5e6095-6b25-4d61-a2c2-e975c214fd35",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "63a2ca8a-af0c-4746-a2c0-865525d58788"
                    }
                  }
                ]
              },
              {
                "id": "b3fda9e7-81c3-4d1d-a638-f325acd9717a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e7b06a8c-4f7a-445e-9534-2725cd175ae6",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e98f7c3-5039-43b7-9106-b0715e020455",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "09c8fa48-d69d-4ba2-8476-62c54b75756c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4ffec5-9ae6-4e41-9bf2-e4bbfe3d8119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "872ed214-1b06-460d-a59c-50180d3ee8b9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e9119091-d5df-4a62-9013-0044eed004ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d14fac4b-6095-43ce-b331-ae5e58a681b9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5807c87f-c6fe-4cab-8cc8-eecc2f4fd1a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8c0f358-0cfb-4acd-b31c-01328ba97629"
                    }
                  }
                ]
              },
              {
                "id": "de3ec83e-fe75-47da-8512-4912f152cfe4",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "7097dedc-e7e1-48c9-be7f-4b697eba7f8b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33583785-9c95-4fc9-9aec-aa31d7908ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "3e55d8d7-6766-40bc-81d6-f0772d636d5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d39c9926-cbc7-486f-8b49-d6d058144349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "874ea4ed-6637-4e55-8fcf-1180b06c7fb6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "88d70ffb-1666-45f6-adac-99a991ac4b40",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9f9fa6ec-4130-4de5-b57a-f023279614fc",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ec8aab6-53fc-46c6-96e8-d1f8f5186630",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d6f2de8b-05f8-41ac-81d4-878c1cd7336c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84052fec-5793-4fc3-82ea-c85436312a5a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "12544e5b-f61e-4206-ad3a-f52665b81a70"
                    }
                  }
                ]
              },
              {
                "id": "24ec0228-57f1-4f08-9391-b76a0e4e0c18",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "47c6747c-dc07-4983-8d71-41a3447cc394",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "75d26611-c3b7-409f-83ea-afa47ebdbb8e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d8346a38-bf1b-4aa5-8585-666925c83d20",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca1295f0-24bc-45f8-b89b-06bc11866735"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a0f11e42-cc34-4c7b-9605-02de7631d586",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "0463ab97-b1ce-4abd-938e-1e6483661db7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0201c0af-55de-49dd-aa5d-9d2d325aea0c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6fb91d64-9d6d-4101-9836-171b6e1f7047"
            }
          }
        ]
      },
      {
        "id": "588c5328-f9ca-490c-a107-56be962094b3",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "19f0b8d3-ddbb-4100-9252-fb1d588aa0a6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "729ca3df-1eb3-4024-a0bc-cbb5d5ec68ca",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f4ee2144-6ea9-4011-a941-5a160601ea32",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5285584-c74e-4b66-a8c6-4e2ce9e8a8fc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "79aa6263-3f89-4e91-a192-eae33fe9b1ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4468aaf-0763-402e-9b64-1ac200ea7387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "831d1965-8ebb-4df4-bb97-40527a850107"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5cdafcb1-2ee7-4d2c-9d37-66280c258cb2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe438655-781c-496c-8867-c3d49aeb0d01"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f556ba60-0eca-4e6b-bd56-117234037e96",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f07bb54f-45cf-4146-ad7f-720fa80c495d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a3837db7-e7c3-42b7-bb58-256d1e656787",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "32aadcb4-4b17-4e3e-a2db-bbc31267245c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f08da91b-ea2e-4422-a502-4ddf620299f8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1400f2ad-c031-4d75-af17-292d5adc2480"
            }
          }
        ]
      },
      {
        "id": "ef2260b2-664c-44a6-93c0-bd22385cc20c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "590c0e97-c7f9-44d3-ada4-5aa8a7e40377",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7a03f522-8895-428a-8997-9911ad772645",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "553b24ae-1c54-402d-aa52-8de1ecce76d1",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3707b2-89e9-4e8f-9c74-152b08174130",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d8babba-6d97-4ce7-b328-83e4d8424e76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90cce9b5-00ff-4052-9f63-0abd68924a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "21ef1446-ba8b-4408-b9e5-7575c245f4da"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b161070-cf78-4e23-a84d-f17a1b416118",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7312727-74a6-4cbe-98a5-20e3d54e40c5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "104c2c85-228a-4fc8-9c5b-33401e000a66",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0960925a-bf47-4930-89c4-ec422728164e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9e1b5d26-9374-4247-8327-1e810b105273",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ac08dcd8-a745-4387-81f2-2f8db6ebda7d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "68144b40-3dfb-484c-a853-fcccc88ffce4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d60e60d7-56bc-4ddb-84c0-090ff865a388"
            }
          }
        ]
      },
      {
        "id": "bcbfb496-4938-4dcb-9095-aae05f562cec",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "bc94fe06-b1bb-45c5-b129-219254b63adb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3c941b29-0195-4f7b-be87-42a0678edd83",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a6c1d36b-a30d-4958-8c82-736fbd5135a9",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d9abff-75a2-4b54-8270-d87d98d5de85",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8abec3fe-7b52-4912-9691-9783091a8abd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22fa46a0-d3ef-4588-8e12-d5b23c3b0bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "119aa9c0-00a8-4bb1-a97b-932a7ca68de1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87551cda-3e4e-4616-85b6-ed4083665344",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d67af6cc-26dd-4858-ad4c-8baea82aafce"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "21ceb918-6a93-408c-93c5-4eefd1bdff0b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dfd6aacf-437c-4a17-b130-9ec24e55082e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cbe7296c-d882-473d-80d3-f315d7cef1b1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7b4052fb-be03-45b1-9bb5-606d7fe9ca7e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a9ad604a-e520-4e53-b67b-3ddb23c4ea0a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "06baa9d6-cb95-492a-9940-d72c13c9bc9f"
            }
          }
        ]
      },
      {
        "id": "584372f8-cf2b-4515-a0a3-960c034a90b1",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d545cba-dd15-4348-ab71-20434a2144a2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bd3d1298-991f-4482-bdcb-bbb93ac50031",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b2e1a109-87a2-4798-8976-ab810bcf65c0",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "18882318-7375-43cb-ad98-051b009c2d8f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bf32de6d-0c81-4d89-8ed1-0f110d4fa522",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 5
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 272.63095238095224,
      "responseMin": 7,
      "responseMax": 6592,
      "responseSd": 940.4876451231308,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1717634241526,
      "completed": 1717634318705
    },
    "executions": [
      {
        "id": "8d595b3e-5249-49ec-9a76-b26cb435c9c4",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5b48348e-3978-409a-af13-2189f3b99ae9",
          "httpRequestId": "1a1c1b48-1480-46a5-b4f2-3fa19ebb95af"
        },
        "item": {
          "id": "8d595b3e-5249-49ec-9a76-b26cb435c9c4",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "7eb42f68-7569-4a95-9344-f843b59526a9",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 0
        }
      },
      {
        "id": "5ad96d80-3d6e-4142-a5a5-5607d633b627",
        "cursor": {
          "ref": "1e27e28a-f651-484e-a646-3d561309ff72",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "32fb7a1b-48eb-4410-bee8-c2ed660b39dc"
        },
        "item": {
          "id": "5ad96d80-3d6e-4142-a5a5-5607d633b627",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f79d760b-e9a3-4d1b-970a-9e9352f88d80",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "3a39f238-e6b8-4062-8973-45d069214ba2",
        "cursor": {
          "ref": "bb3151a2-ced1-4bad-a829-83ac649e9100",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "bc0c583a-497b-4ab0-837c-6220409ef56c"
        },
        "item": {
          "id": "3a39f238-e6b8-4062-8973-45d069214ba2",
          "name": "did_json"
        },
        "response": {
          "id": "224e4589-987b-4a4b-89e1-a7a6ebe4c13c",
          "status": "OK",
          "code": 200,
          "responseTime": 381,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49557bd4-1566-4df0-a948-9cbd241bec8c",
        "cursor": {
          "ref": "57686496-d931-4a86-b478-016174c8bbde",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "eea5204f-111f-4323-83cf-43d57a36d7f8"
        },
        "item": {
          "id": "49557bd4-1566-4df0-a948-9cbd241bec8c",
          "name": "did:invalid"
        },
        "response": {
          "id": "daa2f2d5-584f-4563-84d6-d22bbb475b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2247,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49557bd4-1566-4df0-a948-9cbd241bec8c",
        "cursor": {
          "ref": "57686496-d931-4a86-b478-016174c8bbde",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "eea5204f-111f-4323-83cf-43d57a36d7f8"
        },
        "item": {
          "id": "49557bd4-1566-4df0-a948-9cbd241bec8c",
          "name": "did:invalid"
        },
        "response": {
          "id": "daa2f2d5-584f-4563-84d6-d22bbb475b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2247,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c99ef93-4d36-4228-8c43-92b82443aa5e",
        "cursor": {
          "ref": "20a82085-5312-40b0-a4b4-d731a779cef9",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "bc80b09c-24ff-4edd-8198-b50ace8c260e"
        },
        "item": {
          "id": "4c99ef93-4d36-4228-8c43-92b82443aa5e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "3d875536-4c51-4178-930a-df822e458de8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2256,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ba248a-adcc-4539-8c3b-827a38b44256",
        "cursor": {
          "ref": "c9e0518d-b112-485b-9167-a7226433e4a0",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "812bbba4-6d3b-40c2-b95f-6622e63d6939"
        },
        "item": {
          "id": "97ba248a-adcc-4539-8c3b-827a38b44256",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9d024be1-d01e-4761-99f3-94daa44ec834",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1996,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62288e7f-735e-4b49-8a2e-2c374dffdcf5",
        "cursor": {
          "ref": "0e35b731-1b63-43b3-bbd2-6f5ee4daa44a",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e5577836-1e33-48ad-8545-0bf7448481b4"
        },
        "item": {
          "id": "62288e7f-735e-4b49-8a2e-2c374dffdcf5",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a58e49db-f577-4bc0-a65a-a89fd9e0ba27",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049d6f35-3304-4dc5-bb67-203b13f3ed7b",
        "cursor": {
          "ref": "6cf84050-dbe1-4155-af94-e98fb8ebd6dd",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "132e83ca-52c4-40fd-acce-14e8b119b95b"
        },
        "item": {
          "id": "049d6f35-3304-4dc5-bb67-203b13f3ed7b",
          "name": "identifiers"
        },
        "response": {
          "id": "ac4b8af6-4d15-4241-870a-b0a02d1db0c4",
          "status": "OK",
          "code": 200,
          "responseTime": 2523,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ea3dab6-9f08-421e-a44e-498d0873040b",
        "cursor": {
          "ref": "f473533c-52fa-46f4-998e-bb64997c7327",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "90e594a8-34e6-4dd6-8ba6-022b59e244f1"
        },
        "item": {
          "id": "5ea3dab6-9f08-421e-a44e-498d0873040b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "92610f0b-5573-467a-93f9-59d8d56972d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88169005-99c5-4181-9500-4fadac77b0b3",
        "cursor": {
          "ref": "86d744be-0571-475b-a0b3-3740c6daa692",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f6febf0d-0588-4fd3-b4f3-1d9253619ffd"
        },
        "item": {
          "id": "88169005-99c5-4181-9500-4fadac77b0b3",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "6aeaa483-e865-458b-a4f4-7d90a3ebdcf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ba024a-b1e4-4399-abc4-86bf597af6e2",
        "cursor": {
          "ref": "ac617b32-fa9e-4234-9f06-b65b6c646504",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "86239371-f05d-447c-b081-35261bbb57cc"
        },
        "item": {
          "id": "85ba024a-b1e4-4399-abc4-86bf597af6e2",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "40da51b5-7700-4c79-bf01-e80044f57dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af87ace-c5fb-4908-b4c8-5be9fcfa38e2",
        "cursor": {
          "ref": "5aef764d-27a2-4b37-85fd-650e273ecd2d",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5df8b20e-d1c6-4f1d-9523-013725c98e14"
        },
        "item": {
          "id": "0af87ace-c5fb-4908-b4c8-5be9fcfa38e2",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "bffd4a83-9828-4e25-a39c-2b542669561d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bef62fe-6103-46f8-93e8-6f6a6fba746c",
        "cursor": {
          "ref": "a9ce5e11-5a07-47b2-9305-f01e53907624",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "40ee2ffd-d301-43f1-9453-feb94c64a1e9"
        },
        "item": {
          "id": "0bef62fe-6103-46f8-93e8-6f6a6fba746c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9a7fda12-7a29-4402-9646-d74f05a26599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3460dadb-e0ca-4713-baed-7d65cb685b8d",
        "cursor": {
          "ref": "d64f0e2c-fb9b-4ad6-a82b-d601885dfd23",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b322ecb1-02f9-45be-850a-e7af4fd86b17"
        },
        "item": {
          "id": "3460dadb-e0ca-4713-baed-7d65cb685b8d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a8938fc7-e33e-4e74-9c37-5d5056f4868d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778b26b0-e817-47c4-b851-5148f63f4b39",
        "cursor": {
          "ref": "b242f1b3-8cc0-4d08-b5f7-88e286946166",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "f960a092-6f7c-4644-a8f5-ec5326b59cf4"
        },
        "item": {
          "id": "778b26b0-e817-47c4-b851-5148f63f4b39",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8b314162-aeb8-4861-bb2f-ca7f3eace0a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e5d3b1-f9b6-4ea7-917c-ad2535444441",
        "cursor": {
          "ref": "1eb64c42-ee96-4f1f-b1dc-93a12399e9e5",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "eb8eb735-5571-47ed-bf52-69b8b56a6d98"
        },
        "item": {
          "id": "79e5d3b1-f9b6-4ea7-917c-ad2535444441",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "4a826480-d6c4-4c1e-8519-e938672b7cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f0207b-6113-4c49-b214-167acee0f63f",
        "cursor": {
          "ref": "17e90b0a-bed3-4c1b-afe8-1b34ac681d1e",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "34ae5326-595d-4112-954a-c35ddd7d7103"
        },
        "item": {
          "id": "b7f0207b-6113-4c49-b214-167acee0f63f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "212e61a9-eb69-404c-80cf-485d5d205fd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c78809b-56d6-479a-964a-0f0bb62feca0",
        "cursor": {
          "ref": "f508bfc2-6bfe-46dc-ad5b-8de23b0f9951",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c04a4f1e-239b-4052-bf10-cd344ef1930d"
        },
        "item": {
          "id": "6c78809b-56d6-479a-964a-0f0bb62feca0",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "78c86910-6c84-4454-aaf9-c53d9cd5e0a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96099041-0ccb-4c0d-84bd-538927e67553",
        "cursor": {
          "ref": "9d020f04-4ec5-4911-8ba1-0933a9e8f2a1",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "78c3f644-3b6d-4e8f-a50f-e761dcb01f48"
        },
        "item": {
          "id": "96099041-0ccb-4c0d-84bd-538927e67553",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "43607ad0-e6d0-4484-8baa-30bbb163f3ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "646c8961-f4b4-43cb-886a-beee12f50075",
        "cursor": {
          "ref": "062349f4-20b9-4ea1-9d85-7c8448843200",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2a2caedf-5c18-4709-b869-2db31a41c3e4"
        },
        "item": {
          "id": "646c8961-f4b4-43cb-886a-beee12f50075",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "197bbdb3-f4ee-4276-9f82-c3cfc5ffec8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f44e2654-7425-479d-858c-41bd546a6a2b",
        "cursor": {
          "ref": "97d5afcc-d892-4344-8cfa-1a42bcc7de3a",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e9616885-608d-4005-b214-408e3bf9798a"
        },
        "item": {
          "id": "f44e2654-7425-479d-858c-41bd546a6a2b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "fbc6e8e2-0a89-4865-bfd5-1ad0586c2849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e391aab5-769e-4261-8d22-52ee1e967757",
        "cursor": {
          "ref": "560e0530-1628-4dbe-b07c-98d47f32f3fc",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6cc7119b-fad3-49b6-ba4c-4c72671d6713"
        },
        "item": {
          "id": "e391aab5-769e-4261-8d22-52ee1e967757",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c3c87f1e-ee80-46dc-883b-140a9e92210e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c9c01d8-1196-4c00-ad1f-05ccad2f0028",
        "cursor": {
          "ref": "48e34f36-46a9-4bdf-894f-ccca0e1c381d",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b8bc1da3-3193-415a-ba5f-3dcaa08e7998"
        },
        "item": {
          "id": "7c9c01d8-1196-4c00-ad1f-05ccad2f0028",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "0afdb421-9ab3-4821-a90b-c168c1b5b95e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b61deb-adfc-4efd-87f2-57be77f8f0b2",
        "cursor": {
          "ref": "210f18e5-b4fa-4e6a-98fe-5875cb1043c7",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3bb3d03f-39b8-4cdf-9b33-c07087c434eb"
        },
        "item": {
          "id": "09b61deb-adfc-4efd-87f2-57be77f8f0b2",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "bafda9d5-a0c4-4002-a083-db14cf9744f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42525291-9e44-4ac8-92bf-84503ce168e6",
        "cursor": {
          "ref": "f4ccef8f-e676-40fc-bf1f-00493d6c002f",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "cc74b8c8-f4fc-4a25-ac1e-21e0e2058f80"
        },
        "item": {
          "id": "42525291-9e44-4ac8-92bf-84503ce168e6",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "89230d07-2f13-4ff5-88d4-93ffbd906360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c44f94f-741b-4c55-b2d0-fbb12ff16453",
        "cursor": {
          "ref": "0cc06727-cb76-4ec3-adb6-448d8a8f6d21",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "1b733ca3-301b-4e92-ad0e-85343b9be4da"
        },
        "item": {
          "id": "4c44f94f-741b-4c55-b2d0-fbb12ff16453",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1c302714-c804-426b-ba75-ae194b511a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "397ae8f8-8d57-47d6-8f4d-d647b7774aea",
        "cursor": {
          "ref": "9f2caa19-6e71-48bf-8bcb-0a348eafdc5e",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "1cf6769e-8981-4980-82c8-7a456896f693"
        },
        "item": {
          "id": "397ae8f8-8d57-47d6-8f4d-d647b7774aea",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6e98953d-0177-4ae8-a539-cd3649d237eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "723b00a7-1ae4-4dd8-b79f-f92ca503d53e",
        "cursor": {
          "ref": "aa8d2d07-bec5-4998-ac5a-9c5aac017c34",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "fa46cd50-6cdd-4c93-9953-2add55111b38"
        },
        "item": {
          "id": "723b00a7-1ae4-4dd8-b79f-f92ca503d53e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "346e02ec-330f-4b7b-a3e7-90f35bc567a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7693e96-a413-430b-a8c3-80f8fac2e68f",
        "cursor": {
          "ref": "6f90dca4-ea90-4058-92bb-b6e0c31e0eae",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f277015f-9229-4f49-9fe0-efc213b0bcaa"
        },
        "item": {
          "id": "f7693e96-a413-430b-a8c3-80f8fac2e68f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "82f219fc-a56b-4d6e-bff1-c8974b6d86d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fbe5d00-1852-4f9d-981e-03300c16677f",
        "cursor": {
          "ref": "68a390c3-0038-4f1b-a93f-e143da900527",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "7ee996bc-43df-4278-958c-c3e1da69158e"
        },
        "item": {
          "id": "6fbe5d00-1852-4f9d-981e-03300c16677f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "78f3fff8-2084-40bf-8b49-49eaf1cf5795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e711280f-5c24-4f4e-a1ce-9f76eed099aa",
        "cursor": {
          "ref": "fe372ac7-8a2a-4c66-9b15-8531e7cf91fb",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a71a4c4c-4919-4e3f-8e9e-3648bb123634"
        },
        "item": {
          "id": "e711280f-5c24-4f4e-a1ce-9f76eed099aa",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "36b93ca7-0df9-4fc5-a4d3-4d142036b45c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3dcb326-9a16-4928-8367-0e9d4c0505ca",
        "cursor": {
          "ref": "0fff660e-96d9-4045-b056-d0a1b1df9490",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "620e067a-c765-4943-ab7f-ca1461d232ed"
        },
        "item": {
          "id": "e3dcb326-9a16-4928-8367-0e9d4c0505ca",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "cf86e64f-6102-483c-9894-9406b2d83f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c7c7291-495f-4876-8a90-43874428c397",
        "cursor": {
          "ref": "738d02e9-a4b8-4d69-b324-00bdefc742b9",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "5d99dae7-8941-46c4-ba76-1717e4178287"
        },
        "item": {
          "id": "7c7c7291-495f-4876-8a90-43874428c397",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "4eb39763-2581-4dbb-b7f0-7bbc7a1d249f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b62c8d27-1638-4273-888a-0c6132093c95",
        "cursor": {
          "ref": "f3a3cb9a-b04c-4ddf-bca3-79e277701baa",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "df86a10c-9ba2-4450-91f5-c007f34adb38"
        },
        "item": {
          "id": "b62c8d27-1638-4273-888a-0c6132093c95",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "898c9658-a900-4357-b054-188596efad3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb7a433-fd0f-43fe-a524-729368f13a38",
        "cursor": {
          "ref": "1ed089cc-c049-4b7a-a6f9-46cb4caec06f",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "0d5d65f6-d00f-4d4b-ac68-72bbccbdfc70"
        },
        "item": {
          "id": "ceb7a433-fd0f-43fe-a524-729368f13a38",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "65c0b334-1152-4ca6-b061-87cb40f028df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b850f0c-626a-41b2-a692-e2443960b4dc",
        "cursor": {
          "ref": "047d7a19-16c1-4cc4-bffb-89441a1dc23c",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "dd483f2e-a6f8-4117-938d-d15042ef038f"
        },
        "item": {
          "id": "5b850f0c-626a-41b2-a692-e2443960b4dc",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b198cdb0-eb56-4e0c-8847-3e09e641e384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de95be6-4ef3-46eb-98bd-ceb6481f1a46",
        "cursor": {
          "ref": "19be76c8-3463-457c-9b8a-1a2daba1ad0c",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "88eaa7e8-00da-4512-a73d-d4e9a4924813"
        },
        "item": {
          "id": "0de95be6-4ef3-46eb-98bd-ceb6481f1a46",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "352560e8-9b48-4d66-bf5d-e77ef6a92d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d63229d1-313f-4dc1-b50b-c5bd52c890a2",
        "cursor": {
          "ref": "029aec03-b84d-44d9-b3cb-d27b856cc7d5",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "66a4f3e1-38cb-4b04-8458-09ad1feb8340"
        },
        "item": {
          "id": "d63229d1-313f-4dc1-b50b-c5bd52c890a2",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "486f9468-6e8c-4e5e-9bbc-136949863964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72911afb-4235-4bdf-a71d-22032a47b8ec",
        "cursor": {
          "ref": "5681e7a3-edab-47af-90d1-88aab7ca0342",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3e5773c4-66f5-4b64-9deb-65b86978f6c0"
        },
        "item": {
          "id": "72911afb-4235-4bdf-a71d-22032a47b8ec",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "18a901b5-5544-4567-a107-b857bc039294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f25b622-c4ef-4393-a97d-e9863fb47c30",
        "cursor": {
          "ref": "8a55af1f-d794-43a9-8d18-c584aaa25340",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1cfc7ed3-9ef2-4011-a26d-66e6466ec886"
        },
        "item": {
          "id": "5f25b622-c4ef-4393-a97d-e9863fb47c30",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "34694c10-678f-4ed9-a4e8-b6686fe68b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f390b288-2e60-4ced-9f6b-70959a3dccc6",
        "cursor": {
          "ref": "fabc5a27-6727-4c01-ba25-d5c049c3fb81",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1e75484d-3860-4c6e-ab83-0959155be18e"
        },
        "item": {
          "id": "f390b288-2e60-4ced-9f6b-70959a3dccc6",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "494ab499-44c1-4df0-b49e-187c70d5ca2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7890bcff-1c87-49c3-9890-6b3dd08428ea",
        "cursor": {
          "ref": "72a09892-1666-45a6-9519-65529c95bab1",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8549e761-4945-4823-bf0a-d07937534598"
        },
        "item": {
          "id": "7890bcff-1c87-49c3-9890-6b3dd08428ea",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "008f0ca0-4bb8-45dd-853f-c0c593dccb2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2443112c-6c00-466c-a54e-1ccebf859221",
        "cursor": {
          "ref": "82301f2a-c0c7-4214-baed-1376fe53bc60",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "0edeee57-6fb6-4aec-bad8-741e53c90c29"
        },
        "item": {
          "id": "2443112c-6c00-466c-a54e-1ccebf859221",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5154637b-3aa4-4c94-82e8-191f2f18d9f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bdbd760-9e81-486a-bc6e-f8c7d89a28b7",
        "cursor": {
          "ref": "540b6897-9bdc-4668-9384-9689cca408e4",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "dae41613-5114-4dd3-9317-c5a98585a82a"
        },
        "item": {
          "id": "6bdbd760-9e81-486a-bc6e-f8c7d89a28b7",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "449e4981-81d9-460f-aab9-a04404eb6de4",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6022d12c-e247-4280-92d7-5482083d0d5e",
        "cursor": {
          "ref": "64234c43-f021-4da1-bc08-b3f47fa915c0",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "d1b0d8fa-7db2-42fb-a9b3-7d9fe5e321bc"
        },
        "item": {
          "id": "6022d12c-e247-4280-92d7-5482083d0d5e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a1cb047f-48ea-43a9-9fef-429147928ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb42f4e2-d930-497c-a660-ef4cad063d4c",
        "cursor": {
          "ref": "a301c5af-7018-4c81-977c-d20ed12b4447",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8de43229-baca-4497-a996-97be9dcdb1ed"
        },
        "item": {
          "id": "eb42f4e2-d930-497c-a660-ef4cad063d4c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b119c799-8387-4b2f-bc1d-0dc09e7ed537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5213544-3461-4f99-83d3-7d169f587229",
        "cursor": {
          "ref": "f4c8e95b-9a54-48ba-836e-9b98ddaebd0e",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "150ceed4-fabb-4c80-989f-c19c02849490"
        },
        "item": {
          "id": "f5213544-3461-4f99-83d3-7d169f587229",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "77ff34cc-5a04-42b8-8e2e-0af8828248f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dbb1bff-77ff-4f0e-842a-3cef94feb344",
        "cursor": {
          "ref": "9e22356c-0c8c-445f-8db1-a6c952649655",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "dff2c0f7-3251-4cc8-8adc-1d609c8dced7"
        },
        "item": {
          "id": "1dbb1bff-77ff-4f0e-842a-3cef94feb344",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8623eecd-5a40-4198-a551-5cccdaa097d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be29582-9314-4e60-94fe-36c0d3ace66c",
        "cursor": {
          "ref": "b5556561-d12c-4972-b84c-5170d42e4406",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c159b6ed-7de0-46b3-b5c7-2e4b4208419f"
        },
        "item": {
          "id": "7be29582-9314-4e60-94fe-36c0d3ace66c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "b3f1b4d5-8d4e-4933-8120-3c8dbc6e0f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d17e18-46ac-4f66-a1dc-d9ac99dade84",
        "cursor": {
          "ref": "c3fa811d-ec00-4c11-8708-360f30b91836",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6c28ca24-f0e0-4b0e-9547-ebf15e1a3abc"
        },
        "item": {
          "id": "c4d17e18-46ac-4f66-a1dc-d9ac99dade84",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "93896fbe-0b2f-4f6c-b106-71e2eec0bc63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4231bce-ea4b-47fc-8bff-99b7b562cf11",
        "cursor": {
          "ref": "a1e03216-d94f-4f31-97a3-b2f507ac6bb6",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "984b549c-ca7d-4749-b8a2-15140b6f6cb1"
        },
        "item": {
          "id": "f4231bce-ea4b-47fc-8bff-99b7b562cf11",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0a4cdbf0-3fe3-4564-9aad-e34b6cdc49e0",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 74,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa2c53a-f59f-4123-8974-4072559d1502",
        "cursor": {
          "ref": "f16b47d2-8d16-4e32-9611-199e07b2e247",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d8c6e1fe-2f77-4b14-940e-7503ed5c8dfb"
        },
        "item": {
          "id": "baa2c53a-f59f-4123-8974-4072559d1502",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d80436b5-0984-4cd0-9e90-109ed422b3b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06dcacc0-d366-40ee-b0fd-cc3c3e595ef7",
        "cursor": {
          "ref": "3b1d9386-bd4f-46ab-9241-b9d601cfb5d5",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0293b47b-8e72-4c45-a838-1eb6ff4384b7"
        },
        "item": {
          "id": "06dcacc0-d366-40ee-b0fd-cc3c3e595ef7",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "cbe1543b-c9e1-4940-9ea7-1060d6eade99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58af3e4e-7232-45ac-a40f-6b4b1c8eceb5",
        "cursor": {
          "ref": "8e391a18-b7d6-4755-bb5c-0e4c6dbf0382",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "700607ca-e057-4ade-86c8-3a58eae82496"
        },
        "item": {
          "id": "58af3e4e-7232-45ac-a40f-6b4b1c8eceb5",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "edd917f8-b2d6-48f3-8c2b-d3d699cc5fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d002d15e-58a5-4cb8-91c2-0b095a5459ff",
        "cursor": {
          "ref": "5d512ddf-0f90-4768-9735-31892a879d04",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e80922ce-c187-4606-9deb-0305f6bb16a1"
        },
        "item": {
          "id": "d002d15e-58a5-4cb8-91c2-0b095a5459ff",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "05ee7642-8a46-4fe9-99cb-ac76f7cbbc89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa262af-e6d2-4c60-97f0-319a3d072558",
        "cursor": {
          "ref": "c339e5a2-43f2-4de9-9450-d2a5dd99b673",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e163955d-320c-4b54-82a9-88d38595365e"
        },
        "item": {
          "id": "ffa262af-e6d2-4c60-97f0-319a3d072558",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2da38fdd-1380-4099-8ae8-61e0797ddb86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce01220c-e536-4e77-b767-eca4d2eedfde",
        "cursor": {
          "ref": "b26d01c4-5c23-4714-8d9e-d95be58993b3",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "10c624b0-0196-43e1-9b39-ab48d8e55a24"
        },
        "item": {
          "id": "ce01220c-e536-4e77-b767-eca4d2eedfde",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b7fb3f60-fe8a-47e2-ba0f-93e1590fcea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d4d3605-69eb-4038-8ba2-a77183615cff",
        "cursor": {
          "ref": "284d6c58-3d44-4480-ba5d-af58954850b1",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "77972ee5-675d-4dd9-941b-dd9dc59c4644"
        },
        "item": {
          "id": "3d4d3605-69eb-4038-8ba2-a77183615cff",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b7e44bb6-8bfb-4991-a491-c68cd3418d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb8d449-b3c3-434b-a4df-46b3598504b3",
        "cursor": {
          "ref": "94a0daa8-3d8f-4112-be9c-15cf346cd33b",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b0b94f5a-49ac-4ac9-ace5-e9ffcff4bcab"
        },
        "item": {
          "id": "beb8d449-b3c3-434b-a4df-46b3598504b3",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f078eb02-5434-477c-9a16-a031b63aa077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9878b188-5b3a-4f80-a780-ca609f46fd9c",
        "cursor": {
          "ref": "574fb1f4-c48d-47dd-85f6-7e11cd216beb",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f5aab700-9a99-4ddd-9778-6189c61e2637"
        },
        "item": {
          "id": "9878b188-5b3a-4f80-a780-ca609f46fd9c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "96b7bc23-7198-48f3-817e-197801059d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de077e4f-6b28-4d05-aefa-f9bbf2b9dc8c",
        "cursor": {
          "ref": "38e2dbc0-0b86-438c-b32e-28ed027c2757",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "77bca477-c321-489c-890a-a4f5c226d275"
        },
        "item": {
          "id": "de077e4f-6b28-4d05-aefa-f9bbf2b9dc8c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "583737a1-60e8-4b3a-a6f5-48e6396e14a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef0e2f02-275d-4fe4-89a2-623a17afd287",
        "cursor": {
          "ref": "d9985478-14b0-477b-9695-3d6f3526f9bc",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "fc4ec062-385a-481d-9ecb-92ac7e2fe802"
        },
        "item": {
          "id": "ef0e2f02-275d-4fe4-89a2-623a17afd287",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ea769920-3d75-4e78-ac01-8b2577f39607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c0737c-d619-4bb4-8cdc-ef038a52ae9c",
        "cursor": {
          "ref": "673e3673-ff5e-46d1-823f-50a32704db01",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2000a67a-ef82-4f3b-89ed-6dc6024f3628"
        },
        "item": {
          "id": "91c0737c-d619-4bb4-8cdc-ef038a52ae9c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "2955a2fc-c622-4048-9be8-503f9f32fe98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af6db8d-d478-4fdc-9574-44b4c594b146",
        "cursor": {
          "ref": "7be884fe-4b94-4af0-97d3-72e0f6b62a8a",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "cf4748bc-8345-4159-b2c1-e77007ce906d"
        },
        "item": {
          "id": "2af6db8d-d478-4fdc-9574-44b4c594b146",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "397dd659-fcc8-4876-bbe5-8b1a863e37a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25fe8c83-fe54-41f9-ba76-40e4104d0b4a",
        "cursor": {
          "ref": "d61f8ad1-a441-412b-9034-32562fe5b7dd",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "4109e676-5017-45d9-a27b-36a77385e471"
        },
        "item": {
          "id": "25fe8c83-fe54-41f9-ba76-40e4104d0b4a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2e906138-aae2-4f09-9dc6-cade32945d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc3fe02-a82f-46be-997d-098a95ba97b8",
        "cursor": {
          "ref": "2cce281f-5922-4d59-ae42-8f477e66dc75",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "0270f8e1-28b5-4165-b611-2c3924013ace"
        },
        "item": {
          "id": "3bc3fe02-a82f-46be-997d-098a95ba97b8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "4112b05c-47e6-46f2-95f5-81d4eb51b6de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa127fdd-c5fa-43db-85da-c46917699629",
        "cursor": {
          "ref": "55d77508-efa5-4d60-b042-5b77b1256b14",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a7302a9a-522e-4f61-ae39-1d00eb53f60b"
        },
        "item": {
          "id": "fa127fdd-c5fa-43db-85da-c46917699629",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "86f68b36-f0a8-43c9-bb55-92cf71dc6d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b7abc2f-28b7-48c3-abf8-40eed26f0de5",
        "cursor": {
          "ref": "8907e318-78b5-48a3-b405-494bc71e9299",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "4ce969ec-a11e-4e23-82f4-d7c9deb59b64"
        },
        "item": {
          "id": "9b7abc2f-28b7-48c3-abf8-40eed26f0de5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f76e6f5d-1a2c-43f2-889a-ab396498ff77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9689e63e-bd44-4840-be86-7919fc4f12f0",
        "cursor": {
          "ref": "d5363f5b-dc21-4c25-9a07-64afae10f737",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "350dbcb4-4053-4627-9439-66a8635d6c86"
        },
        "item": {
          "id": "9689e63e-bd44-4840-be86-7919fc4f12f0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ee4e439b-1f56-474a-85ef-288742a69cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aefcc11e-5022-497a-83cd-5ef2e98c7919",
        "cursor": {
          "ref": "f411af94-7307-4555-ba92-b0c2f79e0746",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b479ce9f-5f65-46c9-9b55-d0039960bf93"
        },
        "item": {
          "id": "aefcc11e-5022-497a-83cd-5ef2e98c7919",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8ca631c0-c271-4a53-a45e-4d183784114a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "830bebf6-3553-47ff-b662-fa00c2be428d",
        "cursor": {
          "ref": "af0dc951-b94c-4551-a4cf-389096c3edcf",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f5ee6d6a-fb2e-46e0-9888-c33b14242873"
        },
        "item": {
          "id": "830bebf6-3553-47ff-b662-fa00c2be428d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "1f949e26-736e-4c92-a986-389aa84523f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced430bf-74d8-4310-991f-901cb88ebbe2",
        "cursor": {
          "ref": "d4fb61d3-d1a1-4f39-8189-2f6581fb13e0",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "887e1376-0f35-4d85-a493-2c1252872dfc"
        },
        "item": {
          "id": "ced430bf-74d8-4310-991f-901cb88ebbe2",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "5a11669b-11f9-472f-a18c-24deae92d27f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d20cafe-29ea-49a5-ac03-5b0e094025dc",
        "cursor": {
          "ref": "36e1eb84-d53c-4102-a0cd-ccfed5707e26",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "39241f6b-a488-460b-b6c7-2ef398019977"
        },
        "item": {
          "id": "4d20cafe-29ea-49a5-ac03-5b0e094025dc",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d3a84574-4a67-4673-83d5-fd26268b3d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab7b0d1-6f02-4a1d-baeb-4412221e4d61",
        "cursor": {
          "ref": "7b3d652a-5fea-47fb-9da8-82782bcaf854",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5ea34d9b-e212-4848-9a15-d5170095a003"
        },
        "item": {
          "id": "5ab7b0d1-6f02-4a1d-baeb-4412221e4d61",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "06c84be6-bdfb-461e-bf66-b046c0b84502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "652ff43a-ed6c-4d21-b967-b29dce5c01b8",
        "cursor": {
          "ref": "923bc46c-3cc8-43e0-9581-be47f1775d87",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a10648a6-9a5a-4bf8-9f2a-bac894bfbfcb"
        },
        "item": {
          "id": "652ff43a-ed6c-4d21-b967-b29dce5c01b8",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "875c530a-42aa-41b5-b865-96cdc13dd7e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b82694-0f3a-4585-9145-22567dacf7ed",
        "cursor": {
          "ref": "9bd62656-bcc7-4aaa-b6c7-ec8c0fb7d4f7",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d22c069a-d256-45c5-a340-cde09b847190"
        },
        "item": {
          "id": "03b82694-0f3a-4585-9145-22567dacf7ed",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f4700482-a79a-41ca-a74d-b8c54faf2f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06451dbf-f969-40bb-a307-16b8e4e34e2e",
        "cursor": {
          "ref": "55aec37b-59a1-48c7-a5de-d710f8a87c8e",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "eb8fcba3-23a2-40e7-b236-6c5a9a038840"
        },
        "item": {
          "id": "06451dbf-f969-40bb-a307-16b8e4e34e2e",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "bb554ace-6c72-41de-9901-05cf4e7459d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c2d007-a706-415d-80de-b315f08c719b",
        "cursor": {
          "ref": "41eb5f30-708e-4cb4-bee8-b35ab7630bbe",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "743fa273-d898-4a71-9f3a-70821fd518e9"
        },
        "item": {
          "id": "c3c2d007-a706-415d-80de-b315f08c719b",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ffafe94c-dab3-455b-9aef-97be1b3bd881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a49d50-c9ef-4a1a-9915-a8657d353622",
        "cursor": {
          "ref": "7dd9239d-0ab6-4a3d-86bf-a6fab6436bcb",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "359187bf-3e6c-4670-8c76-a9fc1484fe73"
        },
        "item": {
          "id": "c7a49d50-c9ef-4a1a-9915-a8657d353622",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b747fca7-afa8-44ae-a246-ee34dbfa43d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe6dc75-a0af-4875-ae5f-b4428ecc6cc5",
        "cursor": {
          "ref": "1ae60d73-30a5-4638-a4e2-9961ff325e4b",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "472a80bd-2353-401d-bd13-3cb80058dd66"
        },
        "item": {
          "id": "dfe6dc75-a0af-4875-ae5f-b4428ecc6cc5",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "7ebb5fb4-f118-4c39-8876-db7439a267e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41e8bc1-cc9a-4058-9c37-a9ce2c4f75a3",
        "cursor": {
          "ref": "fbda1eb6-f6c1-4553-9be6-889a4b709971",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "fbd357ff-d565-4acc-bd21-519d3941d059"
        },
        "item": {
          "id": "d41e8bc1-cc9a-4058-9c37-a9ce2c4f75a3",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "cb1efee2-fbf5-4f10-9da2-8b9fd727376f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a08a27dc-547e-473f-8f48-2d306cc676d3",
        "cursor": {
          "ref": "8cc6f350-db21-4e8a-b6a5-398590eef1ea",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "be6bed52-d2a6-4ec7-a5cd-504ab97e9a7d"
        },
        "item": {
          "id": "a08a27dc-547e-473f-8f48-2d306cc676d3",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b60e78f7-ec00-4324-9e55-aeff34bb2af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85781629-288f-4188-8c59-427e57d39564",
        "cursor": {
          "ref": "5bfc4cac-bb20-451c-bc50-c58c77247650",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "19e4f46b-53aa-491d-8dbe-af260d7de2a2"
        },
        "item": {
          "id": "85781629-288f-4188-8c59-427e57d39564",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "13a1a357-ea26-47ec-8465-19d09b40979e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d0b90d-64c2-4b94-a37c-61c3cb388e8b",
        "cursor": {
          "ref": "add3bf87-a43d-4e4d-881e-e6a2b59dd007",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "fc60108b-2357-4b16-8609-18dcedcb67bc"
        },
        "item": {
          "id": "d8d0b90d-64c2-4b94-a37c-61c3cb388e8b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b608d497-cfe1-4a86-9382-6455784b0276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e40e7ba-0b1a-466e-b110-7cea76948461",
        "cursor": {
          "ref": "16b202b6-dc03-44a8-86ea-04065bb4b428",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "17225bd8-a773-4448-9ae4-f7e9ff86a431"
        },
        "item": {
          "id": "6e40e7ba-0b1a-466e-b110-7cea76948461",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "37bbe2c2-7796-4a87-b0ac-8ccb335944ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8dc3467-097e-48de-b5d8-b4a58da87e87",
        "cursor": {
          "ref": "a2091aff-3d69-4864-8ea0-865b597554c0",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "63f0995e-afb6-49f0-b4ef-b3402f93cbb6"
        },
        "item": {
          "id": "f8dc3467-097e-48de-b5d8-b4a58da87e87",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "16f0de67-0b4b-4cfc-8209-08468b9b219c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e39eab5a-4e54-4487-ac21-5052f58b5f62",
        "cursor": {
          "ref": "fe0095f3-25a9-4384-8941-95dfb0337d0e",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "1d434b42-448c-4c96-b031-89c292a580ba"
        },
        "item": {
          "id": "e39eab5a-4e54-4487-ac21-5052f58b5f62",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5ca1f1a5-34c6-41b1-8523-dfd684fbf4f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e9752a-5d00-4475-8ae2-4a83c2192fe3",
        "cursor": {
          "ref": "0d2d7f06-6903-4ef2-bfbe-b62e11ab8eca",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a496e3bf-850f-4b73-972e-01ed78c19a25"
        },
        "item": {
          "id": "f6e9752a-5d00-4475-8ae2-4a83c2192fe3",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d4ef2e02-735a-4873-9013-127cfef1e375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c9a4f1-2de1-4664-8770-1305fbff7104",
        "cursor": {
          "ref": "4cd20e72-a0b2-445f-aa92-d1a99dd09cc6",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "86625f0a-4c5b-4082-8ba1-06839650ddab"
        },
        "item": {
          "id": "95c9a4f1-2de1-4664-8770-1305fbff7104",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a70dfbb2-2f77-48b5-b3fe-ed5394581cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ca0528-c920-42a9-9e8f-7496bebeb5a6",
        "cursor": {
          "ref": "131c1908-ebf3-49aa-9c01-c1778e3e45ab",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "40a4ee37-6b43-44e5-94b7-be5fc557f206"
        },
        "item": {
          "id": "d5ca0528-c920-42a9-9e8f-7496bebeb5a6",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "8d2d73b2-2291-417c-be54-3324834f9f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a4e412-7845-4eec-a759-0a6e942fd673",
        "cursor": {
          "ref": "2a280ef4-3fcb-466f-b8cb-b5bd26a1baec",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5cc6486e-cef2-4fd2-8094-a64700628ad6"
        },
        "item": {
          "id": "26a4e412-7845-4eec-a759-0a6e942fd673",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "28758f3c-a529-4104-b0d7-105a687ae4b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95cab251-48d9-46d8-8145-e76c4a427f75",
        "cursor": {
          "ref": "2a87dea2-c073-41fb-8681-a698836e1b4b",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "7a57d447-ad19-48b2-9055-67cf52072d10"
        },
        "item": {
          "id": "95cab251-48d9-46d8-8145-e76c4a427f75",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "74a6dd06-942d-422f-8d57-3b0f3340afe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8bf6ace-568e-431c-9ec8-a969fca858a1",
        "cursor": {
          "ref": "52790e2a-98d1-41bb-83db-33b1f5e5a3e1",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2402ff00-de49-420a-9142-d3327d2314b3"
        },
        "item": {
          "id": "e8bf6ace-568e-431c-9ec8-a969fca858a1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6dc7a7ef-e694-4e57-8ccc-96fe423e471b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b164d0-8b5c-4e42-95e6-7ce0357d4174",
        "cursor": {
          "ref": "20c39f64-e6bb-4f5b-a951-d9202e2f5331",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a918850d-f3a1-439c-8401-0a88a2c34140"
        },
        "item": {
          "id": "04b164d0-8b5c-4e42-95e6-7ce0357d4174",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "68c3cb79-0417-4125-b59c-9c1f013f4282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13808f5b-f2c3-4712-8cc2-a7b97a830731",
        "cursor": {
          "ref": "6330cd4b-6272-40cb-9734-cf5cd93a9527",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "112044fa-30ef-467a-81be-50192a033805"
        },
        "item": {
          "id": "13808f5b-f2c3-4712-8cc2-a7b97a830731",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "603840da-b87c-4dcc-8dca-58fec64c35ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b120ce3e-0b79-4832-a387-96cf7f53e7cb",
        "cursor": {
          "ref": "fce882ee-483c-45b7-bdb2-2190091ae563",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "36c53c15-c473-4e56-97a8-15c66bcc0a3c"
        },
        "item": {
          "id": "b120ce3e-0b79-4832-a387-96cf7f53e7cb",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "2e0ba15a-d1d8-46d3-bff9-89d92a36279e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e64d8f26-be2c-4a58-ab8a-61cd45e28d89",
        "cursor": {
          "ref": "f9cf04f9-e82a-4113-8297-952cce68925b",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9cf6b0f2-ba4b-40d0-b6d0-6d2634d90238"
        },
        "item": {
          "id": "e64d8f26-be2c-4a58-ab8a-61cd45e28d89",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ef368639-0c8d-4aff-9075-90dedf85a230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaaa386b-6ee3-477d-be22-bd2b12eee879",
        "cursor": {
          "ref": "8e5de5d8-1c8d-43c5-9794-916bd6de9ff5",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "86529f65-3de7-4db1-a1cb-828f1a3eea10"
        },
        "item": {
          "id": "eaaa386b-6ee3-477d-be22-bd2b12eee879",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a5b0beb5-f1e4-4f1a-8138-4d50f8f2a7b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9077e9ac-83f1-4e70-b7bc-786f22743d66",
        "cursor": {
          "ref": "32105988-2145-407d-8637-c0cdc271e497",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ae0b5b9a-7970-4f74-8c7e-8845783fcbda"
        },
        "item": {
          "id": "9077e9ac-83f1-4e70-b7bc-786f22743d66",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9d40c0db-2872-434c-a3f5-232268fbf4f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97691fc3-b258-41d3-ae10-2d0ec8fc3bfe",
        "cursor": {
          "ref": "df807262-eb85-4e59-b93f-36183a4cdbdd",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f719e619-4d9d-46c2-907f-04c693a2127a"
        },
        "item": {
          "id": "97691fc3-b258-41d3-ae10-2d0ec8fc3bfe",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9303a5e6-cdb8-458f-92e0-7bc26f0f4b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d936151-408e-415d-ac2e-bee997d30f6f",
        "cursor": {
          "ref": "408c1226-f9b8-467e-a3ec-bb352410d13d",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "eae46954-375c-49ec-b509-a2f8877782d1"
        },
        "item": {
          "id": "2d936151-408e-415d-ac2e-bee997d30f6f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d3ab4779-6766-439e-941b-691d702ba3a3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ebfa1b8-c0fb-4da0-9c55-754f942e4abb",
        "cursor": {
          "ref": "9ea07320-3a16-478c-850d-53dd6dae4449",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "75567b72-f6a8-4a36-bb3c-4d495cde0b20"
        },
        "item": {
          "id": "9ebfa1b8-c0fb-4da0-9c55-754f942e4abb",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "ea731727-5df9-4f5d-8fac-5ec268bcd10a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "e4ee0ef8-683a-416b-85c0-8249da5577e9",
        "cursor": {
          "ref": "4c3fadc2-56c6-46f9-904e-b3e84c50158c",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6a5b43dc-319e-4704-86f1-e8b197928982"
        },
        "item": {
          "id": "e4ee0ef8-683a-416b-85c0-8249da5577e9",
          "name": "credentials_issue"
        },
        "response": {
          "id": "18040536-c189-4751-88f4-fc82050b7c34",
          "status": "Created",
          "code": 201,
          "responseTime": 6592,
          "responseSize": 1220
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd385b2-0e7f-4758-9016-0319ff99bfb2",
        "cursor": {
          "ref": "a4ae7746-c873-4122-bf5a-36a212a23acf",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "aed2f3b5-7444-4805-b321-78a81b2a152a"
        },
        "item": {
          "id": "afd385b2-0e7f-4758-9016-0319ff99bfb2",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e88aefda-084e-49d7-a785-22edcb430f99",
          "status": "Created",
          "code": 201,
          "responseTime": 5430,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d132755c-b520-45fc-9001-842e54618877",
        "cursor": {
          "ref": "49b8e753-7199-4ad3-811f-a5cce50ede39",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "bdb38620-7346-4c43-ab95-c48523eca203"
        },
        "item": {
          "id": "d132755c-b520-45fc-9001-842e54618877",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "2c5c7f58-1393-42cb-95d5-76d79705a64e",
          "status": "Created",
          "code": 201,
          "responseTime": 5876,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d7b869-2a9e-4b16-9dae-fe0b45ca88c6",
        "cursor": {
          "ref": "7059ec75-df81-4710-8331-e431b04cb9e2",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8b8474fa-d290-40de-82e7-27aee4164570"
        },
        "item": {
          "id": "53d7b869-2a9e-4b16-9dae-fe0b45ca88c6",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "7aaefc04-5336-493b-9a5f-87d47c214664",
          "status": "Created",
          "code": 201,
          "responseTime": 5591,
          "responseSize": 1235
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d64835b8-4659-4158-a8ae-1e24919f05ff",
        "cursor": {
          "ref": "028e96b2-6340-4de7-8f95-f7ad9311378b",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "2123dc2d-789e-49c4-a9a7-851473be910c"
        },
        "item": {
          "id": "d64835b8-4659-4158-a8ae-1e24919f05ff",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "5d2967ab-c5df-459f-b686-a6c88c37e314",
          "status": "Created",
          "code": 201,
          "responseTime": 5712,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-06-06T00:38:10Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-06-06T00:38:10Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "6386f664-0d03-4ec2-9a56-c41d1009e31d",
        "cursor": {
          "ref": "2c443b8e-1351-49a6-bcda-efd7a39e16f4",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a37b0b78-713a-4707-8799-17996c2c698f"
        },
        "item": {
          "id": "6386f664-0d03-4ec2-9a56-c41d1009e31d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ac706c76-cf30-4479-89f7-e6c929ad30d8",
          "status": "Created",
          "code": 201,
          "responseTime": 5589,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed34aa2b-08d9-45c4-bf68-41c5fdca9d09",
        "cursor": {
          "ref": "fb81b845-a9ab-4ebb-ac36-1294e4e140de",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e18a6f2e-bcfb-484e-abe7-fc04c55192ff"
        },
        "item": {
          "id": "ed34aa2b-08d9-45c4-bf68-41c5fdca9d09",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9b031a3c-d48d-4b4e-85a6-0c362fc7eac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "377e6e0c-0104-4e27-bad7-f77ed9ca906c",
        "cursor": {
          "ref": "bb04b033-96c5-47eb-b304-bb2043c8e3b6",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d98b7e1b-6012-424b-a2f7-64c2e6c240cd"
        },
        "item": {
          "id": "377e6e0c-0104-4e27-bad7-f77ed9ca906c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c607b7ec-ea31-44c1-8cff-d0c1f79560bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b80196-baa4-4aed-85ac-a32fb5249d6e",
        "cursor": {
          "ref": "f1c4b0dd-48db-413b-b8b1-75a41128f815",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b8eb2d4c-705a-485c-b7f7-3525a7387c9a"
        },
        "item": {
          "id": "e0b80196-baa4-4aed-85ac-a32fb5249d6e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f37bdeaa-80c1-45af-92e3-7b34eb69a622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c29d4017-e010-42df-83cd-edb750f7adcd",
        "cursor": {
          "ref": "b9b27e7e-3d26-4e8a-86ef-e0904b93e9bf",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "fe358b4b-03d3-481c-9215-c19e4478f900"
        },
        "item": {
          "id": "c29d4017-e010-42df-83cd-edb750f7adcd",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "cc365dbe-bb2c-4ba9-8afb-5a669beac3f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d155328a-e778-47a5-8ea0-a1d367bca66e",
        "cursor": {
          "ref": "6098c3a4-8cd9-446d-a2e8-d547dc8e37e9",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "5f772f5f-ca4f-4ffa-a6e0-3e844ae45630"
        },
        "item": {
          "id": "d155328a-e778-47a5-8ea0-a1d367bca66e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7599ef12-aa2d-4152-959d-3e5d5fbec3ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba1cc82-36ee-4cb9-852e-a773f3accb4a",
        "cursor": {
          "ref": "b8f822c3-4007-4cef-a050-64f74425237a",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e31527ed-e163-4fb4-9c13-f439e691b824"
        },
        "item": {
          "id": "4ba1cc82-36ee-4cb9-852e-a773f3accb4a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "bfdd65e0-a3c8-4cde-ac95-1bd068e45da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0dcbfd-b65e-4fbd-9c36-e8094048c973",
        "cursor": {
          "ref": "8a8cc144-8456-4ab6-bf73-f2678612b660",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "981d64d8-98e1-44ed-8b9e-0222fa06129f"
        },
        "item": {
          "id": "3a0dcbfd-b65e-4fbd-9c36-e8094048c973",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "83cc38e9-a981-4e3b-b118-6a85d6a4a730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b17c279f-7148-4d82-b4af-36f874f0d15b",
        "cursor": {
          "ref": "89f6678b-7887-48a4-8fe9-5b2e43c90599",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "21101ce1-d68d-4d67-bfc1-cc53ab5f8599"
        },
        "item": {
          "id": "b17c279f-7148-4d82-b4af-36f874f0d15b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "542850a7-688b-4b1f-8ff2-22d6312849b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d6316b-95d4-49f8-9ebe-29367da0e6bc",
        "cursor": {
          "ref": "37f0f025-6a76-468f-b0b8-076e372a9658",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "33a6536f-501f-45f2-9132-0753b12f99da"
        },
        "item": {
          "id": "a1d6316b-95d4-49f8-9ebe-29367da0e6bc",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ee79c983-2e6c-474e-a67d-2f7bdf68e94a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd1de7a-e2bd-4437-943b-1057293af817",
        "cursor": {
          "ref": "d6f7e2b1-a651-4097-a3f5-eb340977a002",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6407ad73-7cbc-484a-8275-ab7e97f47133"
        },
        "item": {
          "id": "1dd1de7a-e2bd-4437-943b-1057293af817",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "abc47783-4600-4cc3-a9a6-141ae01d56d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d7e2d32-fd55-435a-90a1-7fe5dd093a1b",
        "cursor": {
          "ref": "ef18c65a-c2cb-45a7-bfb7-f91a4a5b1928",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d1ba7eb6-d9b8-43ed-8e5a-de4633e0d813"
        },
        "item": {
          "id": "2d7e2d32-fd55-435a-90a1-7fe5dd093a1b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "97555ff2-5043-47ac-a366-84c600cb60d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8507fef6-9dcd-4d70-9ce1-2439fcc59870",
        "cursor": {
          "ref": "955f10dc-5136-4ace-b1dd-c04a6d020b73",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f19fcac5-8cbb-4265-8ca1-6e272fa07761"
        },
        "item": {
          "id": "8507fef6-9dcd-4d70-9ce1-2439fcc59870",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "49b3e184-f864-446c-809b-9c28fb4c94ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc91b25-ffc7-4399-bfc5-fbb7821568d1",
        "cursor": {
          "ref": "f550ccb1-b83b-4c81-9598-e2597ec02644",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "985a3b49-a8c4-40aa-8fd1-f706424ac99a"
        },
        "item": {
          "id": "4bc91b25-ffc7-4399-bfc5-fbb7821568d1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "99d8d1e8-748b-4c4f-9afb-468f6b8ea363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c642c896-b238-4f2e-a417-72063d571181",
        "cursor": {
          "ref": "f3449362-bf54-4cd3-b820-bae6d1f581e3",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e7dd6624-6e13-42c8-bd89-9d59129ed8cd"
        },
        "item": {
          "id": "c642c896-b238-4f2e-a417-72063d571181",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "479cd598-8482-42a1-a98d-7b7883ad9bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a7e943-eb7a-4298-baaf-4ba1c38d9da3",
        "cursor": {
          "ref": "dbb707b7-a053-4676-93b2-921907ec0226",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "07b4572a-b158-4f05-b601-a05d715c0653"
        },
        "item": {
          "id": "53a7e943-eb7a-4298-baaf-4ba1c38d9da3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1b816a0a-4c91-4c25-8de6-49f001bd124e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5895cb-8da9-4061-9926-1aa91e07f87b",
        "cursor": {
          "ref": "7f3e1884-0386-487c-96b0-4558a58c9a9a",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "fca3e774-97fd-4270-aebc-101dbacf3818"
        },
        "item": {
          "id": "8b5895cb-8da9-4061-9926-1aa91e07f87b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "366f72db-fd4b-491b-b480-246ea1834bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7713a69-8b17-4542-ae04-37c66e6132fb",
        "cursor": {
          "ref": "4d95b7f5-67bd-46ce-aa2c-73dc918e5e6a",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "10767797-1435-4073-b443-06952208069f"
        },
        "item": {
          "id": "c7713a69-8b17-4542-ae04-37c66e6132fb",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1bcaffe0-d2ce-4d6f-880f-641fbe5503b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28aa8d68-1d30-4917-9eba-ac9ffed18a3f",
        "cursor": {
          "ref": "65567bb1-bef6-4f45-968f-283b08c29f26",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "8d5ee53d-41f1-402b-b07d-649ad72f4e90"
        },
        "item": {
          "id": "28aa8d68-1d30-4917-9eba-ac9ffed18a3f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a0244f62-3e97-4649-8c63-1f63a90b650e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e202b1-6ff0-45d8-b829-60281d0de9ef",
        "cursor": {
          "ref": "36787877-6581-4f5c-ab52-eb29c8c68ada",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "34bc9cd2-c93e-4b55-9641-7392b496e678"
        },
        "item": {
          "id": "88e202b1-6ff0-45d8-b829-60281d0de9ef",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "6c8f2024-db83-4374-8410-3b5b564b27ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef82ae2-3b5d-4345-82ea-acd8ea78ccf1",
        "cursor": {
          "ref": "4d565064-d11b-4995-8150-f23b7972ca21",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b59ae8ff-209e-4990-8d9b-08ddf99ad3df"
        },
        "item": {
          "id": "1ef82ae2-3b5d-4345-82ea-acd8ea78ccf1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3c15d52e-39b2-46ab-a8fb-85d3bc384b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a983bbb8-d6fd-471f-836e-dd402a3bf281",
        "cursor": {
          "ref": "be5620a2-89e9-4414-9788-9e682d03f296",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "0caec0b9-00dc-4c19-a4f3-fe0dad241ce5"
        },
        "item": {
          "id": "a983bbb8-d6fd-471f-836e-dd402a3bf281",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3dd745b3-6411-423f-9f9f-4f85ccb79627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a40959a8-4ee5-4502-b253-840c23fb62de",
        "cursor": {
          "ref": "2c054024-1f27-440c-b43b-0251c44d0be8",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "9416517b-23bc-4ecb-8c4c-2e11d6d76d17"
        },
        "item": {
          "id": "a40959a8-4ee5-4502-b253-840c23fb62de",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "014276ca-a80d-43a6-bcd4-84f4aa5e4434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d149bb07-d7f2-4ec6-9709-7ca44661d8d0",
        "cursor": {
          "ref": "cbbba78d-2f1f-43cf-9c61-975250fd6d07",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "7f7e5653-5604-4ba9-a386-6c375dea69ec"
        },
        "item": {
          "id": "d149bb07-d7f2-4ec6-9709-7ca44661d8d0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "bd623d6d-c772-4354-8150-56fc401cc3f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b6a63a7-b757-4a19-bcb5-24265578dd19",
        "cursor": {
          "ref": "355a2a7e-015b-4b9f-8644-90a50faf76e6",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "10370d2b-c396-4da5-8c97-1a98224af5aa"
        },
        "item": {
          "id": "8b6a63a7-b757-4a19-bcb5-24265578dd19",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "cf92440c-ad5d-49e8-b5ca-5a07b75e50a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4239bb01-9883-45fa-9c37-0f3eb584bf1c",
        "cursor": {
          "ref": "335c26e1-4a91-4188-aac3-250fece212dc",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "38f69869-61be-4abf-b628-bc275290c167"
        },
        "item": {
          "id": "4239bb01-9883-45fa-9c37-0f3eb584bf1c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0ca49b12-4b22-4d81-83e7-acde1af67325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d84deba3-ab99-4e1d-af05-557795cb3f92",
        "cursor": {
          "ref": "3e182c48-fddd-430b-88be-bf99c273b3d9",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "027b59bc-f483-4c04-8b81-aa8a1fb4a41e"
        },
        "item": {
          "id": "d84deba3-ab99-4e1d-af05-557795cb3f92",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fbf42900-e326-40b8-8b4f-b41d068b8452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8df8fb7-40e7-4b42-804f-aeb8bf465f0b",
        "cursor": {
          "ref": "170c846b-431a-4a0b-851a-84c718ceb0c9",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "db3d2470-5285-4615-88c6-6e74631f1820"
        },
        "item": {
          "id": "c8df8fb7-40e7-4b42-804f-aeb8bf465f0b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "94be42a8-cbd6-485d-9832-c03dcf48108d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e29cb8e-7713-4fe5-91b7-bd4c44e01628",
        "cursor": {
          "ref": "12afda41-96d7-478b-aa1b-5f4d1d3c05cf",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8ec9130d-f42d-40ab-9728-40a4e1704e65"
        },
        "item": {
          "id": "7e29cb8e-7713-4fe5-91b7-bd4c44e01628",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1f3ce7ef-3bb6-48c9-b794-ba40e05bd732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b251155-7b67-45a6-be05-414ae7fa618e",
        "cursor": {
          "ref": "83885fc9-a451-48f2-b250-8ffa29b6a413",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "cd029369-a7ed-4c38-9fd4-fb771c5031f7"
        },
        "item": {
          "id": "7b251155-7b67-45a6-be05-414ae7fa618e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "36f0af8f-8ba8-4bf5-a592-f3c2944531fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6950ab03-779d-49f2-8845-bcdfcf99289f",
        "cursor": {
          "ref": "293e23a0-47a9-4b01-b519-9d0480c630da",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "2f3fe146-7b70-4463-a40a-49cc0172dd93"
        },
        "item": {
          "id": "6950ab03-779d-49f2-8845-bcdfcf99289f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "379d740e-dcaa-491d-85f2-c06d7a677f69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d212c4-2a01-4c83-b618-b0d84b9b701e",
        "cursor": {
          "ref": "09a67c64-1392-45ea-8363-3674d3701805",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "5c2f7e09-8ea6-49be-9997-a28c4e56bb81"
        },
        "item": {
          "id": "54d212c4-2a01-4c83-b618-b0d84b9b701e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8d934fab-89ab-4b4a-8ad7-4a0a444e0462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d6d2b1f-998a-4cc7-8fd7-991f5fa58120",
        "cursor": {
          "ref": "eaa46c49-3399-4e49-a1c2-70e749f5229a",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b55b718f-c500-4474-ae97-d09e9cbbbe9e"
        },
        "item": {
          "id": "7d6d2b1f-998a-4cc7-8fd7-991f5fa58120",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "85e9108e-3c91-4e2d-a88a-d18604d299e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "231cd673-bf04-455a-b769-33756f8df1f2",
        "cursor": {
          "ref": "7dbf7871-f0a0-4fe4-824e-59b50fc1ff83",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "613ff02b-f90a-418b-a493-c1d844a720cc"
        },
        "item": {
          "id": "231cd673-bf04-455a-b769-33756f8df1f2",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ddd81512-0b3d-45b2-9807-e6c873f4c9c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf521059-89f7-495e-a66f-10e78367c921",
        "cursor": {
          "ref": "f5702b2a-12ee-45d1-be69-79fc9fc84516",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "33c1b4fe-6d45-4c42-ab69-3ea757c7833d"
        },
        "item": {
          "id": "bf521059-89f7-495e-a66f-10e78367c921",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "817cd6e6-459a-42b3-bc63-dc142dc5f271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ff62fa-887c-4d00-aada-5160e8ec04dc",
        "cursor": {
          "ref": "68b6b485-b9d0-4461-86ae-1e3743cb434c",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5087d69d-8542-40ec-9cdd-6b6e190c714d"
        },
        "item": {
          "id": "a5ff62fa-887c-4d00-aada-5160e8ec04dc",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "322e97cd-c558-4994-a532-6e2eee4c7095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2405e87-031f-42fc-beae-9ac4b55b783c",
        "cursor": {
          "ref": "ee99b86d-712d-496e-9fd8-104a5065232a",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3a70a4aa-3696-42d2-81b7-1b2048de3d22"
        },
        "item": {
          "id": "c2405e87-031f-42fc-beae-9ac4b55b783c",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "b343b141-5669-422e-9b85-20da1d1eadce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2ca4cb-f7b3-4d2e-a964-51612c1ee5d0",
        "cursor": {
          "ref": "66799a69-7570-4496-b7a1-2f4d9894bef5",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d4e770d9-61d8-43a0-ad6d-c046f6606850"
        },
        "item": {
          "id": "9c2ca4cb-f7b3-4d2e-a964-51612c1ee5d0",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "633ae69e-a6ac-4b17-944b-2dbb8e2676bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a13104-3276-4f1a-82b2-9a1a51da878f",
        "cursor": {
          "ref": "2331106f-69e9-4ab2-91d6-d975a54b56e7",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "736f332a-d5b4-46e6-ad0d-e48728e5aad6"
        },
        "item": {
          "id": "89a13104-3276-4f1a-82b2-9a1a51da878f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3d3356fd-19ca-406a-85c5-7ee322fff248",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 114,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6686dfeb-a56d-4799-ab6d-fd8ee5e30ebb",
        "cursor": {
          "ref": "2c737e60-0ba7-44f4-92f8-dae362660746",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "9604d54e-c579-42b8-824b-3ac31ef2afff"
        },
        "item": {
          "id": "6686dfeb-a56d-4799-ab6d-fd8ee5e30ebb",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0a6860f2-9c9c-4fae-9552-06a969b99d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce7b705-7d37-4667-a5c2-ff7c01403019",
        "cursor": {
          "ref": "de018580-c183-41e1-86c5-7878e2d318a8",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "265dcea9-2a2a-42b4-a8f7-3cb975f73df8"
        },
        "item": {
          "id": "5ce7b705-7d37-4667-a5c2-ff7c01403019",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c61a728c-12d3-4d7d-9b93-4d919dfa0a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77fef841-1b41-4fc1-b1a7-f3fbb7276cf2",
        "cursor": {
          "ref": "2ad17851-5a93-4dc5-98ac-5ae22e8751c3",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "2f817cd9-d82a-4ed3-a81d-061e51c9227c"
        },
        "item": {
          "id": "77fef841-1b41-4fc1-b1a7-f3fbb7276cf2",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "6719c675-ec9a-4a2d-b576-2c430058992b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca1ac0d-d735-4ffe-a6b1-1bb5a459d9e4",
        "cursor": {
          "ref": "18426de7-6104-4846-ba6a-9ad0c572a70d",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "eaf154cf-d729-453d-acef-8d8886193e32"
        },
        "item": {
          "id": "eca1ac0d-d735-4ffe-a6b1-1bb5a459d9e4",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "544485c9-0312-4a97-8d12-d9e0c4c74cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a57f954-4133-434e-9e3e-2751a268332e",
        "cursor": {
          "ref": "6425b6ea-043a-40e4-a2c1-f5f0b975fc2b",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "2da01a2d-1c54-4cc0-9a86-1dd3d574085f"
        },
        "item": {
          "id": "0a57f954-4133-434e-9e3e-2751a268332e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "26f590a2-fa9c-4f7f-accd-0580c1c694f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35dfc008-6b42-4fcf-8c39-4e14d2bd8ff3",
        "cursor": {
          "ref": "fc5db5d4-6c53-4b77-9df2-15b265d9c478",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "4f45fc21-5891-4308-a996-91b20559fcdc"
        },
        "item": {
          "id": "35dfc008-6b42-4fcf-8c39-4e14d2bd8ff3",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "dfbf3244-49b4-4071-99d8-934b56ac7633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb6336d6-50b3-4834-9ea4-6b37fbcfc146",
        "cursor": {
          "ref": "1b2ebf75-8b40-4fe2-ae7e-8acc9e454a7e",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "80dd0cc6-5cf1-4953-82d9-0f7e5250ca2d"
        },
        "item": {
          "id": "fb6336d6-50b3-4834-9ea4-6b37fbcfc146",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "00bb9b32-626e-456c-a2ff-d8dc24381ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6339f2-a5b4-40a3-9d92-929d04b1ec2c",
        "cursor": {
          "ref": "16e4b426-4b45-4f9c-95fe-c603f4a74aaf",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "bd7b7501-e8ce-42c8-bb78-7c2df70bd214"
        },
        "item": {
          "id": "6a6339f2-a5b4-40a3-9d92-929d04b1ec2c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "992e7a18-a628-444b-b70c-e6646797fde2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "187e8d28-d3ad-41f2-a4d4-2224ef2b85b0",
        "cursor": {
          "ref": "1681ca71-0bf8-47cb-92dc-28d893dca1ce",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "083ae302-b49f-466c-83fa-49f3b7f002cc"
        },
        "item": {
          "id": "187e8d28-d3ad-41f2-a4d4-2224ef2b85b0",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "fd24af32-262e-47a8-a0bc-825fe72edb0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490225b6-f49f-4bfb-b5c0-a9e5ca4af67a",
        "cursor": {
          "ref": "9066c41e-09ab-4aed-a0d9-3316c1736f90",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8358e508-999a-40ef-8b2d-2397a2b81f55"
        },
        "item": {
          "id": "490225b6-f49f-4bfb-b5c0-a9e5ca4af67a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e0bccf09-904b-4009-b8ef-57aa855e0700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c6960a-b782-44bb-ba53-46871bb9e231",
        "cursor": {
          "ref": "ff75f69e-ae9b-405f-be52-ca9acb5241d6",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a8022f1d-304b-48a2-a7e2-cf17b8e6b43e"
        },
        "item": {
          "id": "09c6960a-b782-44bb-ba53-46871bb9e231",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "3a51a233-e02e-4ff7-b4af-48bd1fc57410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c58d7890-cd16-45ed-8980-0926826686d2",
        "cursor": {
          "ref": "e477b593-1943-4c13-8df6-047016d58f23",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "898614a7-a0f7-429e-86e2-d3352190ca59"
        },
        "item": {
          "id": "c58d7890-cd16-45ed-8980-0926826686d2",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7138fd45-50a2-4822-b936-a04b1c113c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df96683e-a0a0-4bd5-864a-bfda073e0697",
        "cursor": {
          "ref": "c4a3918f-96ce-4eb3-9201-5322efa6251a",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5ff49c4e-1ec7-42ff-b5d3-2213824d2d3c"
        },
        "item": {
          "id": "df96683e-a0a0-4bd5-864a-bfda073e0697",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c8ccf4fa-a7b0-4b16-9567-36eacd23f176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6685337-4458-4577-a013-363d839ec769",
        "cursor": {
          "ref": "f2adbedd-ffe8-4927-8d47-116f01541d35",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3c4bf896-4f27-40fa-9055-02dc539d2dd3"
        },
        "item": {
          "id": "d6685337-4458-4577-a013-363d839ec769",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "518e11ba-597f-4df6-8dc4-e52534fd2475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675cac09-c93b-4202-8d36-54ab08b85f36",
        "cursor": {
          "ref": "f0a86e66-4110-4c10-b8bf-68cedb8bbf37",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "8d4e2ce8-dc4b-4feb-bc99-2d701d11a248"
        },
        "item": {
          "id": "675cac09-c93b-4202-8d36-54ab08b85f36",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b68faa39-ead4-450d-a8f5-828942bd51d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f8441a-3e2e-4da7-8267-0f0564c94c81",
        "cursor": {
          "ref": "b455bb01-bded-48ea-827c-1adf7e9f2d02",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "c6257bd2-e5ca-4c24-8915-984d7ca1c04a"
        },
        "item": {
          "id": "62f8441a-3e2e-4da7-8267-0f0564c94c81",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "fc029dbd-ec0c-4f7b-9bda-bcf1ef0b800e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b681624-5567-4117-9c2e-d23b5fedf876",
        "cursor": {
          "ref": "f9885542-e4c5-4cde-883a-34227214638c",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1a1b6d94-a514-4318-b657-f91a70526bbc"
        },
        "item": {
          "id": "4b681624-5567-4117-9c2e-d23b5fedf876",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "bf387522-c06c-43f5-9127-2b26a63e6868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad83a61-f515-43af-b3db-e4a6a6dfdd6d",
        "cursor": {
          "ref": "e014e7c2-521f-4f19-a603-7cd97ccf2e05",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8ac4daae-41f3-42f6-9b87-742a1c9b91e1"
        },
        "item": {
          "id": "cad83a61-f515-43af-b3db-e4a6a6dfdd6d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f852bb7f-8788-4318-bb2c-c3dd49b91906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c86386-00ba-4ccd-8942-cd6fbc34a9cb",
        "cursor": {
          "ref": "35f76b8b-6a95-41e5-916c-8b50ef0cf78e",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "82f8ab32-0b6e-47c5-a857-9b3d6d6d3815"
        },
        "item": {
          "id": "e1c86386-00ba-4ccd-8942-cd6fbc34a9cb",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "cefbba59-b9e2-4935-9cdd-f2d059a37939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea2f182b-ce75-4411-abfc-79abd545726f",
        "cursor": {
          "ref": "386442e8-9ce4-43cb-ab5c-8d867c38c2b2",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "26a38f0c-1cea-46c5-9619-29bc506f1be2"
        },
        "item": {
          "id": "ea2f182b-ce75-4411-abfc-79abd545726f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "2f129e74-c41e-4978-af1d-a4df34fa102c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc26eab-4ec2-48c0-bb5c-46b7eae6adbc",
        "cursor": {
          "ref": "c06c4154-6e59-402e-8b14-fc4e14a6a890",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "47247b0e-04a5-4e66-92d5-45b0a56bc07e"
        },
        "item": {
          "id": "1cc26eab-4ec2-48c0-bb5c-46b7eae6adbc",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "49d2cd07-68b7-4eda-a8dd-960bddeb14f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9606d710-51ec-49f7-a089-2ac8ca89c317",
        "cursor": {
          "ref": "82dad9ee-b2b4-4140-ba8a-a5a69566306b",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "62b47a20-6e67-4ad6-8dbb-8f1f7e2653ae"
        },
        "item": {
          "id": "9606d710-51ec-49f7-a089-2ac8ca89c317",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5985a283-c4a3-416c-9506-2560879c7d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46fbed00-58ba-4daa-9408-2577210fa7fc",
        "cursor": {
          "ref": "3a21fca1-6993-4b13-9c27-6ca3938760fe",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "766b0d5e-1964-459e-b6a7-9f2d339a6d17"
        },
        "item": {
          "id": "46fbed00-58ba-4daa-9408-2577210fa7fc",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "426ae145-60fd-4abe-9086-e893c052116f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0834bf49-6838-42a4-b753-b2a39033b2fa",
        "cursor": {
          "ref": "d2ec303b-b92f-4bbf-9e1f-ded61982374f",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "7d5f9e04-30ae-4ec8-a8fd-41b411cd4594"
        },
        "item": {
          "id": "0834bf49-6838-42a4-b753-b2a39033b2fa",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "dcb7a218-d834-4800-a97f-1aa571d30529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b3a364-fa25-45aa-ac7e-bc0c98ce859e",
        "cursor": {
          "ref": "47404166-0d25-4e7d-9de3-b3b3fa826b45",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "9d3d1459-f9bf-443c-83c9-9129daffea99"
        },
        "item": {
          "id": "c0b3a364-fa25-45aa-ac7e-bc0c98ce859e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6968c271-427c-46b8-8891-d9ab813cfeba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096dd8e5-4835-4112-b33e-7048a6bf3526",
        "cursor": {
          "ref": "715e8ad6-5ebf-4b26-87b5-a94d4ea0be71",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "bbb15e2f-cb71-4790-9a98-bd4698c2245f"
        },
        "item": {
          "id": "096dd8e5-4835-4112-b33e-7048a6bf3526",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a89f6ee6-dbc8-4195-a8b7-c0485cd3fbef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c262bd-97e2-442d-aac4-5581b36412ff",
        "cursor": {
          "ref": "7b41a3d6-19d6-4415-9670-ff44236ec53b",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "afb66cc8-0663-4fdf-b3d8-6a9c9833f022"
        },
        "item": {
          "id": "84c262bd-97e2-442d-aac4-5581b36412ff",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b71ace3f-3daa-45e6-a909-69ada89cb19f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae22c17-bd77-44a0-a173-65489775a64e",
        "cursor": {
          "ref": "65749a05-36bb-43b2-b87e-136d6ed0b13e",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c7eb8c22-7b05-4f29-8161-10a98fcf5b23"
        },
        "item": {
          "id": "7ae22c17-bd77-44a0-a173-65489775a64e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "ecec1d41-2273-49d7-8b7e-7204e94ca238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d18b856-75c5-4617-8fb7-300b830f15e1",
        "cursor": {
          "ref": "8ff41e77-6591-4a96-badd-eadaad4e911f",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0a51cd86-1f2b-4da9-bf50-39595977c558"
        },
        "item": {
          "id": "0d18b856-75c5-4617-8fb7-300b830f15e1",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "9c6a8bb7-2cdb-4ef4-ae94-22a67b6ffc90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e19a7f-662d-41d2-83d5-24f7ac6a4858",
        "cursor": {
          "ref": "8c443f1c-43fa-4ef6-be62-ae6acf5bd110",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e28762cd-1612-4db1-a8f5-f5fba95616c7"
        },
        "item": {
          "id": "38e19a7f-662d-41d2-83d5-24f7ac6a4858",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "98ffb06a-1c27-4c6f-a5f1-3d1baa55acf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed0f98b-9533-4fbb-aa55-b516435f2203",
        "cursor": {
          "ref": "16a33e0a-8d8e-473c-a766-d0a258fd4a74",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "91612c0e-629a-4809-a811-742b6ade744b"
        },
        "item": {
          "id": "fed0f98b-9533-4fbb-aa55-b516435f2203",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "537dc769-5453-4b11-9dad-f54080de7ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c223abd9-5aed-4476-97eb-32cbc323b809",
        "cursor": {
          "ref": "866e2db4-ddf5-41e8-86b4-74b02258b305",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a8856f8c-2544-4bba-a179-8c2c9e8ef892"
        },
        "item": {
          "id": "c223abd9-5aed-4476-97eb-32cbc323b809",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "07d1de2b-0359-4b70-8340-0a9515d714bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad11f19-bc12-4660-98f8-fef6c669dad4",
        "cursor": {
          "ref": "ce822438-7706-4a32-9d59-b78b18400bb2",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e99be254-5df9-42f4-8c99-0d31c2dd38a6"
        },
        "item": {
          "id": "0ad11f19-bc12-4660-98f8-fef6c669dad4",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e98e25cc-1809-4915-9256-620d678e3df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "052f38e9-9d44-4beb-a42e-aa87f8e76c6a",
        "cursor": {
          "ref": "22ed9868-b052-4d40-9ac5-25e57666efcb",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "bc7159d5-3e65-477d-ae0b-3ecb565e3e47"
        },
        "item": {
          "id": "052f38e9-9d44-4beb-a42e-aa87f8e76c6a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3f60772d-0043-40ef-8b07-4093f4db47c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be02778-0c37-4417-8067-a826c97c43aa",
        "cursor": {
          "ref": "c104f89b-f5e3-44cb-9726-d7eb730e98c0",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0f871be9-c184-43f2-abad-222aca7f14eb"
        },
        "item": {
          "id": "0be02778-0c37-4417-8067-a826c97c43aa",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "90625e01-af80-48ef-84a4-91d4e3a83109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b5d0a4-94f5-4b0b-8518-59b105d941da",
        "cursor": {
          "ref": "b20a40a5-8828-4f1b-a73a-599e5e1b5c7e",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "377f1c2b-35c7-4b32-a579-744bd7a33e23"
        },
        "item": {
          "id": "17b5d0a4-94f5-4b0b-8518-59b105d941da",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "76e31694-4863-4e69-94b6-d3b87af56b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be988bd-2b0c-4b80-ae6f-0758d12e8f95",
        "cursor": {
          "ref": "ec44cf9f-b521-4842-8d2e-be93ebbb63c2",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "83fef34c-3709-4b19-9d11-81777d738687"
        },
        "item": {
          "id": "9be988bd-2b0c-4b80-ae6f-0758d12e8f95",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "547cbf8e-e184-4b56-802d-d8056b0660ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78438542-6c39-41f9-b5ab-05b5b7df6473",
        "cursor": {
          "ref": "cc7f086c-8ae6-43ca-8d3e-2647d2200ba8",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c0613cfa-53bb-482b-ba47-a3680d89ee7f"
        },
        "item": {
          "id": "78438542-6c39-41f9-b5ab-05b5b7df6473",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "11d03f6f-fbf6-4fee-9c02-8b448d1bb0ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c7a5a5-e298-4a7c-842a-1a577700f228",
        "cursor": {
          "ref": "8bc4177d-9b45-4a7e-a78d-29c6c172b84d",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b56ef2c6-a5f6-4a18-9d2d-e47ec783e61f"
        },
        "item": {
          "id": "27c7a5a5-e298-4a7c-842a-1a577700f228",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "fe299756-f1d3-416b-9cf9-c6dedf13e3c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1292f95d-2be5-43d9-8c4b-3412354aca3c",
        "cursor": {
          "ref": "9a0ed15b-bb8b-4deb-a603-a582c228de19",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "340c3e64-c8bf-4818-b4df-a55893832c64"
        },
        "item": {
          "id": "1292f95d-2be5-43d9-8c4b-3412354aca3c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "124d3f34-b3ac-497a-9ff9-7b3cc9202163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a1663b6-1e7b-4680-bbd2-1bd449974bab",
        "cursor": {
          "ref": "c3439713-978e-4f4c-a551-053196a7d47f",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "317d8dd0-f02e-4e39-b6d4-0c385694aec9"
        },
        "item": {
          "id": "2a1663b6-1e7b-4680-bbd2-1bd449974bab",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "fdae5ad1-3398-4bc9-9534-9855ac79f8fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3059126e-8af3-4f7d-b4f9-d7efd9b0a3ea",
        "cursor": {
          "ref": "c29598ec-2b64-4d92-8f5d-49fb7e7f8cef",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "90cbd138-a30a-4d3c-aa31-88896345f79b"
        },
        "item": {
          "id": "3059126e-8af3-4f7d-b4f9-d7efd9b0a3ea",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f446f0a5-eceb-4997-accc-f3ad503dd261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c074348-3e32-4ea1-a973-6c7e4e8de877",
        "cursor": {
          "ref": "e313e2d8-8549-41fc-8c8d-0dc2b76166f2",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "fd4c30b7-f1de-4746-937c-669bca2cef6d"
        },
        "item": {
          "id": "4c074348-3e32-4ea1-a973-6c7e4e8de877",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "eed85977-d144-4e86-8266-20cbeeebd66d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7480167-500c-447e-acda-d30e0224a5e8",
        "cursor": {
          "ref": "0c7026ad-7a70-4a71-9601-14cfcd9febe7",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "6839ac22-d39a-4403-9c66-d7b5266a6fef"
        },
        "item": {
          "id": "a7480167-500c-447e-acda-d30e0224a5e8",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a8a25a69-911a-408c-bcda-e6ad50e1bd0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3489a0f-19c5-4cf7-8471-64baae60f779",
        "cursor": {
          "ref": "d2d07b9c-9e35-49e9-ab09-bdae08c8d6cc",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "0f8f7a05-ce41-439b-a03d-5f1323386033"
        },
        "item": {
          "id": "b3489a0f-19c5-4cf7-8471-64baae60f779",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "cf70c851-e0b7-428c-9e5e-e691688ea89a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1a1cb93-411c-4ea3-8e8e-ced375e97d8b",
        "cursor": {
          "ref": "daf0bdc9-0013-4105-ad0c-c5ec19d408ff",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "5ef42565-fe00-4d22-aa77-01452ab77745"
        },
        "item": {
          "id": "e1a1cb93-411c-4ea3-8e8e-ced375e97d8b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3367c04a-c195-4bf0-99fd-95022c71d73b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6fc4ad-0556-4188-b1d9-c15e1d7cc381",
        "cursor": {
          "ref": "5e323898-b998-4004-b603-1b9bd41de76f",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "66be8517-4a50-4ebf-b331-bbc179e520c5"
        },
        "item": {
          "id": "1f6fc4ad-0556-4188-b1d9-c15e1d7cc381",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a499fb74-a124-4765-b001-12957f89384d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4efc7809-d56b-4d80-965b-1e24844be5a8",
        "cursor": {
          "ref": "62fed53b-4384-4cf7-bc7b-d352e6c19d9f",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "84672c4a-01c7-41c4-b0a4-9c8a92f116a2"
        },
        "item": {
          "id": "4efc7809-d56b-4d80-965b-1e24844be5a8",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "85d744c8-c093-4254-badc-b58d2797bed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b56635d9-0c3f-46a2-a69b-b6d896793d18",
        "cursor": {
          "ref": "fe0fc7f7-a97b-4f65-94cd-0504aab3a3eb",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ef9db34e-452a-45fb-8626-fd39df241559"
        },
        "item": {
          "id": "b56635d9-0c3f-46a2-a69b-b6d896793d18",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c8eff8c2-b7f7-4e58-83ab-e00f1b633281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0779cfbc-2848-414f-a34d-3d35b47cbef6",
        "cursor": {
          "ref": "8ec77614-f960-4ea5-b503-1f2e605df0af",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9a80d963-ce30-476d-8514-28d69915ec9a"
        },
        "item": {
          "id": "0779cfbc-2848-414f-a34d-3d35b47cbef6",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "51cc2cda-c5b3-43ca-8e5e-ac5aa64a0c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3ec60c-9a9d-4c04-b272-d95d11969046",
        "cursor": {
          "ref": "12f3910c-349f-419e-8832-8c64cad436e8",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "88a0b80e-03cc-410b-bf0a-7e9cd4a4105c"
        },
        "item": {
          "id": "0d3ec60c-9a9d-4c04-b272-d95d11969046",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ce84f011-6b10-43b5-aeb0-f097dc476943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64ead6c5-e24a-4541-a4d2-711515fdbe71",
        "cursor": {
          "ref": "0eb8c1ba-9c4b-4958-b618-74963bc90305",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "94cddcd0-a534-4885-894d-a7e7c2ae6184"
        },
        "item": {
          "id": "64ead6c5-e24a-4541-a4d2-711515fdbe71",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "67d8796f-991c-494e-a873-d0a83c114056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bda2363-35a8-4ddb-a5a5-92a1b936a01f",
        "cursor": {
          "ref": "9e5ebaf9-43c9-4c6c-9acf-57228b875f8e",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a23c1656-0e01-4b1d-9fd9-2ddfd392d3ea"
        },
        "item": {
          "id": "9bda2363-35a8-4ddb-a5a5-92a1b936a01f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "46122f3b-45ab-45de-9169-43300c1dadd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d637af9c-2b8f-41da-94ee-b9b177f5b62e",
        "cursor": {
          "ref": "2fec5c62-1cf2-41f3-854f-8b2093f7b38b",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "0473806d-a8c8-4551-9cd6-c458440f1a62"
        },
        "item": {
          "id": "d637af9c-2b8f-41da-94ee-b9b177f5b62e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f814c4f9-0891-4669-8bc3-c86e2b6ca2fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc18324-ff40-4230-a46b-f7c2d224739b",
        "cursor": {
          "ref": "06702bf8-296f-4ce1-bad0-e3ee1b767aa3",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "28a50200-f198-425f-bff2-51fc973a3eb1"
        },
        "item": {
          "id": "4bc18324-ff40-4230-a46b-f7c2d224739b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "75bf3f57-438c-4394-be19-78c4682445c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b94907-526d-41c6-b1b1-3cb8b173d746",
        "cursor": {
          "ref": "f7dd5351-8ea1-456e-b08e-3a5ddf89f70f",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "06cef2b8-d0ac-4cdb-b409-89c5fc2e7fcf"
        },
        "item": {
          "id": "37b94907-526d-41c6-b1b1-3cb8b173d746",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "eaf34ac8-2e84-41e4-8c8e-e70d32b48208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b99b2e-e5cf-41a3-9f82-d138ccb9b492",
        "cursor": {
          "ref": "fecf1463-aa19-48c1-9cba-99a5404111a4",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "239cbd4c-2ed3-4638-bfc0-6da70f371aa5"
        },
        "item": {
          "id": "b7b99b2e-e5cf-41a3-9f82-d138ccb9b492",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "830a7b69-ae90-498a-9686-2f54e3a8294f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fda2430-67a5-4a2e-8490-3f7178885985",
        "cursor": {
          "ref": "38c46711-3e49-4f63-913e-1c29623deb5e",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c75cc815-7331-4cc3-8872-02497c726f0d"
        },
        "item": {
          "id": "2fda2430-67a5-4a2e-8490-3f7178885985",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a58a1a0a-49a7-424f-8164-2ef66f9ccf7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152ceae5-e5ad-489d-8689-734dd967ed59",
        "cursor": {
          "ref": "4a89bc9e-8a91-4368-be6b-a770e817fa74",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c09d6d64-893d-4129-b30b-c1f4bd785287"
        },
        "item": {
          "id": "152ceae5-e5ad-489d-8689-734dd967ed59",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "2d951cac-1b11-46fa-a399-b156cabca3fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ff6209-2882-4ff1-806f-bf26baefeb8c",
        "cursor": {
          "ref": "db8c2af7-af30-4d26-bd83-e715655236f9",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "53f76253-c6fe-4f34-a481-d7834da3d55a"
        },
        "item": {
          "id": "e4ff6209-2882-4ff1-806f-bf26baefeb8c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7addc888-d325-4a68-8375-04a04370459f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73f61d0-f5f1-4d4b-8f63-0afd947d04c1",
        "cursor": {
          "ref": "d5124856-e291-462e-8f2b-6fe9de9860c0",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "854ab9d5-1163-4729-b2e5-21fc3fdf09cb"
        },
        "item": {
          "id": "d73f61d0-f5f1-4d4b-8f63-0afd947d04c1",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "107b0bf3-bcf8-4019-b1bf-7bd73d7fe532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a36c2ca-98d9-4399-95cc-8335f56558a2",
        "cursor": {
          "ref": "6d2c49c7-f317-4cc3-ac8f-45bccaf1ed47",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a25e4c07-624e-4b4c-af9b-78aa4d34b6ca"
        },
        "item": {
          "id": "0a36c2ca-98d9-4399-95cc-8335f56558a2",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "30c898f5-90b6-4305-917a-a9222529d6e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c85820-6ee5-4215-baa4-269237ff4bc9",
        "cursor": {
          "ref": "470c03c8-eba4-4fa7-a290-99e5549f3735",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "2b500de6-364d-480e-a483-afc5b03a6000"
        },
        "item": {
          "id": "c6c85820-6ee5-4215-baa4-269237ff4bc9",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f42ceef5-c0e5-46b4-b5a5-30582adac74f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d1fb1d6-d9d6-4415-b9ca-043546567c10",
        "cursor": {
          "ref": "f539797b-8f42-4e5d-ac19-7766a8738692",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d1232c70-d080-4f16-8881-09f6eb0a3277"
        },
        "item": {
          "id": "0d1fb1d6-d9d6-4415-b9ca-043546567c10",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a52f7565-2536-44c0-80c0-23d32ed58e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8372ebf1-62ed-4fd6-a3fa-7502a440e995",
        "cursor": {
          "ref": "89dc01ad-c101-435c-b059-f636d99e6b19",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f575e3f8-bb93-4a47-bbee-d62019f3e6b3"
        },
        "item": {
          "id": "8372ebf1-62ed-4fd6-a3fa-7502a440e995",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c3ba8b71-b2db-427b-b165-6f6856cbb12d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "643ccc69-5ecc-499d-8890-8ec28db574da",
        "cursor": {
          "ref": "449e3e02-fdc2-4d7a-9b2f-c63da9ed5c7b",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "1b57eae0-6e5e-4763-aec2-d928e0dafe50"
        },
        "item": {
          "id": "643ccc69-5ecc-499d-8890-8ec28db574da",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "828bfc71-0b87-4c3a-95f0-31504ce5a21e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1228f08-86c8-4449-85da-b835c23b4c62",
        "cursor": {
          "ref": "faba6e99-741e-437d-8343-ea05e35c7ae0",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f012840c-0d0c-4eb9-bb26-02f4c86d70b7"
        },
        "item": {
          "id": "e1228f08-86c8-4449-85da-b835c23b4c62",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "aa10e139-2fce-4252-9d70-6f7fa231f09e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79450a96-6ed4-4a44-985d-cf665546db66",
        "cursor": {
          "ref": "f51c63c8-f2ef-4a1d-80e2-025e31683a83",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3464857d-c9dc-4a8d-9bc0-f38bfbc23b6d"
        },
        "item": {
          "id": "79450a96-6ed4-4a44-985d-cf665546db66",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ae75d2e2-d83c-494c-9ee8-6aa5ecd997aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7cb5423-06c1-43d5-98e7-16de14b9f81b",
        "cursor": {
          "ref": "3ba985ab-05b0-4c3f-80b8-fb939310ee5b",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "dd620821-41db-4c47-ac16-54124e0ec55e"
        },
        "item": {
          "id": "a7cb5423-06c1-43d5-98e7-16de14b9f81b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "3bc3ea76-ba7f-4bc4-b7d2-7e8efb4384c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649b9d39-216c-464c-b551-ffebed35d81e",
        "cursor": {
          "ref": "d6cacbc4-5aa2-442b-b857-4a377a92adb8",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "35b5c9eb-4f1d-4fc3-b0d9-1e7f7381db66"
        },
        "item": {
          "id": "649b9d39-216c-464c-b551-ffebed35d81e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "0d2aee40-28aa-4d45-88bb-d07ed3d9442f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99316dc1-c970-43d7-8783-772efbef5097",
        "cursor": {
          "ref": "12f7688c-37cc-4d29-8b34-6a5b3ef77854",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3ee1185e-4d21-43dd-848d-a622f97abaf1"
        },
        "item": {
          "id": "99316dc1-c970-43d7-8783-772efbef5097",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "78809e86-671b-4433-9bb8-3eee9f53d93d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "709aecce-7f68-4343-a2a8-9a3773aebeb5",
        "cursor": {
          "ref": "1d3a5cc4-cbd0-4e92-acfc-46302b6bb385",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "da8d59f8-80ef-422a-b8d4-34b7356e4961"
        },
        "item": {
          "id": "709aecce-7f68-4343-a2a8-9a3773aebeb5",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3a8a0f3d-6360-4008-b767-45ff4c108c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1aa9227-81b4-4797-b07e-8f73a38ee8aa",
        "cursor": {
          "ref": "0bf331a2-2f30-40ef-93e0-c1cbaba032d1",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "811efdea-b6fb-49cf-b754-86ed0b27bfe2"
        },
        "item": {
          "id": "f1aa9227-81b4-4797-b07e-8f73a38ee8aa",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7cbf3c55-654c-4a4e-8c98-b20ec9dafc0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d7bc50-4ea0-4801-8001-1c73739204b0",
        "cursor": {
          "ref": "56a4c2b0-e7da-4381-ae75-c775b41645ca",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "6f114622-2859-4379-9e28-b4a47e573f26"
        },
        "item": {
          "id": "85d7bc50-4ea0-4801-8001-1c73739204b0",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7db7594b-406d-4c2c-8133-b4c2e698e715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "887799b4-2686-4f87-83ee-c835d909ef84",
        "cursor": {
          "ref": "f9d328ff-37d8-4d38-b98f-223b462dbba1",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b82db056-a5e4-4745-9cac-b6046b397df9"
        },
        "item": {
          "id": "887799b4-2686-4f87-83ee-c835d909ef84",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "0f92f99e-b8e7-48ed-af14-10aae05132a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f49447-3240-44d7-94ef-8debc1151a21",
        "cursor": {
          "ref": "ea7ed1aa-6e36-46f9-a2ac-0194cb3a7297",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0cd02a24-fc9f-4737-b451-716debf8b9aa"
        },
        "item": {
          "id": "50f49447-3240-44d7-94ef-8debc1151a21",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "42ce321b-87de-44ae-823b-268ba1fc16f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c2c4e9-cad1-45ca-9992-4f0a6fef5d87",
        "cursor": {
          "ref": "dc3996d6-e077-40f7-a36e-af6e30eeeb7d",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "02a0b2c4-9d21-452f-9f67-536a33612590"
        },
        "item": {
          "id": "e3c2c4e9-cad1-45ca-9992-4f0a6fef5d87",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "15fabf50-7e5e-4f7e-a915-c93db484f138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef54ed0-076a-47fc-808b-39939ced4592",
        "cursor": {
          "ref": "c3111b27-c2e9-4dc1-bede-5110ad22e184",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "5d33a49c-339b-44e8-8fba-4098414a0397"
        },
        "item": {
          "id": "4ef54ed0-076a-47fc-808b-39939ced4592",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "fafc0745-d175-4f50-8c80-d4906c0f955f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa29b023-c5ac-4099-bfa0-1378233a5692",
        "cursor": {
          "ref": "ee1e97b4-675d-42bd-83e2-e43e35cc6332",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "eb105698-591c-400b-9ccb-eff8626178c7"
        },
        "item": {
          "id": "fa29b023-c5ac-4099-bfa0-1378233a5692",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c0953be3-533e-4c02-b2df-56806c9b1631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d5c866-3ee1-492e-9309-9b2b673a66ad",
        "cursor": {
          "ref": "118d150b-fc8e-456c-a52d-d963a779bcca",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6a5b7912-0a21-44c0-8d5c-1f3f2fdd0df2"
        },
        "item": {
          "id": "b3d5c866-3ee1-492e-9309-9b2b673a66ad",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "7beb8ee8-a6b5-4194-bce9-a64afce2c858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a674103-8e42-4dbd-8c2a-565f305fbfc6",
        "cursor": {
          "ref": "f37cfe07-8ca8-47f3-936a-f1ca99e21041",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8cb52a74-975e-4650-8a00-c99a14d4ddc5"
        },
        "item": {
          "id": "8a674103-8e42-4dbd-8c2a-565f305fbfc6",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "370d60bd-f0c4-4477-9b76-e465b84c699d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "401e403b-a5a2-4c5c-bdfa-e72b38402bda",
        "cursor": {
          "ref": "a13e58aa-0075-4dfa-a024-4450bdb92a8b",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "3e34d31c-a032-45a6-88f8-c85dcc25657d"
        },
        "item": {
          "id": "401e403b-a5a2-4c5c-bdfa-e72b38402bda",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "7472cd86-4df3-4bde-810b-ff6dba4d6179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88aa5201-eea5-4b19-820b-1c54a9e6cd1b",
        "cursor": {
          "ref": "a59ffe53-f5cf-4321-b8d0-f71e53251624",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1f8286b2-7514-4caa-bcd8-c6a9473e21f2"
        },
        "item": {
          "id": "88aa5201-eea5-4b19-820b-1c54a9e6cd1b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a0f44938-13b7-4233-bbc9-90647a7607f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a465910-4a93-448b-a59d-d0ec1bcc9a84",
        "cursor": {
          "ref": "f7198b73-dd6c-4a53-b9cb-269aba26356c",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a80e5b84-55b8-4eae-8ebd-a85b9164e154"
        },
        "item": {
          "id": "3a465910-4a93-448b-a59d-d0ec1bcc9a84",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "1577e232-2360-41c5-ad55-1544003b58a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f36423fe-0e83-4c82-a240-7819e5127b0f",
        "cursor": {
          "ref": "dd4d0b26-5a92-4ff1-bc5a-c7623d7df8b7",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e8317fa7-f2f7-4afd-8079-50f36c1db55d"
        },
        "item": {
          "id": "f36423fe-0e83-4c82-a240-7819e5127b0f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "18ec862e-d433-47b6-bf1d-973dde5fee59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc97397b-36ca-43c8-b02e-bec0bec10994",
        "cursor": {
          "ref": "8ce8c111-2a36-4e6d-9d45-137e220a645e",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "467039a3-09f5-49df-928b-2ef2594d08a2"
        },
        "item": {
          "id": "cc97397b-36ca-43c8-b02e-bec0bec10994",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "530d17ac-8fc5-4990-86b3-5798f2ec4c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f70f1f02-4174-4a70-b6f3-f1bc7520deb6",
        "cursor": {
          "ref": "168b7772-41c0-4cf2-9f68-61d788d88369",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "52098b3a-c811-44de-882a-2d4b6f3d390e"
        },
        "item": {
          "id": "f70f1f02-4174-4a70-b6f3-f1bc7520deb6",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "8548fb63-36bd-44c2-94b4-037c85c08bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ff2115-83ed-4cbd-b44f-ca87ea0a02fa",
        "cursor": {
          "ref": "9e6dc091-cfb9-47c7-abe3-98e49b12b51e",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "507cb10b-3f69-4c2d-86d9-bd485e405052"
        },
        "item": {
          "id": "f3ff2115-83ed-4cbd-b44f-ca87ea0a02fa",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "512bc4fc-b996-4d0f-9bae-e776d76e9aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34dd9dc7-1cee-4a64-8d77-dff05e181a07",
        "cursor": {
          "ref": "9354b609-4036-4903-bd29-ffaceec90910",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "265001dc-68fb-4a4f-adbc-3c87c459fcb2"
        },
        "item": {
          "id": "34dd9dc7-1cee-4a64-8d77-dff05e181a07",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "099f6bc1-e691-4b0c-8e22-dca51ab71fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc07e881-a003-46bf-b7ce-1bc8f8a57f24",
        "cursor": {
          "ref": "7eb5a25e-72c3-4974-82e0-f1f13324cfbd",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "377cb3dc-2dee-42d5-9f3e-3bf37bf26ad4"
        },
        "item": {
          "id": "cc07e881-a003-46bf-b7ce-1bc8f8a57f24",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a50df8f1-346a-4728-9c07-61b7b644568a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f526cd3-56f3-4f55-a927-ada872ec07e0",
        "cursor": {
          "ref": "e599f832-75cf-44ae-8c61-7958997f4d66",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "29d9d23d-df09-4c1f-aefe-239d86e74594"
        },
        "item": {
          "id": "3f526cd3-56f3-4f55-a927-ada872ec07e0",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "80d8f6f2-0cd0-4752-9a29-b655bc7e8c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e283bd01-cd61-47ba-b16a-0d1894e23818",
        "cursor": {
          "ref": "9e776c10-07de-400a-a430-23dc706daaf6",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "8f2ad06c-ca9e-48b1-a513-c8bf63a27b75"
        },
        "item": {
          "id": "e283bd01-cd61-47ba-b16a-0d1894e23818",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "93609102-a96f-4c38-b98c-5fbfa36102aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57251cbd-2536-446f-8df6-19c54e01bab4",
        "cursor": {
          "ref": "9bc05739-8e4d-42df-8137-ff5d67627dd8",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "5dfe40cf-e32e-48b3-b2dc-f5c4596a7ce0"
        },
        "item": {
          "id": "57251cbd-2536-446f-8df6-19c54e01bab4",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c5d2fcbc-e878-47f3-8898-b282c60ebfa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e91fd21-b886-4b87-ad34-477c8985db39",
        "cursor": {
          "ref": "99f893c9-5f93-4e01-8bd2-14dd508a4503",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "26238746-b602-4557-ba62-3ed677293087"
        },
        "item": {
          "id": "5e91fd21-b886-4b87-ad34-477c8985db39",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "af7dc264-18ac-41ab-ba98-d30c9bbb47a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c3a159f-ee1d-4f10-bb56-95e0fa3e76b3",
        "cursor": {
          "ref": "9b7d969e-9811-4789-850f-bbd963c82dbf",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ad55ccc5-1c14-4c89-a23d-d5e9348ed5f0"
        },
        "item": {
          "id": "3c3a159f-ee1d-4f10-bb56-95e0fa3e76b3",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "614cf663-8a47-400b-a40c-7c9e163dc5ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9731fe6d-0b5e-4f72-8eda-c61e9d005baa",
        "cursor": {
          "ref": "cbbb8ab0-0dce-42a2-a7f5-52527651153d",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "91fcac41-6ee3-4e35-9408-410472845f9a"
        },
        "item": {
          "id": "9731fe6d-0b5e-4f72-8eda-c61e9d005baa",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "76eb8c14-39b2-46fe-84b0-8b81483e57ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a07b478a-c7ad-40db-9a83-fb702116786e",
        "cursor": {
          "ref": "03d07586-9433-411e-bc06-dd81e14a3b7d",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "7ed44d99-418f-4862-875d-b3ca238e1575"
        },
        "item": {
          "id": "a07b478a-c7ad-40db-9a83-fb702116786e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "af800b31-921b-4087-91fc-bafb72fe5c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b06a8c-4f7a-445e-9534-2725cd175ae6",
        "cursor": {
          "ref": "458dbc82-92e9-4a22-85a6-0683b27cfff7",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "650a89bf-25ca-40f4-8afb-7b4889c16aef"
        },
        "item": {
          "id": "e7b06a8c-4f7a-445e-9534-2725cd175ae6",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "66b4a40f-d896-413e-9b58-f8d764c1e450",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7097dedc-e7e1-48c9-be7f-4b697eba7f8b",
        "cursor": {
          "ref": "774a94ee-398f-4dcf-a5db-27d9cfb2b9b4",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a87e67e4-a507-4855-8500-0522717d3acf"
        },
        "item": {
          "id": "7097dedc-e7e1-48c9-be7f-4b697eba7f8b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ab0e3d0c-b987-456b-82e3-5c0fd535ec7e",
          "status": "OK",
          "code": 200,
          "responseTime": 2352,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9fa6ec-4130-4de5-b57a-f023279614fc",
        "cursor": {
          "ref": "a1b463f1-e1a9-4f46-b58d-aed31b64e027",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3db8b4f0-a641-4aa7-b560-3e7b04af1b08"
        },
        "item": {
          "id": "9f9fa6ec-4130-4de5-b57a-f023279614fc",
          "name": "credentials_verify"
        },
        "response": {
          "id": "834528c9-f669-4612-92a8-81f7af450089",
          "status": "OK",
          "code": 200,
          "responseTime": 2543,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ec0228-57f1-4f08-9391-b76a0e4e0c18",
        "cursor": {
          "ref": "04193b59-8b74-4af2-bab4-6bf32ee7de5b",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "04894d7a-cf47-494f-bf8e-0529e24f8ccb"
        },
        "item": {
          "id": "24ec0228-57f1-4f08-9391-b76a0e4e0c18",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ac9cf576-87ae-479f-871f-425a9e415718",
          "status": "OK",
          "code": 200,
          "responseTime": 2263,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ee2144-6ea9-4011-a941-5a160601ea32",
        "cursor": {
          "ref": "d902626c-f1c3-4862-a747-1af3399a3f39",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0e6e28c9-a531-473c-ad11-508a432b6c0c"
        },
        "item": {
          "id": "f4ee2144-6ea9-4011-a941-5a160601ea32",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "76dee190-2db5-4d15-b797-aca2c897aba7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ee2144-6ea9-4011-a941-5a160601ea32",
        "cursor": {
          "ref": "d902626c-f1c3-4862-a747-1af3399a3f39",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0e6e28c9-a531-473c-ad11-508a432b6c0c"
        },
        "item": {
          "id": "f4ee2144-6ea9-4011-a941-5a160601ea32",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "76dee190-2db5-4d15-b797-aca2c897aba7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "553b24ae-1c54-402d-aa52-8de1ecce76d1",
        "cursor": {
          "ref": "8236faaf-bdfe-4688-bfc1-b4d617f9deb7",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f6edb78a-7d68-4cee-a757-c19260c80096"
        },
        "item": {
          "id": "553b24ae-1c54-402d-aa52-8de1ecce76d1",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "36ca0189-f758-47ae-af1c-9bae43aae7a0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c1d36b-a30d-4958-8c82-736fbd5135a9",
        "cursor": {
          "ref": "18f43b5a-5266-401b-a6c6-26992dbb68da",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "1863a96c-3a74-4868-8c2c-452cd519ee72"
        },
        "item": {
          "id": "a6c1d36b-a30d-4958-8c82-736fbd5135a9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "955bd679-2613-4692-9c9c-1e51c58228e5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}