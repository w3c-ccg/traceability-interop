{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a0cdca7c-39c9-4b24-81fe-ac64c54b9b5f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c9eccc4a-f1b9-4a16-8c1b-65ca1c4c7568",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "85d7a436-484f-4cfe-baff-200adb086556",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "85807d9d-fc32-4404-b520-2d6d80154622"
                }
              }
            ]
          },
          {
            "id": "b61ed8f3-880d-4bc3-a565-611f7322e721",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "57bbaf72-a1a5-40d4-aaf6-86ed012c5129",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0fde45ca-38bb-4332-9f1d-2ed58d15d8f0"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ea8f393e-cc5f-4181-835e-37b6364fca2c",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "110d2620-bfcf-43e7-8620-429fe2b2cf0b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c6d6d681-5b95-4831-83a8-6c625f533b87",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4457dac9-7c03-42d0-8f35-28a5d11aec63",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "16c4e2f2-d757-470b-8c4d-e8366730cfe4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "03c1f815-a232-4738-a365-d04dc1171b5d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3cc5ee89-221d-45d2-9966-48adcd872c4f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ce601174-d402-4306-aa92-112c8b6436b0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5c2f7fc4-01b5-4eeb-8d2b-8062e9297728"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "72653190-3fd1-4387-86c3-500b07d3bef3",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7e43636c-3802-4012-9dd1-f45222fcae38"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dee5e16c-ce68-4202-a985-18e7c3cf4094",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f61a5eff-1da7-4817-a3c5-820b0f81dced"
            }
          }
        ]
      },
      {
        "id": "8c9f357c-1856-4e03-91c3-fcf109d042a7",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ef2f21b4-a139-4c78-bdca-7bc345997158",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e97a64e4-ef74-4d42-bd3f-538d4cd4594a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a7602a4e-febf-4e44-bcba-a153db1d8cd7",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f31f3aa4-f0f4-4f2e-aa7f-3504cfefb426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eeaf8614-d83e-4df3-8f77-f2b4439e46be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44321c32-7498-4109-80ae-664427f8099b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9036b56-16fe-4408-ba64-9acf73db2d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f8e5864-5eae-49a0-bf01-cc49495e9df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7e4c6b-6d1e-46f9-84ff-5afb3c5abcdc",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e35752-47fe-4694-9a7f-acad33db30df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32329228-1d72-405f-9972-094cd2b8775c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8b174f5c-ae1c-494e-90d3-db93513b5a6e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d38129cd-9e10-4c52-b94a-9a4810e52cf6",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9005579c-93e6-43a0-a782-82c6c0674b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "48b13e4e-6869-48e8-a917-173c99807b2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "298a16c6-ed69-4aaa-a519-326dce0c3b89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf4285c8-b414-4696-ae17-489d4a0bafc4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a6663c30-77a3-4b5f-8ea6-29464aa52990",
            "name": "Positive Testing",
            "item": [
              {
                "id": "788fe5d7-923d-41f4-8df8-d59a43ea6c19",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "917d559d-7570-4a7b-829f-fccc968f9b57",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f36ce3e3-c38b-4eba-bba1-7de5aefbd7dd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "60db5cbc-0238-4a6d-b69f-778eb9450fe0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ad30cd32-6976-4b7e-a772-34e9302288c9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "87a2eaee-1265-401d-bd9d-b342e4352009",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1bdcaf5a-c045-4175-9e44-401670d1153d"
            }
          }
        ]
      },
      {
        "id": "a4416a09-42c2-428f-816f-829eab3f4db2",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ad73cc83-62c0-4721-a38c-b76a2fa2365e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6ec656c4-a286-4e11-82fe-2340c99d3092",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7f8cef15-3891-4375-8912-57c128123cf5",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95adbe07-a397-45c4-9ad2-05e8efeb0480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbda2da6-e900-4c9d-a9f2-490e49e5585d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b95600-6296-4ac5-9d51-c8b603454c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6815f60d-9151-4963-8c5b-5cccc5d75f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e4febe8-a387-4684-a2d8-309f03af73d4",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c42839-1b0f-41cd-a65e-a8e397c611b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9127d1b-1ad3-48f0-b302-4ad6391a0eff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce65693a-b25b-47bc-b935-5fc580516a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97d906b2-a4aa-478b-b51d-b8511b2a46e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aafe939b-22f7-4459-9154-ab74106e775c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "263b6d49-12ed-4512-bfd7-698b0ffaa89d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61eec6d0-9c0a-476d-b3bf-cd8af54a2fb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5def087-6114-4f80-8dcf-a47fa1b9ae98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3372d59f-e9da-44b0-9a2d-add29be3baea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b6e781b-7442-43b0-b6f8-2f9bb2421071",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "707fde4c-be66-4412-b8e4-2d3e3636c08e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4baaa6e4-8cfd-406e-bf02-0856d0bc933f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f796b62-7962-4c06-8f92-c0f99e6c2c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c75140b-d71d-4edf-9584-b7721c5ede55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa8be390-36fe-4dcf-8563-5ce223e596a9",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5cba98-2e79-4415-af4f-e8846fe5e00b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f8d0bc9-2f7f-4a8d-bbe2-9d792d3c1cae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a8e4b4-4d0f-4b19-bdee-a14d326609ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c07ee35d-4915-4fd4-b1a8-e1e2ffbd9282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b2f1682-41dd-4710-8f36-0b5677c5f762",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac2677c5-07ba-4381-98af-3e1982ee4096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc9518d8-43f7-4cfe-bf07-3d235a5b5ad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daccc6bd-260a-487b-89e0-30170d2e8e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c7adbed-0657-4dd2-868e-bd8082a34cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6584e1e-cd80-4e22-88b9-b311df66490d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e50afbfa-c503-44c0-af64-7482a17fce43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "604ecdfa-ae43-4b30-a785-ebf8c0770d74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f8f2a4b-c3bb-4889-84cd-58ade991e038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed1670d3-4dd1-467f-af5f-a0408684ee7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b2b7ec-8f52-4e3d-9417-4abc4ccae646",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10717ecb-48e4-4111-a968-541374392958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a947403-d4d5-4eae-8a61-ba622a992e94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fecadfe-c299-400c-8b20-ffe73daa762d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ced3ffb2-f675-4580-b5d2-380ed2f00dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b210e6bd-dc7c-4966-98b2-686f77ec53ec",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de93948f-c946-4ed6-ac22-ff92dd0e7cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d4bcf1c-b02a-4d72-8728-77d5afec6c25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a196440-2710-4f62-a28e-7c4723fadd21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92b8e198-b32e-4886-9b74-a822bcc0e6dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "876a6ec8-2d41-4b1f-952c-c22bb85dd205",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c59343-8b7b-48a7-b45b-fd212a1beba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "def850d4-e70b-4dbf-9aa3-1bc615d0ff17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e95aff-e9bf-4910-9ca4-9e0a26a9a034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3805ae55-672f-42ed-9035-828f826fe275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25740a22-7859-4c8c-a877-5256858474bd",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d32e605-5bbc-42b2-b1b5-7e7c96ee6694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0e63c97-abcc-4bc6-9ccf-e9d187f131bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982ae0b4-1797-4676-9ba7-5d0d7ed320f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b22c3aaf-e17c-4604-ad04-725c7435a3c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e470693-2b4d-4529-a846-aebe09cdeee7",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f72350-c7b8-46f4-8358-21075ad8894f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4baf061-8a29-4c5e-8ced-ba6dddd4ac1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7bd8c1f-5856-47ec-bb36-e29382fe1477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c731241f-695b-44e9-b137-35b096c03bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96677f81-b37a-44e4-8eec-2b34d415a4a1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6bea12b-6bf2-4901-8d62-2db379fdba0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "916e3354-d240-4845-b9b5-c4449d0a4815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c2e1f7-5065-43b0-b0ff-3f648e1c9de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cebbbf79-6808-40fb-a44f-4d11924d4f14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab231593-88b0-41e5-9453-4dd27540347d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "506c6a1c-506e-410e-a912-50658ed772ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddc8500e-bbe0-4e7b-b3f1-25a4c0a0e1c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aad4169-4ea1-49d1-b3ab-727ed0bafeb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "851ca0a7-bffc-4001-a156-c9bb39a49367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9335e8-1ff1-4661-9a0d-6a0e9ace18bd",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb52fed-49fa-4440-ab28-da5a099294e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ff9e118-13e8-46e6-8a8a-4f1317a0e7b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3a24f3-e61d-496d-8a18-d4c9a2180633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "195b3a50-941c-475b-9bc9-c349f7df232b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21302470-20ae-48c4-8026-46f3aee516ec",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b8c5d3a-486f-4a36-a2ca-3c5041095c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f88fc91d-68fa-4026-a72f-bffda4dce67f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4488d0e1-c237-438e-a8d2-409042ebdd2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f00e8d54-aa76-4b7e-8ac3-e992a6def812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b0eeaa-626f-4751-8b18-51d839280a91",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "700cd4ad-4c29-4255-8a04-376615487b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47b5faad-0bef-4d79-8100-8d2cd8bfe418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95743fcf-d448-4ef6-8a5e-513c8bc2120b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63b030c2-87e3-4284-ba66-b2ec890acb98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ea5cc2-98a8-43cb-ba16-88c5e69a2b89",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5120708a-ce0d-47e9-8d89-42759010ab9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baaed3c7-03e0-455d-8a75-713f4ea54d75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b0563c-042e-482e-9835-5586df7989ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "90b95fef-ecea-47ac-8bad-f8cd8b9aa2ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2708c4de-8795-444c-8e27-30a0a3d157c6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f9d1ba0-f4b7-4f42-a867-a17a1f11fd31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "934bd4b6-293b-4cd1-aee3-a3f42501749d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c8d84c4-e5d4-4b7c-a14a-87d74352385d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d19a299-02cc-4b6a-9ee8-81ea58ddc490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8414c1ca-1769-47fd-ae07-092a24b47978",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9deb828e-4295-4484-a9a2-0bca8873326e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2829ea99-d47d-43d3-a52e-378cb73009cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "726134ab-a0dc-4d26-8715-778e39e68c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0006dc19-34d2-4dc8-921a-24fe3821be38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ac16d2d-1924-40bf-a5e6-ebf3ebedad0a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "949909ff-47c3-459c-8869-ea4960c2f959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30182a2c-9a9d-4985-b76b-ede6cca354b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f60c69-8615-497b-a535-241a68ae6821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eee54123-0008-44b2-92a7-48c19948a3b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b240af7-6f66-483d-b14a-d353cc7e899c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b1f584-ff6c-46dc-8735-3d6613a1b807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "012639be-6135-4af2-a92f-41d779021a52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5235daba-3ffc-44e2-9b39-e6c224b83527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "266450f1-721a-4ed0-acaa-9dec82575049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9806776a-7a2b-4075-9971-18475e293773",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d57efc1-db02-44c8-af9d-0bf82295e363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "300f8ceb-8d2c-40ac-865f-b04047e8241a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eed280e-d202-44e9-b31d-5a4b2ceb2e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a5fd2669-5c9a-47bc-8173-3dd02ae74add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b44fa962-cf7c-4836-8054-128b612560be",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfdf80b4-e856-4990-ac8d-1bdbb8f01532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85c3df56-ac9a-4795-8014-08ac29425328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c9f9f7e-7f8a-4ef3-96f8-30bb76d83da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "45c3b8f6-28dc-489f-99b4-9115377fd230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e93b573-f81c-4898-be84-0575e0d9c001",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7b1957-d5ca-4bb7-8929-62c402677978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c2540cf-9661-464c-8bd0-e33820bc8546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3da9b15-8991-459d-b0bf-82d7effd1649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cf41db1-7acc-4ff2-afdf-d17c721d5f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3786e6b7-f73b-4db6-8d1d-c77da034fe47",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0053b093-326a-48b6-bf9b-bfb9fb8c1be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42f71e90-2de4-4822-b580-fd23bbdf684d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deba39f2-3ba1-4f5b-a5be-e495241620a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b389e0e4-d162-469e-8dce-00c35ea5a9ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b2d20ed-4acb-49e0-8ab5-1638aef469f7",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb57a93e-1e74-4c32-bb75-e11d03ae0108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8723c525-e82e-4d5b-83e9-4413b453da6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ddf015-3b22-4900-ae91-ded0fdba697c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bd44a5a-5549-4c28-b237-478d7d2ae1da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d147b7-eb7c-40f9-aaf5-496782fd6999",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa6d4f4-46dc-4386-965d-ec444c7a3d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b852e95a-aee1-4970-8707-7a8306bd81d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "939929f3-312c-4c32-b689-7945b3d00e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "115193f2-c8a6-4850-9d44-0f46667cbb45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5b781b-f11a-4890-b07f-0f6662d208c6",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfde09c4-c6d5-4fb3-bd84-75a314358f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73f61ca6-e821-4307-8b41-c6a1ede86d34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1f7f64-1676-41dc-b7fc-f26cffa526e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e47f9312-5958-4ef9-8099-4529dcc409a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0babede4-2936-4650-8cb9-8a0191f42ede",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d8d9e0-e597-409b-80c8-f8ce5a281ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2c0ffd4-7fd7-453d-9e8f-068eb603536c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036e20ca-c55b-471d-b265-dec858929da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e94130c3-13c1-494b-a9b5-ea0778b00a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f6b4b0-7e36-468c-8a17-e0471d060515",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df616d4-e960-4927-bc18-275d8bd8cd9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75a19297-1604-40ff-bfeb-7a71a61ce271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbbd08dc-4f20-40cf-a78b-0bfc4a85845c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "28597e45-a215-46b4-8ab8-5bf19429eb00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d289334-abfe-4607-8be6-53e28591602c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a33e748-8cb9-4729-ba50-daf584b2400e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eca18c01-a8cf-4bec-afde-46d2a23399cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a6bb55-ed18-46cf-b8f3-e8e9a2f63524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0557bf17-5790-4524-af01-d2cc61f8a9b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "888a0403-1029-4892-a0fa-157d09925046",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03790213-668d-420a-bbf1-6ab1db190c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a03fb966-619c-4858-af72-a65b201f3f6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2091f4ec-fc8c-49f4-9425-369e25427aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "edba0d95-fd17-470b-9f5f-69e37aca7606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95475100-16fd-49bd-a268-c8b1a58c4313",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de61b26f-52da-4ef7-a38c-00fddacbe098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "570bba62-307c-4a3a-a702-78e7e290b14b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a21fd910-c0de-4e4a-b1da-ab6793a13acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "006b9bf5-8ad5-4504-936a-ed7b33c73bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e90ffb-2624-4636-93ee-29ac8809e4ab",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da8a27f9-6165-4632-b5f5-81eb3076f13a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be4e5745-c8b1-4982-9248-bc5892fbdca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce1124dc-f721-407f-b33b-c7142458c674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f44b8a92-67ec-49e2-8140-075062ca904d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad28afa1-76d3-481a-8e25-4619d165e755",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45551be9-0b7b-402d-82df-892b52959448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31aef548-63c5-479d-ae93-5da8a859f0a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9d1bab3-b2ce-44c9-a6d3-8ff3991f2268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dd3b7377-9372-4aac-923f-f50fdc5e0fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "055324bf-7370-42e1-ab16-ab9deb454533",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da43e6c4-56b0-40b0-85b6-117e62502488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdf0ae4d-4e7b-4508-927a-c58d3c063e92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "145158e3-f345-43ca-bd30-5f93df7051e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6db5a367-5b39-45be-962f-b95f2348743f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "920eb333-f7eb-4f93-8d59-68fba8e3d612",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dfbede4-1dca-47cb-83dd-84723e39318b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c8aa2f2-8203-4f32-a803-b08c0b3bd66b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a7fe7a2-22e4-4c88-aa06-b02b6a15e3bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "404d6869-2d1e-4362-8f6e-749cd9f20138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2016d19f-0ebb-47aa-8127-2d65b5e14ad0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "963060d6-c931-4e97-9861-189036ebec7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d9bcae9-9953-4b79-8fde-044aacf78abb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8367cd3-76ba-40c5-90a6-fbbcf2e68db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9239870-50fc-45ea-9092-e3b10ad57ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba7b9f0-f9e7-4281-93a2-f0c2608057e4",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb0b8be-1d86-4d74-a1e6-137aa6f659b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e02d30e-c352-4ebd-9c80-0e239d4cc6b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3a5ab7-2e14-4249-8a7b-9d0c49ca2495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2970c71d-7521-4a7d-8d98-c029dcf469a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26447c22-ee30-4973-81d5-c9e60502878c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac883ad8-0d63-41b4-a382-b67a695ce696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9223a9a-12f4-47e8-b28a-67e51e2d8074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa37c13e-ed53-41e5-a6f0-d5e775b30575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f48cf628-5950-45c0-b27e-19ca66e6321e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c6fe74d-c2e4-4831-aa99-2078f8c63a9d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcad2f6b-4c6d-48a5-a3e5-d59deffc323f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ba2ef94-939c-44b6-ac0b-07a9096b306f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d91e4cd-f618-4487-a913-166ac44db5b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "fa1bde9f-0704-4303-8b05-d49e8cc841a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f82a2687-9499-41fd-9446-0d0505c43f9d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e65401-7721-4209-872e-b74f85ae5871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0870bf5-551c-4305-83f9-7d5fdd507735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe8a9ba0-c650-4237-a153-bb3be70efd2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ee32591-8ebc-4b65-aa30-69e0b4271563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7467f9b6-0b59-486c-b22d-0ea31533f4d7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1657963-552c-4f8e-b7ec-a3bd9e92fcdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6087b3d3-869a-4df6-bf4a-38286fed87ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a41237e4-db11-48ca-8369-cf9aa5f1fb66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f231860d-04b5-4562-a115-f26f41343dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6871b03f-4a93-4dbf-9c4c-c7adda3a0f1a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3cf74bb-91e9-4ff1-9fd3-210f5f75f4fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9663f43-8fcf-4732-ab53-4a6cbe412f71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99151ec0-36c4-4fb3-9414-3615465fca53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4103bf2-bea1-408e-a49f-fbeeed71fae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a1197d0-e018-41fd-ab19-708e60438271",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85928591-67f7-4134-9ba6-bd487befac44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fffec27-dd82-4371-a391-2d2f934350e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "539ca380-cf56-4bd2-a75a-28356c6bf45f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "83b6bdc9-04e7-4e89-92e5-1daeff85de37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc416e41-3f2a-46ac-9fd8-f0948f56693e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da5577b-39d3-4412-93ee-dde0f0c4b46b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd882b0e-47cc-492c-878e-e34a97cd6312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "356342e1-b9cc-4807-b773-a1b14599ddff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1cb7692-5351-4565-81a0-e3c2f3ef2e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21742f36-2b03-4146-8268-dd33d4e34f12",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd34a76-c45b-40eb-8ed6-56959c381292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2106117-77e1-46c9-93fc-91846cf17896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b6c3c49-3e9c-4710-a7ac-6691182c0384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfa715ae-280f-403d-82a9-90f2861c9850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6004e47-77c5-465f-8773-e474f41d1c4d",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a2d4e2-2a24-44a5-ac7f-a6daf5bd51c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed52c263-2c7d-47ef-9fc0-64b38cf69852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116b3abb-ad40-44fa-9b03-61f5f7fa1466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ede58b2f-d508-4a15-8a13-0d1845a20fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e40139c5-748a-47ca-9132-94d1e2b57d57",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9093d6e-7295-4279-8ca2-888605aa0f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81450b8b-c6f9-4d59-ba22-7e0b91fb5181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e351695-a2de-40b4-8007-12ede2db7bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a7e46e51-f03d-4dd0-bc6a-203565c42e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a7a62c-15f9-4362-9d32-4e9f8a9bdaa5",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f78033-9572-43ec-a815-f6958cf247b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efa51fa3-9475-490e-8791-57ec00fad47f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf82435d-c577-4374-949b-31e5205a9966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a20c755-0f92-4dbd-ba03-08bb58292a69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c5caee-5852-42fe-86cc-052072e23a45",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cdc896c-a5c0-4a8f-a255-4b459bad6e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d14ae05e-e333-4a41-a5cf-35f2ed787afe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0206dcb7-996d-4260-a718-e99930e5e88f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "73ffa3a7-5a97-4fbc-a3de-6f33e036ee2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6846a78a-c564-4713-9cbd-29794a1c0c96",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a903be6-e227-4060-8ffc-ebd88bb6bee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af89f9f6-3b58-4353-8b79-76221ae46b09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc1383a-9592-431e-b0ef-86f275a5d8e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf830a2d-8a74-452b-aa54-d2924a9ff9f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "236efcf4-3df4-42d7-8d69-0b18ba115b10",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46539077-8e07-4e65-8b6a-ec697b0bb8fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a400e6a-c8bd-4492-aab5-9e83af95f4a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6afa58-0292-41e7-97ce-d10cd9b7db00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5adcdaf-218d-4baf-97aa-b1ccfda1e7c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f7f9c3a-dd2e-41f6-81cb-2a7eac4be1ae",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ffe71e6-0cdb-49f5-8726-eb50fb517121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bf9293e-439a-44b6-99e2-0299d93c0106"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f00851a5-d135-4fee-bb59-1e54c441d152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fc65a46-a770-495d-b944-aef9ef2e695d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb0901c0-cab5-4d1c-a193-04eeb13bb01b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ed3e3aa-a5ac-4d27-a0eb-397193f2fbe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfc9f80c-23b6-4bb7-aef2-d5134cb6c10f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4fcb914-3963-44bf-a50c-1e598555b44c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "01a7519a-9bff-4901-9f0e-8ff800fc9a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f848ba1-48f7-43f5-acff-eff2a9ff1c53",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b29b4c-6a25-4cee-be78-5490dd6c8a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4720a85d-d703-4423-a597-7738cfa32cf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f3b9808-783e-40d3-bdf1-6b61cb0dc3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "beafafec-5458-4447-9cc9-fd99ea3c07f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e240f04-d088-4aba-99b0-f31dd8727ddb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "608ee14d-afcf-412a-97ab-b3a64782fb6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e0b5848-6578-4136-b579-48ff54f8f523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f706b8-ad51-4cef-8177-2261041affac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5316622-16db-4944-a530-39cd07208381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b003977d-2d90-4672-8810-6afe55e4edf8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa8f5d1-a499-4de3-9059-3d583de9236a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c04c7947-135b-4b72-851d-e19bb3f0d885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e01f08c-a000-4d89-860b-97af589e603a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "01836b9a-f4c3-41e1-bae4-c0d4785af073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55306454-b2cb-4441-b176-3b83ed820e76",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef2a7d65-f7da-43ed-bdda-4a1afa70f2ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "107c171d-2e7d-426e-90de-890faccb664a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8c0865-1cba-4901-99db-0fc2a0afbde9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "92ae40c5-0a06-46ea-9553-e5a1507e3a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73595cf3-91a3-4f2d-9949-1bb3dbbff4cc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd572fc-0d75-48b4-9bb4-1d1a9521ffb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c449f9f-229f-48cb-bb46-eb81d384bddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fda9222-593f-432d-9919-de7b3a5855e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "70c020f5-a012-44a4-b0b3-021e010bc8ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "562e1ce2-622d-4075-aa5e-6b0c47d04c78",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27311fb7-2118-469e-a63d-ee4322f1063e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c358e1ea-7151-4dd6-9b01-e2f865708843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40e219a-9083-4f96-aec5-0d331fb04b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bcc2765-6f74-4d00-af84-6d7839760067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "669c16bb-e7e9-46d3-b09e-9bd9eb8f8b40",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc392f5-db67-4e8f-b6fa-a8899770168d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "502d8b80-ce2c-426a-b667-c201cc75c5d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "414910c1-12ad-47f7-ac87-aab5727b27e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4362b10c-c523-497f-87b0-e9e256e9fef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e14dd1d-7682-4a01-8f1f-57edd3fb6062",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5df776a-c8ba-4b5c-ac44-50a00de760f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b38164bc-fa9e-4c4b-85b8-758d49847d86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc3ca90-d245-495f-80c7-5f621e8655fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcb5f090-2b9d-46e9-82ac-3b2d8784fa32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e67b91e-f883-40b3-808b-b3ee8e05210e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4797418-3a89-4e05-a942-5cc445f67288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86bd159a-1ee2-443f-9999-c677e3b6ae49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "724be525-6345-4ddd-bbde-8a5ad9fd6f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "84c72830-f15c-491c-baea-184385411dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d5c5cf-9a7f-464e-8828-48593ed78b37",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c78077d-54f6-401f-a848-543fbee532a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "531ffd73-17f6-48a8-a372-3ccabfe2f0c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a4ee8f1-608d-4d69-8b22-a1924a91c15b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b80f6fa-2fd9-4edf-a8c1-bd50ccabb0e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ffd22e-c819-4adf-b12e-21bc844eb14d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "320f073c-985f-4738-ad0a-8afae464d011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be55f871-ef18-4d4a-a192-dd2dabe30996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e6ee419-c784-4f47-846d-9ccd9f4c9f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "31aa701f-f290-4358-85ad-f58f11452495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650ba16d-973c-4aaa-a726-b9c76d6bcdd7",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b4806a-6144-43df-8106-b4bc7d66e7c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b0ce6da-3e30-4ec8-9a93-6b9bc6c80195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "168a0daf-0c30-4d5d-9c36-c66155aea095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f2296cf-c9a6-4b23-8878-b91034fe62b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2266909f-c1db-4078-a87f-1f505e2ef49c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dff9387-656c-4b1b-adfa-0698ee494164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8e0c872-6160-43c5-b9b5-2b127fb1e7e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c4bfa19-0250-48b2-b880-d0c8dcbe773f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d37fa6e5-bb4b-4a3a-a783-3137d93a865b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb58ac28-0c44-4367-a6f8-e0c9349af4d7",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e4b162-88b0-4575-aced-99b887c73792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1cd162f-84f2-4e4b-a0bf-8861d864d145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b72b890-49b1-4270-8036-21c62a5c828c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f35e3a0-74d8-4408-89c6-553d8694135d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b51808e-03f4-429b-a225-7a93c3da5409",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc05abd3-4daf-4264-bb01-4ccf03563a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff24ccd4-8a0c-4026-a8fc-1baed943e241"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba9002a-2828-443e-a7d1-cf99e2f3473e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c5b44be-578f-4ccc-b743-8d03c3334e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9057889f-c89d-456f-a7a4-6c0de008bb6f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce91944-9bb8-4208-8b9a-ac568119e0a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cc22118-e316-4d5e-9eb3-3e14bfbaadda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f3e5f0-fd17-4b74-b0a3-29922c0c0714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e40c7da4-1aac-482f-801a-a1971ba6b9ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9159b9b0-93ad-4796-aad6-99cd84a25a24",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0264fa3-6e2d-4ecd-bf4e-6ccae3643994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d07528d-fbea-4d62-afd1-97699325e481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "444785dd-7e2a-414f-a2d6-b63f78996b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "efa81fb7-551d-4a94-ae23-b0932bdae851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e68d1ed-7693-40ba-a934-6986e85062d9",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "424c90e1-7744-4ac1-8fa0-99e4433c7581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be2831a7-3ffe-4bdf-98d3-165fc5240c33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda178cb-429d-4b97-aee4-9352cd5985e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "900295ed-bcb5-4943-9ad4-3778f5fbeec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2791d687-814b-4b9d-b4af-f76e8c3e5729",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37da1cc6-a7d6-41d7-bdac-d1b1b08459d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebfe921c-aaa7-4d31-be5a-4afd3e258447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05fe9a67-df7a-45ed-8ffe-9aebcd1d628f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2149ab8c-827b-4803-914c-9bdc961ef9aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "510869d4-8b42-4105-9905-8139b876f17f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd889828-58a7-408a-b5db-474e3f05508d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5349fde-4ba4-431f-850b-ec78ee93ac05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46b9af12-8467-4b16-930d-a33540738a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "de1e025a-b459-422d-9066-435e766a78fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f4682a-fa1e-4dde-af28-8c9510748328",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1db5c4c-62ef-4c30-8444-34251ba5cc02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b79f8fc6-f228-4b9b-ac28-89b77682bca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee00f61-02b9-448e-b0fb-d324e8d2e32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6d74b85-26c6-4dc2-9765-6405702e23f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55cd036a-bd74-4a11-8f2b-dd5659763864",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "390115c0-316b-47cc-a59a-c765523669b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "906eba16-2892-409c-8256-256227f426a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0caa17cf-fc6e-4ca7-8f34-54392fe579b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "77c96a1c-bec0-47a4-b1c9-5680c4592862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b370bec8-9abe-4336-b416-e37d3725dc5d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b79cd3c2-9e6a-4346-ae94-bb05be518ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53201783-f8ec-4a7b-b9ac-4b1f144a0500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f203213-dd9d-4134-bea6-50a14a5d3329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d376e076-323e-4890-aad6-e2a5d88a7aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a69cf0a-24a7-4f4c-a065-54620ea21bfd",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b80975-b7f9-4e67-9fea-ab6d3254b683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19d096d8-5788-46d9-991a-b99d534adef4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c0d3f5-5fa3-4b23-935a-23edb8578550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fd21893b-0834-4077-b3f1-bac1c553cd86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b6e39fd-cf84-4953-8c28-46c9bda59841",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4422505-e1be-4279-a7c7-10598f070716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "240ae745-ce09-4ba9-899b-5c4e3ac0c643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1540c65d-cf77-4f62-9ead-2eff28a930ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2bfbb26-78c8-4784-afad-595497387dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f92f81-89cf-49c9-bb4f-b66ce53a52ab",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c288cfe-97a5-4c35-87a5-4d8d8563f766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41309e2f-7baf-4557-a665-020f83b5b65e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691dda98-15c3-48c7-a9ef-ef5a52309f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "db8c856d-f266-4095-95b9-fc4acd3088ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ffe6bda-a26b-4af0-a70d-887b3239d4f5",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02dcf904-3fb1-447f-9f24-e1baabe8c226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c64fe0aa-7b7a-4724-8dde-756912243918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07eb0a7c-28a9-4c51-b2fd-2d37a27f1ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "634a82bc-bbf1-4751-928f-b0e1c3a95249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4fd5f6b-a2e0-43d7-86d6-bbbdf8294c58",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d05211d-70d8-4345-92e7-eb2a3561e69c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76b1df2b-fdd7-4e7a-9bcc-2eafc7a7609c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c66a4d1e-9f92-49b0-8107-c5e62668b886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aaf09cb5-06fd-4059-9a12-f81148bbaa65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99268490-44c4-4551-a11f-2b5dadce52e5",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8cef7d-9ddb-4c4f-89d5-bb5ce9301297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cacabdd7-24c9-49fe-bcb0-ecdb41e727db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa975fd-4cff-4733-bae5-edda7762b85c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "29896fe6-fad6-432a-8fc2-c7751afd37c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05599459-858e-4b76-a8c8-3544c8e2cef3",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc5e32f-b8a9-4585-acd1-1539d16417ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ac49f3b-6143-4b65-913e-ae2800cf6952"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b2eb3a-cb6c-4019-94c9-b1dc41c778e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e821f6bb-37e7-4511-9377-d3e279048eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27ac50f4-5e01-46ce-ba3b-ddc3f22a4ff3",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66330902-907c-47c2-b51b-479506e8f40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f11248c-a7c6-449e-b805-c6e3df9a7ebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d09e6b83-da5e-4352-9484-84f383259a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3275bbdd-e79b-46b6-9257-bb6b444f10ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d48fa71a-a92c-4f68-baa0-482996667587",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ada56f-49fd-4e9b-b798-a8c6ac9e6b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ad6c085-d733-45aa-8c4c-1ef6793f5c4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c512be3-9a79-47f6-80f4-75ad2cf37f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "300067d4-ccba-428b-a427-2ae0ebf4c1a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b17394c-e6a9-480c-b156-6e484de9c5d7",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "118b3560-0d8b-44cd-afce-838276cdd380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b545f45a-378d-4db9-9e1c-2091582ca2f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7a199a9-c7f7-48bf-86aa-7176c48b486b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f7fb20c-7e0e-46b0-88b0-2f38bba703c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2177525f-0d7f-44f6-8c13-11b7719562e3",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67081071-2307-4ec5-94eb-218f62f7b3d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1f8cf7c-a38d-457b-9401-7476ab15acb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3bc4b9-5aff-4a7e-8237-6bc4eadb7322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b51b407f-e165-4877-a0f9-0d8ade97f090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52811bfd-7024-47ce-b6b5-2313e75823dd",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cc65247-6c71-47ae-aefd-1c7974a17470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f7cba64-0092-4473-b222-1d936c4182c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2650d14c-79f4-4678-a907-9c8e88047c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "39150063-c6f4-45aa-b605-979937b0a95b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6420d5c-ef3d-47f6-a996-76e471cd2403",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94e5a0a-bdbc-48e4-baa9-1bd59b911fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "fd98dd1c-1bba-4681-bf2a-87c255383666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b68f727-18d8-4d22-aeb2-b28c207066da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f27851c0-7e54-4d2d-adf8-6256e811050c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "33249b87-62e6-4bf7-bd15-bf2db312d9ed",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0178c086-1d97-4ca5-a262-f5cb35befa29",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f28aa8c9-efd4-4b8d-83e9-d7746caf51ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b0763f9f-b5c1-4616-93bb-1d2b22cf4a60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19153eae-613b-4177-ae0d-fc719c5105a4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29af0c29-fa31-47d9-89e0-c8e92bd21ee3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5dc89bf5-c625-4564-b5db-5f190db31d28",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df803102-6cc6-4a65-b946-a5f3b2135c7d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d84af08-3bfc-4de7-8754-f9090465c365",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f17096a6-e865-4a57-ac07-488f748bfa8d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4ec494ec-f805-47b6-a552-09a055c737e1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a41b3f70-d1b4-4f52-9050-dc2e2213e6a2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2190d909-7a8d-4e3a-8cae-ff819a655843",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ec47cf00-b447-482f-85fa-542fd9d88ca9"
                }
              }
            ]
          },
          {
            "id": "90d491e6-a543-478b-b3d9-5da3a961aba4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "36492d12-94c3-44ff-a10c-657d226ed712",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "2ef9d9fb-9704-4374-830c-bc130590afec",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6062683d-db4e-43e4-bf17-ef7ac3de7bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ff3e47b0-0fdc-41f0-884a-9f3df67ae89e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4fb1a3-63c9-4669-905c-5d9f55731c94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf5804ed-d131-443e-82c4-30dc622856b0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c9d2d915-7ced-434a-8de2-582cb1c3a756",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "08d43269-bbec-4033-ae29-124649eebadb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "35e2d113-45ed-4086-a511-9842c54613c5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3807677-081c-4e42-94fe-2d93b13eeb04",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c83aad2c-50ee-44e8-a50b-35404db20c34"
                    }
                  }
                ]
              },
              {
                "id": "9df90cd7-2c79-4903-bfa6-baf39e584c54",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dbf523d5-2590-4fd5-9464-68c211988f0c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9d1a0fe0-28a6-4a5e-8016-5b99f3960431"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17af68f2-531b-46ec-a1b2-dd9055eb453a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f50d228c-e76a-42ec-afc0-507fcbb81ec3"
                    }
                  }
                ]
              },
              {
                "id": "0097fcd9-b6de-4cf1-9e72-047301a5c1a9",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1b24b0b-8912-415f-8a42-1d708392a266",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8e39daa2-5778-4bf6-ac07-1b3192552f66"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6dd623de-02b9-4902-81c7-6529c37ad7d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "29b2e570-e08d-43cc-9a4c-4ccd356db932"
                    }
                  }
                ]
              },
              {
                "id": "fb03f0de-8ab9-4f2b-92a1-5082d8795ee8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8fcade6b-405b-422e-a117-533fd04edb00",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ce263fc1-8b1f-4e2e-af23-8ecfdd260855"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ecf2764f-afa0-45c6-878d-f32f1170c19c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "5e5472c1-883c-4e06-9453-e45d7dd465a9"
                    }
                  }
                ]
              },
              {
                "id": "ff3c6616-151a-443c-b985-2d3b7cd2eed2",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "64aafd0f-3ca9-4a29-ad97-adaa4a42f27f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dc778455-3260-46b4-8ecc-e134e39c709e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f102d3d0-d16a-4e8d-8663-1c56ec29d5a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "6c83df3f-089f-4ce4-a2cb-e793f4f8a71e"
                    }
                  }
                ]
              },
              {
                "id": "24d70135-6ecc-418e-824c-2b5daae0ffe0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c54ade2a-344a-4854-a585-55883bc77bae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bd73f167-7994-469b-8242-152d933d238b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "174f241b-57f7-49b5-b6bf-78707ab3181d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5f061179-f786-4fb0-809a-205af4f080af"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5af881de-c723-4dd8-99e9-118794a16307",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d03eef0e-966d-4ce1-88d2-58930a27bb57"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e9db6201-bff6-4bb4-992d-35a765f52749",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "68ed6197-e60c-4413-8097-657a91a19ad0"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ae350a75-e9a0-4230-bb8f-57db0a60ab13",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d76a9fcd-9cbf-4370-aeb7-547960552829"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5658cc5a-a094-41b2-a717-4ae1fc4af889",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d39d5a36-ceb0-4bde-ae80-c68440b196db"
            }
          }
        ]
      },
      {
        "id": "8844dac2-caa3-4dd1-a9b2-a730f9ef6f4c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "df1a9b43-4123-44e5-b80d-e389879518d4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6bf1e52f-9565-4e1b-93b4-84d011478e91",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "40654126-34c4-4afd-b305-2c06b1be782c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1873a420-a7d1-4892-8497-0cbb3e12b1e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "637f11c4-7f42-40c2-b5e2-f17a3cd02bf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6dd7aed-73c4-4f6f-a20e-b47d0188ca1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe76df46-bab4-401a-9620-bfccf5c1f79e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3131e08c-7ab7-4e7e-9e71-b32ddb73ea56",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc9eddd-8f69-4ed4-95cc-3277e229a05d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c7d7d6b-95e8-411f-8b70-d6c0755cfe90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5c45c5-02ef-4a7e-820e-48e29113782e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d61fdec3-1bc4-4c01-8e8a-9845c7551db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da138d4d-5164-4d6a-9b24-e49569516a9c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3c4755-d62b-4b29-bb77-4d30667470c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48a3b237-6cb1-44c4-8754-0514b8807800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82df4757-66ac-4df9-8dfc-895569b6fc5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cafdb950-93d5-4976-adb3-ad51ae23ccc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f24974ca-583d-4c09-98ba-17c088c343ae",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b230be-b073-4b43-8ff1-3aa805985219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fecc394-501a-498f-9279-1e18b71906e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b90fba-f265-4b3a-acd4-b7bfada87c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c7c36fd-baae-44a1-ac6c-7a861c04c2ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a08472-02e9-43e7-b09f-c3b46c9c9624",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb468fd-156a-4622-9010-25683c49102b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ff356d4-3607-41bb-9d1e-a52359f43a17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8fba0ae-1f1e-4f4e-82be-db8d43abde47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "02e27018-95e3-4b37-b995-2e11d5e6bf43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "365e1878-50ad-4dc6-b1b8-fd41cdf9af01",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea14d86e-cbc1-4299-92ae-0e1d309d8185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1077c49-8412-4f64-9dff-85396810ed75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e894c4-b35a-46a4-aeae-7e62fba852a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "93c4c134-491a-4e50-833d-ffcc74156a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eaff840-1965-4cd0-aa98-f7bd0e94aaf9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4e3a65-2590-41dc-94ac-4dbbe722a1d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71e8517e-3f32-479e-aa7f-8ee92ca8e548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d84ba8e5-68ee-4da1-b32a-d7a3c9328c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "039b065e-d1d8-4ce3-89cf-e226d76a5706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b770a88-2b88-4637-9b8a-838467001443",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6fde61-d618-4d2b-8b0a-62841ff645de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1869f373-3112-4430-b0cd-9b8899bca06d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d608f6-de25-4640-9070-bfc2eb22e66d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2787fb0-4174-45dc-908c-a7def1c918ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28f2cc39-8d0a-4c45-96f8-d877e9c0bf4a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f1cbc7-8141-4f7d-b3f8-266824fdad42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8ca597a-34c9-4d9d-9dab-f509c4ca29ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c13816-07b2-40c1-8a15-e325779fa5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee5f8bea-269c-4bac-b6c6-e92ae2bbbcda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72852e22-8565-4e6b-8192-c7fbadb36a96",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f507cf-0b6c-4e7b-a649-7a5a5c0c2976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98d2f41b-dd9b-4476-9e8c-32ff3a42d465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c0a1af-ad4c-484a-bad8-5ea7b276d034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3bb8549-b6a5-4056-82b3-7ba0cf24e761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73299bcb-af48-4209-ba8f-68a11cadc412",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "816c0b70-4305-46e6-9ac8-7960af19804e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78e551f1-8e5f-4d4b-9309-c70a200a7cea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4737a58b-1b1f-41ee-9094-f77cf9b16215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "87a7cd37-e39c-46de-8afb-449788e368d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ee27de-45c1-4d6f-9e11-0c2651bf3dac",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c89e191-860e-4e84-8c8e-89790a28cde6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e450240-ec9a-4c57-ab88-350b51029261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c987aa5-a170-4dd2-9dbe-728ae1d5d17b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4c830743-66fb-4f54-a47e-5b3734038b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4416c091-4fba-4d77-8dc2-76bce8815e7f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6423bb06-c525-4345-ad8f-8874ad6f01e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "543e0b45-f5fe-403d-88e4-c25a96501b4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a1b3e45-d673-46e5-ac02-e498e716c66f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "22edbe68-3234-4a41-818b-5749ad4916c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a1e2d03-bd4b-42f9-9696-201a19f60a10",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "021e58b7-3f08-47c8-9bd4-43488adc2f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3c9f844-0bd8-470b-86de-1707445ba523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bee7485-6086-4b44-ae1b-a028ea59f60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "924e9ef8-2300-4bfb-a30d-399af06fe427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2138270b-9d4d-4cd0-acda-bb669fe7dea2",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a28d7261-0d2d-4c07-bdc0-4586c9a169fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d0b5f88-cc22-4a93-a446-77ce2f7f0570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e1ed1a-5303-4ef8-aaea-98fa8fd7a5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b488b8f-d806-40b2-87e2-8c417e4eae3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e316d8-8fd2-45f4-ac88-c21b34720a3f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9997dad8-2f66-4bc7-9fb8-72dda53f1a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "972cda7f-a8cc-4cf3-8af4-662c0374277a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ea69f34-47f0-4f3d-a193-83e32affaa35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e137bbea-e531-4190-911b-ced69f36f087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f42c17-67e8-4dcf-87d1-2d6215b5d1af",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9295417-7aa9-4cd0-8d1d-30c9cdb8aae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba705cc8-6bde-4af9-8d16-df2d96198c23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9e516d-d5c1-48fc-8bb5-493107f101df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fee122a-fcdf-437f-b8c0-20d65f1acbe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e517fade-2e2f-4cb1-8e09-30dc58b710a6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7402c7f-f61d-49c4-8ba9-5e5c406c648b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8130fc2d-a49c-45ed-ad66-5c21f1ad8007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce12c9a-78c7-4e43-8db0-1adc78e36c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "327c7530-d3ae-4a70-be84-64718b7fe6d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6354a33c-2072-4520-b846-f7702fbb765e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f974f2f-22fd-4c80-892e-fef1823946de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cb9de9d-cde7-4bb1-a8b5-edc6e2301e02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1732763f-0108-4997-9155-e084fee37857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa94e043-9809-48b3-b458-bda65e5be556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "841b8771-d5d4-4143-a984-a48dbc46c1c8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86417780-78c5-411d-a1f1-d437bec23351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e975c4b-7d19-4859-ae4d-8be056290e50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ec60a9-e9b0-48bb-a436-f05e578b51c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8915217e-a55f-4de8-b01e-6ce591b3a1a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c8b74e1-e294-4ed0-ae75-34b558fea00d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "276bb88b-8e94-42ba-a732-b703e17ccca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32ba0f14-270d-4fc9-9873-70c08f5566bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be274adf-8742-44e3-bb65-9e94b21f4e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "997a772f-6730-4e0d-bc3f-281e226917c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602d61d2-5d4a-452e-ae9e-97d34a1e4334",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a765ca-156c-46a2-b910-11d08bf58e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "238ac393-8658-48a7-a5ae-a8685df31413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fdf3fd9-cf65-4f40-b6b9-07792acb2c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab2897e4-228f-4c0f-a139-6a7357adf00d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ea8b37-38d2-4f9f-8fd3-4d0abef9ac60",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "601b4016-df88-41f7-921b-5bfaf806b4e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c0a6d4c-96ad-4e6f-b25b-0a0d1f314fa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89713b42-2b34-4973-856f-8933fb2be482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d21f0f8b-1e4e-4df1-8b50-ba7853bb9a4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c11506f6-b1a7-4400-8fb5-e83bae9b8d64",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61736fbb-e601-4708-8cf4-f5c3247f7438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df9cf373-95ce-4782-8f3f-1c74d9163b19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7f36fb-735b-4ff7-b7d1-37b999f4c1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb5b9928-df0a-49af-82d6-638e8dfacac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7f323ae-65ef-42aa-9376-28e6e44c93c2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e11f5cb-bb23-42be-b249-aac34749c526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddb10ee5-48fa-4c6a-836a-45f5ec5f74f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b9db86d-2553-4a7f-987c-757b509fe436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02eb99f5-13cf-4b11-a7b3-54f36d20b207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "498d0080-3f1d-481c-ad65-ca9127ac6456",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d82b65ca-ce30-4c9d-a764-b875364789a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26feba7e-f912-46c6-87eb-9cdbc55aec00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbdcac6d-af07-4196-96c1-be7be0100a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c1cf08a-0f28-4890-9ef0-a7c400ff1336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b208071-22e6-4515-8222-24778bbabf93",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82059f4-3991-451a-a579-bc5f9adfe951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cc92c29-9d41-4891-96aa-5fdfa77b9c6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09da5f88-5882-4866-b31a-ff4a9b5bc73f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cc26fd0-7d4e-4726-a55f-65e7b1c1d853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5e15cc-1cda-4d94-bbef-1f7ce2e7a97c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34f83a68-342e-413c-89c1-3500968b4a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f549d3d-193c-4366-948c-5a5f1026126d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eef979f-b73c-481b-842a-ef3ee6b736fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "117f508d-4371-4e0c-a2c6-94e700ff52c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4692829f-4a47-4291-948e-6789ab5e7aaf",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "019f4345-5b4c-4538-a97a-a3b9f73f4f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7379b23d-a7de-4f64-b384-4b8a4d806c28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c252ca5f-dd1a-47eb-84b8-b44968b259b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dfabe13-2d89-4ea6-947d-fe283c228507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ebd4e3d-084f-4540-8c9e-ea89ef6b3eba",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f3ca961-80a6-442f-9082-beca2ec4f24b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc6acdb9-afae-4b26-8f58-00ed455e2f5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27141dec-64c6-41aa-bbbb-cfb4c0011224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6fccdd9-2dda-466f-959d-aa8d8546b3d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6bd67f0-70cc-4db8-9a98-165c6ef55935",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e31e5562-6d1a-45eb-a987-fcd5364e13d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a61d677e-1561-40d7-b4d8-4ae037065f72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b9978bd-82ed-4146-9559-b917632c7ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f090873-1506-41e7-824f-0bb01144520a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a77c0b0d-0dab-469f-ba83-55402bb7620f",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6159ba9e-6864-402f-94e8-e4390cf20293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee93e58b-90a9-4d9d-90cc-dcfbb80ffce7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fbddd79-2c75-4c5c-bf09-72999aa28ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47c798b3-578c-46ca-8566-f5ce9c015b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fba419a-38a5-4276-af83-20c0b730c5a9",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b86382-27c7-4825-8940-fea41b170a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0df6bafb-2805-4a13-b436-8e8d70ed3867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd0fbd2-965e-45d4-956c-50722cc7bc8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b27296a3-8b07-47a7-98ac-f562744c9ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad220ce8-e210-490b-92d0-256ca4494cb9",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "485e0a9b-8dcd-4921-8b58-2163765c95c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb6fad65-e2ef-4c8c-98f7-c151b479fc3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9633d499-1874-48c0-bf08-001d737cf9ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2a9c413-66e7-4248-8890-0e677ba74240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b377520-dde7-42fe-9143-43216d451279",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b989c68f-c5ba-4bc7-ac18-08ae3417b29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1941ddd3-3dd7-4a98-91ee-bcd117e5a889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad067f8-8ccb-454f-b6d9-296f00a37546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f38113e1-33d6-4b6e-b709-540b9ca7c46e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9fb1334-33f5-4ca5-9f0d-d154c1adc5c7",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef09b01-bdcb-406c-b463-ea529378cbd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cf517fa-f0ab-46dd-a9a3-df760fa37fba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b901a5-4450-42b6-832c-45a1610e043c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d11a838-2575-4678-b4ba-4a31b0f35a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3679157f-8cd6-4427-afee-3a18ac00d0a9",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b2d54a-d4c8-4024-882b-04f3484040a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6499deed-93d0-4a9b-82e3-1cd1493489ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "166412ec-15bb-499e-a6a3-8f06b0ca7e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9da51847-e21e-424a-af5d-10551ca0d5b0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ace7f4fc-5283-462b-8ecc-644969a6a602",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "18e9978a-d54b-47c8-a205-f3f5799352fb",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7fc9191-d7f5-4279-86dc-d133392d0a1e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4422ff65-5350-4f5c-bbda-5ed7383b6533"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc6a026-6201-4f26-b4f2-342aefed12a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cf0322c5-d471-4132-8a0a-c6cec0765d97"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d5a415c0-433b-4ffc-ad29-46f6d7b3760a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd8c6e1b-1146-4933-94aa-28ec4fbab41d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3342aef2-8f8b-4f59-89e0-cde93681ef37",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5b16b930-bfcf-4e09-bc51-ab76155fbb93"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b93214cd-941e-41d1-b283-ee06a6fe9135",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0e4e1823-770b-482c-908a-b5e208a64107"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1811dfd7-be2c-46a7-b071-a9bbaaaca634",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "96e5c78d-f806-4702-ad82-f89f8d277d7b"
            }
          }
        ]
      },
      {
        "id": "8100b961-f713-4dbd-8417-a1452f919c1f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c20c30e4-7af7-4768-a55e-e0e5fd082815",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aaad2f55-7a6f-45d8-bf41-62f92534b461",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "aedda05c-a379-4198-ba1c-436a978de60a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "973d4cc6-805e-49ac-aaf5-7228ec10903b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13ab10ef-1eb3-48d7-acfb-df68d4022707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f7e8074-79aa-4255-8c4c-36e13adb174f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b4d0fd0-16fc-4f8a-b896-00fda02a39c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "728b714a-c579-469a-86ce-f8aa46a588b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93aed1f5-87ac-4401-9d22-39fbfa210433",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1613d1c9-8ed2-4811-8259-eb2e4b384208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b983ce9b-ce56-49f7-a1bd-6efcb832e287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4295bb86-6256-4af9-86cc-6e26baddc1a5",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbb47a55-aac2-435b-b7fd-75b59fa57cbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0d76844-056e-444b-badd-4c364eb63042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0649c611-8ed3-4570-a91b-903bd0a2f486",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a09e309-b24d-4fff-851d-31b308cc3dda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c353a1e-0902-4905-98a0-386db9eefd92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "739713da-f26e-4218-a0e6-d279efd2df39",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d24d30f4-c8bb-4ced-a5a4-e91112ef4e73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f540523-7e35-408d-913e-6d4957355a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3d572c6-8a7f-4754-965e-2a981929be9b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb7c24ed-ba6e-4fd1-afc2-8407e8b2d603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0085457-4b69-4b33-8851-d9db5277a2a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1562a8f-c8d4-4046-ae2c-1403d688d85e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c569742-59ed-47d9-9778-d699d2993c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d9476c6-bf4f-40ee-a23e-79c35847eded",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e0a964-e071-48df-befa-9d34a5f3e54a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "174df759-d07d-4eb2-98b0-d306cf843592"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4270d15-4dfe-4338-9bdf-debad6ac49bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7c837a4-3e60-438d-acb7-04f926ec5c41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "762cfc41-a064-4d1e-8ef6-374dea6e0230",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71e72059-dff6-4248-af61-7ad20a0e371f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40dae556-f40e-4cb3-8b61-afb22a3e7ebb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d104395-1aad-46cc-b1a9-0fa652e81d87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57135c44-67f7-4b89-b026-7defcb48dcf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd5e5acc-a9e7-4735-beb9-6707fb66a1ba",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b0c9d1-638c-469c-a8b2-f4d5c6340161",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "212739d2-a884-407f-900b-4b995e9cbfc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e9350d-885c-418a-b5df-d4f5c9d83a49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8f268e3-aff2-4088-bfed-d7ca279f9983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb3fb5f3-7ac1-4bee-98e1-31d81d73166e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af51bde9-055b-405b-ad69-82aaadb80785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e85bc979-0a85-4c07-9db2-45ef057fcaa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48138750-01c6-48f1-82a7-2e4515078c61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfce62ab-02ce-45fa-b47e-ab17732592ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9edf263e-5d84-4783-bcea-c9cef9547d0f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b6b8a5-b1f8-4efc-b08a-650c3930d7a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41c2b0fa-29b0-4c78-a786-03ab24c079b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2a615e-289c-4159-8487-5245a29c140a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a60ff1e-4227-4193-8444-245a6353e14f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b8473b-1b13-4a43-a201-f96076bc38b8",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "761738c9-61d4-4946-b3c3-6d61971bc28c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f75ce7c6-aff2-4ece-a852-74567669ad78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c44a29-78d2-4ee3-894a-d450659e2e80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e4c19a4-2a85-497c-8b80-171a823f9552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27cfa82-0f99-46e5-b79f-82482ee2892a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb76fb7a-f38c-467b-965b-b4ab88bcaa4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6aae2d32-5c69-4d57-8a0e-cec84d527de5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab9ae8e-e244-4a50-a6de-52ceca8dddb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0ab23db-3fa2-4cad-9322-662f033acf46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e5fa17-378b-4196-aeee-328ab9bbc0df",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d62c7c9-b33c-49b5-a2ca-d69d403c32cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89ead1ac-35e7-4df9-be44-c8e81ad3cae2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47dd75e9-cb9c-49f9-ab3c-41726421202f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f11e2f35-6cec-4ad5-b06c-c5b5bd64597a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04c1643-0725-423f-ae00-4bb18b5da32d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "212d985e-bab6-4e1f-93b1-bb9aed4a1f81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89501eca-77be-4300-90d8-4d2deb4b75d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa2c139-7879-44c7-a9d3-03254936375c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c4b48df-d758-4d30-a09d-a3ea71a3ddde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7400db01-f91b-44ba-8cab-d673d7b8859d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbee81ee-4e27-46d8-80f4-c4aca223d152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b4ff1f2-92cf-41f4-8edf-c7786e728e49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5686b4e4-5171-42bf-bf47-fe486d9b13d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2667d7b-c3a8-43fa-b760-2ab74212e4ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "037e0999-43f0-42f1-8be0-e5da19def074",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e62e360-32f9-4e9b-af60-1819e9e36e8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0ab5f42-99f5-4650-be24-a1f8241fa7e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd8fce84-46e9-4f9c-a6bc-0ed10ea355e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c14d6b5-118f-476d-bdf2-2db57a3f6288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e0e81c-6019-4fdc-bca1-38b3c97980b2",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e337294-c0ce-4169-bc52-2a3d068ef6c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5946d4ac-81f9-4653-9406-6e243fff2eb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2edaafa1-4e65-436f-b422-1953b0902186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54c406fd-a13d-421d-8564-2dbd7864265c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c3b9ffb-8d1f-4676-8515-2fc3a9d6c0d9",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd52c68-8c0e-401c-98b8-ba1d6fac5d09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1737dde0-dd8e-45f0-8820-c1761f42026f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d1ec53-b973-40eb-ad59-72b4d0d32290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79d8b184-250c-4d36-bdc4-3a877f21ee78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd83684-31bd-45a4-bd89-fa4abc0555c6",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fbbad87-2c4c-40f3-b7ae-eb0ec8c63222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dde78b2-57fc-4d56-9e8f-5845f9fcf8bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "717a1e31-243f-4a05-a674-cfc5e87e4da0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5de95c38-c65a-4bd8-9fbb-0c2ec3d3641d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a578538-0cb4-4c27-a0c5-77f016617c99",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a50dd2e-911c-42f7-8a43-03982d1fcec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ab7a6e8-6fb3-41ab-abb7-a10ce8be0a2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6745720f-61a8-42a0-af75-c1da60381b39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "141672b6-f281-45aa-8e81-66c42bfb6387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a74a9ea-6e88-4db1-9ab1-155729a382fb",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f0ca075-bf0c-40a6-954d-bc044de66bde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e35d962d-5851-4cee-b174-20ea6a5a3246"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4fc0da1-9170-4150-a593-2ff4c454de04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa4565b8-a87f-4569-806e-ca8a136bb2bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c09a0901-ae5c-44ac-8e6c-f178233fd7ea",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8134346f-acef-44a2-8aff-38879b8f6ef5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f45dfec2-e556-452d-9d38-609333617b69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb331519-a9a8-48e3-9995-06049c092893",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f30c075f-b77a-4b97-8b2a-59f5a2081c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee789a0-fc01-453b-ab8d-3085e07e4a04",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c9d55f4-a255-4bf5-8868-30b5b8e385a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4dd2a3c-f667-4b26-83e3-ddcecd4965e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c88ca28-7e0e-45bc-8556-1470da725e2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddfbe517-4f04-4612-8dfc-07f91aaa318d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a47d6fa9-002d-4da7-bac4-c33663a48b72",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "155e306f-a70a-40fa-ada6-0525cc2c38ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe32c1a1-6d85-4935-bbf0-80f0971027d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "622b8ea7-8c4e-446c-95e3-30104d99b2d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20ac083f-dcac-4c49-a1a3-bc05734f7805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbea3a56-1005-4734-af05-cb0ccfa5d7f9",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065da393-d13f-4634-986c-91d3d55cb91a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3119c391-9713-481c-b774-2f04fc0d323a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7f0ff0-3052-4da1-b0ab-6ccfa71b0f65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56b1a805-722e-43e3-98ec-09a09f4f6496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46102a0b-f103-421c-85df-efa695327ce4",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c3963a-2bb8-4552-9693-28356be19b7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40fa3047-030b-4b67-bbfd-3617a5618834"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac71f24e-a825-4f52-bf43-d343e6ae155a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b55f260-dd52-4df2-9f6a-b4dea7e4e5fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0273e79a-045d-466f-b452-d850a2d415f3",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49693c5f-67a0-406d-a10d-b8474c4945e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08470556-994a-4ec5-9677-f2d6ddfb4b63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e04375-1b82-45bb-acba-fdfa98da5240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82826c7f-7aec-48d5-acc5-b15b81e45798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbceaf8a-99f4-4d2f-a7a7-b7c32e7dff46",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8402bf3-8cd5-411d-96ad-4adcbf52c27d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f740f57-287f-48e4-bec9-85070929314a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b61a86-204b-486e-a6c2-84cb90f78a13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b21be001-78d4-431f-9208-58469f921d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3044e3b3-25e7-46e0-9a1d-f584eae67da9",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "902971f7-1d3a-4424-85af-ff6f05372cb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9025ef51-f953-439d-83e5-53029ef452e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b02b3f44-d13c-4238-97ac-93c0db748bfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7b6c806-cd8c-4aa1-bc22-e3e0388e4896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9593b306-81b9-42d5-8a79-a52282370a85",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f45b683-5b0e-4294-a464-f70486543925",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90863dbd-af1f-4abb-92f5-d41a8985c1ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6c6c26-301a-4b7f-aa51-5e6d64b96da3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a99682f5-c94b-4c29-a85b-506744c2aa2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ddfee3f-6c24-46d4-bd75-ca193223b761",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b695ef95-7c9e-4b9f-bf82-e5d7f53a690c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7aff4e65-9183-4357-9f6c-093e80b0494a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73430e86-20e5-4076-ac12-313c974ea9b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6135032d-9e83-4435-8d1c-552bf2f8e811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e408aa3-19b8-40ef-b282-2fcd619c64c7",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b5bdb42-913d-4e51-a369-dcf221e6ba0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ee40133-88a3-4cf8-8630-bf05c2c0999c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e89649d-4d1b-456b-9ef6-c874f137d280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1f64e6c-4dc3-4b84-ad7d-c15a712253ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dae875c-dbf3-4ad5-b733-c68140d87d56",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe7b21f-de17-475c-91b7-300fd6877aaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38cd3c16-1dac-474f-b435-a5551c3939be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4928d06-dc34-42b8-91c3-06c406d93d61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f3f026b-4d53-4756-abda-fd90a776440b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195e07c4-acff-4e7b-8c5b-5635f5f99aa1",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "895be817-9ab2-403d-b85b-b5a510abae18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc741b90-7c57-49a4-a4e5-1b809c513036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9656ec69-9482-4085-afa6-9345817caa7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74674eff-3f86-4299-8a10-30556942b5ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc4867b-4b51-4e4c-9ad6-cd042723a60f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb06009-41d2-4673-b2ac-126984ba183b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55891520-3877-4121-bb5d-09fa9e1b0314"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "015185fe-1969-4d06-9950-c5456ab234db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e24fefb6-123d-4056-96b9-ef22fa753d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b4cdc01-96eb-4f8b-b0d2-008e80a77007",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "547c935d-97e0-4e64-bbe8-64598985f5a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6375731-814d-43c3-95de-178c50c80542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da65391-a8d7-4ad8-836f-a9c505a93364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0896146e-99fc-47b4-a6b6-5ee9e7d0d2b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b1ca004-2444-45a7-bf07-06a2a8cb5bdf",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d56eed9c-4034-4a52-a6d6-80b932ed8b13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7da62b0d-9079-4220-b36e-0411683ac920"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0858271f-2746-442b-b868-1fc38d85298b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dac3d52-eebd-4e2e-a3bb-b14405c58da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf6ba0c-f955-47d4-93e3-79a818dfb138",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf76e4f-6227-489b-991c-6f77a5247fa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dff4171a-144c-40f6-8580-5a19b2c24391"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6148eb63-cf0d-40b6-8937-cbc46f3731d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4d7f63e-595e-40ba-be4a-484d85e6df2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0755ef79-86cd-4a22-8df0-7a3ad8061cb8",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4665b94-04e3-4051-8c1d-237b33c4a5a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b70c454c-188b-487a-9c31-c6e98480d65a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d2ad86-6c62-4df5-9eb0-f626abd03820",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cad6a649-b102-4ed9-84f9-87d8eb5fe0a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55937f8e-e1a2-4959-8b82-4160b4bb369e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ac6dbf-4b54-4988-8b2b-60247438b030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53715526-3a62-488f-ad6f-4e9849a5848e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0353d69b-46b3-40b1-b36d-6d0b08a3d8fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6ec93b2-c360-4b37-9cbb-ca9e146355fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc37cd3-0c74-4944-837f-0cee97b451bb",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b61acbc-b12a-41b3-8633-05f073718d15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5f585e3-6c00-480f-958a-37f2d611f243"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14d065f1-550e-40ea-a400-8c588f1a0f99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d96e1974-6a8c-4dc9-969a-30932e8e4aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "072c3c00-401a-47a6-a081-cb7c77051833",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d4450d4-3327-4a1b-aefa-a872cbd1527e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0249b51-40a4-491b-9514-6954920f14ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f21703-7675-463d-91dd-dd8d5ae8671c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7205138e-44bc-4f75-999c-edac02dfbf7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d08639c6-7464-435f-bd8b-4bde235deb23",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55bcd7aa-7f2f-4477-9e5d-fd5ac0e05762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00b6d49e-769f-43c5-b6f7-cabed6ddd260"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "125743cc-9994-481b-8bdc-8e307d2ea446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3de5adc-e0c3-4cf5-96c2-6978c33978d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "127f849b-f56c-4084-83cf-fef269d187cc",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85377899-b090-491d-9ee6-dbccce2ca935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62c96cab-b65a-4dc4-904e-125d2c8df254"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecea64be-797a-482c-b70a-e94567c16fdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b31a1d7-9cbc-4d52-9cca-bae851de7a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476ba7f5-295f-4022-af11-1eb48729a70e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1567744-0c83-4273-b177-10a9f198fefc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16de74df-6c11-432a-8314-b223fee8bd50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a1adab-e763-4d62-9084-54212e985d90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f688aca2-137f-471c-9177-472486da4db4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5c346d-eebf-40eb-86ac-00d5a7924f64",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8a0291-34c7-4125-a4a4-7f0085af84c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0471ea9f-0897-4bf6-8fe3-9248965e3034"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4798d83e-b9f3-4f3c-8cda-c75894b59276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb6963c4-bd42-4284-a863-5bd2a1001965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c32d36b4-458d-4310-964b-9b986893961f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a404e0-94fe-45d7-a17b-6bed1a273557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1232fb83-e751-4884-84bb-7ef7d40a22d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77224497-a7d6-4587-b988-4d3bfb8296fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03db7800-f60d-4709-8069-0be152c3fe20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fbd0c82-c4dc-41fd-a442-dd331a3e0706",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e86153fb-c8de-4162-b97b-25bbcd055563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1795b75f-672d-4f46-9b5c-faa5aadccc20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a124e667-346f-4775-bacb-72dee5413ef2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4093df8-6b8d-4314-9ba9-377b58387aa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90686509-068b-4882-b910-c5e1682bce46",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c945362-3e51-4b03-b340-866fa19e66be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "159a505e-595a-4be5-85e5-7f970a0844fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5f88f8-d3ed-4ed2-bfe8-559a83c65964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5003accb-335c-438a-bffb-341c41116a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02be6c45-de3c-41db-b036-0077ed51f32b",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fef3370b-0ab6-424a-9cf5-88153977a333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09fcc740-f71b-4c26-b925-a0664b85193a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92451f39-eba8-4b90-b266-32c58ab5a9ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f74a3e-0d67-41c5-bbf6-cf67810b8026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a0b151-a37f-44d8-9c3a-0065f6f8826b",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c59ace-828b-4ad2-84b8-0e3e2e4f1726",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb541409-3782-4c93-af22-699c31b59ef6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9c494c1-e19a-4070-b2bb-a4cf083af7ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "466a44a2-74d2-41dd-be1a-0461196d25e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c0a1836-2af2-495f-bbb8-34f94c75c969",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2af7b02-f803-48dc-83e5-156948068338",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3bbc722-787b-4f1a-a073-6322f3cc4552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4370b357-3555-46d3-b0c1-8a712e1b41f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "153bc09b-f8d2-4805-9f9a-bfdefb5727e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a3e1a53-d148-4f99-8502-e232bef2f75c",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "736956b3-1147-41fa-8f6c-a8d810b3f9f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daa52c9c-ce64-42a3-884c-04e1a8fa0815"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e3c5c5-c78f-42af-9132-1c5429298a44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cee2fa24-b570-404b-8fa0-2aa60c0b5271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a12f7c5-a0b3-4a57-a733-3020cca9361c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a18443-b042-4e86-b7e0-67ff834be0dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c381729b-f4f1-49d1-b822-5fc2745b2aa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe88bdb-7f90-4358-a512-972c91a18177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b41bf7ac-9a3a-492a-ba33-c3b617b25192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c586b464-964a-45c0-9bd5-344ea42d5c9c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8036298a-bab2-4449-8bed-0476788cf8c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23aa6257-dd4c-41fe-9f1c-3d324a158e5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0897729-59b4-432d-a4a4-a345a137389b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f7e1cc0-84c8-4783-966b-f249c2c15553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21425847-7c89-4bb9-b6de-be4dc1737f45",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d991386-dafe-489e-b01e-c7892ce8cf97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb841394-ee75-4040-9d66-01e08790e2a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e23b06d-fb71-4577-ad35-f449a503648c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97166179-5a27-48b5-8199-6ac6f8770ea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f97394-6802-4142-a1a0-c52412036f75",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97bb6af4-05c7-4450-9716-1d8a0c34e1e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99e7e43d-fff2-46d7-9a5e-7cfa5bb5cb4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1792ea6c-c03a-4d39-a219-b6d7be84fe43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8cd1b6a-0ba8-42e2-90b4-ac1f841994c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1611b718-a4d4-4ace-b726-eec2d8e1e02d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e1d4c1-aa53-44fb-8d21-5925396ff255",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14d1eb81-303b-4fba-ac77-028cfb9c2239"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44266203-4788-4e62-ab2b-18b2f6a4fb20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff4ca986-4b20-4342-8f07-2a3594a994e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82978a6a-5b5f-4865-bc8d-656d0e716575",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51487cda-bd9f-4129-9396-a6b2533734d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fb46da5-a60a-4a77-bc3b-668ea50950b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcfdf579-bc74-4511-8ad9-eaaa1ffe775a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d47d87df-87a1-40a8-92c6-34a0c2c18a9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "724da3cd-6828-49ff-9929-dd9e9befcbd4",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ca539a-d704-47b5-b081-7c41af9bb1e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fb5b6c2-fb39-4dd6-b394-a04debbc8f70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f068ec-76ae-4272-b74c-fb367d21653f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e076aee-9152-417c-8bff-f20ba34e82e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f729091-cd1c-4228-9145-f08d9038140f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf4105f-b05d-4bf4-95dd-3ead5e198735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d83cedf2-5501-42d8-b4d2-26d5dbed5bc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a1e007-316c-427f-a202-ec8003c37278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4db14ab0-3435-4a2b-aaa0-3a682508e6a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04e8a12-472a-4b95-a96e-112f89cb1799",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5f2e12-9361-454f-8db2-0cedd3063930",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a9d7358-bc8a-4014-a4dc-e84d63bb166b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a7e83f8-e9ff-4950-90a8-0a14e92959b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e198911-619a-46d6-a57a-c32c9ca38105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "033f9f7e-5d34-4c65-832c-b3a17741ea10",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e7e0427-b1e0-4926-bf45-4f0c9945f9d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72ab94a1-3cb9-4bcf-8f1d-6420826b54ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df0abd3-fec3-41f1-a7d1-804460786083",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcbd0577-6792-4e7b-8bdd-47f7a9d84f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c60849-559d-4060-b41e-2b60478ff8b6",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "379372b2-9c83-44bb-b559-a20619e2d58d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e609e8da-4076-4897-a7c2-fb2fbd819f47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce5043e4-9d2d-4c1c-a473-224dd21f86c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fed0e08f-0bc8-42bf-a104-138e11d72c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f77ca108-cb43-4132-8999-eb13c964b327",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d903cd8-7889-475b-868c-119b9d32f334",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65d7ff88-b6ee-4533-8baf-4d5a4eea5885"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f91120-cad7-4ec6-9426-f29ab44be95e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88324bbb-d6b3-48b3-9dfc-d6e01542d2b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c741a9b-bc00-4ff1-b577-eb725792fbe5",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d2c7caf-d9cc-4d21-8ebb-5d3fb2a2ba83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af917115-aaa8-4958-a88d-93a9635c3778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dbb0a6e-7f5a-4afe-8535-556abf2c0251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c735a597-d51e-4a7e-8b69-c417240a5500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4142ed3-d778-4e22-ba50-833b85a45bc7",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f6cf7bc-82a2-4469-955d-bb9cc3b3407b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f3b171b-57a6-4887-ad76-7745ca50d178"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "602ac2de-89da-4ab5-8ff5-14474139945a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7b15d62-187b-45c2-bc79-714df8a67670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267e0c5b-a9ae-41c3-a307-4fe326a22b1f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5859bc44-bdd8-4b72-bb21-e00affcbb83e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78843d49-d395-4087-8e6c-eb8f3d2de061"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4bf3ed3-3d45-44ad-ad66-e8bf49847048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f68bb377-3767-42f6-a935-520852ac4f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc77a13-62d6-444e-947f-1b320164e44d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37effec5-1ceb-4386-960c-5e7efc2db7e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "827f6cda-9302-47e1-bec3-a5577d2c605b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e8d4a2-1956-4326-a314-9c42c962b172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1576abb2-30fe-4300-80a6-dd791f01d8d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ca63b0-839a-4b92-85ce-8b3ca5cf0ee2",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3328f51a-5ccb-4e18-a4fd-056d02b4ecd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58d6e99c-60ff-4ea6-9864-e11ddef7662a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "358ef277-e724-40e4-a316-0872c0b24971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b3e65bc-fe36-4e5e-999e-0cd82fd9386a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c30a4f93-a098-4280-afb5-a797c04ac442",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "084c6020-99ca-42e0-9a30-29d4d684fc06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b2cf4b2-ee57-4e81-aab7-4c49fd168de7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23531989-1edd-40e0-8bce-266af263ba7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5de279d8-2867-4d9f-9cb9-2dfa6470fd1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e18e7a46-cb13-4fd9-8d78-c8644c06a34e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b747662-7f15-440a-bd04-a476c62e816b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efe25c58-cb97-4c10-bbb2-93ff1d984f4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6bb4f46-c01c-47f5-9018-c54db7d7fb01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fffcde5c-b637-433f-bf14-7ef1f5b9a264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb3a118-17e6-4c16-a6cb-54ecf1f6c7be",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b8416d-d40c-4e55-b2ac-c080050ae84b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18616864-fd4f-4e7f-a58e-9f8e2e7a6784"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be3d6eee-13e8-4794-98b5-96f9db740961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "361fdeea-2b82-45d0-a4ce-f59038fd84d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4180882b-3627-41be-9b0e-730bdb411079",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc920c0-68f8-474a-a5ab-b32433813c2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2338a77-32b2-498b-ac6a-3a8babb6cd5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aa9b261-53e4-44ac-885c-1ee690a60a7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61825de0-ebbc-47c8-b68d-06ed3b90f4bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaba09a1-25e7-47f7-9fc8-c59310079d2e",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "461fa3c5-0675-4e5d-b247-7cb09fab5436",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96c62539-063e-40a1-9058-af6ed56085d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d01488cc-40b8-48ca-b1d1-08aa468ccb89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "107f80fa-eb68-4872-9eef-10355fbda15f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d579ddb8-139a-4438-8fa0-6f7a05588793",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2094fc97-270e-4b1b-b301-1b896fa03b02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a34e01f-0063-4f04-9c78-e47efab6d2fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a781b8-1905-4a6f-88d1-8a55cf7fb79c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f87b2ac8-6211-4795-b9ad-daa6090ec904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572714ac-e428-4f30-aaf3-e3b27e9b3908",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d4ab19f-8788-4f8e-8372-55c27265303d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "765eeab5-9e9b-4958-96f0-804fb0ddd897"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "165138dd-b789-43fb-b950-ae6805ecfed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6748a24c-1cb6-4668-9181-b05e81657bf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67788891-881d-4565-9219-826412e2de83",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea2b330e-607f-4f13-bea6-314400db4132",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c61ebee4-21ba-4d04-bdac-8b5322ef22cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f6caef-82c4-46df-8932-0bd83ed398b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8212fcf8-7395-4879-bea0-6b5777119802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a1b8b22-0a32-4bce-899d-af5d88adfa82",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1eae7ad-a4ee-435e-bbfc-e57486bbb99f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08fa2d4c-563f-4d6e-b286-a7704b3142eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "551f88c6-0f11-40af-8800-948c1f8eafb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70090a1a-40ff-49ce-bad8-254f3278f9f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "610b65ae-9aa7-4089-8684-e247fb98cbf0",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "506ef614-bfc5-44ba-9e16-4993a37fac01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19a41604-c250-4749-91f9-4ceaff797ba8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e465c0-f4e5-487f-b315-06f3be4db9a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f33113dd-3195-46d5-9755-67c62824ff1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef62f4ee-9e9b-49e7-bda6-6f66ec546655",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0809d9-fe3c-4dec-b763-01e45a9aa8c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df405acc-7ead-4a44-9936-b47bc7e8eb2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a12607a0-6f12-4622-8eb8-8305f2c81313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd56de07-ffc5-43d0-bd97-16961ed9f0cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac112ebc-e538-42fd-bdc0-2855cd6ead52",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86653977-9768-4090-b2b8-dd54c8c2cd7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37c5f5be-6d62-4f5c-96cf-aa6622286257"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1d5ba6-6557-44c8-bdaf-934d9b845d44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3ae7ae7-83de-42e5-95fd-c515b8133bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37369a0a-4691-4ee0-ad9f-913ff043f322",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35dfd1eb-da0b-4ab4-8004-7bac6bb0f0fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "222562a9-6a5a-4f4f-935b-37e4761d991e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e7f2327-3d2d-4c41-ba2b-7d77d19054a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15c5581e-115a-4740-b389-5599bbe7ccb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b45873-4c0d-4868-8a80-d87d5a4d1687",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e6fe46-69c2-4d36-8476-ef86ba2a52c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d059dd3-08b6-4821-917c-ca95ced6dae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "312da94e-b21f-42f5-910a-d552dee20405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fb7ded2-ae90-4c66-a524-5bc426eac758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e81143d7-c2ed-4d6c-9bb8-447cd37e6f4b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "158ede5c-aab4-4dff-a3ef-330d5354f73a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b7403af-435f-4efb-ab92-d0da6cc4e525"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b6dfd49-64ff-4677-9c00-11320ab7b41d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53bd7712-3bf8-4339-acf6-47e13eb82493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "878e25af-35ca-48d0-b8f4-eed0d812dcc1",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "693fb461-a7ae-46a9-918f-2ade76e38646",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73a9e234-7a7d-4e4b-9711-2ae7ed4cbf6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c3e839c-8807-4ec0-88eb-4113028d3fea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eb66e2d-4b93-4a58-a800-2617f389f9af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb4a525-9839-4be5-998e-d4d331503ee2",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00886755-9f40-4135-a004-f5b5804f0a5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c386144a-3c17-4e04-8c54-2f2072724aa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc748ce8-85a1-4162-a78a-3d68c49d183a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfd85357-3677-41d8-a5fe-0041c9827518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1c9e10-e611-48ea-8f56-d401811c512d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1472d1a3-5525-410b-85f3-e4e7cde7eb89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af226946-649e-474c-976d-600e569b1ec9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4c0df4-095c-47dd-bc50-605bf508eda4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ade618e-753b-4e31-8061-45db5b071d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff767a4-0416-45f4-9b98-7ca83ad1931f",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89abba64-9a40-4c50-a777-9fa267c290df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f4f7740-f8de-4d97-97bb-f15b75d0eb6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a61a65-5537-47f9-afeb-d58c63927519",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f934884b-30cb-4fa8-9fd0-0e78d284f0dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "006660af-7a66-4c60-8506-ace3652c3725",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad78b36-233e-48ac-b24c-7355308aaf70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a31dfdf2-c851-4c22-b1b2-7eb12b804d1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f797ec6c-5e71-4820-bef3-dfb5385ec486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dad00aa4-1163-4104-b3e7-b44505e3c529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84090c78-02a1-41cc-8e98-201ed060c828",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3320931-2337-46d6-a2db-48c459013111",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff336ca7-407f-409e-9f62-60f5b452a723"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d9a3e9-88f9-4a87-9364-405c5f73e386",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0987f338-517c-437c-b5fd-5339168eda8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6009437b-d447-4c52-a176-d64076178e73",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca3111a-83c9-4543-a550-0b4383d58d20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3206901c-04c1-4857-a14a-b7376f8b3aef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "924f4494-2aa3-4586-aefb-9481a72fc315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "723de473-572e-47be-a67c-c893bddc807c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d86c5a-1d00-4cd2-84a8-b7c6ee850847",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eacf26d-055e-4009-a8bc-1f65d1045cae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcb37b42-d5ec-4a4a-b553-c48eb8f7ece3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6945d75-15d3-434b-aa8b-17f3abdf1e39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9e7c9c5-438c-40e8-b9ba-e6a57e90af6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f03adb2d-131d-4d70-8920-560e99193a0f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e9667c-935b-4d59-be72-f26fc9581e0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd021ecf-b55b-4d8e-8b20-30c592cb7635"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37144219-a1fb-4ca8-b086-08bf5a1fa45f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf800e34-2513-422e-a5aa-9b3433636770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5ec95a-bf26-410c-a9ec-6a38f31956bf",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca96a30-c9d0-468b-95c7-e538770beb1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c63948f4-2f50-4f16-8ae3-58e043f2eee7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f9a3ea-895d-48fa-bc5d-ae94b69053ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2f1dd27-8327-4619-bd33-4a870a12260a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0b65be6-c558-4b1f-8832-569d8edcd87f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3179e463-583e-4c57-af37-0def837bc2d5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9338a861-f706-4211-8e4f-c64feef38840",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f2fe4254-3e11-46ac-9657-f0fa7ea9fd64"
                    }
                  }
                ]
              },
              {
                "id": "7fa1c343-2026-4a90-88c6-4cbed2049447",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0c1b8cab-c8f4-44ec-b69f-6f8ff48f5ea5",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d6598ae-d794-4d4c-93f8-84154f324d72",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "aea8f0f6-6d15-40b3-96c0-c6607ee0850c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68bb8f60-8828-4e5d-8dc9-7809b6f19062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "63296680-eac8-4b74-ba30-4e22f25da176"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79f86bd1-492f-4ea5-8c00-fe2f012e4103",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b799ee25-5729-46f3-ba06-13af3e3c0483"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4aa04e1-d893-46db-acfd-868c25209677",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a842841a-73c0-4554-b7cf-2e1f353b4dd8"
                    }
                  }
                ]
              },
              {
                "id": "fc55c21f-7e76-43c2-970f-f5754032ff5b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c373ba80-2f05-494b-b81a-651f70ef1bea",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2dbd586-1936-44f3-839a-2a27209d7523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6c749afc-ac23-477d-959f-e027c10a0119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c1eb69-4aa3-4e57-8569-764f85c78e07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca7d9204-7266-46e3-ba55-4effd8a7e959"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "98be9b2a-698e-4cff-9079-4ce342008f2a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f8dd635f-e7ef-4e97-8f3a-7c67f219f90a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "87aeb183-900c-435b-a4e1-1e6aadd18136",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "55dcdb1f-3c5d-4d1c-8e8e-d411d06780e2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "edc7b4b5-8552-4b29-b0e2-eebc8df89ce1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09a17817-97a3-4513-8c2b-a260da5f209a"
                    }
                  }
                ]
              },
              {
                "id": "f1970658-beeb-4155-b056-9e5a9dcb8a77",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "88480178-9a6a-4388-a6d3-399cf15d36cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c48fc39c-35dc-4c8f-b7c8-20a270a3af81"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b0afbac-9bec-4db1-bd59-117389ff88d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a7cabb5-f9f7-4c0e-a98c-d7894285284b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "af84bd0d-7039-436e-b034-3640cd5730b6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ad770687-ea0f-47b9-909e-0708d312cef1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "92510b54-4b31-4558-aa37-ed89229a4b8c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a5551665-a3c4-4470-8eb8-ba88834aaded"
            }
          }
        ]
      },
      {
        "id": "3dd38ae4-b347-473f-9636-cbadda71c699",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ff934bac-86fb-46b4-ae61-be6c75f613ab",
            "name": "Negative Testing",
            "item": [
              {
                "id": "71baee9f-359a-4e56-be76-1be3e4b0f190",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5cbd2f4d-8078-44c7-a043-47ef35cafab4",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e4ca12-439e-45ab-ac59-6fd953acbd1a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ef1f70d5-65a3-4e96-96b3-fc30618cb715"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d32eb5d-a488-49cc-b17a-ee4e2aaa6046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1e414435-fc92-43fb-a375-c879564a7ce5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fac45446-4b97-420c-9249-6a881c37d845",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24fec8af-7e12-4273-b9f2-2e5c55b4a62a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "60c84c07-e5a8-4495-b4df-378da08d5440",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c72c4f3-322d-418f-a904-ca131c2c9268"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c99911de-eab6-4b96-83a2-c6919be10b6d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b1ba5647-290a-42b6-a22f-60a21fb75a54"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "23f1ec62-aa91-4791-9b9a-90cafa37acf2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0bac1ac6-7ed9-4739-8605-87bdda8ede97"
            }
          }
        ]
      },
      {
        "id": "fe7289d4-a1b4-4bc2-9abc-5bba58b92fdd",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "662a09f9-ecc8-4b25-8892-f0865aebc22d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "11d6c11e-b1a9-4643-b0fb-574e76bd7637",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "865d6026-446d-441a-97c9-29ea9e41c356",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5eb50a-7809-40d4-93f7-de43d72504cb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05efc7bb-bb5a-4b62-9df2-20ef75c7519a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3e44a7d-d634-43fb-9cf9-80bf123d5c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d5750d36-e9a3-489e-a9be-97cd291ab292"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "37f99892-b735-4032-85e2-47931d8986c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "288faff2-5162-4f2b-a147-a98b69178dcd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ce5503e-e715-496d-9e2e-2991c371b940",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad3692af-a76c-4acd-917e-23c3a88e07c2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "290a8f20-6608-49ff-81c8-141dc7a77202",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7f1da9a0-f83c-44fd-88ca-41f7d9273c07"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d880494e-f626-46fe-95bd-22ba4cdfaad6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ea67d97f-dd05-4d48-a3c3-953f6d4343d3"
            }
          }
        ]
      },
      {
        "id": "3836fe48-4058-4668-b9ea-555ebc42dcfa",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ff586cd7-46f8-4db3-be04-6dc1b609f123",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4b687f8f-3e33-40fa-94ff-eaa55b7288f4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d91fa9aa-4b81-4695-aa97-bf630883582d",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d8e5070-769f-4b0e-a268-44643342ef09",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61060cd8-eacd-46ed-9dea-308b85190cc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec50b3dc-8ecd-41be-a198-68fe98eeba1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fed6e221-5ce5-4763-a624-06012026b7f6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ee08038-5da1-48e3-a467-af69b4648452",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2e0c469-8471-49b4-bd98-bd7e213f6f13"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "112a732f-6652-40bb-9df2-61867e7b79ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d70d1ae-c75d-4bbc-8184-89b3678d0ed2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e56b0f2a-492b-4ef1-831c-1fc92d0a03e4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3cacd81e-aac0-48da-a164-8f640236eba9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0bb06c29-ca2c-4b1d-9102-02fdf3cf1094",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cf97655c-48ef-466a-bc51-8f3c4f21a66d"
            }
          }
        ]
      },
      {
        "id": "d89391ea-00cb-44ff-b3ca-2daee66d3a40",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b69f1c3-becb-48c0-892a-3d414662e0d3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e88a0047-e329-4c78-9d01-93d90d314e53",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "0ae3ae17-7616-4a92-9fe4-5628a32cf39d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "29746abb-bccd-461c-85b2-da4ad2d1634d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a6436d69-0ec9-42b0-b8af-b6add2dd24d4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 133.88095238095244,
      "responseMin": 6,
      "responseMax": 8164,
      "responseSd": 570.727245715734,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1717634244799,
      "completed": 1717634286952
    },
    "executions": [
      {
        "id": "c9eccc4a-f1b9-4a16-8c1b-65ca1c4c7568",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2b805e4e-6c11-4ba3-97e4-4e1197be3e2e",
          "httpRequestId": "25132fae-3fd3-42e0-aafc-6f86bd700af8"
        },
        "item": {
          "id": "c9eccc4a-f1b9-4a16-8c1b-65ca1c4c7568",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "546eaaf5-7c92-48c7-83ef-375f5f5c9c63",
          "status": "OK",
          "code": 200,
          "responseTime": 40,
          "responseSize": 0
        }
      },
      {
        "id": "b61ed8f3-880d-4bc3-a565-611f7322e721",
        "cursor": {
          "ref": "a2b481c6-e9cd-494c-8b25-0006f244c3d1",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "83dd16d8-8e06-4f8c-a154-a64dd8227a1c"
        },
        "item": {
          "id": "b61ed8f3-880d-4bc3-a565-611f7322e721",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "fb58a807-ecfe-440b-a6b5-75731cd05865",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "c6d6d681-5b95-4831-83a8-6c625f533b87",
        "cursor": {
          "ref": "3d9ac2c2-a75b-4fae-8306-9425a90e78f8",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e48be6a7-e10f-4ea9-91ae-c9b4387b6e48"
        },
        "item": {
          "id": "c6d6d681-5b95-4831-83a8-6c625f533b87",
          "name": "did_json"
        },
        "response": {
          "id": "91da6f86-5025-484b-9d9a-ae64ca88d4b5",
          "status": "OK",
          "code": 200,
          "responseTime": 475,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7602a4e-febf-4e44-bcba-a153db1d8cd7",
        "cursor": {
          "ref": "d7f5e56d-cb12-4deb-8f96-071fe4473ca0",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b79e3048-87bf-494e-8419-f7bb640a800f"
        },
        "item": {
          "id": "a7602a4e-febf-4e44-bcba-a153db1d8cd7",
          "name": "did:invalid"
        },
        "response": {
          "id": "1ff68c38-6472-4359-9707-0b56af09c1b1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 449,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7602a4e-febf-4e44-bcba-a153db1d8cd7",
        "cursor": {
          "ref": "d7f5e56d-cb12-4deb-8f96-071fe4473ca0",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b79e3048-87bf-494e-8419-f7bb640a800f"
        },
        "item": {
          "id": "a7602a4e-febf-4e44-bcba-a153db1d8cd7",
          "name": "did:invalid"
        },
        "response": {
          "id": "1ff68c38-6472-4359-9707-0b56af09c1b1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 449,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44321c32-7498-4109-80ae-664427f8099b",
        "cursor": {
          "ref": "00f85a9d-c7e5-4e2a-92a0-cbf890ca4f5b",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "7b0e4fa2-8ee5-4c1f-aa68-f1ce38b5b25a"
        },
        "item": {
          "id": "44321c32-7498-4109-80ae-664427f8099b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "5e74f174-d1cf-43e1-ab7b-de8b3269fcf5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 62,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7e4c6b-6d1e-46f9-84ff-5afb3c5abcdc",
        "cursor": {
          "ref": "1f29d6f4-16e0-4180-9152-aa57dc7d12df",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e2eec190-f322-449a-b21e-522c37d19e9e"
        },
        "item": {
          "id": "6a7e4c6b-6d1e-46f9-84ff-5afb3c5abcdc",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "0a163324-82fe-419b-95f3-a84b85625a56",
          "status": "Not Found",
          "code": 404,
          "responseTime": 99,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d38129cd-9e10-4c52-b94a-9a4810e52cf6",
        "cursor": {
          "ref": "e0a134e5-4181-405b-af62-43f63d196982",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "baee7f8c-ae1b-4c4b-b73a-b8c59e82c893"
        },
        "item": {
          "id": "d38129cd-9e10-4c52-b94a-9a4810e52cf6",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "03a5a083-f801-4ad3-bb9a-638505d4f59c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "788fe5d7-923d-41f4-8df8-d59a43ea6c19",
        "cursor": {
          "ref": "135cd32a-ac4e-4119-a2a3-5bf4899057f1",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1422b12e-2c54-45da-9ca5-08fde3fcc5f0"
        },
        "item": {
          "id": "788fe5d7-923d-41f4-8df8-d59a43ea6c19",
          "name": "identifiers"
        },
        "response": {
          "id": "e6b721c0-8383-4897-ae49-7c12346a702b",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f8cef15-3891-4375-8912-57c128123cf5",
        "cursor": {
          "ref": "377c987a-6157-4d8c-b916-d9d690ff2d33",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6518862e-387c-4730-9bda-ca0a8930154a"
        },
        "item": {
          "id": "7f8cef15-3891-4375-8912-57c128123cf5",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "024cea0a-c48e-452d-a768-f7a948636824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e4febe8-a387-4684-a2d8-309f03af73d4",
        "cursor": {
          "ref": "137702fa-2d3b-4013-b650-a9c618903ecd",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "be067779-e913-4b01-a20a-9f6a539d9ea8"
        },
        "item": {
          "id": "3e4febe8-a387-4684-a2d8-309f03af73d4",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "35d95468-89d2-431d-9468-f4ca1b5d9858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aafe939b-22f7-4459-9154-ab74106e775c",
        "cursor": {
          "ref": "b462d9f1-73e5-4847-9e93-c3d2597856a0",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3e4855a9-4fc4-4dad-925f-d93eaf9bf1d8"
        },
        "item": {
          "id": "aafe939b-22f7-4459-9154-ab74106e775c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1b5ca8b5-d23d-4f94-b50e-a00d84d2fd7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b6e781b-7442-43b0-b6f8-2f9bb2421071",
        "cursor": {
          "ref": "3caeb344-35f1-4061-a909-8b3fefca184e",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "9dee3533-6732-4e57-b837-aac31f2e6c64"
        },
        "item": {
          "id": "1b6e781b-7442-43b0-b6f8-2f9bb2421071",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "fbcd476d-ca43-4d97-a691-aa06acbd7ac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa8be390-36fe-4dcf-8563-5ce223e596a9",
        "cursor": {
          "ref": "ddbc1194-0a6d-4741-acc6-b792795600d3",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f70b7cd8-25d3-41a5-a606-2ecd9a74165c"
        },
        "item": {
          "id": "fa8be390-36fe-4dcf-8563-5ce223e596a9",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f32e2c14-21d4-455f-87a8-305e360589d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2f1682-41dd-4710-8f36-0b5677c5f762",
        "cursor": {
          "ref": "04d4f708-85e3-485d-aa2a-b5c7df6544e8",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ba782671-8d16-460f-b6b3-0c12913aba65"
        },
        "item": {
          "id": "6b2f1682-41dd-4710-8f36-0b5677c5f762",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "0ad3237c-53b9-4e7f-8a5a-2444768c8a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6584e1e-cd80-4e22-88b9-b311df66490d",
        "cursor": {
          "ref": "308e4253-9374-4501-9055-2ee74045e04e",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "fe8a2702-b28e-492b-9d23-b522be082fa4"
        },
        "item": {
          "id": "c6584e1e-cd80-4e22-88b9-b311df66490d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "69d9715b-b461-45a4-aa6b-6eb3a48fa0e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b2b7ec-8f52-4e3d-9417-4abc4ccae646",
        "cursor": {
          "ref": "7e3fb103-98e4-4f8c-b22d-485f0413d0f8",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "322c8cdf-a4ad-4d54-ba58-81e028df7c1a"
        },
        "item": {
          "id": "f8b2b7ec-8f52-4e3d-9417-4abc4ccae646",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "30443c65-dae7-44d2-a6ed-62bf05035263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b210e6bd-dc7c-4966-98b2-686f77ec53ec",
        "cursor": {
          "ref": "c9ebff1f-0536-477b-b18d-32078da12ae7",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d640bd5a-8506-4b10-b94b-f423f4987a9f"
        },
        "item": {
          "id": "b210e6bd-dc7c-4966-98b2-686f77ec53ec",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "1194d46c-3dae-465b-8ce8-2f81e797a9cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "876a6ec8-2d41-4b1f-952c-c22bb85dd205",
        "cursor": {
          "ref": "3ffb8464-0edc-4d7c-a235-a3a8515f4069",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "80e19e3a-819c-46f1-a39d-504525eb8ec1"
        },
        "item": {
          "id": "876a6ec8-2d41-4b1f-952c-c22bb85dd205",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "20655a68-01d1-458f-b179-0c219e1f761b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25740a22-7859-4c8c-a877-5256858474bd",
        "cursor": {
          "ref": "72b7e8e6-877e-42e1-a61a-3f8724b324ba",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c0f921ca-726f-4f5a-9aae-d5f750e8bb2c"
        },
        "item": {
          "id": "25740a22-7859-4c8c-a877-5256858474bd",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "3c9a665e-77ac-4de0-be82-d369fa53450f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e470693-2b4d-4529-a846-aebe09cdeee7",
        "cursor": {
          "ref": "98931ed5-c8fd-48a9-a4d0-43ddf35d2f72",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5806d9ba-235b-4c6e-91cd-2d7f7ae2f3d6"
        },
        "item": {
          "id": "6e470693-2b4d-4529-a846-aebe09cdeee7",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "1df2dd77-635f-4fb5-ba70-b87946d21ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96677f81-b37a-44e4-8eec-2b34d415a4a1",
        "cursor": {
          "ref": "684bb8f8-c6ef-40fc-acbd-48b6785e2ab8",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "823e6c93-8e87-440f-84a5-323dc04f331a"
        },
        "item": {
          "id": "96677f81-b37a-44e4-8eec-2b34d415a4a1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b4f504c0-6894-44e2-855f-bf169a2d186a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab231593-88b0-41e5-9453-4dd27540347d",
        "cursor": {
          "ref": "0ed6d8f0-26cb-4876-898d-20d93fa54111",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "23ed2441-7f4a-4d94-b0dd-d35db8500b4f"
        },
        "item": {
          "id": "ab231593-88b0-41e5-9453-4dd27540347d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "a43f954c-59aa-4b2e-b0c1-5f8d3c89ffdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9335e8-1ff1-4661-9a0d-6a0e9ace18bd",
        "cursor": {
          "ref": "ed272d19-1963-4e9e-bbfa-463f253456e2",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "fa97c6f3-d1bb-4031-b6d1-b4629bee1145"
        },
        "item": {
          "id": "ee9335e8-1ff1-4661-9a0d-6a0e9ace18bd",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "da2d039c-6fa0-4bf3-9053-1c56f0ecb386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21302470-20ae-48c4-8026-46f3aee516ec",
        "cursor": {
          "ref": "e6a29919-942b-40c2-9c85-8d0cf3797a38",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a1a31993-43b0-4e3c-9948-05377db3d5d6"
        },
        "item": {
          "id": "21302470-20ae-48c4-8026-46f3aee516ec",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "abb2a83d-cdbf-4882-8171-5f7acd3df413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b0eeaa-626f-4751-8b18-51d839280a91",
        "cursor": {
          "ref": "7f0aff1f-c65d-430d-9549-2a743fd5b989",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "979f0641-08d6-4a53-ad5e-ef592fc05a7f"
        },
        "item": {
          "id": "99b0eeaa-626f-4751-8b18-51d839280a91",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "09b5d3aa-0cb5-406f-a90a-749abd6e2155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ea5cc2-98a8-43cb-ba16-88c5e69a2b89",
        "cursor": {
          "ref": "a91281e8-fb1c-4a6d-a672-004eb72760b3",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7e528b47-38fb-4ce0-88c4-3e7b7fbd7a13"
        },
        "item": {
          "id": "f8ea5cc2-98a8-43cb-ba16-88c5e69a2b89",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "7e787391-ebb7-4f9a-83d4-8ece803029e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2708c4de-8795-444c-8e27-30a0a3d157c6",
        "cursor": {
          "ref": "d9832d01-3e62-4cc2-960c-f19dcdd99a45",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "be8d2600-330f-4ba3-9d83-6db675313ffd"
        },
        "item": {
          "id": "2708c4de-8795-444c-8e27-30a0a3d157c6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d4eda567-ff09-4b40-bc22-19e405a0b0b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8414c1ca-1769-47fd-ae07-092a24b47978",
        "cursor": {
          "ref": "e04921b9-00a5-4edb-971a-b2346373fdee",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "493da818-0088-476a-99d8-f63cb23d1803"
        },
        "item": {
          "id": "8414c1ca-1769-47fd-ae07-092a24b47978",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "bd78b544-e261-4ffb-bf57-28223e4b7b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ac16d2d-1924-40bf-a5e6-ebf3ebedad0a",
        "cursor": {
          "ref": "608b668b-5599-4977-9060-5159bbefa913",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "45c335c4-dc31-47b8-b55d-9a6cbb2c6dbc"
        },
        "item": {
          "id": "2ac16d2d-1924-40bf-a5e6-ebf3ebedad0a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6a47285a-7a67-4d61-9d50-95cd8c3cf8da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b240af7-6f66-483d-b14a-d353cc7e899c",
        "cursor": {
          "ref": "b977423d-3a85-4dc4-8117-9e5a7cb4cd14",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "254ec6b9-21a1-4497-afd7-5c8648332a45"
        },
        "item": {
          "id": "8b240af7-6f66-483d-b14a-d353cc7e899c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c6a6a16d-5a6a-487d-8021-40855291b074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9806776a-7a2b-4075-9971-18475e293773",
        "cursor": {
          "ref": "558d34ae-5a23-4870-af43-691ce20dcb5a",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "32865592-e902-41a0-ace5-0d76cbf4434e"
        },
        "item": {
          "id": "9806776a-7a2b-4075-9971-18475e293773",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "fe6dc3a3-ce28-4075-9d7a-3dbb4976d70d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44fa962-cf7c-4836-8054-128b612560be",
        "cursor": {
          "ref": "7d54e25e-fa9a-4dfc-acf6-e462cec7c2d5",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c013ddb8-8cfa-47bd-a156-75b07de77318"
        },
        "item": {
          "id": "b44fa962-cf7c-4836-8054-128b612560be",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a6d0a8b6-8e3b-41c9-93fa-cd0ee4bf282b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e93b573-f81c-4898-be84-0575e0d9c001",
        "cursor": {
          "ref": "58ba7123-97fc-4009-b432-d1abec3edb28",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "67de062d-214e-41e4-8bbe-e49abcab7309"
        },
        "item": {
          "id": "6e93b573-f81c-4898-be84-0575e0d9c001",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "586b7213-5fb9-489b-9c05-0929dfa17233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3786e6b7-f73b-4db6-8d1d-c77da034fe47",
        "cursor": {
          "ref": "f0aa36f3-ced1-4bfc-aa1e-70ae5ea1bd20",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "bd7a20b4-6f55-477d-90f9-ee5b076769f5"
        },
        "item": {
          "id": "3786e6b7-f73b-4db6-8d1d-c77da034fe47",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a25d0954-4e69-44be-b0b8-0172d2169bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b2d20ed-4acb-49e0-8ab5-1638aef469f7",
        "cursor": {
          "ref": "edcb3c32-56cd-4a54-a2e2-14781206be4b",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "379f9e08-9773-4fb0-8b6e-bf8aff6a8a02"
        },
        "item": {
          "id": "0b2d20ed-4acb-49e0-8ab5-1638aef469f7",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d0282f59-e08d-4e14-92b8-6bc7b3bc8fc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d147b7-eb7c-40f9-aaf5-496782fd6999",
        "cursor": {
          "ref": "afe4a8db-732e-421b-8502-80612bbde47b",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "67c85302-1709-48ec-b613-045288fbceb3"
        },
        "item": {
          "id": "f4d147b7-eb7c-40f9-aaf5-496782fd6999",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "392c4236-6533-4799-91df-1e093cb84eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5b781b-f11a-4890-b07f-0f6662d208c6",
        "cursor": {
          "ref": "5cc17df4-b718-4192-ac51-8ef5fed556ff",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "31c99c67-7f9b-4b11-a24f-54f5a5f58247"
        },
        "item": {
          "id": "fc5b781b-f11a-4890-b07f-0f6662d208c6",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "5258af7b-1836-4a5a-b621-f6601f24a8bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0babede4-2936-4650-8cb9-8a0191f42ede",
        "cursor": {
          "ref": "f4dc3da9-ac37-4b76-99c0-808be15d8d1b",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "382acfac-8e1a-439c-b204-cc36abb38ca3"
        },
        "item": {
          "id": "0babede4-2936-4650-8cb9-8a0191f42ede",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "dc19da11-d64b-4313-8476-277b7cc4b5c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f6b4b0-7e36-468c-8a17-e0471d060515",
        "cursor": {
          "ref": "ca8f05b2-b3c1-4769-a4ed-9e0f15649fb0",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d2ae80a8-5464-4c11-832e-390666391f35"
        },
        "item": {
          "id": "f7f6b4b0-7e36-468c-8a17-e0471d060515",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f5cab251-c393-4319-9eaa-01fc8f9c8d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d289334-abfe-4607-8be6-53e28591602c",
        "cursor": {
          "ref": "1308c1c6-079b-4864-a57e-3cfa9e4dd408",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c854bc6d-40e9-47d7-b082-5d0effcf4a40"
        },
        "item": {
          "id": "5d289334-abfe-4607-8be6-53e28591602c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2f33bd10-77b6-4669-a4f4-3c88c08d15c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "888a0403-1029-4892-a0fa-157d09925046",
        "cursor": {
          "ref": "6edf1dc9-bc6f-46f9-a826-18db7250f3ee",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "e58198e8-61ed-406b-b7d3-9feba9cd7074"
        },
        "item": {
          "id": "888a0403-1029-4892-a0fa-157d09925046",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "6ff7a03a-ac35-48cd-b407-96ea8cdb4e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95475100-16fd-49bd-a268-c8b1a58c4313",
        "cursor": {
          "ref": "a5617313-4c25-485a-b3ca-f8067181ea4f",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "54a6d5ef-89fb-43c9-b4eb-eb45d642db1b"
        },
        "item": {
          "id": "95475100-16fd-49bd-a268-c8b1a58c4313",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "0c262ca6-b5fa-4c12-8c89-f3fec5b37956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e90ffb-2624-4636-93ee-29ac8809e4ab",
        "cursor": {
          "ref": "f53c102a-c8f3-434d-a020-c6b57a77560f",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1372d8c1-63c3-4aab-9c0e-1836047de568"
        },
        "item": {
          "id": "97e90ffb-2624-4636-93ee-29ac8809e4ab",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "bc6fda50-60d2-44d5-be45-77071e4ae99b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad28afa1-76d3-481a-8e25-4619d165e755",
        "cursor": {
          "ref": "c073a2d1-8968-41f4-af2c-e6f6f46eeb9f",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "5ac8cbb4-d4b1-4e22-b0c6-0bfaf97bfe69"
        },
        "item": {
          "id": "ad28afa1-76d3-481a-8e25-4619d165e755",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "6dc5d9de-b984-4734-9a96-d4ecc315aec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "055324bf-7370-42e1-ab16-ab9deb454533",
        "cursor": {
          "ref": "415587ec-6965-4f6d-abea-a66019870825",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "038f33b7-04d7-4f9c-b7ae-79ccd34dd957"
        },
        "item": {
          "id": "055324bf-7370-42e1-ab16-ab9deb454533",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9a605207-bcb0-4f1a-bb63-7d514a03af13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "920eb333-f7eb-4f93-8d59-68fba8e3d612",
        "cursor": {
          "ref": "6335f016-07d6-4109-80b7-875dc9bd1692",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "de3e934f-72d5-452c-a790-304722b67589"
        },
        "item": {
          "id": "920eb333-f7eb-4f93-8d59-68fba8e3d612",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "9b426b02-03dc-4b58-8994-e49bdae5bdf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2016d19f-0ebb-47aa-8127-2d65b5e14ad0",
        "cursor": {
          "ref": "04420ccc-1ff8-4231-be05-515285cebfdf",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "57843fb5-59c5-4afe-8ee1-a11922e42129"
        },
        "item": {
          "id": "2016d19f-0ebb-47aa-8127-2d65b5e14ad0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c9ebce64-dc0c-4885-8277-819dc5783591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba7b9f0-f9e7-4281-93a2-f0c2608057e4",
        "cursor": {
          "ref": "d22031c7-ddc2-4a58-b4cd-fd5d1769a152",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b0493842-24af-4c19-9c86-159ea2275ebd"
        },
        "item": {
          "id": "8ba7b9f0-f9e7-4281-93a2-f0c2608057e4",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "08720441-5064-4c2d-893e-d856472bc4f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26447c22-ee30-4973-81d5-c9e60502878c",
        "cursor": {
          "ref": "ce3124e6-c8b8-4764-a203-3f3a30fb180f",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "377dd3a5-619e-4792-9d27-9c2f58f9b798"
        },
        "item": {
          "id": "26447c22-ee30-4973-81d5-c9e60502878c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "fd990750-1c9e-43fb-bc97-62a07c9205fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6fe74d-c2e4-4831-aa99-2078f8c63a9d",
        "cursor": {
          "ref": "29e41f2c-b480-4c63-8c57-373b7e789f77",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e008ad41-9490-4dfa-8c94-d35046e75568"
        },
        "item": {
          "id": "1c6fe74d-c2e4-4831-aa99-2078f8c63a9d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0b1d5db0-fc59-4d5b-9e69-a9ac000735ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f82a2687-9499-41fd-9446-0d0505c43f9d",
        "cursor": {
          "ref": "73cedbb6-66c3-4939-8b9f-f8c652d1a037",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "82ec3f3c-2b9e-4bcc-98b5-0e85f05d29ab"
        },
        "item": {
          "id": "f82a2687-9499-41fd-9446-0d0505c43f9d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "cdff39c4-59d1-4112-a0aa-96b4c9ceaf17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7467f9b6-0b59-486c-b22d-0ea31533f4d7",
        "cursor": {
          "ref": "236b677f-a212-4a01-bf46-1705fd1faffd",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ad8bfe00-de5b-4b15-aae9-11d1e0e8f08b"
        },
        "item": {
          "id": "7467f9b6-0b59-486c-b22d-0ea31533f4d7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "5d2726c2-fbb8-4bcf-ace8-8866392780f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6871b03f-4a93-4dbf-9c4c-c7adda3a0f1a",
        "cursor": {
          "ref": "bf6b8d99-44d0-4a5d-80a8-00e60ba5354d",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0c401c4e-1d5f-4af3-a05b-ec3080c931f7"
        },
        "item": {
          "id": "6871b03f-4a93-4dbf-9c4c-c7adda3a0f1a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "9e5b7d65-0310-45d6-9cb7-b67fe34ac8ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a1197d0-e018-41fd-ab19-708e60438271",
        "cursor": {
          "ref": "e861eefa-1ea9-4bbd-a1ad-3c4e61b03333",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e54f3d79-76d9-4687-9d82-c2e0ae2ccdb2"
        },
        "item": {
          "id": "2a1197d0-e018-41fd-ab19-708e60438271",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "210e23aa-d915-4807-abdf-cf648495674e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc416e41-3f2a-46ac-9fd8-f0948f56693e",
        "cursor": {
          "ref": "0fe1fbca-ebc0-416b-8083-964e6b31d9f0",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "049dfdee-b3a0-456d-b047-d60252fed746"
        },
        "item": {
          "id": "dc416e41-3f2a-46ac-9fd8-f0948f56693e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "8b3572e9-b1a6-42e1-93f6-3bf29f0cb790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21742f36-2b03-4146-8268-dd33d4e34f12",
        "cursor": {
          "ref": "c1debd75-ab5a-4774-b08e-b6655ac61c4d",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a8324347-8890-45cc-8058-fdba2cd07ed0"
        },
        "item": {
          "id": "21742f36-2b03-4146-8268-dd33d4e34f12",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "517fd86d-ccbc-419f-8289-54aede89c513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6004e47-77c5-465f-8773-e474f41d1c4d",
        "cursor": {
          "ref": "a18f114c-85a5-4fe8-a464-8f4335360622",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5c591293-98d0-49d8-a1e0-1013f388d527"
        },
        "item": {
          "id": "b6004e47-77c5-465f-8773-e474f41d1c4d",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "bbf9f895-fe7f-48dc-93a2-49e960e5780a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e40139c5-748a-47ca-9132-94d1e2b57d57",
        "cursor": {
          "ref": "ae22fbdf-4bc4-4ea9-a015-6317c52f4c0e",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "877c0664-4026-4d9c-b710-cfc204b6b5aa"
        },
        "item": {
          "id": "e40139c5-748a-47ca-9132-94d1e2b57d57",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a0331b3a-4bcd-4ced-b278-94860d6c1942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a7a62c-15f9-4362-9d32-4e9f8a9bdaa5",
        "cursor": {
          "ref": "635a8ec7-0858-4cb3-b9b0-1832e6126ab0",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "9be9e97b-8d4b-412a-836f-75a686abdc49"
        },
        "item": {
          "id": "70a7a62c-15f9-4362-9d32-4e9f8a9bdaa5",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "9830c831-56eb-4ba0-ab46-2e24fb36f045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c5caee-5852-42fe-86cc-052072e23a45",
        "cursor": {
          "ref": "3e938c4f-f184-4572-9256-e0ecb4daa254",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "3fa3064a-c513-4ab7-bbc1-62687236c33f"
        },
        "item": {
          "id": "97c5caee-5852-42fe-86cc-052072e23a45",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c7a5c271-491e-49db-a1af-1c8829811094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6846a78a-c564-4713-9cbd-29794a1c0c96",
        "cursor": {
          "ref": "423af7b1-58cc-4a8d-a487-15c10836d991",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9dd4cbac-6d9b-4f98-a675-fabc7d2f6078"
        },
        "item": {
          "id": "6846a78a-c564-4713-9cbd-29794a1c0c96",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "671595d0-6615-40e0-bd00-755887d1644a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "236efcf4-3df4-42d7-8d69-0b18ba115b10",
        "cursor": {
          "ref": "c8ca5212-1702-479d-b9e0-5165f3a86448",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "181e3b70-287f-4c13-afac-890ecda4e00b"
        },
        "item": {
          "id": "236efcf4-3df4-42d7-8d69-0b18ba115b10",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "5ea901dc-97f1-4434-8b5e-652c3512bb38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f7f9c3a-dd2e-41f6-81cb-2a7eac4be1ae",
        "cursor": {
          "ref": "208d3cfe-f628-4faa-b355-38f4c6a70860",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2f801358-db9a-46d7-87fe-eb3c27285854"
        },
        "item": {
          "id": "1f7f9c3a-dd2e-41f6-81cb-2a7eac4be1ae",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6844a8c5-12fd-4fb7-a003-d223bc1b33c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb0901c0-cab5-4d1c-a193-04eeb13bb01b",
        "cursor": {
          "ref": "13669fc8-abf3-4cd2-9a99-ec4b92929724",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "02995465-c305-4d0b-8cd3-6431fa193854"
        },
        "item": {
          "id": "bb0901c0-cab5-4d1c-a193-04eeb13bb01b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "9d7f71b0-af47-40fd-a983-68d321721caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f848ba1-48f7-43f5-acff-eff2a9ff1c53",
        "cursor": {
          "ref": "e64773be-888c-4ee4-a41f-6f41d6da9b43",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "0d28153a-7b79-46a8-8a26-6048475fb01d"
        },
        "item": {
          "id": "8f848ba1-48f7-43f5-acff-eff2a9ff1c53",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "da0af371-9ffd-433d-83b6-459f394bbc8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e240f04-d088-4aba-99b0-f31dd8727ddb",
        "cursor": {
          "ref": "d3f6674c-8396-48b3-aac8-19c8602f3215",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "2e880bbc-cfa8-4620-b48e-9477936a93a0"
        },
        "item": {
          "id": "7e240f04-d088-4aba-99b0-f31dd8727ddb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6deab16d-fd2a-4d24-b5be-67c7e731455d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b003977d-2d90-4672-8810-6afe55e4edf8",
        "cursor": {
          "ref": "d3e6a40c-224d-4d53-a59d-022e806e3e2f",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e1fdfba6-d650-4c66-ab23-81b1fdc5a190"
        },
        "item": {
          "id": "b003977d-2d90-4672-8810-6afe55e4edf8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "06ebef28-aa12-47ab-b37d-0f40c98ceb04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55306454-b2cb-4441-b176-3b83ed820e76",
        "cursor": {
          "ref": "10d3e6e3-914e-4aa2-8554-003db195f1f5",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b6437133-b91e-4627-a49b-4a7c4f752c69"
        },
        "item": {
          "id": "55306454-b2cb-4441-b176-3b83ed820e76",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f95914d8-6dc3-48ac-9648-258c7fd042cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73595cf3-91a3-4f2d-9949-1bb3dbbff4cc",
        "cursor": {
          "ref": "762e421e-d679-4ae3-a2b3-bb1284ee1d96",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "decd50e5-34ec-4ee4-927c-21becf3824de"
        },
        "item": {
          "id": "73595cf3-91a3-4f2d-9949-1bb3dbbff4cc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "fc90f21d-8800-41a9-a00c-d529bea9ba70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "562e1ce2-622d-4075-aa5e-6b0c47d04c78",
        "cursor": {
          "ref": "cf40a2af-ca19-4317-a988-4707feb3f4f8",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "acd33568-0b9b-465c-9d82-dcafb681e69b"
        },
        "item": {
          "id": "562e1ce2-622d-4075-aa5e-6b0c47d04c78",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "19105938-6fc4-48c6-822b-6f795af277c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "669c16bb-e7e9-46d3-b09e-9bd9eb8f8b40",
        "cursor": {
          "ref": "d58b6c36-550d-45f0-b22f-feb5257dff55",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "cc2d816d-2403-44c8-9c26-61b5a6ce1840"
        },
        "item": {
          "id": "669c16bb-e7e9-46d3-b09e-9bd9eb8f8b40",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "bcc14979-761a-4188-96e2-12d2bd6bf21e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e14dd1d-7682-4a01-8f1f-57edd3fb6062",
        "cursor": {
          "ref": "2a374df4-689c-46cc-97cb-30cd6aeae1cc",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "5d06bdcb-f563-4bd3-a922-b97b902e9f44"
        },
        "item": {
          "id": "8e14dd1d-7682-4a01-8f1f-57edd3fb6062",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "ab9250a7-99cc-4402-9b04-8ca030b51a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e67b91e-f883-40b3-808b-b3ee8e05210e",
        "cursor": {
          "ref": "9a913eb9-5bba-4dd9-bc72-92376a2fa29d",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c792d525-7a0f-47ee-a8af-bc31fa6dc57c"
        },
        "item": {
          "id": "8e67b91e-f883-40b3-808b-b3ee8e05210e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "37cd58d6-7de1-45d2-9661-ff6a7f36940f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d5c5cf-9a7f-464e-8828-48593ed78b37",
        "cursor": {
          "ref": "0bd6d83b-51fd-4c02-a672-e7eab65abd71",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d8d214ff-7963-4be8-bbe8-e7267811044a"
        },
        "item": {
          "id": "16d5c5cf-9a7f-464e-8828-48593ed78b37",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ecf7f6a5-7cbb-46d3-9513-760c1ea7ef54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ffd22e-c819-4adf-b12e-21bc844eb14d",
        "cursor": {
          "ref": "2a43da7e-1f2c-43d1-bf3c-aa4dc39e924b",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c72d0996-fc3a-4b79-86b7-c03d744be36c"
        },
        "item": {
          "id": "57ffd22e-c819-4adf-b12e-21bc844eb14d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f433139e-1740-4430-824f-14fe9d4dd6e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650ba16d-973c-4aaa-a726-b9c76d6bcdd7",
        "cursor": {
          "ref": "656cd868-7a9d-4ffb-9478-e3cd74e0c6a7",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "40548c5b-0318-4d64-a23e-c41db9e2c7ab"
        },
        "item": {
          "id": "650ba16d-973c-4aaa-a726-b9c76d6bcdd7",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d0271550-6a9a-45b7-bafe-90b861340676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2266909f-c1db-4078-a87f-1f505e2ef49c",
        "cursor": {
          "ref": "73cf10c3-aada-4b5b-9241-fa5fde0fb1fa",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ef092da2-e483-4d04-8167-c3c0637a6bab"
        },
        "item": {
          "id": "2266909f-c1db-4078-a87f-1f505e2ef49c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "114891f2-28a2-416f-9d94-8edfde265799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb58ac28-0c44-4367-a6f8-e0c9349af4d7",
        "cursor": {
          "ref": "58cbdb38-918f-4840-8b37-5dde8ea44aee",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "75fb853c-daaf-4cd0-9f3d-7567ebe1332a"
        },
        "item": {
          "id": "eb58ac28-0c44-4367-a6f8-e0c9349af4d7",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c0d2c263-b58e-43b5-97bb-d9a9ce302199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b51808e-03f4-429b-a225-7a93c3da5409",
        "cursor": {
          "ref": "37ca8010-2e66-4ae0-a637-1b8545e45fd1",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "97da88a6-e2f4-4e01-9832-6a6398b12661"
        },
        "item": {
          "id": "4b51808e-03f4-429b-a225-7a93c3da5409",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "57136a33-2965-4bb4-9a93-c4f9248d7671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9057889f-c89d-456f-a7a4-6c0de008bb6f",
        "cursor": {
          "ref": "6f4427d4-2af8-4eb7-bcf2-24e4567d6bce",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4a05754d-4622-4fd5-88a1-81a2c70fc3fc"
        },
        "item": {
          "id": "9057889f-c89d-456f-a7a4-6c0de008bb6f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c876efad-5d0c-4d92-b662-4e1821912c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9159b9b0-93ad-4796-aad6-99cd84a25a24",
        "cursor": {
          "ref": "300c8236-ddc7-4ba3-a030-49ed6be0db32",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5e6b7998-8c6b-4535-b4df-4a173f32e80c"
        },
        "item": {
          "id": "9159b9b0-93ad-4796-aad6-99cd84a25a24",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "85f7b65e-c9bf-4cb7-84d8-65b548541912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e68d1ed-7693-40ba-a934-6986e85062d9",
        "cursor": {
          "ref": "8047fe05-b529-4500-b98b-443fd776819c",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6a17be46-c5a7-487d-baa6-d3e810fa5df0"
        },
        "item": {
          "id": "6e68d1ed-7693-40ba-a934-6986e85062d9",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3ef490e9-a912-46cc-8fcc-0df3b99795e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2791d687-814b-4b9d-b4af-f76e8c3e5729",
        "cursor": {
          "ref": "2cdf20fe-3d50-45f0-80c3-8c29f33c1771",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "3a367ffc-2d24-4656-afde-c516eb3dc959"
        },
        "item": {
          "id": "2791d687-814b-4b9d-b4af-f76e8c3e5729",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "7b13a87d-2a0e-480d-b036-5f2fad17522d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "510869d4-8b42-4105-9905-8139b876f17f",
        "cursor": {
          "ref": "7bde991c-3618-4ca7-a9b1-4e425ec1a5cf",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c84006ff-4e9f-4b73-b50d-a6f551512ca2"
        },
        "item": {
          "id": "510869d4-8b42-4105-9905-8139b876f17f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4e048c41-8c81-44c7-8885-1a400883d515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f4682a-fa1e-4dde-af28-8c9510748328",
        "cursor": {
          "ref": "342de0ba-41fd-46cd-a21b-9173dbf54a0f",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0bdde08a-b5fc-4bdd-bb33-4f56327bf6aa"
        },
        "item": {
          "id": "86f4682a-fa1e-4dde-af28-8c9510748328",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "9156dc5e-40d6-419a-9377-f8bc4aee80b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55cd036a-bd74-4a11-8f2b-dd5659763864",
        "cursor": {
          "ref": "cf16cdb3-9bd9-46b1-9871-65d01dbef0dc",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d10f87e2-1d8a-49a7-af42-58f5a038a4b0"
        },
        "item": {
          "id": "55cd036a-bd74-4a11-8f2b-dd5659763864",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ad4224ae-1190-4f1a-90f9-6c6cc6fd995b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b370bec8-9abe-4336-b416-e37d3725dc5d",
        "cursor": {
          "ref": "526cf0b0-f715-46be-a70f-5eea67ee6372",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e66139bc-263d-4a52-b7de-ba434d477457"
        },
        "item": {
          "id": "b370bec8-9abe-4336-b416-e37d3725dc5d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "fef86845-92c6-49e1-af5f-9632a6041457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a69cf0a-24a7-4f4c-a065-54620ea21bfd",
        "cursor": {
          "ref": "f1791650-7fde-460a-9571-8c59fd256a74",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "79e21be5-992d-4559-9f82-ceb662fe9f25"
        },
        "item": {
          "id": "5a69cf0a-24a7-4f4c-a065-54620ea21bfd",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "96223bb2-d4d6-4bf7-b156-dd818b22f6bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b6e39fd-cf84-4953-8c28-46c9bda59841",
        "cursor": {
          "ref": "d161e3f2-8812-4ff1-b2a0-50cff237c3dd",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1cd591b1-e73e-42ca-b784-9df400751bd1"
        },
        "item": {
          "id": "2b6e39fd-cf84-4953-8c28-46c9bda59841",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3628c941-58df-462a-8a82-5020428ffb8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f92f81-89cf-49c9-bb4f-b66ce53a52ab",
        "cursor": {
          "ref": "e58438be-520e-44b9-b90c-b3a9e57180d3",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "63cd27b1-c915-4d9b-a3a6-219ff96c5593"
        },
        "item": {
          "id": "f7f92f81-89cf-49c9-bb4f-b66ce53a52ab",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "87616b4e-cffd-4ef6-8632-5b57547478ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ffe6bda-a26b-4af0-a70d-887b3239d4f5",
        "cursor": {
          "ref": "c28b249c-dc5e-4152-b906-cfd9cde94ece",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "df52f7cd-623a-4a28-b9af-095d41a43014"
        },
        "item": {
          "id": "8ffe6bda-a26b-4af0-a70d-887b3239d4f5",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "4e08615a-18f4-4e19-94ea-d5834c196662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4fd5f6b-a2e0-43d7-86d6-bbbdf8294c58",
        "cursor": {
          "ref": "d9b7f453-848c-42fb-b870-524c4871d26d",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ae6d5557-b999-49bb-91fa-b47dd43c6fb2"
        },
        "item": {
          "id": "d4fd5f6b-a2e0-43d7-86d6-bbbdf8294c58",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "eb821e0e-0fbf-44c1-a668-54e2a7982dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99268490-44c4-4551-a11f-2b5dadce52e5",
        "cursor": {
          "ref": "067f7ed6-ae36-42f0-913c-528e07fde612",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f74d65f0-d218-4454-bbcf-71976bcbe661"
        },
        "item": {
          "id": "99268490-44c4-4551-a11f-2b5dadce52e5",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "fe11d75f-aec8-4e8b-8da3-8f9c840d8f30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05599459-858e-4b76-a8c8-3544c8e2cef3",
        "cursor": {
          "ref": "a99239c0-cae2-4775-8195-b3e2ae80e688",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d5a73b96-a4b1-4922-a012-b3be3042063f"
        },
        "item": {
          "id": "05599459-858e-4b76-a8c8-3544c8e2cef3",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3a792466-7fdb-4c4c-8db6-c96e2bc987f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ac50f4-5e01-46ce-ba3b-ddc3f22a4ff3",
        "cursor": {
          "ref": "29e14649-6550-42f9-9e82-a19b43a55723",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "aa00d23d-8aed-4419-b234-1eca7bfd4d9c"
        },
        "item": {
          "id": "27ac50f4-5e01-46ce-ba3b-ddc3f22a4ff3",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "5d1f7404-02d4-4e1b-b93c-7501ad7e45d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d48fa71a-a92c-4f68-baa0-482996667587",
        "cursor": {
          "ref": "3f23fd0e-f121-4999-a361-a35a79842153",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "a04589d7-8a0a-41c5-b3be-52a42c3dba53"
        },
        "item": {
          "id": "d48fa71a-a92c-4f68-baa0-482996667587",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b78d5b91-1d8a-43c4-b487-55d5bde6b669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b17394c-e6a9-480c-b156-6e484de9c5d7",
        "cursor": {
          "ref": "02094253-8088-41f7-9fc5-3afa86c3cc5f",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "7a2a23fe-cd27-4421-b394-be98e99515e1"
        },
        "item": {
          "id": "4b17394c-e6a9-480c-b156-6e484de9c5d7",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "734ed183-2e4c-483a-9676-3cdacc28c6a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2177525f-0d7f-44f6-8c13-11b7719562e3",
        "cursor": {
          "ref": "a8731cf4-1698-4bf8-b444-a7019186c06b",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "3ce57c5b-8b28-48e8-b883-38c3202e3126"
        },
        "item": {
          "id": "2177525f-0d7f-44f6-8c13-11b7719562e3",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "78cf7236-80ab-4452-9826-193ee11f6129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52811bfd-7024-47ce-b6b5-2313e75823dd",
        "cursor": {
          "ref": "6fe47195-0c30-45d8-a3c0-b6a89f367391",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "302e3e06-844d-4695-8f37-c5b71cf1d1a2"
        },
        "item": {
          "id": "52811bfd-7024-47ce-b6b5-2313e75823dd",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8b54b61c-98ca-4216-84cc-a1cd3abdfd04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6420d5c-ef3d-47f6-a996-76e471cd2403",
        "cursor": {
          "ref": "e92e8a9b-b31f-4ced-b3b6-14f07544bd9b",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a9666077-308d-4533-a516-60e538c0a259"
        },
        "item": {
          "id": "b6420d5c-ef3d-47f6-a996-76e471cd2403",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8a062d35-4229-4c92-b139-0274793d3146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0178c086-1d97-4ca5-a262-f5cb35befa29",
        "cursor": {
          "ref": "26b9e1ea-220e-47a9-ae0c-0849e22412ac",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "74ceff0c-7b5b-4b7d-98bc-7fc70589131d"
        },
        "item": {
          "id": "0178c086-1d97-4ca5-a262-f5cb35befa29",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c1e81e8d-8a3f-4905-a571-89c2de12f941",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef9d9fb-9704-4374-830c-bc130590afec",
        "cursor": {
          "ref": "5ac33bc7-ee69-4b30-933a-c202cddc7b78",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "2ec6578b-61af-42f4-9355-e04be1303e13"
        },
        "item": {
          "id": "2ef9d9fb-9704-4374-830c-bc130590afec",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "e32fbef5-2c13-4347-9ade-b175fc199152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "c9d2d915-7ced-434a-8de2-582cb1c3a756",
        "cursor": {
          "ref": "5ffbab0e-fb92-45a8-b877-aca6c712a3c0",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "865dc8ac-e6dd-4f9d-bcb4-78db18b708e7"
        },
        "item": {
          "id": "c9d2d915-7ced-434a-8de2-582cb1c3a756",
          "name": "credentials_issue"
        },
        "response": {
          "id": "dca9e7cb-4401-4e6d-995f-032c2372f758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "9df90cd7-2c79-4903-bfa6-baf39e584c54",
        "cursor": {
          "ref": "9ec07594-e938-4d53-870f-ab7132118315",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "6a023d74-784b-4910-8058-430d4b2f8487"
        },
        "item": {
          "id": "9df90cd7-2c79-4903-bfa6-baf39e584c54",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "7f327f1c-6aaa-4c42-9dd6-26c82aa1e94a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "0097fcd9-b6de-4cf1-9e72-047301a5c1a9",
        "cursor": {
          "ref": "7d59de51-bf9a-4edc-bd8b-e11713aba264",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ec2ff7e2-047e-4e4c-82bc-3dfa308f3a84"
        },
        "item": {
          "id": "0097fcd9-b6de-4cf1-9e72-047301a5c1a9",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "84d2c6d7-92ba-4387-acaf-77d24c73051a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "fb03f0de-8ab9-4f2b-92a1-5082d8795ee8",
        "cursor": {
          "ref": "af27f893-defd-40bc-b0e0-e16421079951",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "0295961f-7304-4a7c-b263-ac2b85293c86"
        },
        "item": {
          "id": "fb03f0de-8ab9-4f2b-92a1-5082d8795ee8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b5e7e231-feb2-491a-b709-178f4b77b56f",
          "status": "Created",
          "code": 201,
          "responseTime": 8164,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff3c6616-151a-443c-b985-2d3b7cd2eed2",
        "cursor": {
          "ref": "d00208fd-972c-443b-bb61-5871d77ace58",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6e2f81ff-4e16-4d78-a9c6-62822423f542"
        },
        "item": {
          "id": "ff3c6616-151a-443c-b985-2d3b7cd2eed2",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "606c3cbd-1ae0-443e-8ee7-65a60f23cb7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "24d70135-6ecc-418e-824c-2b5daae0ffe0",
        "cursor": {
          "ref": "cdd5a07e-53fe-4ab4-a1f8-67b5ad2f52a6",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "9953f761-948b-4bf5-ab76-36e614e5e972"
        },
        "item": {
          "id": "24d70135-6ecc-418e-824c-2b5daae0ffe0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "cf1f9fb3-6d56-4b8f-9101-acb20b930137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "40654126-34c4-4afd-b305-2c06b1be782c",
        "cursor": {
          "ref": "86a4a4ce-463d-49cf-b539-88e3f3a2fc4b",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "464b47bb-34fe-407e-b790-c512d79e29f0"
        },
        "item": {
          "id": "40654126-34c4-4afd-b305-2c06b1be782c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2478b0de-dda4-4eb0-9114-a6dd3cbc768d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3131e08c-7ab7-4e7e-9e71-b32ddb73ea56",
        "cursor": {
          "ref": "de0aff8f-d2c4-4b84-84ff-74724cb3e947",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "dca13177-afd4-4eab-9cd3-7dc21f325a3d"
        },
        "item": {
          "id": "3131e08c-7ab7-4e7e-9e71-b32ddb73ea56",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ad831fec-95da-4446-8203-730f364d61c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da138d4d-5164-4d6a-9b24-e49569516a9c",
        "cursor": {
          "ref": "faac892d-e300-4643-be36-e3972bf25622",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "22e614b2-7afd-40d6-baaf-2c57ba77247e"
        },
        "item": {
          "id": "da138d4d-5164-4d6a-9b24-e49569516a9c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5d4fca07-3484-4977-a3cf-67c02e2d9b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f24974ca-583d-4c09-98ba-17c088c343ae",
        "cursor": {
          "ref": "4af033a2-a4f7-470e-8518-3fe3b3ba4dab",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7058277d-2997-4884-a661-6de72d78a5d8"
        },
        "item": {
          "id": "f24974ca-583d-4c09-98ba-17c088c343ae",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f6954761-29c5-4286-a1c2-e898f7accf50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a08472-02e9-43e7-b09f-c3b46c9c9624",
        "cursor": {
          "ref": "34f3edc6-dd69-48d8-a69a-aa13596d74c2",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d72ec3cf-a806-43a7-abba-e8eec023855c"
        },
        "item": {
          "id": "48a08472-02e9-43e7-b09f-c3b46c9c9624",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6aa7fc63-75ad-4e49-b255-4c13ddb6d365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "365e1878-50ad-4dc6-b1b8-fd41cdf9af01",
        "cursor": {
          "ref": "4e29928f-9927-424d-bed3-301ae785232d",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "85eafe30-717a-48db-9058-2feb135f6ba7"
        },
        "item": {
          "id": "365e1878-50ad-4dc6-b1b8-fd41cdf9af01",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "88563fa1-ef06-46e6-9e5d-61445bd3aae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eaff840-1965-4cd0-aa98-f7bd0e94aaf9",
        "cursor": {
          "ref": "e1ef1e0c-d58a-400d-a296-dfdf61f8e237",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "6f9a8032-bd1c-4724-83f9-b32827e31e95"
        },
        "item": {
          "id": "7eaff840-1965-4cd0-aa98-f7bd0e94aaf9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f1c12eb0-7eed-49c6-b0d7-1e7370c5b99a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b770a88-2b88-4637-9b8a-838467001443",
        "cursor": {
          "ref": "a2d8060c-0f30-4488-a8d0-f8820a13e564",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b020282e-a0e3-4c0b-a383-7e3046ca6e87"
        },
        "item": {
          "id": "8b770a88-2b88-4637-9b8a-838467001443",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5442bb99-d19e-4f51-baaa-724dadf50e4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28f2cc39-8d0a-4c45-96f8-d877e9c0bf4a",
        "cursor": {
          "ref": "09073fc6-47c7-4c3e-a5f9-08268e60dedf",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a6f7ef51-981b-4fd9-a300-54f8db26d821"
        },
        "item": {
          "id": "28f2cc39-8d0a-4c45-96f8-d877e9c0bf4a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "acbfa9a6-09fb-49a2-b5b1-5be0d58fa067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72852e22-8565-4e6b-8192-c7fbadb36a96",
        "cursor": {
          "ref": "c46a772e-7413-496d-a8ef-1210a898e263",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "454287ce-ff0b-4449-8aa0-3ad6ad5801ae"
        },
        "item": {
          "id": "72852e22-8565-4e6b-8192-c7fbadb36a96",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "fa249512-f26e-4f18-995f-6b7605dac799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73299bcb-af48-4209-ba8f-68a11cadc412",
        "cursor": {
          "ref": "ef16dd7c-f93a-48a6-b01f-05fedbb55f55",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b9ee6801-8b30-4a1e-beb1-39b248b9c6b0"
        },
        "item": {
          "id": "73299bcb-af48-4209-ba8f-68a11cadc412",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d7beb6cd-3cdc-4574-94f5-a8981f3503b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ee27de-45c1-4d6f-9e11-0c2651bf3dac",
        "cursor": {
          "ref": "ca02d1f0-01e7-4ff4-91d5-8e2b58937dc5",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "6e6d1d42-de71-4dd8-843c-bb802d41adf4"
        },
        "item": {
          "id": "53ee27de-45c1-4d6f-9e11-0c2651bf3dac",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3662a3c2-098b-445b-8859-fbbda53f4232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4416c091-4fba-4d77-8dc2-76bce8815e7f",
        "cursor": {
          "ref": "f83a7681-e98d-4378-9423-24b88bf03e31",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4f4857e2-db24-4705-b1e0-40522fde3a13"
        },
        "item": {
          "id": "4416c091-4fba-4d77-8dc2-76bce8815e7f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7496841d-f553-487a-b762-1da3cc96b983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a1e2d03-bd4b-42f9-9696-201a19f60a10",
        "cursor": {
          "ref": "e294ee0f-495a-4957-91c5-fd0b9ea37563",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ae8e0482-8364-4653-9df8-0e7be3a3ad4c"
        },
        "item": {
          "id": "4a1e2d03-bd4b-42f9-9696-201a19f60a10",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3e10368a-a112-400d-94cc-09568bd71dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2138270b-9d4d-4cd0-acda-bb669fe7dea2",
        "cursor": {
          "ref": "cbfd839f-4e53-474d-b3c5-103dd004839b",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "4a4e9a26-9bee-410f-a7ed-ca6777363b12"
        },
        "item": {
          "id": "2138270b-9d4d-4cd0-acda-bb669fe7dea2",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9215fadc-1f0e-4946-8242-4ca7936961b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e316d8-8fd2-45f4-ac88-c21b34720a3f",
        "cursor": {
          "ref": "8305647d-8513-4577-bda5-0c3338f2afe4",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "a3022753-944d-4ee8-8cdc-d91e8b072e24"
        },
        "item": {
          "id": "99e316d8-8fd2-45f4-ac88-c21b34720a3f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b0db9356-5884-413e-9b24-ad3941942a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f42c17-67e8-4dcf-87d1-2d6215b5d1af",
        "cursor": {
          "ref": "c3042e7e-70ab-49b3-a9a4-fed285fa3c8c",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "efbf8413-a046-44a0-97fd-39bdd1b0350b"
        },
        "item": {
          "id": "95f42c17-67e8-4dcf-87d1-2d6215b5d1af",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f5a94e9a-c134-4025-b012-4a6eac2868f6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 77,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "e517fade-2e2f-4cb1-8e09-30dc58b710a6",
        "cursor": {
          "ref": "7363d0f2-1338-4b55-b28d-fd74be7a7239",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3b12c566-8fdd-42a3-b145-2f6560483229"
        },
        "item": {
          "id": "e517fade-2e2f-4cb1-8e09-30dc58b710a6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "785dae46-db4f-40c4-b656-acadd7d0445e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6354a33c-2072-4520-b846-f7702fbb765e",
        "cursor": {
          "ref": "97cd179b-3a94-4fcb-9c9a-c7329f5e2054",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ae265ae7-fc9f-457e-9cf7-da048d703305"
        },
        "item": {
          "id": "6354a33c-2072-4520-b846-f7702fbb765e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "556efc50-8dee-492d-8da6-b21df28a98ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841b8771-d5d4-4143-a984-a48dbc46c1c8",
        "cursor": {
          "ref": "ab911de6-824f-47f9-b7df-15c9cfc8e965",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "fa9e729a-7936-462c-8141-ca64672fd1fb"
        },
        "item": {
          "id": "841b8771-d5d4-4143-a984-a48dbc46c1c8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5ccc4693-7b0f-4a6a-b319-f5ed7d5435b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c8b74e1-e294-4ed0-ae75-34b558fea00d",
        "cursor": {
          "ref": "b951b752-6e1c-424f-86d4-0151d436f18f",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "0ae10044-452c-4562-829e-e969413f4d74"
        },
        "item": {
          "id": "3c8b74e1-e294-4ed0-ae75-34b558fea00d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6eb3ab40-923e-4676-8f8a-1d49485351f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602d61d2-5d4a-452e-ae9e-97d34a1e4334",
        "cursor": {
          "ref": "2a984c9b-a490-401b-9b43-1e502801f55d",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "54411394-3117-42b4-ad32-127dfb428936"
        },
        "item": {
          "id": "602d61d2-5d4a-452e-ae9e-97d34a1e4334",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3dbe187c-7593-4def-a113-ba39190456fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ea8b37-38d2-4f9f-8fd3-4d0abef9ac60",
        "cursor": {
          "ref": "797a456e-6ea4-4e78-8097-e424afbb74a8",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a85190f1-3f48-4803-8c3a-4c7bfdf5626d"
        },
        "item": {
          "id": "23ea8b37-38d2-4f9f-8fd3-4d0abef9ac60",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "23e21a5e-9df0-42b2-a18c-6295ff334f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c11506f6-b1a7-4400-8fb5-e83bae9b8d64",
        "cursor": {
          "ref": "57d45279-08c0-4906-9d25-cabc59fda8fa",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "0e596479-1867-4390-9976-630a5c20ac58"
        },
        "item": {
          "id": "c11506f6-b1a7-4400-8fb5-e83bae9b8d64",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "fce1f62f-0e24-4eae-ab09-59b34e075626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f323ae-65ef-42aa-9376-28e6e44c93c2",
        "cursor": {
          "ref": "9f539293-785e-47fe-a321-ea917c796218",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "fd5a9537-0d81-4a58-a1a1-3d0f06c2f5f4"
        },
        "item": {
          "id": "e7f323ae-65ef-42aa-9376-28e6e44c93c2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8812c9c5-177d-42b7-ae8d-3edcf3a102fa",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 70,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "498d0080-3f1d-481c-ad65-ca9127ac6456",
        "cursor": {
          "ref": "4b90524b-0c57-461b-8771-72cf4b9b1e88",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ea4a031c-4672-483c-ab0b-07b27ea496eb"
        },
        "item": {
          "id": "498d0080-3f1d-481c-ad65-ca9127ac6456",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f5a589c9-8522-4a60-9136-dc2ab906b965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b208071-22e6-4515-8222-24778bbabf93",
        "cursor": {
          "ref": "92faf536-28db-4faf-a3df-87d6c686dac3",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ab4eae3f-100e-4d06-92f3-fe0b7d9dbb57"
        },
        "item": {
          "id": "8b208071-22e6-4515-8222-24778bbabf93",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6700c621-c9e7-4966-a893-81e0aec16894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5e15cc-1cda-4d94-bbef-1f7ce2e7a97c",
        "cursor": {
          "ref": "10bb6946-e307-46a6-84b2-ac3e6dd92830",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7e1139b3-a22b-40e8-baca-d4ce3a152abf"
        },
        "item": {
          "id": "4a5e15cc-1cda-4d94-bbef-1f7ce2e7a97c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b0837d22-8c14-4393-bdce-89fb4f13385e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4692829f-4a47-4291-948e-6789ab5e7aaf",
        "cursor": {
          "ref": "363f80e4-d644-41b0-9150-199fa7f7e573",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "3ad50bae-276e-431c-9aeb-7906c55a1726"
        },
        "item": {
          "id": "4692829f-4a47-4291-948e-6789ab5e7aaf",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "671b362a-5f63-4314-93ca-bef984e09e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ebd4e3d-084f-4540-8c9e-ea89ef6b3eba",
        "cursor": {
          "ref": "f266b9d6-2abd-4e6f-a44a-69b07f14130f",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "34ab0e04-7f7b-487e-89bc-772be3456f69"
        },
        "item": {
          "id": "5ebd4e3d-084f-4540-8c9e-ea89ef6b3eba",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "50ea60cb-bd2b-4188-a6c0-743e7ddcec10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6bd67f0-70cc-4db8-9a98-165c6ef55935",
        "cursor": {
          "ref": "e1987343-ed32-4ecf-88b2-d62a98c26159",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a404afda-5c99-41d2-8b98-cd7fb53370da"
        },
        "item": {
          "id": "e6bd67f0-70cc-4db8-9a98-165c6ef55935",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "eeb31f06-2ccd-4507-8923-102e97f66ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77c0b0d-0dab-469f-ba83-55402bb7620f",
        "cursor": {
          "ref": "e1554705-7152-45ac-89eb-31f4371966aa",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7456e5b4-b4d8-4245-a2fb-eed06d77ae6f"
        },
        "item": {
          "id": "a77c0b0d-0dab-469f-ba83-55402bb7620f",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "52a455ae-da44-4f0d-911d-d2ec301217fe",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 62,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "5fba419a-38a5-4276-af83-20c0b730c5a9",
        "cursor": {
          "ref": "fb1c52d9-46cc-45e0-89bc-66054b8c75eb",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "834ca300-0de2-451f-a805-8beac46bc7b7"
        },
        "item": {
          "id": "5fba419a-38a5-4276-af83-20c0b730c5a9",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "1fc5e2e9-9440-4248-895d-a2e141c0952b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 62,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "ad220ce8-e210-490b-92d0-256ca4494cb9",
        "cursor": {
          "ref": "d4448f55-31df-46a0-a23e-688f0fea5995",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "2f9ea2d9-5089-4923-a435-6e77e94b598e"
        },
        "item": {
          "id": "ad220ce8-e210-490b-92d0-256ca4494cb9",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "3768e31e-f5f1-46f9-aec7-8950292b1445",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "5b377520-dde7-42fe-9143-43216d451279",
        "cursor": {
          "ref": "4c410d2b-2567-4077-8881-2cbb984e7eac",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "fe8ed351-c0d2-44ed-9fc6-6d512ca1b9b6"
        },
        "item": {
          "id": "5b377520-dde7-42fe-9143-43216d451279",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "67a58aac-2cac-43f6-beab-b3f5525ae211",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 108,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "c9fb1334-33f5-4ca5-9f0d-d154c1adc5c7",
        "cursor": {
          "ref": "749aa3c4-6d11-4247-ad91-8a5174a96636",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a6492b62-876e-49a5-8291-07cecb83543f"
        },
        "item": {
          "id": "c9fb1334-33f5-4ca5-9f0d-d154c1adc5c7",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "c4d2ce0f-1e1e-4cb4-82ec-9068e9be8d97",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "3679157f-8cd6-4427-afee-3a18ac00d0a9",
        "cursor": {
          "ref": "9ff22afa-f5cb-4651-befb-0c29ac293a22",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5cca2f7c-2950-493c-a6ac-36b04c61b6a7"
        },
        "item": {
          "id": "3679157f-8cd6-4427-afee-3a18ac00d0a9",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "27c35291-9ae8-4907-bbe7-c90f75094702",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 68,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "18e9978a-d54b-47c8-a205-f3f5799352fb",
        "cursor": {
          "ref": "9c5c2383-c0b9-4d35-bbc8-b231addd039c",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5e953911-8afc-4849-b462-aa34a4d3b0d4"
        },
        "item": {
          "id": "18e9978a-d54b-47c8-a205-f3f5799352fb",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b32cf092-e131-4752-ae6d-156339098f4b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aedda05c-a379-4198-ba1c-436a978de60a",
        "cursor": {
          "ref": "127cecba-c77d-4dcb-849d-e11ed2b90732",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "65ee8f33-b33d-4a94-a6be-a024187c268a"
        },
        "item": {
          "id": "aedda05c-a379-4198-ba1c-436a978de60a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2e969dfb-c47d-495e-b97e-1ee3577b0f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f7e8074-79aa-4255-8c4c-36e13adb174f",
        "cursor": {
          "ref": "0d23025c-2f18-4947-934c-1d1c83eaf6e8",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "3ea17c30-aacc-4f6c-982c-6883bdfe617c"
        },
        "item": {
          "id": "9f7e8074-79aa-4255-8c4c-36e13adb174f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "044fdfb5-68d2-41a2-982b-25bdeb439cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93aed1f5-87ac-4401-9d22-39fbfa210433",
        "cursor": {
          "ref": "e44f50b0-c19d-40b5-b263-5e9ed9536ddf",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f4b74462-a74a-4ae4-b12f-acde98a7ad3c"
        },
        "item": {
          "id": "93aed1f5-87ac-4401-9d22-39fbfa210433",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "29227603-cbd4-4cb0-ac70-e18127546566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4295bb86-6256-4af9-86cc-6e26baddc1a5",
        "cursor": {
          "ref": "37d61ea7-b7f9-4b38-8139-e5dd8c4629ef",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "56f721ef-c6b8-4dcd-a360-5d0601b7309c"
        },
        "item": {
          "id": "4295bb86-6256-4af9-86cc-6e26baddc1a5",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "27406ce1-8c3c-4e57-973c-3babb3912859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0649c611-8ed3-4570-a91b-903bd0a2f486",
        "cursor": {
          "ref": "61be6830-c877-4463-aa65-5a7a03c86f14",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "64cd5eac-9cd7-45cf-a37e-685452e5af66"
        },
        "item": {
          "id": "0649c611-8ed3-4570-a91b-903bd0a2f486",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "1f83ef04-ea14-46c3-8204-dddc9dd050a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739713da-f26e-4218-a0e6-d279efd2df39",
        "cursor": {
          "ref": "2bf31488-8e54-45d6-b181-569b61c99e4c",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b43aa147-ee15-4660-b9bc-f6c39956fd0f"
        },
        "item": {
          "id": "739713da-f26e-4218-a0e6-d279efd2df39",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "3a7fde31-5f59-44cc-9ae1-77c01ea1ece7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d572c6-8a7f-4754-965e-2a981929be9b",
        "cursor": {
          "ref": "f4657c85-e8a6-4edf-8e4f-8104103aa191",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8c287c42-c57a-4316-8297-6f8dbbb68d3e"
        },
        "item": {
          "id": "e3d572c6-8a7f-4754-965e-2a981929be9b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4cbf7257-0b6d-44fc-b2ee-a7eaba00724f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d9476c6-bf4f-40ee-a23e-79c35847eded",
        "cursor": {
          "ref": "52164e18-b3c7-4343-8208-2e03e67d299e",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6d246af3-f228-4e9d-9581-52618a0000fa"
        },
        "item": {
          "id": "3d9476c6-bf4f-40ee-a23e-79c35847eded",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "3a957450-1d0b-4770-815c-fe72824e3c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "762cfc41-a064-4d1e-8ef6-374dea6e0230",
        "cursor": {
          "ref": "573188fb-7cea-4368-96db-aa6867e773af",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b0a01114-d7be-4608-8c1f-be7864c10dff"
        },
        "item": {
          "id": "762cfc41-a064-4d1e-8ef6-374dea6e0230",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "bbfb38d4-7431-4ad7-a8b3-4bc9596639aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd5e5acc-a9e7-4735-beb9-6707fb66a1ba",
        "cursor": {
          "ref": "6c15d52b-0b7a-4edf-9530-e0031b8a91cd",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9747ce4c-147e-4a1a-98f6-e22f0c1a00d1"
        },
        "item": {
          "id": "cd5e5acc-a9e7-4735-beb9-6707fb66a1ba",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ce0ce01e-405a-4020-b393-2ac0577f31fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb3fb5f3-7ac1-4bee-98e1-31d81d73166e",
        "cursor": {
          "ref": "734e23f3-204b-4c33-b97c-f345ac562712",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "52257ddc-b32a-49d0-897e-a96dedb3701c"
        },
        "item": {
          "id": "eb3fb5f3-7ac1-4bee-98e1-31d81d73166e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ff23b18b-2c94-4980-8825-8626e006c8db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9edf263e-5d84-4783-bcea-c9cef9547d0f",
        "cursor": {
          "ref": "128c3f14-1cb8-4e5f-b78a-21db488fcca7",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3b1453c2-329b-4e79-8a46-ae4cd8f96a46"
        },
        "item": {
          "id": "9edf263e-5d84-4783-bcea-c9cef9547d0f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a356e932-2d16-447a-b5d6-a00db676e15f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b8473b-1b13-4a43-a201-f96076bc38b8",
        "cursor": {
          "ref": "739564a4-cb37-4926-b071-e1dd5a866dc5",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "9b815c35-de9a-4015-9372-6a79d8138113"
        },
        "item": {
          "id": "24b8473b-1b13-4a43-a201-f96076bc38b8",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e3d9fc02-b71b-4984-926c-53032f0fe244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27cfa82-0f99-46e5-b79f-82482ee2892a",
        "cursor": {
          "ref": "103f021c-303b-4945-bd79-724d98ff3cc3",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "99e35a9e-6e5f-4b66-a64e-dabcdff088a6"
        },
        "item": {
          "id": "e27cfa82-0f99-46e5-b79f-82482ee2892a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "cfe992ee-f1f8-48c3-87b3-2a8c6357d01e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e5fa17-378b-4196-aeee-328ab9bbc0df",
        "cursor": {
          "ref": "36bd82b6-6596-4efa-b0c8-9a299ec42b6a",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "69784216-0a0e-4053-81af-5f0019dfb1b6"
        },
        "item": {
          "id": "09e5fa17-378b-4196-aeee-328ab9bbc0df",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "2d48eeec-5c91-42af-bcf2-964cf9363e34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04c1643-0725-423f-ae00-4bb18b5da32d",
        "cursor": {
          "ref": "8d9f2178-f0c4-45d5-948f-2d9890a853d5",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "dc291da8-db85-4375-9448-070ab19d011d"
        },
        "item": {
          "id": "d04c1643-0725-423f-ae00-4bb18b5da32d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d1c094fd-927b-43b5-b165-ad1e44557622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7400db01-f91b-44ba-8cab-d673d7b8859d",
        "cursor": {
          "ref": "4e7246c9-adbc-4b80-9751-a24f7dca727c",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ac55bac5-400b-4369-84ee-d87629b7a530"
        },
        "item": {
          "id": "7400db01-f91b-44ba-8cab-d673d7b8859d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "1ddce84f-085e-4b49-b44d-00db3d9126ce",
          "status": "OK",
          "code": 200,
          "responseTime": 240,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "037e0999-43f0-42f1-8be0-e5da19def074",
        "cursor": {
          "ref": "95342318-a345-43aa-8870-fce6c3f32f34",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "82f90224-36dd-479a-9d8c-24d807ee0a07"
        },
        "item": {
          "id": "037e0999-43f0-42f1-8be0-e5da19def074",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "82dc8fb4-bcb9-4d5d-a89e-f2aefc7c15d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e0e81c-6019-4fdc-bca1-38b3c97980b2",
        "cursor": {
          "ref": "8a8af798-80a0-4e05-9630-91fbb70669bb",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "57701671-4a18-4c27-b629-0cc4e5edab09"
        },
        "item": {
          "id": "93e0e81c-6019-4fdc-bca1-38b3c97980b2",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "992a6ac3-399d-483c-8175-855d97b43b7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c3b9ffb-8d1f-4676-8515-2fc3a9d6c0d9",
        "cursor": {
          "ref": "e7f86180-26c5-4f37-b442-15f57d18b08d",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f0f65ec7-472d-4c52-a3fa-3294b2623d35"
        },
        "item": {
          "id": "9c3b9ffb-8d1f-4676-8515-2fc3a9d6c0d9",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "58918e0f-4c75-491a-8e2b-a342b999c472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd83684-31bd-45a4-bd89-fa4abc0555c6",
        "cursor": {
          "ref": "8b4b076c-cacc-4439-ace3-1f6842e27fab",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "2e64f850-078e-46ee-a0b3-944d114d80e8"
        },
        "item": {
          "id": "2fd83684-31bd-45a4-bd89-fa4abc0555c6",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "866fcc68-505d-4a66-a545-e03545c463ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a578538-0cb4-4c27-a0c5-77f016617c99",
        "cursor": {
          "ref": "70f568cf-9fa5-45a0-9fdc-d971c9b2c453",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "912c6aae-8bd6-48e2-9ea0-92a71598d436"
        },
        "item": {
          "id": "0a578538-0cb4-4c27-a0c5-77f016617c99",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "52ff9f16-34ad-4049-a30c-8ce70eed8df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a74a9ea-6e88-4db1-9ab1-155729a382fb",
        "cursor": {
          "ref": "50f3edd1-d0b9-42c5-b1b3-ed00baa1bd11",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a7fed725-7dc6-4e83-8de5-1a4190c2751d"
        },
        "item": {
          "id": "2a74a9ea-6e88-4db1-9ab1-155729a382fb",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "cb130778-5413-42b5-a071-be667d0cc940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c09a0901-ae5c-44ac-8e6c-f178233fd7ea",
        "cursor": {
          "ref": "eab8964b-da32-43e8-90b1-30b85b085f15",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "790320d6-fbe8-4b6c-80a7-e9268e968580"
        },
        "item": {
          "id": "c09a0901-ae5c-44ac-8e6c-f178233fd7ea",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "656dd474-36a8-45e0-98e6-e5085e6d1b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee789a0-fc01-453b-ab8d-3085e07e4a04",
        "cursor": {
          "ref": "6f5cd905-5f34-4dd3-a664-49ab22615023",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "fcf3f38c-0b5d-4f25-91c4-33082938820d"
        },
        "item": {
          "id": "0ee789a0-fc01-453b-ab8d-3085e07e4a04",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "652a77a1-c720-429f-a970-8d036dd90ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a47d6fa9-002d-4da7-bac4-c33663a48b72",
        "cursor": {
          "ref": "0d18d749-547a-4401-985f-72ab07c0b13a",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "17799b68-4e4e-4186-93b4-b8ce5551bf14"
        },
        "item": {
          "id": "a47d6fa9-002d-4da7-bac4-c33663a48b72",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c9da9612-5e04-4eae-986f-8ecadc145877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbea3a56-1005-4734-af05-cb0ccfa5d7f9",
        "cursor": {
          "ref": "5a746616-b15d-43d0-94ea-2427f55af475",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "207c843f-edf3-406a-a171-1b21c76a38ab"
        },
        "item": {
          "id": "dbea3a56-1005-4734-af05-cb0ccfa5d7f9",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "149c271a-292d-47c3-8653-119744efc934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46102a0b-f103-421c-85df-efa695327ce4",
        "cursor": {
          "ref": "7f53139a-4410-47f8-8326-2bd20fd86ad7",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e6441f1b-951c-47f5-9751-d908cde24e19"
        },
        "item": {
          "id": "46102a0b-f103-421c-85df-efa695327ce4",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b3dcc24d-458d-4fb0-a150-e7388d35264c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0273e79a-045d-466f-b452-d850a2d415f3",
        "cursor": {
          "ref": "4d755e09-7bd6-4d5a-902f-861a5d66af33",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b67e8367-8409-49aa-b336-36759a1a246a"
        },
        "item": {
          "id": "0273e79a-045d-466f-b452-d850a2d415f3",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "9673b6c3-9285-487f-b2f0-4d52dd84793a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbceaf8a-99f4-4d2f-a7a7-b7c32e7dff46",
        "cursor": {
          "ref": "76538201-85f4-429b-bfc4-dc0d2709fbbb",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "01b4f9fe-a7c0-49ab-9527-a444f57d54d0"
        },
        "item": {
          "id": "fbceaf8a-99f4-4d2f-a7a7-b7c32e7dff46",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "450763a3-4b65-41a1-9f09-11873233b9e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3044e3b3-25e7-46e0-9a1d-f584eae67da9",
        "cursor": {
          "ref": "317772df-db09-408b-a7ee-1b8819774c1c",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "8e64d806-19d8-4f46-af85-0859b4bf8912"
        },
        "item": {
          "id": "3044e3b3-25e7-46e0-9a1d-f584eae67da9",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "2d336904-80db-4be6-9669-28cffa80e7ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9593b306-81b9-42d5-8a79-a52282370a85",
        "cursor": {
          "ref": "09486830-b6dc-46c4-8101-db89d5ca1392",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2ade1548-0a09-4570-9480-70a009dbe558"
        },
        "item": {
          "id": "9593b306-81b9-42d5-8a79-a52282370a85",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "054b4077-ba67-442e-9d35-999c29be5f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ddfee3f-6c24-46d4-bd75-ca193223b761",
        "cursor": {
          "ref": "de76b7b3-477e-4045-887a-1750ff73d992",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7fdc1bef-6640-4fb2-aed7-0ac79ed0f428"
        },
        "item": {
          "id": "8ddfee3f-6c24-46d4-bd75-ca193223b761",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "fbe0fc64-3224-4cbb-8c35-093e205a2ddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e408aa3-19b8-40ef-b282-2fcd619c64c7",
        "cursor": {
          "ref": "70137c8f-6d6c-484f-b500-d9e2bf5dc44d",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "9f6224f0-5c5b-4077-8d11-9979f6bbf2bf"
        },
        "item": {
          "id": "1e408aa3-19b8-40ef-b282-2fcd619c64c7",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "da94d16f-1934-4161-b54d-a5803ebd58c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dae875c-dbf3-4ad5-b733-c68140d87d56",
        "cursor": {
          "ref": "6e3f355c-27ae-4ebb-b5c3-abe96fac5b14",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d99cd256-46e9-475e-ac52-52844cae213c"
        },
        "item": {
          "id": "3dae875c-dbf3-4ad5-b733-c68140d87d56",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9bd5398a-8494-4e95-b83e-c4dfbc4076de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195e07c4-acff-4e7b-8c5b-5635f5f99aa1",
        "cursor": {
          "ref": "b329cfca-7958-40c4-8f26-88dce324a358",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e965a819-9fb0-409c-b535-869b7af887d3"
        },
        "item": {
          "id": "195e07c4-acff-4e7b-8c5b-5635f5f99aa1",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1c63678a-9591-42ba-916c-f014d22432d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc4867b-4b51-4e4c-9ad6-cd042723a60f",
        "cursor": {
          "ref": "656bb2f2-4b72-4b4b-b292-19e4bca344b6",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "37571f81-edd0-4d2a-a86f-48ee53d16632"
        },
        "item": {
          "id": "0bc4867b-4b51-4e4c-9ad6-cd042723a60f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "173030bd-0bcf-405a-9409-141245f6fcdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4cdc01-96eb-4f8b-b0d2-008e80a77007",
        "cursor": {
          "ref": "cfd9b3de-8155-4070-a9b6-f2db3544da2c",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "65f8fa6d-6391-436c-80a2-c3a70612d76b"
        },
        "item": {
          "id": "7b4cdc01-96eb-4f8b-b0d2-008e80a77007",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "022c34c5-7ee9-465b-8b76-c69d14d136b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1ca004-2444-45a7-bf07-06a2a8cb5bdf",
        "cursor": {
          "ref": "404d80e3-96f9-4f5e-afa3-5cbda7d2ba5c",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "f1a342cd-3d53-4994-b6d9-dc547c5e5a3b"
        },
        "item": {
          "id": "1b1ca004-2444-45a7-bf07-06a2a8cb5bdf",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "3bdfa086-809f-4e40-87d7-6fde28e68298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf6ba0c-f955-47d4-93e3-79a818dfb138",
        "cursor": {
          "ref": "a6075636-6a31-400e-be81-0d8a64448317",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "106ab3e9-2f38-4d97-adc7-4ec45fab5501"
        },
        "item": {
          "id": "baf6ba0c-f955-47d4-93e3-79a818dfb138",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a6935161-4a02-4c7f-8f69-a14bfdef5c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0755ef79-86cd-4a22-8df0-7a3ad8061cb8",
        "cursor": {
          "ref": "c15bdb7b-5065-4dfa-b0fe-7f62b8da597d",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "951ca957-5858-4ad3-85b1-e17175a24311"
        },
        "item": {
          "id": "0755ef79-86cd-4a22-8df0-7a3ad8061cb8",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2365c3a2-8445-4d34-807c-1ca96465d008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55937f8e-e1a2-4959-8b82-4160b4bb369e",
        "cursor": {
          "ref": "3b0574d2-27ea-473c-8b50-1febb78800ab",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "3ce70900-731f-4e11-9e22-d22513494362"
        },
        "item": {
          "id": "55937f8e-e1a2-4959-8b82-4160b4bb369e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "81313b18-8caa-4110-a4da-a6b54964de4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc37cd3-0c74-4944-837f-0cee97b451bb",
        "cursor": {
          "ref": "c354134d-3152-43bf-8829-3d36d06a2281",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a338e704-dee5-4d0a-83ff-c47b9ca292ac"
        },
        "item": {
          "id": "7fc37cd3-0c74-4944-837f-0cee97b451bb",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "85c68db2-9e85-4632-a18a-f2ee73c13800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072c3c00-401a-47a6-a081-cb7c77051833",
        "cursor": {
          "ref": "ce6c1340-630d-4c63-a9f2-be55bf0a2e77",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "5e057ddf-e6d9-4f59-bfd7-c81184b9e0eb"
        },
        "item": {
          "id": "072c3c00-401a-47a6-a081-cb7c77051833",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b994aa85-71da-426c-bfd4-5bf47ca3679d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d08639c6-7464-435f-bd8b-4bde235deb23",
        "cursor": {
          "ref": "bcc5e364-a751-47c0-aa0a-f9f14e97fe09",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "8f14856c-3115-4ce1-ae20-bae341fc16e8"
        },
        "item": {
          "id": "d08639c6-7464-435f-bd8b-4bde235deb23",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "2bc67664-5c50-41b3-8580-11adf9be8d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "127f849b-f56c-4084-83cf-fef269d187cc",
        "cursor": {
          "ref": "f38e8988-05bf-4c3b-9966-5b18e4ea25dc",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "4e6201da-1129-457b-b5d8-ce525b8af80c"
        },
        "item": {
          "id": "127f849b-f56c-4084-83cf-fef269d187cc",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "cc1f26e2-03a4-4f82-8cfc-6e15cd9505c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476ba7f5-295f-4022-af11-1eb48729a70e",
        "cursor": {
          "ref": "8f10de70-8d86-4e29-bd28-cfac313d4ea6",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "0d4416cb-53b4-4a9b-9f17-289df7239f3c"
        },
        "item": {
          "id": "476ba7f5-295f-4022-af11-1eb48729a70e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3b6fd363-ceaa-4eb1-85a7-41093d2c6c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5c346d-eebf-40eb-86ac-00d5a7924f64",
        "cursor": {
          "ref": "123488a9-6be5-49a5-b645-f2780bd32523",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "df4bab8c-1802-46ac-8c3f-f81dc2209005"
        },
        "item": {
          "id": "ec5c346d-eebf-40eb-86ac-00d5a7924f64",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "eab1008b-8228-484e-b801-b9464879ad9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c32d36b4-458d-4310-964b-9b986893961f",
        "cursor": {
          "ref": "9fe72475-dd1d-4454-97ce-73bed2b33aa8",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "94392f02-dfa7-47ed-bad7-c88da71ec0c5"
        },
        "item": {
          "id": "c32d36b4-458d-4310-964b-9b986893961f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "8c913ee5-3039-4995-8759-0dbe25c618dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fbd0c82-c4dc-41fd-a442-dd331a3e0706",
        "cursor": {
          "ref": "7e956c15-918b-47b2-b144-f4aad4399212",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "80ee7980-b150-4e48-bead-3c8821138476"
        },
        "item": {
          "id": "1fbd0c82-c4dc-41fd-a442-dd331a3e0706",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "93c7da62-0402-4be8-805c-9a91b9fe442e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90686509-068b-4882-b910-c5e1682bce46",
        "cursor": {
          "ref": "3c786971-7c28-4bee-8e8f-2b7dc7771fa2",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d0432f02-03ff-4954-b82c-ba2236ef8869"
        },
        "item": {
          "id": "90686509-068b-4882-b910-c5e1682bce46",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "af054495-7d4d-46a9-ae6d-5b7c35f95372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02be6c45-de3c-41db-b036-0077ed51f32b",
        "cursor": {
          "ref": "d356c800-63c9-46a0-b54f-d44721b5eca5",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "35cfebb2-4b00-4493-be32-ebc5b8f71007"
        },
        "item": {
          "id": "02be6c45-de3c-41db-b036-0077ed51f32b",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d708a204-a6c6-4905-8209-a76500fa97a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a0b151-a37f-44d8-9c3a-0065f6f8826b",
        "cursor": {
          "ref": "408911b6-5a9a-457b-8125-c74ce09037a1",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "630cf263-7bc7-4fb4-8ef4-9046d3826068"
        },
        "item": {
          "id": "e3a0b151-a37f-44d8-9c3a-0065f6f8826b",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2ba3e8e3-dd0e-4eeb-96bf-6b404b43087c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c0a1836-2af2-495f-bbb8-34f94c75c969",
        "cursor": {
          "ref": "8dba8161-7590-4baf-8c42-97d6d313f1c4",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "bc19e4be-16f4-4602-bb49-0ee1245dee5a"
        },
        "item": {
          "id": "5c0a1836-2af2-495f-bbb8-34f94c75c969",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a57f392a-6034-4711-8884-a4945f2f541e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a3e1a53-d148-4f99-8502-e232bef2f75c",
        "cursor": {
          "ref": "3330b836-61c6-4a54-945a-2423e830f5d7",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ce81ee91-a936-4e76-bffa-ca47a7d77562"
        },
        "item": {
          "id": "9a3e1a53-d148-4f99-8502-e232bef2f75c",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "0b448adf-c801-43d3-9c9d-5d475b0d1ac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a12f7c5-a0b3-4a57-a733-3020cca9361c",
        "cursor": {
          "ref": "b1332384-a921-42af-ba61-b13439096aa6",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2740bfab-512e-4a56-b5ac-cc93126fa900"
        },
        "item": {
          "id": "2a12f7c5-a0b3-4a57-a733-3020cca9361c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "4ba2306e-9862-4d49-8848-96b1b3f2fc15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c586b464-964a-45c0-9bd5-344ea42d5c9c",
        "cursor": {
          "ref": "6ff7ab0e-8384-4de8-96bf-bece22b0346b",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2bbcbbe8-9f58-4b84-a6e0-923706a29744"
        },
        "item": {
          "id": "c586b464-964a-45c0-9bd5-344ea42d5c9c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "37e06960-cb2e-4070-ab27-6c70689dc691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21425847-7c89-4bb9-b6de-be4dc1737f45",
        "cursor": {
          "ref": "f32f46b9-4c7e-4e20-a1b2-3caa4c07c687",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "2a518701-7ad1-4b40-bf74-30cf8664ded6"
        },
        "item": {
          "id": "21425847-7c89-4bb9-b6de-be4dc1737f45",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ac841442-04f4-435b-b8e4-7fb11ddf8be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f97394-6802-4142-a1a0-c52412036f75",
        "cursor": {
          "ref": "5dccf4b9-79f1-46ad-8a2f-3c7922aba325",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "53777061-ae62-45d9-a83a-ac081c7e1eab"
        },
        "item": {
          "id": "16f97394-6802-4142-a1a0-c52412036f75",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "66d5390d-5ebd-4bf3-a8a3-2f5091e2c0a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 168,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1611b718-a4d4-4ace-b726-eec2d8e1e02d",
        "cursor": {
          "ref": "7c26ffb3-a5d9-4cbc-9e95-5e925fa31581",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "75084cb2-40c8-477f-b2ef-b7c001ddb917"
        },
        "item": {
          "id": "1611b718-a4d4-4ace-b726-eec2d8e1e02d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "34510d6e-5314-4b3c-90e2-12ec096d62ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82978a6a-5b5f-4865-bc8d-656d0e716575",
        "cursor": {
          "ref": "d80922c2-2914-4e10-9b20-c97681ef7af7",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "493cf59e-e346-4c27-94d2-be54933754f2"
        },
        "item": {
          "id": "82978a6a-5b5f-4865-bc8d-656d0e716575",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "37f0c742-a3d7-4a36-b4e5-0ea11ba721b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "724da3cd-6828-49ff-9929-dd9e9befcbd4",
        "cursor": {
          "ref": "fdb3a3f2-c2b5-426a-8b23-2f973a1b31a6",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b56ce6d4-2a50-466f-ad7f-9b11fbe4dda5"
        },
        "item": {
          "id": "724da3cd-6828-49ff-9929-dd9e9befcbd4",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "81704e8c-615e-4450-b3c4-bb82ad6eb2f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f729091-cd1c-4228-9145-f08d9038140f",
        "cursor": {
          "ref": "8befd48f-b996-4108-8384-d129132a4878",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "1a175c5c-c462-4dde-bf65-cdeb214ad470"
        },
        "item": {
          "id": "4f729091-cd1c-4228-9145-f08d9038140f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "5913253b-4f7f-4219-83e7-60f4f88bd945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04e8a12-472a-4b95-a96e-112f89cb1799",
        "cursor": {
          "ref": "af99ec9f-9845-4b37-b6d0-94811101a554",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "90e8f640-cd2b-4a99-9203-8b041e716352"
        },
        "item": {
          "id": "e04e8a12-472a-4b95-a96e-112f89cb1799",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "4ff9d858-6f8e-4543-bc2e-eb9055898891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033f9f7e-5d34-4c65-832c-b3a17741ea10",
        "cursor": {
          "ref": "6d69ce84-ca87-4146-9159-35a67d89d30f",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ef80613d-9906-48ab-b048-534714f28bf0"
        },
        "item": {
          "id": "033f9f7e-5d34-4c65-832c-b3a17741ea10",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b547c69d-2e87-4091-9910-cdd4f1fbcee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c60849-559d-4060-b41e-2b60478ff8b6",
        "cursor": {
          "ref": "0e94428b-3fad-4fc3-8bbd-ff97cefa75a9",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4b94b2ea-d9b1-4f13-816e-6f1aa10b4921"
        },
        "item": {
          "id": "97c60849-559d-4060-b41e-2b60478ff8b6",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4f643e6c-6334-4f61-a7da-cb97957b8435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77ca108-cb43-4132-8999-eb13c964b327",
        "cursor": {
          "ref": "2f2ebc65-1935-481b-b75a-9f944670c435",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "85e244d8-63a6-476d-8c66-35378e38919d"
        },
        "item": {
          "id": "f77ca108-cb43-4132-8999-eb13c964b327",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6f89412a-e73e-4db7-9454-64b6fff1b12e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c741a9b-bc00-4ff1-b577-eb725792fbe5",
        "cursor": {
          "ref": "53edc080-09d2-4533-871d-6d131707c09e",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "0cb3a72f-f90d-4d46-940b-150f1b596955"
        },
        "item": {
          "id": "0c741a9b-bc00-4ff1-b577-eb725792fbe5",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "530da9c6-a269-4a35-9346-968fdc3ea573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4142ed3-d778-4e22-ba50-833b85a45bc7",
        "cursor": {
          "ref": "29c1d539-930b-42a7-a510-70175de24da8",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "836f1f6b-3a65-4328-a407-3063950819ce"
        },
        "item": {
          "id": "d4142ed3-d778-4e22-ba50-833b85a45bc7",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "646cee79-89a5-41a0-bfad-317f405c8258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267e0c5b-a9ae-41c3-a307-4fe326a22b1f",
        "cursor": {
          "ref": "ec45581a-8084-445e-81ca-064de8666bf2",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "635de4ad-6f95-49a7-844b-7e2c87723e61"
        },
        "item": {
          "id": "267e0c5b-a9ae-41c3-a307-4fe326a22b1f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "92413345-84c1-4c46-b8eb-0c8cf971d0f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc77a13-62d6-444e-947f-1b320164e44d",
        "cursor": {
          "ref": "760fc9bf-372e-4f1e-a56b-efc45264bc17",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f84711fd-0eda-4d5c-8182-0526b90b0daf"
        },
        "item": {
          "id": "9fc77a13-62d6-444e-947f-1b320164e44d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "44218d04-49c3-4adf-a3e8-0aba1ef1628d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ca63b0-839a-4b92-85ce-8b3ca5cf0ee2",
        "cursor": {
          "ref": "deea6c51-d8b5-4746-9fe7-86c388784018",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "cc62ec68-8049-4d80-9c1d-c9acaf7621c2"
        },
        "item": {
          "id": "a4ca63b0-839a-4b92-85ce-8b3ca5cf0ee2",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5d65255d-2628-49fd-b0b8-53458749b859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c30a4f93-a098-4280-afb5-a797c04ac442",
        "cursor": {
          "ref": "09c1c0e9-6f30-4790-a9b8-98853cca7b07",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "417db602-137f-40b3-8bec-2002bba34169"
        },
        "item": {
          "id": "c30a4f93-a098-4280-afb5-a797c04ac442",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a5c96ba2-528d-4604-b3b1-50e5ed33cfcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e18e7a46-cb13-4fd9-8d78-c8644c06a34e",
        "cursor": {
          "ref": "d8ac7317-0cb6-4cbb-9d52-ac0dde6f8014",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "70a9c46b-24bb-48cd-a62c-c3c2618ea38a"
        },
        "item": {
          "id": "e18e7a46-cb13-4fd9-8d78-c8644c06a34e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "20f093e3-4cf3-4ae3-97d1-031965254a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb3a118-17e6-4c16-a6cb-54ecf1f6c7be",
        "cursor": {
          "ref": "c6a202d1-c490-48d9-93ea-2870c2548afd",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f6d028ff-94a3-42be-bfbf-21a80f356caf"
        },
        "item": {
          "id": "8cb3a118-17e6-4c16-a6cb-54ecf1f6c7be",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "37895ff0-2cbf-470c-9696-e1acd821c82f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4180882b-3627-41be-9b0e-730bdb411079",
        "cursor": {
          "ref": "e3f0e5f9-ce62-40cc-bfe3-8e3a659ab48c",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "3720adfe-9ad8-49da-87cb-f6520cd1ab66"
        },
        "item": {
          "id": "4180882b-3627-41be-9b0e-730bdb411079",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "5e3f269c-9fd8-43af-87e6-bf6a31261712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaba09a1-25e7-47f7-9fc8-c59310079d2e",
        "cursor": {
          "ref": "6bb606e2-949c-49a1-b7f0-0293af42985b",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "06749f0b-c7d6-4c01-87e2-697a439390d0"
        },
        "item": {
          "id": "aaba09a1-25e7-47f7-9fc8-c59310079d2e",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e71bc8c3-b7c0-4cf1-a02d-841d2729c06a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d579ddb8-139a-4438-8fa0-6f7a05588793",
        "cursor": {
          "ref": "8fa56c87-f7fd-46cd-94de-21a2b1d6e023",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "fd8d2b42-572c-4889-b360-372245b80150"
        },
        "item": {
          "id": "d579ddb8-139a-4438-8fa0-6f7a05588793",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c24e80e5-dcf5-4d49-a002-36c4e7794399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572714ac-e428-4f30-aaf3-e3b27e9b3908",
        "cursor": {
          "ref": "e36f68ed-0c6d-4748-998c-2ddb2b7546b6",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "cee6b875-bc26-4ee1-9279-d304d18c0a19"
        },
        "item": {
          "id": "572714ac-e428-4f30-aaf3-e3b27e9b3908",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "81267f98-46da-4c35-bdee-ad2d8a2bfead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67788891-881d-4565-9219-826412e2de83",
        "cursor": {
          "ref": "e3247703-7bd9-47ab-9613-e29295cd5806",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "803e0189-d4fb-484a-a14d-8d82d1691d1c"
        },
        "item": {
          "id": "67788891-881d-4565-9219-826412e2de83",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "7094721b-a821-4743-97f4-6a9372b20bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a1b8b22-0a32-4bce-899d-af5d88adfa82",
        "cursor": {
          "ref": "4b073640-1971-4bf3-8529-623634c25b37",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "acc813b7-2217-4ffe-86d7-090920a7bfbe"
        },
        "item": {
          "id": "7a1b8b22-0a32-4bce-899d-af5d88adfa82",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "2845cb01-d65d-4e50-b746-4c276278180b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "610b65ae-9aa7-4089-8684-e247fb98cbf0",
        "cursor": {
          "ref": "88f43db7-1bc7-46c2-9810-a6ece101aba1",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "84378c79-325d-4180-b368-55abd4d1001a"
        },
        "item": {
          "id": "610b65ae-9aa7-4089-8684-e247fb98cbf0",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ff91751e-cf6c-43e9-b067-1dadae3584a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef62f4ee-9e9b-49e7-bda6-6f66ec546655",
        "cursor": {
          "ref": "7225d8da-509c-47ed-ae3a-49b3352a2b1a",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "7945b3e4-19c8-4360-92ff-4398fbac5160"
        },
        "item": {
          "id": "ef62f4ee-9e9b-49e7-bda6-6f66ec546655",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "96b8aa79-73be-4cc4-b60c-8769589c0be6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac112ebc-e538-42fd-bdc0-2855cd6ead52",
        "cursor": {
          "ref": "2c85ca01-671e-470e-aaa8-d4021e3e2366",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "65dc6024-e929-448c-9251-43d1ed5fee3d"
        },
        "item": {
          "id": "ac112ebc-e538-42fd-bdc0-2855cd6ead52",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "273bef80-da99-43ee-a523-207ea2518be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37369a0a-4691-4ee0-ad9f-913ff043f322",
        "cursor": {
          "ref": "c96681fe-0809-4e84-90da-da82c709f13c",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "10916445-4d81-444f-ae62-3b0ca4bb625e"
        },
        "item": {
          "id": "37369a0a-4691-4ee0-ad9f-913ff043f322",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "bf284716-e201-49c3-a93d-45c9fca4b7b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b45873-4c0d-4868-8a80-d87d5a4d1687",
        "cursor": {
          "ref": "425c0212-7fa1-4308-99e8-f62f60d925e7",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ca282863-817f-42c6-aac3-3a5d18710f86"
        },
        "item": {
          "id": "46b45873-4c0d-4868-8a80-d87d5a4d1687",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "3f3fd926-98fc-46ad-96ae-01f5bd1d5f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e81143d7-c2ed-4d6c-9bb8-447cd37e6f4b",
        "cursor": {
          "ref": "e454dcaf-135b-4c79-a3e1-b91b6a8d0fd7",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b1fe92a0-f012-42d8-80ab-da86227c0bae"
        },
        "item": {
          "id": "e81143d7-c2ed-4d6c-9bb8-447cd37e6f4b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b30fcca0-e77b-40a9-98d5-3de2078e26d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "878e25af-35ca-48d0-b8f4-eed0d812dcc1",
        "cursor": {
          "ref": "06493c5c-0503-48f4-9123-3f29f1256071",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "bf5b5cac-76ec-430a-aa34-2588feb5037e"
        },
        "item": {
          "id": "878e25af-35ca-48d0-b8f4-eed0d812dcc1",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "85238886-0bbb-4122-bee4-abcf582a2c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb4a525-9839-4be5-998e-d4d331503ee2",
        "cursor": {
          "ref": "6b264717-4f00-49d2-9110-2baf9595a0c6",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3a6250dd-c3f9-4816-b271-4897ca75dc0d"
        },
        "item": {
          "id": "ecb4a525-9839-4be5-998e-d4d331503ee2",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "5dcd5cc8-96e7-494e-b18c-33a9db1c6b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1c9e10-e611-48ea-8f56-d401811c512d",
        "cursor": {
          "ref": "3ade7744-53e9-47ed-a698-28eeb4bbd340",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "df0a273e-cc6f-4ebe-834c-236de7a48c29"
        },
        "item": {
          "id": "1c1c9e10-e611-48ea-8f56-d401811c512d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "6c3c1735-ad7c-41b4-9bb6-a2f12a9ae73f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff767a4-0416-45f4-9b98-7ca83ad1931f",
        "cursor": {
          "ref": "5c67c0be-3296-42b5-9b5f-cbda046b51d4",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c2ec962d-d096-436f-be2e-b979ba618dbd"
        },
        "item": {
          "id": "dff767a4-0416-45f4-9b98-7ca83ad1931f",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a984137a-e057-485e-8c27-e5ab34c2e4ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "006660af-7a66-4c60-8506-ace3652c3725",
        "cursor": {
          "ref": "5d353509-e27e-4c60-9500-62a8651cba4f",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "52828729-40fe-4898-ba56-139f24aa2404"
        },
        "item": {
          "id": "006660af-7a66-4c60-8506-ace3652c3725",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "3c991e9d-c006-42d3-9ded-026fbf8cd2d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84090c78-02a1-41cc-8e98-201ed060c828",
        "cursor": {
          "ref": "00024c33-76f1-42f5-a5f5-c42a0d59a2c6",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "31be46c4-7b35-4b9e-b8ab-4ce99ef5b575"
        },
        "item": {
          "id": "84090c78-02a1-41cc-8e98-201ed060c828",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f3c56f1c-9fcd-4e6e-a59c-4210cdac2bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6009437b-d447-4c52-a176-d64076178e73",
        "cursor": {
          "ref": "a809936d-d8e1-4ac2-86be-165dd71e16e5",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4d937f2b-1d07-449d-b44a-aea2ed54146b"
        },
        "item": {
          "id": "6009437b-d447-4c52-a176-d64076178e73",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "022b3d03-18dc-46b0-b3ae-28ff06481839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d86c5a-1d00-4cd2-84a8-b7c6ee850847",
        "cursor": {
          "ref": "e38feba0-3f37-48a0-914d-e99974b1af66",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "bef03fc7-34bc-44be-816b-6e9a732ad7e8"
        },
        "item": {
          "id": "16d86c5a-1d00-4cd2-84a8-b7c6ee850847",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f3cdce18-a10f-4fb2-8298-85f51b6786f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f03adb2d-131d-4d70-8920-560e99193a0f",
        "cursor": {
          "ref": "ade7895b-52b5-4349-a40d-55dc2b7c2d63",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "07f60212-16ca-45a1-bb98-41b8eca54869"
        },
        "item": {
          "id": "f03adb2d-131d-4d70-8920-560e99193a0f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "05b3a2e2-4378-46d0-84b2-041376dbbd54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5ec95a-bf26-410c-a9ec-6a38f31956bf",
        "cursor": {
          "ref": "68931100-1e0e-4437-8ad4-6e33ff789d0c",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "daacac6a-5282-431f-a370-1164cc94556d"
        },
        "item": {
          "id": "7b5ec95a-bf26-410c-a9ec-6a38f31956bf",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d1c2eb8d-cb9c-4e43-b424-c3f1cba34d15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1b8cab-c8f4-44ec-b69f-6f8ff48f5ea5",
        "cursor": {
          "ref": "2c6b9997-ef51-4030-9a46-961cae2010e4",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "94350b89-8f61-4aa7-9e3c-aff736fdcbbd"
        },
        "item": {
          "id": "0c1b8cab-c8f4-44ec-b69f-6f8ff48f5ea5",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e23ca3ad-f88d-4643-a3cd-ba9b39ff9f2d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c373ba80-2f05-494b-b81a-651f70ef1bea",
        "cursor": {
          "ref": "98932f5a-0958-45ed-95c1-8b0dff589102",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "5554b41f-2e8b-42cf-884b-0e55345ca104"
        },
        "item": {
          "id": "c373ba80-2f05-494b-b81a-651f70ef1bea",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "7737c308-fced-4f3f-8e73-4655ee1c8dfc",
          "status": "OK",
          "code": 200,
          "responseTime": 85,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8dd635f-e7ef-4e97-8f3a-7c67f219f90a",
        "cursor": {
          "ref": "56391056-d258-4a7c-93b0-315765d30102",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "bce21782-39b4-45af-9724-29dd7d52ab57"
        },
        "item": {
          "id": "f8dd635f-e7ef-4e97-8f3a-7c67f219f90a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e58a13e0-3858-49ae-b27f-c8fd1e80189f",
          "status": "OK",
          "code": 200,
          "responseTime": 2891,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1970658-beeb-4155-b056-9e5a9dcb8a77",
        "cursor": {
          "ref": "610d561b-9f28-43a5-b251-42ab5b0d8512",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "40998eed-0283-4741-a4c9-239a3285eb55"
        },
        "item": {
          "id": "f1970658-beeb-4155-b056-9e5a9dcb8a77",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "17d7a52f-5e19-4fba-a01f-07601ed8ffea",
          "status": "OK",
          "code": 200,
          "responseTime": 2803,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cbd2f4d-8078-44c7-a043-47ef35cafab4",
        "cursor": {
          "ref": "ec7c16c8-3ca8-4d90-bdd0-1f64b34056d7",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "05a39938-4cb6-4d8e-9ebc-43eaeece6394"
        },
        "item": {
          "id": "5cbd2f4d-8078-44c7-a043-47ef35cafab4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0505baf1-6e19-48c1-8ca9-284f784d70bb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cbd2f4d-8078-44c7-a043-47ef35cafab4",
        "cursor": {
          "ref": "ec7c16c8-3ca8-4d90-bdd0-1f64b34056d7",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "05a39938-4cb6-4d8e-9ebc-43eaeece6394"
        },
        "item": {
          "id": "5cbd2f4d-8078-44c7-a043-47ef35cafab4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0505baf1-6e19-48c1-8ca9-284f784d70bb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "865d6026-446d-441a-97c9-29ea9e41c356",
        "cursor": {
          "ref": "f0b24fff-3e0c-4853-9d82-9c7fb7e30c4f",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a02f2799-7187-4fc9-900d-4eada2bb550e"
        },
        "item": {
          "id": "865d6026-446d-441a-97c9-29ea9e41c356",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ef0f4381-bb9e-4392-8c1c-77043c2ec628",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d91fa9aa-4b81-4695-aa97-bf630883582d",
        "cursor": {
          "ref": "d0fb8d78-13e6-47b5-b9af-c864900d8176",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5b59dfa3-e9a2-448c-9505-2e5a0b147f9e"
        },
        "item": {
          "id": "d91fa9aa-4b81-4695-aa97-bf630883582d",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "86b0faa8-dc18-43bc-8362-8f6b74bdd61d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}