{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "fd8e953a-a870-4e68-8c26-d504c7be43d4",
        "name": "Clear Cache",
        "item": [
          {
            "id": "4e2af6a9-529d-402d-ba5e-aec35420c1e1",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fd71bd34-394d-479b-a70d-b5bc0f0699d7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cb497639-cbc0-4441-84d6-b8d39232a239"
                }
              }
            ]
          },
          {
            "id": "17431404-62a3-48e8-b87e-d008ae518aa2",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dd128e7f-d975-47ba-82bc-63cac5679bce",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c7c5cb50-160f-48ee-a02c-4f22c5efffcc"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e6bb96a2-bdea-4871-841d-6a18c6dad8cf",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "22590f65-7ac1-43ca-8373-b7041790466e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f6d5a505-dffd-4734-86ee-77c0b4d59b10",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a722b518-b14c-4f47-af43-faf088d470e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f8c945be-5ed7-4e14-9856-09f2384f19a4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "379971ea-2ac1-4f62-b0d4-077c6c3b982c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "576a8b64-2e84-4c00-97c5-fab5e15aee68"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "de52ece9-9e53-4526-9664-95cff2974c19",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "91283511-8ea4-4f84-af35-69729120235c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2d369d0a-16a5-4f2e-a7f5-5148569354fc",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "bae351fe-24d9-4c10-a61c-3acad36c6784"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1eb27f4d-c4ef-4df2-836c-0d9e90fbc4af",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1e790cd6-fb4c-41a8-ab53-9dee94b2d882"
            }
          }
        ]
      },
      {
        "id": "c2c4217b-6515-45ac-9d62-8cb95d14b922",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "87021a31-63f7-479a-8a4f-2c5dff5be94a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "25c7736f-b8a7-43cc-a83a-6bb6df75d0ff",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a87ea05c-4538-4eae-8510-c9c5e7618653",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f77b69e-001b-46ea-b329-d9d4ce6b244e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "def11aa7-1a58-4938-b665-cfb7257064ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1530fc8-9e1e-4485-ab4f-4f2761382fab",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a08af3-d391-40d3-a2c3-70d0f76baa5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "690f5ba6-3fed-486f-a732-196821f1a458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e85dd7d7-d122-4c43-ba0d-4ce030fce84e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "544199aa-2395-40b9-8799-80271ea40831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b03bbb7c-a76e-4756-bb15-e69b005a7302"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b238db1d-1c58-40d9-abc1-03dc6ab38c97",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8dd12887-4cb3-4662-86f0-70d7b6422ee8",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "494c8532-06b6-46fc-9e59-f6f11f5beaa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e9f92090-84ed-42ff-8b54-9eada14f6150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34fbad92-6f41-40ba-9d9a-4a788663e8cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65395be0-7088-4498-be4c-ec1315c174e7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7f9bd831-baff-43e8-8ded-e05fd216b83b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "18010e1e-2774-49c7-a450-00182220d2d5",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8c492c5-f514-44ba-963c-6bd5b99ff25a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "6e04ab8d-d5f5-4788-9214-e7e72db8ef65"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1494b0c7-bb66-45eb-893e-63c6ab52091c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "0d083a11-0185-4d51-940a-e44b5c1c37b7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8146589e-c3b2-4d09-b27a-cad5d3f69601",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a144e06b-99bb-4119-b908-44307e661799"
            }
          }
        ]
      },
      {
        "id": "a48377ab-f188-4044-962c-704bfeac8b13",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d4d47f43-7648-4279-b74d-5e8682852280",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9face50f-c0bc-4a20-a231-77cc812d93ce",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "6f02b458-4943-4a25-8629-dd882a25cf14",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "820f5667-9f93-43e7-b52c-b993dddf1d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "005603c7-8f49-4214-bab9-b148f409ae13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3211d01d-3cae-497e-bb71-f0b8791c4cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4b24980-4f8d-40af-83e7-2a2d3d5dbf1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d96107ea-d923-48e6-a547-826b800ea001",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5642a68-c1eb-4c4c-b115-432c9552b52a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d74c360c-8ea7-4f43-8db5-a86d5d2cb6ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7c1e31-57ab-4b08-b10a-2c606ea3b915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71027d0a-9897-43bd-b81a-6713130e8f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e492cb74-469b-4b12-b308-752e0db8a1cc",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2fc05e1-7c78-41a6-a21b-39893d171588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b692ecef-4e1b-46a1-9fbe-df5085966008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d6a37fa-a40c-48c0-91e9-728071943bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa6afaa3-f21d-402e-92ef-ecfd13f33a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef8ce4d5-adba-46d9-829c-545348064cc9",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11bdea67-cfdc-4085-a39f-fae018c9d836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "289ae49e-cdb7-4498-8434-8a8d8a50ae87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120ea7f7-640b-426c-b2bd-2805a54efcb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e3f312f-a16f-48f7-aeef-8fa112276116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f85928-0ba0-4188-b69b-3b86cf8311ad",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "633d6cc4-8690-4308-b8b8-6e979e00e048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e5f37c4-2091-41e9-abce-287c5042c1bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d913091-9cdc-4161-aad7-196969e92f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9915a296-66c1-4d9c-bf6c-cf1491b637aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "147c792c-f65a-4a12-8be3-c54d5b0a5454",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "947462f2-18a2-49b7-9067-57ae9e18c24b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51288e56-6046-4e13-8575-4e4a44d248ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9954650-0e09-4a05-907b-b6e32113e456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65ad8e51-e61b-41d2-8186-904cc4b2cf29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6896fe95-bf60-4a18-a896-98841951b3cb",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5bf5c66-ef53-449e-a150-9bd7d32c5ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ecabbb7-d24e-474d-8be5-bf7cd144e160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c89325e8-8726-4554-b21a-809ceca9e07c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8371a66c-3c57-4151-834d-2ba5516d9c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e334bab3-a30f-4c4b-900b-3d3b332eed63",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9cb301-4a62-491f-8fbc-29a5c56c89c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6773e72-b51b-4b29-bd1d-14d9a1c169a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e19e383-e9f4-4f8e-bd1c-4d70e5f4aeb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27ae4ec3-b75e-43f5-9756-536efb762dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe9446b-c95b-4a6b-8d2f-d875fa2e428b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ceaa89-74d3-4e5f-af00-4ad57c951083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14c5e9d2-0a8a-49c7-9234-6b19126e6b9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc38b91-579f-4423-b8dc-1d5e98d261d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d3315f5-c381-49ea-a589-7a0efed51027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d0c8475-86ec-48d4-a2c7-44618d3c3de5",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37700505-accb-4f34-afe9-6224474d2fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eb9f0ec-0d1f-4686-85c5-c23a40bb5476"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "527e61e8-5448-4268-9e1b-598502320fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2ae7892-5b1f-4e62-8727-e11cbe235f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec1f25f4-963a-4235-b2c8-ffde8c5d3a85",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c24bac-fb76-4e8f-aa97-9b30bb5e604b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fbb6ac8-7914-4f87-9a38-6fcb10aa7b9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e98495e-03e0-422e-b213-4be02c959ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49010135-187f-474c-93d8-09abdc0937a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e31076c-2a86-40dd-ae9c-2ed8c0b41060",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "600fabbd-60ed-4746-aab0-6660516a643c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3a55e7b-d3c1-422c-8592-af03049c2462"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1c2dab-39da-4020-b2f3-400bec11ccce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd8bb777-3385-41ab-8acf-82b1598e0dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dedadaa9-66f6-4cb8-8ec0-a505575eb507",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dda6259-72fd-473a-b662-68a7abb9e392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e67e58ee-6ce5-4891-8049-0d5736b5ab02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54eb6cbd-8269-4746-85f2-9f95a40fa441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c68f5ea2-6229-4927-af7b-982eab6f602c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0acf9c6-f48d-4077-9f3c-c4b0d822a9b9",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7594bcf-c1c7-4833-87d6-79c9fbead02b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cc51a2e-2fb2-4a4b-a6e3-10596b2ea5ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec84003-27b0-45e1-8b77-bb17f9933ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09f67ff4-2539-45ba-b87d-135a8cd0d1ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d24c2906-4401-4808-8084-043cd7e8cb8c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20e8100-fa4c-4e5a-8959-a9813c987521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d68792cb-e454-485d-8538-51937e5bcd9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d54f341-e3e1-4bee-a9d6-6d08ca5550c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e09047f-f6e3-4050-84f1-51745d3f8bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a07ba2-35f8-4f37-8888-bfec3fb468d2",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61df81bd-1826-45d6-894b-8795cfeb866d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9274618-b030-4607-bd2f-7f6f019375ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "671c5534-5091-4d88-a2e4-29788d5bddaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71f1b8e1-32ea-46a1-a7bb-ad6df7c3d2ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b829f3ca-2867-46a8-8f84-c4b4380c3322",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "012e42a0-ca73-4aaf-bfe9-b331d0000c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb141b65-e661-4682-bd6b-263b1ed91323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0628bbfd-bb67-4464-bd94-3cd276887846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f873088a-51a5-44c3-ad89-5187cf9860a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fbbfdb6-d026-4693-8d2c-902532a915c0",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e950e73-92cf-48d1-af75-0a16a3f5431d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f456a12b-437e-4672-a1b3-5fed1822846b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ea74df-4c85-430e-9a25-1a58eaa32400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "22687c57-7615-4b6b-83ab-6ae57265bb53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989b9774-3632-4815-a52e-a4da85dd3f15",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c45bc08-7c8e-4441-a0b3-0e8fa49b01bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b13426bf-3ac6-4fef-9dd7-43f379894d6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed2fb10-8b87-4fc2-8be1-40a69b914ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1638f08e-0b24-409a-a115-27c163035db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c0e379-4837-41f1-be81-aa5b11219b99",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0146e44f-d2c3-44a5-a3c0-700c40e3aa5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21297277-9536-4d3d-8d4e-198fd2d54093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc4d58a-5e44-49b9-a137-5c6eb9f1452b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e192ea9-fbb9-46ba-861c-9d57bb0bb6c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cfa7d57-5ab7-4a5a-8d3e-ad2d63b3c929",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d1d2a9-75b6-4e27-a6cf-db30793a72cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a826f3f-b57d-44a4-ba27-221d343d125b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bff68a2-af64-4fa6-b53d-908012524381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a54b1ee8-3045-44e3-9623-5629c76178a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da9f5ca-fad5-4bb5-96ed-76a1e0be5230",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ca2379-7b01-4edb-be98-adfe1e3f0934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f30b93de-9ac1-41fd-a7cb-b7d90aa08ce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c591cb5e-64c3-4af6-be41-f9524658739d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b2f9c08-25d4-4a8c-86ec-c37152af9e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4147ba9b-452c-4be0-b4d2-23963905a8af",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef63da08-17d1-4c82-bd81-8cce49c67056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e98a989-6a9c-45f2-bbab-60ed1e6d9e89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ccf9b4f-5990-4917-b5ef-57734e6ce1a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8c3b88b9-5d23-4ff4-8b0b-de286314f089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c11df4-3d38-4139-8640-996c8be1d196",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa4cbc8-1695-4cae-96ca-0be5a8427630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "219e232b-17d6-49ae-b8de-450c49bf1395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd40faba-c283-49fb-a746-af770a5cc2d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ba8a395-8fb2-45e2-b632-1ac5cd44b43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09fd4856-6560-4b41-a9ed-d226871f433f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec5f7602-e515-4c92-99a4-b56638195f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42df52dd-bed7-44ca-aac6-4a78a975f35a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3190186-c08f-487b-9bbf-988e192c0a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "be12d2cf-01d1-4afb-a43a-850f55dc5dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68edf989-9da5-4b0c-933b-02a2122060d7",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "def7eafc-b342-42c5-85eb-7618e816fe73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4b7a6f3-11f8-4c4f-9197-cb93a24c0a50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c169df46-92b7-46de-8fe5-835a37f80e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1629da32-adf3-4d04-838f-45d94a51a50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf78c53-fe6b-403b-99e9-067799b709f7",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41393c93-af8a-402a-90d8-3dee1a8b94f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bd12439-e62e-48d5-bd4d-b21375d7ba63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ee893f-7389-427d-9670-d2a45f7e134e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d2bb176-7a7f-4dfe-b584-3daa4969b424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ec68e8-764a-4c1b-a433-757ed37b2baa",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47ca3ac-8c62-4816-bd5c-c9e2ab334a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0a9bcd9-3e80-4e34-80e8-ee0d2de2744b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "091c969a-ea2d-4585-9063-6061cad8cf1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c5febc0-e4e2-4aca-a822-75a47246f093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f885e6a8-c24b-467a-8bb1-9f5754853a1d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cbb754f-620e-4039-9770-1398ac0cd3fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2220c745-6ef2-4b2a-ac82-ffddbae64fd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34734f99-41b4-4749-b115-7e6b80ac7162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4a69324-2d11-4cfd-953b-181a252c6492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b86ae7cc-0314-4fce-8fab-47d522d9feb4",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d03ecd48-8843-43a7-9dc2-f9c1d2755046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d29153d-8a10-479d-8355-49bf7e1d7178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4311e227-82eb-4d05-a812-3f23aafeb183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ee36826-0137-4766-8b51-a20576bbeb00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2abd237-81d5-4d78-ac59-d3aee11e4e18",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d05a59-6000-4dcc-beea-56a76c48f832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92613135-dfee-427c-bd93-d9f23a01c206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7d021f-d47b-48fa-8bf3-fbf8308d7a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb0fcba3-4f28-4c88-bf97-dc440b0064a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1478ded7-9c61-4235-9c12-95edd1230b3c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9943d77-024a-4bec-a9f9-d1a03e1433a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d96cefb8-a1ab-4140-8665-cf769c35117b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "599f86e9-5b5b-41f8-b7df-ca9e10f2eb20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "630d99da-640d-4492-b2e0-6b1cb46ab7e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f1b3535-838a-415b-9338-14e37dd99776",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab5ef50-d26f-4754-883f-27da981c2f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01221ade-7ac5-44ff-ad73-d20e78274b8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef14c702-dcb2-479f-9a10-7b3d31ea38ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b6a7a01-faaa-4f91-b0b7-6d17415b546a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3122a73-450f-467f-af02-192a6f927e07",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "620aa453-8aa5-451e-87f6-17b10782fbd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e078ec6-b90c-454b-bbac-52410a31f9fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da7a41fa-fa43-4822-b818-35694c8900ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7660e2ad-f5eb-4b6c-9c9f-e884664243e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cc1381f-2c7d-4da3-8497-4e3f2dbad09e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4427af-012f-4ad8-b39b-c6370ffa6a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdc1f4c0-3f1f-43b4-9de6-2ba669e4d7a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ed722d-4d97-4aa4-ae29-b8b746dd48e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "392ef082-39c7-4258-8fce-6084f6658860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddbdbd2b-27b3-4e16-8ef0-2731842b5e72",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22af0894-52d3-4ebc-bf07-c0062d630889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ca6bcefd-abf9-40eb-b96c-5c783c3edb2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e54a18b-bd1d-4d7b-8e2e-d6a28dbc90e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "69602009-27ca-4963-82de-c6a069c78253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d9dea51-1453-46e9-b316-b4335506996f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "041aa01f-e93b-4b45-9134-21cbbbf80154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc9d9379-6f10-4554-a659-f40ce588ffad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc57db77-786b-4743-9e8e-3a7c0493ab5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f205f955-f13d-4fe3-bedb-60cd418f7514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3485501-8117-40f9-8d1b-2a018c32e0f8",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5864d236-de39-442f-b05a-e9e01137f090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c378024d-c426-4baf-b4b6-744ddb8a6b7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb46962-e2f8-48fc-9cdd-5da2d141ce75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8cce21db-e4e6-433c-bbe7-47f0f38ddc6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbaaed7b-42fa-4729-a480-8d261593e3d6",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b635416c-c265-4702-89e6-170c4a0682a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2baaf0d-bbfd-45c0-9293-47c550938319"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f1d14a-cfe3-43bb-88a6-8ee96783d42f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "180ded02-b0b5-4ff1-8b88-b268d2e97e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d2f7f2-0048-443c-95c6-59978beadaad",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b265408-f099-401b-b6f7-f20bc1a5d951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f7d394f-bee3-4ad9-b7fc-fb048c5d9d52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558708de-782f-489f-943e-c49ee2bd5a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ae89668-c971-42e3-b763-998694cd5f23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "194dc2fd-231e-48cf-a8f5-6c268fa49558",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "447dbd31-5c6f-4fe6-8ef7-59f54d909e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e23dc96d-ba10-4fa0-b0a6-b72602840b5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7a326f2-6a49-4f3f-ba3b-999e20d2c459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "87b55036-419f-47b0-bfc3-ab8568e48051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b653db7d-4fdb-41fe-a04a-ad9b2c415848",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d19adcc-07ad-4ca8-8273-8c0d9bcefe15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a74cf0f-792c-4377-8abd-14d2ac145508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2731cdd-5dd5-4c72-b78d-bc09073b5317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "2099c143-2f3e-45d6-984e-e3ba00120282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f0b62a9-21ff-4b72-ac2c-3af97b6bc616",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87c44ba-7c33-4af4-bbef-7e3f1a9e4373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce021dcf-d1d7-43bf-9f15-a86cfb551927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da7618f0-f254-4a88-9ea8-55bd26f03172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b53e0722-0376-405c-9408-cac69274571f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc46c723-e509-42d8-9c13-8d3f6bce2ae1",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa90257-b298-4789-857b-4887380735b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fba3350-7738-4d11-b2e9-2a6abb5a9173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c5071f-3954-42ca-8ca3-2f857f897aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8a3176d-2801-4729-affb-08a1c307744b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d83abdd8-bc6b-41bb-8769-db3156aa8530",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4563492-fbea-49b7-a6a8-3a95237f109b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eabb082-271e-456f-9bfc-b96f09c69387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1875ceb-818f-4d10-9977-290c79dbab2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8bef46a-e8a7-48dc-bf5f-1aa2967fc5d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18989c4a-ec2d-4197-8b5c-70cbfad426d2",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8533b4c2-63cb-4929-9dbb-809cfb0fd20a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f4fdb26-65ec-4c25-a6fd-9b7c1fcb1c42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba66d6a5-e64e-4561-b45a-590f0579f44c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7aeee2e5-28a7-4a32-b820-c6132bd1333b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be45d7e4-394a-4633-8f61-0750d56756ea",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0edfd2f6-f55a-4cd7-a44c-a8edbfc477a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "480b9373-94cd-4d86-aaf0-317785a3e44d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b061920d-104d-484a-8d2b-ea2470e08736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d945f55a-24a3-4a9c-ba46-ee95aac02d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038439a4-5a56-4386-a397-15cfdb973c42",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b95a16b-744f-4020-9f07-ee4bddca3a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0428181-3890-45d7-bd14-798225627d9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f7028fd-b269-46cf-89f0-16974be16215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "275c6b30-4a3e-4302-8a77-6308301e2090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ddb9c3-3288-46e9-830e-659298b30d5a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b1e14a-d30e-42b5-94d9-cc6402fde45f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a39fb06f-497f-43d0-a1b7-2828ea0ab5af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da472f7c-671f-4db5-a16d-78eed9a59323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a907c70-c93e-45b4-b9fb-f33e8a031d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c950c49-e137-4f8a-9463-ca07af42be12",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca2c6a1-ffba-4968-9a36-6b0367ff971f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bb0a969-9275-44ae-b3bc-e212968480c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72892d2-38b7-4f08-900b-974dae6bad57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a8160444-9a04-4437-983e-a7e4e10bcff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a411f639-6a4d-40f7-bfb2-f47d3bb669ea",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f912f6-a7be-4639-a8ed-a30a589e177b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae57fdd8-6205-4b90-a9b8-c59eb97b4244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb55732a-3e2a-4a54-a10a-688d0c7ffde7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5313ad9-50d6-4e6e-85ff-01424ad2c222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995a8dae-41c6-4264-ad1c-3672cd775a73",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49070129-d687-4ed6-8009-aa7c4b9c4a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c2a54bc-9e5b-4692-86d3-6a0ca5c3053b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0283563-da11-44a0-a3d5-a2a6cdd07ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9b3d842-cff1-410b-936a-df915cc435d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a02e059a-240f-4504-9c79-66af2a0232f6",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae5c71f-6511-4ab0-9afa-639cd8a441f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fa17e53-3647-4d32-b77e-767be2a460af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732c3543-4a78-4f25-ac79-d3675cdad792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "da15a33f-c83b-4b2e-ac60-de46cc57406a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84186acc-87e5-449d-9f72-2789872fd2f2",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5a4c8c-6fcf-4149-9c46-25a2003938ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5e36b7d-e361-4ed3-9276-0b1c6ec75817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc9768a-f668-4875-8579-d2e8fc4dd9cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9ee064b-2dba-4a90-a9ee-b3c2075a25af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d08db7-dbfd-4b0e-977e-ec5b0c8974f5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddeaf4e2-12c9-4a83-a1d7-af5f66307e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70922f62-486c-4a00-88ef-5e3d14523e5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ade12fdb-e93b-4cb1-8a2e-302d895ac558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "35873f2d-930a-43fe-a402-18bd64a54907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a4666f-9cde-45d0-910a-a1ff9c90fc80",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ebfccce-6052-4725-9d22-9d96f081a769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "642dd2ee-b09c-4e62-a86c-477b22dfdbb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec82d00-db91-4b2d-be08-ec13f500f063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b6604b58-e64c-4621-a629-93010b9e7260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1227dc35-3b47-47f2-98be-22dfb67c7992",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db704a5-d17f-436b-afe9-eeda773fafe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "327e9505-7647-4aff-b87d-dd1694a9ce2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "437bd7eb-94a1-4903-bbc4-a8f6327aade2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4fdfc689-581d-475b-85cf-fa9b238587ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d630c40c-da76-4755-bfc2-560e0fc3144e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53c84ba-838c-47b0-a0c9-5c56dbe922de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28552ce0-429c-4feb-be95-08b5ef10dad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01a080ef-b637-4517-9851-0d040468a69f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2127e695-32ed-4798-ac4a-79816fe43240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a6ae459-ec5a-4b2f-ade2-5fe2eb79472f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4067efb-3e0f-427a-a8db-57a034442019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "555ed7cb-1ac6-45c2-b41f-1b6480c6171c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d19f26f5-f40c-45ea-9e7d-404b9308383d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "67a938ed-39cd-462d-a67f-f6e86cad5a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e93beb44-2959-4731-81df-d3afa32f8ba7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea9fe24-7d44-4c3c-a36f-1138015d43f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cfef7e6-669a-4757-b244-e2a0882d3db9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55954172-3aab-4968-bc89-86fc499128cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d620c6e-005f-4555-9f07-dccf2773a661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9934522b-3548-4c22-8a56-73346ee1a69a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36db9c24-d358-49ff-808e-234ebbb59dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70e24675-066e-4a85-abf9-46cf172e089d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ce8444-62de-40b1-86e3-c844950fa6d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f0cdd94-79a2-43ff-9566-f53e819f9b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784b4dd7-25cd-4af5-b0e2-d4616610e478",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f24f5a-d290-4f8e-a46c-c2ecaef960d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f55c97d-9655-4451-b712-e353de9c0179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a60c092a-1309-46dc-b7e3-b7512ccd08e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "170424de-7964-43d4-a85b-acba4878c7d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801e180b-c7ed-4a74-ae11-d646af9d5f04",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb20d2af-d1b4-4159-9341-ba408ad902b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc290540-a64b-4a1d-a0df-126304568e1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "801ff3d4-9471-4a90-b3f0-3b2e8d53ae9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c18c19f7-610c-45c0-94fb-d3a66f5819e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5206b34c-6f8e-455f-9d82-d8fb2fdfaccb",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a41420d-3be7-4b5e-b874-5e59b44a5575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75d595f9-3f96-4048-a57d-c245c585d210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25dd1d7a-8b5f-4897-92f0-d871d382acff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a8e8881-f5c8-46c2-b5d2-e8bed0cb593b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240c76ef-f99b-4ac9-ad99-fd9fbbef45c6",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b0b0d79-7e22-4c3d-a289-1e4833eb2dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71add5b9-2865-4141-8fdc-a4a8a0a299ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4cd89fa-cf75-4a02-8f47-a2c59907d7f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "81267fa2-5c18-45bb-89fb-0c846252bda7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e60b0585-7ead-4334-8f36-629960c93506",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb2d106-ea05-4a05-8b02-5e1a72d76fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebb3b4b8-8510-4f62-8276-c90004f390e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "368cfdfd-103d-4ea2-acc4-093d991dd28f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a1fa799-a136-4d3e-81a8-799d440f9078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc73b06-dd9e-4972-8ed2-25311ffb6993",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9faad33f-4a2b-4321-a25e-378f8c432d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7f53514-c3a5-4d05-9ddc-497274460060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "658e60f0-2199-42c4-b976-007267613ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "28b891b4-4a73-4f31-a4ba-ddd4aa6bff3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe1003a-6b15-4d32-8368-275fdc3253eb",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d0cac6-05be-4ace-af3b-4d35416c63f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c53ec4e0-27a7-4a63-b190-f78557df8374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b19fddf-88cd-48c6-be6e-c5cb5aa9e250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "558fbbe7-cf99-476d-bf6a-dd1dc373a50e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24bc52cf-0930-4199-a9a0-b822190ec943",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc826af1-cd0f-4aac-bf30-decaeca09750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f74afc49-5ae3-4252-b18b-cc5f2d2b3040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a453b073-0777-475a-9993-c091a360f271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec2a96be-fc86-4dfd-922a-42b977462e70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27174c51-4390-48bd-b3b2-6c33c99b8bda",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deee794f-4654-428c-8c84-86847f0f3c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66180f7c-2139-4dc8-8f24-c1a570ed6165"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0109c4-fe66-450f-bab6-4546cda7e56f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1ea1422-5298-479b-97b2-67543f53b72e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b70cfe-7fad-4b27-ba82-47e8020ff116",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80700550-21a6-40eb-a0ab-24a873dfc377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2202cd6-36eb-40b3-8555-8f819b45d5cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0ef0a7-568d-4421-a64c-f48a52e47f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd0d6a58-28c9-4771-bdf6-9c282d40c542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb4bda4-434e-42fe-a103-4fb50fef14b0",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c81e429-2eb6-4d9c-bdef-d6c5cac40c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "392fd48e-b0ea-424b-ad2a-e8e00617a3a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5fd4505-410f-4f4e-9f83-9b3d03abba8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b49449a9-b16f-4ac9-8d7e-1337f51f135e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3d2bd1-b2ee-4518-8579-4e678c0b07fe",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b7bc94c-7c00-4a0d-b6d4-25816bce57b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bff2d47b-1a68-4e7d-bb8f-ff344e28ab03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec043bf-cc0a-46b7-84c6-894ed7814364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd3d73a6-3bd7-46c8-8807-8c5786967e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f287f4-de98-4384-9cab-8874677554eb",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce7f1442-9a6e-4fdd-924c-5316311f9b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "629fd980-ee39-46a8-a87f-589de94dc2df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e975d8-12c2-48a7-b4c7-674f48f7df3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b7925f8e-7986-41dd-a825-af625cf31f9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8beb67b8-7600-40e1-a79b-de0a9d9d01dd",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c02653-bf62-4ea3-928f-ecd425be4082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bc60619-23cb-415b-b817-6e74e8107c27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9176fe-f4b9-49a2-bdd0-4fd334e304f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "001516f6-077e-4778-b70c-6046f942ef9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57aaddf-f8c3-46d6-8975-e899f2407ef4",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1a6e99-972a-48a1-948e-a30bc744a0ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cbe2a11-7904-4c9e-8084-686cc77e946a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9afd516c-77cf-46d9-8ced-fbf4dcdb6251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a165181-5b68-4265-b4f4-fdc1dd82e3f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeee30c7-9743-4d56-806d-db2779df80a4",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ba2bb1-aec7-48a6-9f44-5359fd0b3c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28b67583-c079-48d4-860e-dc525fe3f6a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e70b2f98-5f71-442f-8069-9df51e533695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "39f0dd7b-47c4-4530-914d-e76a72ecb595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c255436-5ed4-465e-9db6-14231bdd5200",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c5a53d-e9de-411d-bddb-7428abd617ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77563931-cf28-4d7c-ae1f-4699abf80a57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad3db5f8-72c4-4829-a6cf-29dcf263813c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a67835c3-efa9-40f1-82da-df66dd4f3fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "278d4b37-83ea-4417-9ab4-ee77bd0af781",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abafeb08-059f-4a6b-a322-bb823571fe7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0fe2d64-1d44-4ae3-afd3-a6cff9e42491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5637619c-f304-4537-98d9-5f8002bbc0df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8bfbe8ca-7017-4a6a-864f-092fa09bc172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbad2779-f567-40e2-b714-ea78e29b47c8",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b1fa80-bb69-4c2f-82a0-53b4d2082cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99632855-33fc-4ea2-b759-c76a062b6096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4211373f-63e7-4d9a-83b1-0cafb464b3a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cce97a01-b8b7-448e-bd0e-5f792b6ecbc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c76de1b0-ecff-4c1c-9eb1-6ff82d3b84ec",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "705f47e5-3b63-4927-9a85-59bcd2b49059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57d5ae47-5e72-4455-9439-315649ded113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0f2b85-95df-4c74-84c9-993289a2096b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3332ad24-25be-4076-8d05-fdadda8d51a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17609fcf-c1c9-431b-b8c0-acf2373f3356",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe8158f-e8fb-453b-9cb8-36b333698025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e459225d-9fb3-4c0c-b96a-7a613864b88e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1ff92f6-5587-41c2-b34c-a4e1733378b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "74062038-2691-4f10-92ea-5420ed34197f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f016ab9f-d4f0-49b3-b4bc-0ecbf015fc07",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "589bdb35-62c8-4cd9-a710-784acba0ae58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2a6e9b9-b770-4968-9af0-cdd1525bae57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b69cabf-0103-43f3-b44e-15334c1ec21f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9369103-881f-4997-8020-1d4e75732a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee4fe33-db4b-4c4d-b9e4-5b80bcc99e32",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "413dcfa5-4eed-469f-8b18-498db7d4722a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7857b5a-7638-4656-81a9-ee0cfef70bc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f84ec2-f3f6-49d5-8aca-b6d148828951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "27bf8426-6fba-4f01-9402-63a8f435d038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "432c03f7-e646-4228-afa9-daf142aab7e1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "601f7bc4-6a0b-4b1e-b84c-b1e74f1f422d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5a13e75-3ebd-46b6-b7e1-4e662368c41e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f2b8b7-f083-4f4d-9ff4-9901e40f8079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b38f020a-ebd1-4767-a4d7-4a559d3ec046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7909adb-0300-451a-8dd9-681936798d80",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5efbb9e8-674f-4b7a-9736-6d8fbf70107f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5071c60d-ad62-443f-be37-8821cf1107d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b18694cd-9818-4ead-8fd7-5a47fc62f1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "87adb9ff-03f0-4c72-8027-dc9f4aa47e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "683fe500-5428-4949-bb8e-207006488b62",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a2f692-714c-4248-b7ca-101a4cd2fd65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42da9055-14db-4ccb-ba59-6c945255bb17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c433485c-e984-4008-946c-97d2eba99320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a420140-80cd-4bc5-a868-93462a750fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f2a558-60bd-4b7d-9207-dd0abbdbb891",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7dc6421-7f70-4349-9e5c-8728f4805465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bffecfd8-edf0-439d-b6b3-a12e37520a86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdbbcabe-ad4a-41d8-b204-16056730a448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c31f370-988a-43ea-92fd-355fe3cd43fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "529fb54e-37f7-44ee-93c3-bf4ac32956d3",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "face6d0b-947d-47f5-b7ee-46b90b9eced1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9211f2f3-c940-42d9-9aa0-85ec3b090e82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45920c93-4fd0-425e-ad31-a7e6046a3a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "601317c2-83f1-4fd7-963d-2b6b056bb439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3216f17f-384d-4437-8947-e0f21cf7e250",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f27bea-ae84-4344-bb92-bef9e36a7023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a731e7b4-2739-4ed4-a8ae-c0e4e17af1c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20c3d5a5-ee3d-470b-a9ca-67c03b458ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "56f26b22-36f6-4ce2-be93-b8f4e5c68fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18e33c39-8ecc-42b3-8e99-686fc44787a8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b1365fa-b517-4a0a-9ab1-2c4a6754808b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b474dcc6-f39a-420a-ba4e-0a24f52533ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e66fda-0d5c-40bb-94db-53f6ac3305b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f3a631a-237b-4242-a9bf-2e153ea2fdd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b06bd3e-3386-4623-b75b-57f95648d93b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf4422a-ae9a-427b-b32d-83149ac3c479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "061a4682-a58e-4404-92c9-5172d9d98f1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "504feabd-1167-4295-8c07-7c30a0ce2fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "94587e3f-ffb5-4021-87f9-3eff83d201b8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ebb50215-49af-4963-83eb-d66a6f3ba9bf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6f708310-07a7-417b-ad95-c3476ab65909",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8b4bfe-9557-455c-81d5-7dd9e02999b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b8e756ef-ff3b-4361-95d6-e5c7e5ee3f77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2db454-d094-4a58-8645-758d875e9d36",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a002e0ba-0257-46d4-b793-7e75c6cfc62b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85fc1838-f892-4eb7-904b-a8763bc889a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26520982-abb9-476b-9e18-de32dc774d87"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2cc4f40-f04b-4c1f-bbc3-80e4b141cc1c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a275f021-79d1-4be8-a3e7-80728706240a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7731a340-d2a1-461c-ae02-69931176bc56",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2af75938-9b0b-4732-b64f-ce7888f2e3dc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "046ca03d-0b03-414c-b76b-f37bcb16db35",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2708efbf-3ccf-4b2b-bc3f-316f1ffcc624"
                }
              }
            ]
          },
          {
            "id": "4afd4e8a-da25-4b33-a9d5-476cd0c75299",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a6be9fed-87cf-49cc-9d13-111775aa0829",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "a41bdb04-84ce-4462-a83d-c0d3e1fbc683",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4911d8ba-e79a-4f06-b27b-cf22d712d918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "76f1e867-2338-4fb4-8c3a-3e030c55c8aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "803d9bca-7a9c-49fc-bb11-ea9b0a9d0729",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aff0062c-7647-4dc4-9670-0bab9f34e1e7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ea5c2ffb-26bc-4080-bc08-271f2f445db3",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "daa605da-3f89-40a8-b51e-d17bbc440e34",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bb7a754c-801c-40e2-8e68-7f878b1f16f5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "67d62827-3965-463a-935b-a35b034c94b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fa18e714-1cee-445e-ae56-4310f6d151dd"
                    }
                  }
                ]
              },
              {
                "id": "6159dfd4-afb6-4968-8afc-768fb166a106",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "13eff08c-c950-416e-addc-5bf88e6aea7f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bea8b4d1-b541-4628-94b7-4a0d5ee7ee97"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56ebf884-0c1e-4f79-9375-ba6c709d8052",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "35b8fdc3-6b4c-4e88-ac43-0b44038c4e39"
                    }
                  }
                ]
              },
              {
                "id": "97c1bbe3-b2e9-49a8-81c1-fbdab06d9a38",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "408709f9-fcc6-48ee-88b1-1b3a3cf88b6e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2f412317-1c31-4cd6-b40e-06e5b7b1fa68"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e73f3025-5eea-4d05-a43d-dae8038b634b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e08c8041-d5cb-48e8-b336-f8666347a345"
                    }
                  }
                ]
              },
              {
                "id": "63cf1c1e-4902-4f33-8958-a828d15c8fa3",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f1ffe6b-fb0f-4aa4-b52c-9b3c445eb9a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f03ece3c-896e-456b-bbab-bbac232adefb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7a3d532-c551-4a8c-99e2-9df23df017b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0bc24d55-efb4-4e7e-a6a6-c13f36a4a4eb"
                    }
                  }
                ]
              },
              {
                "id": "a2b1991a-967e-4f8d-b839-e8e58bab44b8",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d150b217-bd86-4cb3-a506-d07ee1964a9f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2956ffff-0d78-462c-8f80-e808b7b20acb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d2ce347-b53a-465a-b328-5554327455b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "04b98b87-579c-46df-a16f-e2100b6eaaf1"
                    }
                  }
                ]
              },
              {
                "id": "32100f82-eb1a-455a-a1f4-a08bdc7f180b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "49812a57-a459-4ba2-bacd-3d0b0c27eda2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cd10b931-96ea-4907-a1f9-d05ab1076e9a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0ec636f-0ea3-41ea-a5a0-de2a4ca66462",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "401090d4-b10f-4d93-9916-60c0bb01b9f6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5e609c70-d412-4951-a7e0-d2494dde893e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1d6a0ff0-947a-4e55-a80c-b7a881aa0528"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "405bf2af-81bd-42db-977a-761fd9b16853",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "48fd23b8-1eb8-4891-a3d9-5c98ec837a0e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2eb8c28-e009-4793-9783-5723712d85ac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e2cffb83-55ab-4017-aa29-0762019969a6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ab8bfe20-e4d4-4f90-8b71-e7df5e6baf22",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a6dc5e19-d29d-48ed-b431-1d7dd0dc7be1"
            }
          }
        ]
      },
      {
        "id": "5a2018a9-a04b-4119-80e5-96315f7b1845",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "58ff51fb-8897-48c9-ade6-ea8a8a1d23da",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4b7e35c7-8ebe-41c9-86f1-c4f37457a48c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "03d219ca-cee3-4af9-bdcb-ca0666211467",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd7c5b43-2249-4240-a1ae-a17d01d0e5e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a365d076-de15-424c-ac4a-2b0e7ebbe271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5aefdce-bc7d-4813-9dca-97dc1db2742f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "78b33231-ec40-4170-8fb4-4b590b5e2bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba14c4ce-89ec-444a-9a0a-1eb7fac92602",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db0f2fb-ad6c-47d5-a72e-55f7444d2af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0657f381-34d8-436b-a087-b199eab7b06c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8bd810-95d0-42f3-a445-d9cbe9defd8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bc91543-8a09-463d-9aa2-86830996ef5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa4b965-7a97-4507-b40f-e1afeb99b29f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91332e37-2d1c-4edd-83f7-b2bcf55e3524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84ccc983-09eb-4f2b-9b8c-8fb47b97ef78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd79da9-9133-4784-adab-fb0ca5a32367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f52fd67-1ded-4bca-b97a-dc591486caa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d23f0bef-b7b0-47ea-bfe1-168b2b3eaf24",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b580b944-8127-458b-8cad-e9ee3f395d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23d66cfd-5cb8-4240-adf9-27fcc4a9a57e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b13a00a-0722-4bc7-8449-384f8eea94e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc97f29f-10a9-4e2b-8c1c-8c56f23bbe18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccae1903-734c-4f36-a55a-3e2738707027",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f147170-6c2f-4e6e-b4f4-dd4d26b35db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0751a95-3738-4b01-a8eb-676756d50ed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3517358-6c65-4832-b824-337e98ac71bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ce215f2-01b8-4218-ac35-a07cf53a768e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb4a53a-7677-47a3-a8e6-bd5ba883228a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "635adf7f-33b8-41af-9db2-e67084d36d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e23455ae-e504-4439-b853-0251338eb87c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ebb3e5f-5b19-4c9b-a6ee-a56b0668c768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7592123-cb9a-44c2-bc38-adb458c07126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17792b47-5da8-4740-a34c-e4d32afc723b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "508a8ef0-fe93-4c2f-8353-6fea6578c662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80940cd3-e266-4e87-be83-52adf3cdf218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c97a9c0c-ec05-4420-8a2d-aaf9125668c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "794d7af7-f7f6-4941-9da7-0be4c47ad2bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ebb73de-bb36-4468-b4f6-c0b6f3edf968",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca1fed1d-c131-4ca6-ab1e-178516dee002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "603433d2-d230-476b-940b-058e0ac929da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d607dd-1135-4d15-8845-35065805d8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "43f0ddbd-a51f-4820-8cad-03abf91837c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbe8e396-a55a-49a6-ba09-b4efe5942a1c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e0abc3-1b4c-4e9c-a234-3204d429c00f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff68f7cc-9112-4c3e-ad2d-0a5312d1f631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c57487-1157-4ec2-bab9-2153079edfc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "51b65a7e-1962-49ac-bf03-35cbdd56d332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16751fce-d3c9-41ea-9267-916e70d74447",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc188485-eec8-40f2-8593-699640911a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20da6f6b-cb36-477e-9cc1-b5aae59ba31c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd92a3b-f86e-4249-97ed-71edbfdbe808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2391047d-fe23-4429-aced-65cd5abe8c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "538aa4d9-b261-4fc3-9879-03f008d88a5e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efcd2bb1-9e7f-48ce-9f7b-f8317f493f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "845928d4-660e-4999-9658-8078f53e4abd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a4f8eb-0363-4709-95bb-c48074067d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c6e2181b-38d8-47cb-8419-8e85c2dc6b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e432af6-ab8b-454e-b55e-af3ae5a4a3c3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4c4531-4a91-4046-aec0-162d96045575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ff28dd0-c517-464f-865b-bae7ba3ebc6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "215d7afa-7001-4b88-a95b-488b8b3f93f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bf526121-6dfc-4051-b669-12e5d69e2902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f6c258-7d90-463d-8128-4b1efd813b71",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7960438d-ccf5-4f68-a950-0fddebe7fd97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f398f47-545e-42d3-b1eb-a84ec4c7ded1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8117c300-1fd5-4625-8024-11170a2836df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1a218a7-6637-4e75-96b3-c4ea42db49a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75960570-2bca-41f4-a1dd-c2d39366c449",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d61fbc-e22b-4fce-ab71-bd3922ed468c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcbaab4a-479d-40aa-943a-442e1246625d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96198e4b-e006-4217-8f5e-21f34f41540d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "638790ab-1143-4272-bcc4-a4e3d374c381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d25ef74-6864-4d1b-b3b2-14501e3fcaf3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d51a12d-6473-4157-8168-e307f045927f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3de2f7c-1fad-447e-868e-1e5a37d319b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22dfc55-b9df-46bf-ae0d-de932542daa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6c16d22-197b-40d7-a5a3-59d1271b7289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b7c694-b1cd-4e61-9c7e-510e782dfeea",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80980edb-02f1-481a-9610-3e852d1d523a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b970cedc-f743-4b17-9a54-cf4f4b9a70cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee04793a-cd61-4080-92b4-4917561caffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca382f40-c3cd-4aaf-a743-28b705fedc7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d53b198-e339-4db0-bb78-87e269cc64e6",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4b8170-e869-481e-b7a4-a141d22999bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0cf6dd0-8ae3-4121-97a1-2cc38ec21cc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7704c477-589c-4a2a-894e-a81e3132846a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c02191ec-a8c2-49f1-9108-be58975f1021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b30cceb-5e52-41e3-b17c-be9d861551e9",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ce718a-bd12-4d14-9b5b-7095f3294a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e2bf4d1-f786-4713-9b15-e00b2f8480d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5de0765-2954-46e4-aff1-b71a4d9c887e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1e367bf-a031-47e9-a472-b8f50ed66a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec661484-8be7-487f-9dff-fcb1790f777c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9645e502-619c-48e9-b7b6-e3713d3ea1c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63121351-b58e-4a71-a7b2-13788506c0a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee23261-fbb9-4aef-97d3-c8a6129e1fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "208568f3-2fee-4a26-b469-088523dd7aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "201daffd-82c4-42d8-8aac-a7faf4f713aa",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b89d17-ba2a-4909-a8d9-0305667d8888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27dafed4-bd8d-44ac-9b26-32ee3a09dc4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d8da4e-d561-4478-8ed8-96514dbfa2c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddbef938-befa-4be0-ad3e-5c19e4ad7207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd15ecde-c2d4-4931-8d0d-42cdfb748df2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b73364f0-8b02-4c8e-b854-01aaa8a60d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "878458bd-de4b-466c-ad7d-7bf9d4133c6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ec4308-01ff-44a5-b2de-ceaaeb0bd7f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08564c75-c793-4c3b-8fea-2bbeac27af7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89003528-eaa2-44ec-873d-5d9471b3e14e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a2fae3-5ffb-4cc9-a55e-868145febbef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4567ae3b-9d64-4add-8234-004dfd984b17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e00b20f5-54d2-46fd-b398-a06bd74c2170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcf06dc5-96f0-4e5e-a5fa-9d91edf335ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aea2324-8870-4f26-ae98-e9b00e21a077",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b8fcfb1-2ded-4039-a897-917cdaca3fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a8b542f-d217-4294-afc5-2014f00d659e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca245bb3-1b96-4729-bb8e-b1d1074f72ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39fb5022-1eb3-4380-8849-848ac99ee0c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a0fa21f-9694-4200-b05f-40a133fcd3e5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f131bf-3a92-415f-895b-adbd65f4a4e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dfaaa49-267f-443f-9e0f-d01ea33f9bfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fba35ead-5f07-49e0-9898-a13c4adeb60b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8f6075c-eb20-4e1d-abd2-98112cd726af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bded8639-c3ff-4ecb-996e-ac86765f4562",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00025cfa-79c7-4c43-be44-dda36df44fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a4bfc95-4e24-4925-bfd9-cffd8ac9a000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f046e3c0-deb0-48f9-b743-95a52a39a100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f369de1c-8338-414b-b5b2-2ac6852ec8de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118dad58-cc9c-4ec6-a0f1-4dfa106a691e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09e2e0d-7d57-4f6d-a544-cf28f2ca2d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58f3e591-d6f1-47e0-b9e5-751573f843dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a69e29dd-2a34-4d6d-b4cf-bfc84d1d4fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5250108-4d44-49c0-862a-59ae3d9e63d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2dba3b5-64a9-4ffe-a58b-080c336040e5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8466ab4e-cf38-4182-b275-5ba6c5c51337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42ef7ff5-b00e-4f68-a570-6d8206c49a36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e13da918-f84d-4ccd-b856-77a14da982e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cb9bac5-9f5b-44d3-8d35-7b59c0d7d717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c6a4bab-39a9-4285-8a5f-0877ed8d6ce3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31c4c398-ed77-499e-97f9-209c25c7d7aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cea9a3c-a884-4cfc-b9fd-58a97e75dd30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114edbe5-e5f1-43cf-b493-3dea8fd6c0c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5cc7a5a-2f9c-48c5-991f-76363c05172b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b6db85-26dc-4ca1-95ec-951c98a5d6dd",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3640f7-18a5-42cb-b999-5a25961afe7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce50c79b-6bbe-4d0e-9bca-be1ceef03474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc2820ab-3f2f-4d12-9721-1ce830c4d24f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "172c3dd7-0fa1-40ce-bc64-55e657734c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "887e77c3-55ad-452d-bded-d324a7fd066b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "327e793a-c39d-449f-b45b-ce8ee1093701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "220b6f45-cf00-4818-93eb-ca1e79061ca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2241e50f-5a34-4203-a975-b78574549ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55ac3188-2481-4c42-a82a-e6dab334a95c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f1902e-a1df-44e9-baf8-583001f6bc20",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "473e3938-63b3-4353-a01d-6a8e3c1450a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad6df82e-25b1-4ce1-80be-32ade9d2482f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0088d03f-6403-4da5-8a74-6d7c353ec1e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "493a5da8-b0cb-45d7-9093-40725a2189b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f42539d1-b311-41e9-bd3a-f7a3ed367904",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9e4c99-1c1d-4b3c-89ea-860bc7ef2696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2182149b-e57c-41b6-ac18-e5e29cae50ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b464de-653b-40bb-a4b8-b63849120718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b32093f6-2a2e-4e93-a6aa-7f12a4f84324"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "978d21cf-7306-4b0a-91e4-9f7fe7ca3049",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "341ce93e-36b3-4455-b73b-477d2d1f343c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff92cd6f-c5e5-4fc2-be30-99b881b1b64f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3e5e8f86-9f38-4b22-81d4-24533bfa2aba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19bd8953-586b-4571-aec9-f612ccccad11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ba871033-be2f-4c7f-8415-e1eaeb01c2e4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "99a5d24f-72b5-445e-a639-78eae1fa004a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c76958b-aa68-4a03-9778-5cabb8ac86b4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "00779acc-f60a-49a5-a441-56e5e15c4fec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9222b7eb-d4ed-4362-bcbc-4b5e58545547"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a071de3c-4c37-4457-897d-af5363d1f2a6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "37b834ca-b934-4a5f-aa0e-057b981153b0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "80ce4eca-a2d4-4299-8217-f94cceb50e1d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f483bcd1-a606-4df0-8774-404126e03c85"
            }
          }
        ]
      },
      {
        "id": "219667e0-3277-424d-9d94-990614e3bfe4",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "9f795cc4-e1bf-4b62-92a9-af89708838b5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "59468e6a-4f6f-4dae-bd59-5d05bfc2cd3e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3a6d4f10-2670-4d32-8a04-487eda8e6fb2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "210fcef8-fb10-459a-85e1-91080ce63b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8451d04c-2487-498d-bd92-8da9bb41dcff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6efd6624-b640-4305-b737-a127e0505bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "cffd3b2a-ee27-4759-ab2c-ba4f583a06cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9918588-7f8d-46b6-9e9c-1dd949c34894",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d633e4-4622-46cd-a4bf-49ff44d30666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6faaeb88-7bd9-4c96-b308-a004f07f6785"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc178e37-ad55-46a0-b846-3ebd36063bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0da835fa-00f4-4e4e-84d8-67ce63db3da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de0d0539-aca7-49f1-8bb8-10982c587e48",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a43101f9-c6b0-4292-a0cd-96aa3b97d670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdd32a7d-3f00-46b8-a0de-d0b5125ddd82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c6a4d0-7368-4c9b-994a-65c16e5809df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "627d844e-5c9f-466c-932b-c30eb9acfeaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbaccc2e-2652-4723-939a-2f95b9ce268d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc23038-b04c-4d87-b82b-1dfa567eef94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe6b8ba7-0cf2-44fc-bd35-755fa365545a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "010a53e8-954a-4946-96ac-39a47f18f0da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bca8e4a-1eb2-4d0a-8236-ac3b32bd3dcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e5c564b-0d76-4a25-8c35-3a8f94e3e6a3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8540170-5671-404d-8c6e-fe0e9948a3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3ed69e2-bd0b-441e-b7ac-8d489f246c4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c5e9c2f-cea2-4d41-a412-82b1c72fc2ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e340c999-c5b1-4d6e-abac-173d0f447128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4283e01c-f437-446a-ba99-18a51de8403a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "923aaaf1-8751-4783-8e31-bc8a17cbd9eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ababb4d-a412-4580-9243-8e99d9b20ca4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ae7a9f-bf2e-4616-9418-6f17a7437baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a29cff1-e8eb-47ca-9287-b4d9c6aec790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3e7b57-c25b-49d3-83d9-7f416399510a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0a03d17-7cd9-448c-b449-3b8169d23f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3a21e57-6223-4ea7-83cb-7fe964994c8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6877a75a-20f8-4194-9f97-25a455d08f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3cb821d-c5f3-4110-b0fb-99614add84d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d8fba8-7142-4529-8b7b-433353f9db5e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa440169-f720-4371-b155-1c12cb98c695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5ae08ba-39f9-4b13-a9b1-909b80e4b49c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b0f2792-6b60-46ae-aba4-f533b286f367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dffb4c8a-cf6c-4d47-85c9-c08051f2792d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54bb97cb-2245-4aef-b4fc-b87073055d3e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "678fb473-8e94-4347-8322-060b43e6b609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a5e32b5-7987-48e4-a278-64ee87cc27d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0713c118-5b82-44b5-9c93-b35501faa51b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9d71550-3f71-4985-ac57-bb21da9bdeb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db095d3d-0414-4a88-95ef-a0c077fde54d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c6c3e3-d950-4d7d-9b0a-62b679c14692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74373515-1b64-4dec-a55f-f25742cf2428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca9a402-1106-43d5-a5bd-3509753fce63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bacc1613-5f5a-4dbb-99b2-03be7f9f1b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c4bf02-21a4-48bf-b2f0-4c3e637e21e9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e36d1a7-1445-43ee-94bf-1d4053022ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69a87c2f-6b6b-431a-b263-c4f96e2e6e17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a18feef2-c4a5-4ebd-bbb7-aa61120acb5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4cf36e8d-5c60-4b2b-a048-ee30772ff948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dae9f11-1c27-4fee-b50d-1dc52d5b4ef0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf9f30b-e4ad-4060-845a-2265a3538b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0556a211-e5a3-418a-85e9-bfb5383e7561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b44cfd5-b2ec-40b3-adfd-4e3949d7a6d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f107c663-3e8d-4892-a959-a87833f19810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41dad280-40ea-4236-88ae-8fa6dd1df95c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d99217-28f1-45d6-bd8b-0cc56af910fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "510268a7-a48a-4325-8f52-5e65959a19fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a7aaf95-5bf0-476f-adcc-ed47e9d1720b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "179823a6-d7f3-426e-a519-0d455ef77dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "524b7109-b512-414d-aab3-9c092c1d539d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "946d83b1-7496-4ebf-a7a9-db049b27d4be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf8af00b-2163-41ec-abaa-f1a32f4e812c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5fd638-9e10-4920-aac1-9a7100fe0e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d7f931f-6c63-4b2f-828d-2bdb1f046684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f6ece8-2a08-4458-b583-b917c1f38531",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea01cc8b-b5fd-44eb-bc32-66f8e4b77142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d72a595c-de4b-420c-82a0-6f0ea9259d86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "225fa629-cd52-4c3b-8fb6-5dc1638c1c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "15ee510b-0908-4e12-a6c9-e760b83cccc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47646bfa-b2f9-4129-97da-7193358ee184",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c657002-e2fb-41b8-a8a1-5ed1d1e88906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8fc6c06-dcc7-41ef-ad7d-89f1a6086ddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3415ddb8-db88-4975-8313-bb7653bc575f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f847cec-90f3-43de-8f70-a635ab84e554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b72be8c6-11f0-4d58-8c65-ef5dc0752bb1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "478c8c13-90c8-46d9-8daa-243a155e0e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fff28399-29dc-4a3f-9f19-2f41a8cd1f0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a210d307-ead9-4d07-b547-eb40a6a80fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c2f8f05-1702-4bad-b5fe-4281bbbb8691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38756be8-b9fc-4d48-ab4f-d6cd103ba5ab",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ad5b7c-7339-47ed-a1a0-2bc96f295816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cccbe16a-313a-4f18-8838-1a1d7cb01112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "536596e5-8986-4ce0-84a9-519b29b9b2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ba4eeea-9b3b-4458-b7d5-cec1c8d0e42b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e9fafba-b5cf-47ec-bc59-48fcf71bf7f7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f27880-3d6c-4e76-b85b-8c3637dcf79d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff36572c-4a48-4be2-a045-8bf3513b932a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e36f4b-2799-4e04-b707-4f1d0ee9bd31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "596bdb6b-9b83-4d46-a40c-7cb933a88405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb25df40-e2e5-4fa6-8c55-cf63548fe55f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9001703b-8877-4fa7-99de-6c3c7db78607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81e19793-213f-4b1f-9751-1c31033a4d11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6072cb18-20af-4271-9be3-b26b98147cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "adfa469f-99fb-48ed-90a1-132453a857b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66684cd-2344-4182-a354-2c2751f33eca",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6c8b715-d31f-4a57-88a8-700e6917ed42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29984752-dd68-4708-b7ea-19d49fe06087"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e186035a-74a9-4753-ab6f-c5a43862041b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0929dee1-2a49-440c-a54b-14e61e5eefae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da1df595-1a56-4195-9124-22ad16ffb13a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df5265c6-8281-4cc0-bfa8-de45af74806a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "733b87ca-fb5e-4be4-8e6e-e906d0e4f2bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "285ab632-9377-4e6b-a4be-1f2cb24a9ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35d28e41-e4c0-4683-8ac5-98fc3fb575c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b902e95c-365c-4b12-8e32-59a8dfe72936",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa2866a6-05f8-4bdc-954c-2c6f53d15f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7221eab5-8d3a-4e17-a1e7-69fe761fb2d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff619728-bacc-4ff3-b091-b98606d28627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6de2e62-811e-41e1-91e2-93d73877bddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "342afb55-05d3-4951-887c-db5a0d3bf426",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9330ff6c-e9ef-4d32-aa47-50a4b7a0cd9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3895e12-a24d-4e64-b466-494bf22f951b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab27ad81-ca37-4e93-8a8a-9b11ff6d7299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a243843-a068-4c09-9ccf-3403813a5536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6762adb3-9dd8-4df0-92d7-7853f67a6c15",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e781f3eb-9b7d-4a60-8e82-a3eb74dd5ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc7d3d08-1f65-466d-b43a-3be18ecd33d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b5d57d-eb0f-46df-ac59-2ff93d164af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7043a0f-cf02-4059-beed-4976a5331d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c4ec9ed-3b33-4373-93c5-05f54aa83ed3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6534bbf3-e48a-4412-9fa0-3a5dede1f8ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8a6041b-e4bb-47c1-9050-80f7095454e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57121d3f-23cb-4d53-83ee-a0446f5ad93e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd5956b3-c4bb-44fe-9e03-45415fc5852d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a31c4b-85a7-4890-a5da-0b5b07a6c10e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c0f3dcb-dbf9-46d3-9be0-ec9516e5adef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2693d7b7-1c06-4003-aca1-6e93bd093dee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623568c6-a938-4e49-aa6a-faab21a938ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c10cc878-3cc4-4457-b2d9-02c7b0201819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383eac69-22a0-4049-a921-a3c65439143e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d8a5be-508d-4d01-80e2-5cb7542b389c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30f3bcd0-4891-4f57-9e66-c4baf0c6be37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ce0a5b-9da5-420a-82ad-a4798b80636f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09569a23-97eb-4dfb-a24f-1b74be4da11d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee71258c-a1a4-4101-805d-96efba01b571",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a20fe88c-012b-4d45-9835-19953c7543b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5698142-efd5-4a46-912b-34b404bf3628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c42ffce-9d2c-4d34-81b8-375d8646e4ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62747182-cbfa-43bd-8691-b4d77df615e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef396c19-d69d-4e2f-a657-45b50eb71f41",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5458e32-4454-4e8e-801b-b6b1b1fdf690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1ed7d01-c491-4a63-899e-a30faf1f50f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd0ff55-59d9-4ced-bcb9-775bafcb89de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8248125f-7c34-4a58-b5ea-d03c77e6e9aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc2edf1b-4138-470e-b7fc-45ff10cb6405",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b265d916-e330-419d-9e88-fa7b52ab63c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f126803f-f43c-474d-b445-2b2dcf8f4c90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba70576-bd01-4ab4-bff1-b1ca20c3f1ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1497972-8c89-407b-92b0-b1d511d78e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9390ad37-7cb9-4197-8e1a-3bb844b2ffad",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93b1ad96-5f96-4650-9135-f6a3436c1d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18307635-d8a5-4ea8-81a7-c29862126591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7bc75b0-7020-49a4-ad82-afc83f05f2cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e959be92-dbc7-478f-a2d6-c2234f4e286c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f4a2fd-7528-41af-a423-fdf967196e55",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db2de22-dcdb-44e9-9d46-0a82bd014712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28d0859d-64ea-42dd-855f-8aee8f04bea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "170382d3-275f-43e1-a10f-149303e44b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89dabc60-db27-45e9-87bd-437b9874fae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fee08e5-2bbf-47a4-998e-9d58853ccaf0",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fadbc77e-5288-4b1b-aa71-b3810fae1161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b4a0244-fe03-4ba8-8157-e3243135d194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1449f25f-c172-4694-90b3-7978580946da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62a5b3f8-7a8e-457c-b857-f1285ba5b64a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b4a4a65-ece4-4689-9692-23a16a7cb106",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbacb659-c4d6-4cda-a57a-ff8ffb574792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2f83a88-64d0-42c0-be49-dbb8c7b87482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b4dd854-d2bd-4909-94e6-316e2a8de387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f38d7ee-1b09-4316-89eb-47282c6afd69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08413cb6-6be5-4d48-a2e7-a246dd17441f",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55c4ada-4d36-40e6-8663-9a6e06008944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15124bb0-11ac-42fd-9be4-f716d369e493"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a12c325-9dc6-495b-9689-75ed8a00ae01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2315d6a1-5bfe-4b9e-9040-e6e1383e0bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9baae110-d45b-4a6e-b982-b8310d6bff79",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "938805a6-07e4-4791-b7b1-eb8665a88e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f158b086-73a6-4100-8493-d90840a66e0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db850c2-e45d-45fa-8ea7-7da03915bad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03431334-5fe7-47bb-8eb5-45494fdb4d76"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2f827175-2016-4599-aa5d-85d2cd1b2853",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e8fa8939-00f1-4712-972f-b2b61ef8f7b6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b9ad4d-f351-44b6-862f-167da4122217",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3ac6fea2-9912-4687-b7f7-755dc041bce4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1721255a-20f5-4db7-a521-56c5a38ca660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cc35d2bb-c4f0-4994-b801-8efa78005619"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f108725f-bfe8-4c64-bed5-ab3503acac14",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f80f457-e5e4-4001-8282-c8b160553cc7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f16913ab-9d9b-412f-8ed7-85ac721a8b1f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a56d9b0-2c8d-4325-9ad3-df5a0b75682f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "621bdea6-b932-490c-8414-77c82ed99b9d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9e9f3d17-8da9-496d-b44f-e0b21757f858"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd7e5d64-07f6-41ef-8a94-5686aab38181",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ed9974bc-9eb5-48ca-97c5-e14fa081de99"
            }
          }
        ]
      },
      {
        "id": "0a8bfc65-3d56-4158-bce3-c33f645ecc99",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "deb960e3-1b4b-492d-b8bf-e410486067aa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b763fc73-3df3-47b5-983e-a640312459f5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ad9f6c34-9854-4fb5-9efb-22c08a0cb275",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "153569ba-cf0d-4b95-8d49-993328d9ee4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51eaecd5-5f27-49da-a2c7-2d9a5189332a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd75d70-6b67-4f7b-98ea-96a944d53f87",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "762760c1-cc67-431e-9dd0-b7efc0814514",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "921fe855-3cdc-4c6f-b536-60e8c2f37b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aacd9871-b1ec-4c43-9680-a1574cc955ad",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd9c8e6-2f47-4e10-ac16-ea30976b5774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b921a22-4efa-48a9-8ae2-9808da1f8274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8746abb3-b660-46c5-9628-ee821bf55d19",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "153b8176-f350-4b3c-af65-92d9de0de852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c502759-227d-4af7-afd1-bfe5b8172382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d87e47e-7d36-4301-987d-8ee8e96f01f2",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3180719-856a-4193-b89c-21ffea332eae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "854fb831-d258-43f8-a2e2-c1696bfe672c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329b8415-66b8-4512-bbcd-c1e2e9cf427c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbacb97f-8ba1-4ebc-b8d8-241a9ed6cadc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee10a7b3-aad6-4fe8-8493-e6897d6e72dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "285b9987-52dc-4d4b-b1f3-10a4f264f27e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4046d677-b4fd-410f-9877-fba17d155736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4632d9fb-72aa-4a77-b4a6-352bee15039e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b2cc2a-0072-49aa-acd4-620b124b53ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec913ca6-1ba2-42a4-9bc0-4e302fc7919b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd4ff47-34fb-4b2f-bb72-49ea01bd8e40",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e7d2fb-ce56-4b7c-8e06-a3ca7dfc427f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00b7e0be-450d-4c93-a749-ca8d89b8d4ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c2bb2a-f8bb-40d6-84be-809fb76a2500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6ac576b-d507-46f9-b1a5-c66916ed966d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "720ed8de-5e8b-47a4-a2fb-d1bcb90e8eac",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "238e2084-badd-4e5e-ae76-5d094e93d840",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84676537-a560-4572-a418-323f99bcaa83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad7becae-c6d9-4baf-b3a1-50d10864dd0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4369b0c-8993-42ba-8a15-8e94aca8a88d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9ad8f1-aa51-4756-81be-1f748b3bf4e7",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c56ede-8437-46ac-bfce-0957b852ac9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c057836-a6a2-4ca2-819f-35c800c2e27b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c474017-f4ab-4368-93bb-52def87322fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "719a5be3-3112-4488-8211-11ec6feee5f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8abdcf-2632-471e-91a9-27292e9bcf03",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a9cd468-2f49-47d1-b96d-7cb38624a0e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ee7b6d9-27b6-4757-b1af-08a22f0405be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1be27e1-2025-40bc-b72b-2255ef7ac0a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf49eb28-47e3-4fdb-9d9c-30d612f0b4b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc95470b-77e7-4e68-8bee-5f7fff596500",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e306ce4-fec7-4b9e-9f18-e2185605fde1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3925d0bc-f5f5-417a-89c0-609997cdc3fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be83105f-c6e0-4b0c-b8f2-1114bd573df2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc0a7225-f159-48ff-a2c9-52e3eb64499e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffbfe831-0f07-4c48-8a91-4ffb4dc23bfb",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59becf7a-32c7-4ba4-8a96-cf3e0a1c57d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4996f095-0694-4e62-8e12-44f82bd23c3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ff7105-33ec-44a2-85fe-bd054129a052",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adbc3ebb-7792-47a4-ab5b-58d3ae2961e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a0ca62-31e5-475c-ab22-b98babf8bdb9",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a28308-f1f1-4b10-be90-292caade1fc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "842ada35-84dd-4bf0-9acf-c92dd2c720c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba98623a-6867-469c-a0f2-9bf529a9b739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d70d7c54-5781-4d7b-b8ce-a4ea4ed6572b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8fe16a-2214-49de-b634-1f14be943343",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0022eb08-a56b-41d9-8b73-6d5bbc9d9d16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "199ec541-1780-4b86-a242-9eb1c7fae8e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb85907c-70dc-47e3-a9d0-57d509735fc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fefe8e47-c660-4049-99de-a90c19cd105c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec60c4ee-9900-4e37-969f-9614bd0e7c85",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f34957-b604-48de-85bb-51562e3603ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef1e5ca8-760e-4222-9f13-e08e9480384c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c98bb759-3e58-4fd9-927e-aedaf6f55d5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cfdb641-eee8-43c4-b50d-72c1906c7061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e371c1-aeb6-4b82-9c16-58fc29b192c8",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d579637a-81bb-4302-96d9-d919c75e9ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10801960-6f88-4f28-93ea-3bed0b5ad52d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb8bb22-faa9-4efe-a3df-aa65311994c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a1a3f65-334c-4de9-adaf-e9f0d9b59364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f985210-65fb-4596-b923-a0ecf448ddfe",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "072125b0-64f6-4132-ae7c-f61da3e96044",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93fb9a7d-482b-42bc-a5c4-645d78d3b190"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69317c23-c14f-4dca-99b1-879d97c0a25e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49fd95e4-d3f8-4e6b-81da-4b000d8fa903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea4ebee8-0c93-4895-a184-da0a86b0abee",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1192c03-8e17-470a-a887-1cbd82944566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72dac157-6203-4d7f-aebe-1f76d8105f4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5e0441a-f985-4eab-9460-193ab9ecc99c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0103325-4134-4bc8-9585-68c435154270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3cad70-3410-47d7-bd2c-30d0f3a1955d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2809c7c9-a95f-4c74-80b3-a1950c1f8dc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fb0ee97-f6a0-4775-b53d-70e167217da1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d956b100-5a73-4857-bd06-f418a42eaa78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a058efea-411c-47c7-9a1e-96ac9b879189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c1a8ccd-f18c-4d9b-ac29-077b7f87a476",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5808773-4df6-4f32-8832-944f3c3c08e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6cecfa7-889e-45d5-ae18-de47a348365b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d77475-0a39-4922-9ee1-353b93eecedc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f791e80-a14d-4fd7-ba32-a08732282f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46cfc60c-9042-49a1-81dc-7116f04d5a12",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f254374d-550a-474a-8b2b-ee053537bd81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ef228ab-71c8-4020-8938-4a1f754c3b29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de5cdcec-6f2b-46d5-81af-d7b5d732a524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47d3be5e-df3b-45a7-ab75-04db1fc11531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17b812c1-0fbb-4908-88ab-2930b3c7e0a4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b571ae8f-5f93-4fad-94c0-f66f9607455a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2f7a10c-8daa-4ec7-8ff5-d64809a737ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3271ba73-243b-4daf-b6be-28149c47f323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59e3d523-2ebb-4d8a-9783-d7fe8486a0a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ccaa225-af3e-41f6-9023-98a2c6936eed",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2209dd01-4c0d-40ae-9f87-ac07a6aef905",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8a7480e-21fa-42c1-a010-f4531587e52f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc1d144-0aa8-4500-82ce-51618d982313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdb6c594-3897-4e51-99ab-bb94128a5318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f612467-c4f1-44bf-80d6-ea6f78ea7a1a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9061bf95-69d0-4f55-9606-ba86f739d03c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b67a695-546e-4e2d-91d4-8fc80bceae2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0484ca23-532e-4c23-840d-6eed25f57ac4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca6e6cea-bb3b-40f0-ac29-1c34f1ea5651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d88055b0-9173-4876-997f-cae7d53bce8e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ae9e62-6f2a-4f23-a0b2-f9e5a12ffa86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b42c1926-8298-4d7b-a9d8-679032686ea7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "895adcb1-f3b5-4aad-9b72-cde0c06e53bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91614b15-ed07-422c-a131-3be48c58be73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "370a08e5-391f-42b1-a354-9ffa432fb9e8",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf714a1-9ecb-44c6-800d-9dc95f7b1136",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fd704ea-a384-4ecd-b0ff-4382fd703b1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81637af-330d-43a3-a200-a5459ea73ec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f32e55dd-ece0-4270-9d65-db1dfff9f12b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "013b5719-364f-4102-8bcd-cc2100f81e2e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c07c5c93-f228-430e-9c0a-2dd53835ec82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd22ab04-9e18-4ee7-9dc6-5cd4ed758fc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef58224-0526-44cc-a23e-b7630a669f53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "641c46c2-b977-4661-9211-40441d12620c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aecaad3-52a4-4369-9017-a4d5df2781d4",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa443f3-f11a-4362-b78f-df1549328d1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71700dec-1f52-4486-94f2-fd5c57699abd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4087f1ac-9cfc-4a9a-b8cd-c60184aad588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b225589d-468d-443a-a65d-9e30c79185dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e42684-9ea3-45c2-bb9a-cd9da885f737",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d931411b-99bc-4a8d-9dd1-594f483661a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cdeab97-98d3-488b-83ad-c962c67e4af5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b6b894-3a39-40c0-a8f5-a71171a17167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6de53ca-d225-4055-af42-9840ab6e58ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be1fcae-5248-49a6-8f34-09ff674a4646",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a43e74-82b7-4c74-9123-6a5e0ef68a73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ff0c523-a4ba-4f02-b3c5-f63019034a5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a840c7-301e-4abe-8eb7-4e5f1ce4f9c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b846906-93ed-4719-8a6a-7a163bf44909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a713ca-1a8b-41fd-a976-53555a4f1475",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7669405b-bac9-4fb5-aa34-4fb451c1fc37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bb33ba1-4b38-48c7-8b54-0c7a1c2c5f5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "537232c9-9851-445f-83b3-1439c522f6d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e22b4bf8-0e3e-4d73-8870-0e4132ea4849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd20df37-1fb6-4a1d-a0aa-f79a184d4f84",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03257301-e9f7-4455-8395-0891353173f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16bfdf35-cbbc-4440-93e7-f17bb7f4ab7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c71f0c3-4b4f-4704-b076-fa5913319acb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a76bbf73-a42a-4cf9-88c1-bd97a5f87c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb42d0ed-a083-4c40-b509-505db702c1db",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb84a05-92f1-4756-90c9-afb077797228",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08cf5775-d7ee-417b-a476-4d729816aca4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e46cfe2-d1ff-4108-a911-674069c761ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85851bc1-ce7f-463b-9cf1-266c90111c2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8edd866f-bad7-454c-8a53-a4be16eee236",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1190ae2c-2c34-4e64-a9fc-842b188261b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf427f79-e2a6-4a53-af20-4d30a3e84628"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c71c096-eed3-4afb-aaeb-7de6dccbd6e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "285c8581-78df-4885-94b8-ec03f0a6e64f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4375e4c0-2fb1-488b-a8fc-5f30e0c6ff37",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6efae48f-7fd3-4407-89c4-e309213fab2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fafd51bf-e868-4707-9ec4-6957c8fa55e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e059f461-51ce-4a41-ba15-a77341a378bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a602a37e-a083-403d-bdc0-39e9767e6ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb823ffc-5b7c-4f12-89e9-2f9dc08f00f5",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69df3401-95cc-48d0-bdaf-c7d2bcaf279f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac12e5f6-bd5c-43a1-8374-9ec04ff2ca96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13aea2f6-8e8e-4420-a29e-1354a23313a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eefa5fc-ba60-4eaa-ab33-89239b650227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09a295a-7ac2-4129-9610-ae99a4e04ab8",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0753554-32f2-4b88-adb1-66f01cd4540d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "569549ba-a9c3-425f-923d-e66111f50f14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da20ffe-de63-498e-b3f4-7acc84e2bbd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23d6884a-70b6-4f4b-9810-74c82aa921d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d96758f3-95cd-4e4a-8c0b-c237da361c47",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a265bfa-879c-4ff8-906e-532626a9cac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dc9dd9d-495e-4531-8038-b9a3a9fdcf57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79672df6-59d3-47bc-97d7-5aa0413c1e4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "125735de-844e-4b40-a96b-129b7599810d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec37860f-27f5-4e5b-8697-a46a95dbfe8f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7f6a29-1498-4f95-ae69-e46b754ff3df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa223397-ecb7-4a91-ab1f-be1fc5f74cd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbbb6fa3-e172-4cc2-93e6-9fa42e594dae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6adf26d7-aa92-4b51-bf0d-3fb9b606072e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10ef15d-0318-45ad-9c98-bf73aa8c50cb",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a71db652-dadc-4962-b4f2-a42716bd34b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20ef9587-c010-41d3-b00d-490a90c6c966"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd917c9a-4811-46ac-915f-caf22b553543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8207d0d0-fa7e-4d66-873a-9d694b674115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4cd99b3-8f25-48b5-a081-dee233e53167",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ea7794-fd94-422f-94f6-9574083f662e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bc084b6-f5da-4e76-b1cc-4e3550ea416f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0598364a-4976-406b-835f-aae64bd4d41f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2a4d50e-487a-46e4-bd2f-1909159178be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36ae1253-3ceb-4053-b31b-a162ed834d1d",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e86610-ead0-40ca-a3d2-0e9e41199492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4272f64-bdbe-4118-a22b-64bee22d242b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c30384be-7a3d-4b4b-8292-608963eab25a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4de43d1c-5d6c-4ec1-bbec-ad01e0ca126c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c778a31-8d39-4f7c-9300-3b84466c8e71",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c066b4a-4d18-4ede-a891-8b097d279c00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ee1edd8-4b0c-4731-a891-79c0b9103828"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65eacc36-0479-41e3-9ea1-74718fa37265",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6bfe035-e2eb-4998-b495-4839689aab8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aacbee6-5d29-4d46-b91c-faa663abe6b8",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bae663ec-5bcb-4619-97f3-48855bfeb29a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f282b61-ed0b-4e2f-9478-cebbaf919a7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5497a007-7f9d-4491-aa78-8cd86e6006a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27ecd558-622e-4166-a66a-0e39319d5113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd21e02-48ca-46ba-9502-d69cf0e46f97",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1625c4-b5e5-45ee-88a0-4f21c3dd8482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f68c82cc-f94a-49c1-876d-4f64645105c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72719f50-9d2f-423f-83a0-5c5d603fb7ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5cf56c3-528d-4de5-9929-a6ec852901aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbee6415-cf34-4b4d-ac18-c6eeab2d7068",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60924d29-f4d6-40aa-9ffd-a4e984973db7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b85d6fe-dd91-4445-8609-5b6fdb3c4404"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4faacd8-440c-47df-9e55-cbb102ab521c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25ce8705-7cd5-4688-bfe8-5d31e0486332"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29efa7f5-17ed-41f9-b59f-3760cf38866e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc8e8788-7114-4092-a1d9-129e70f22597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdbe01ac-9eef-49bd-b785-167c3c382680"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a91d7fea-9907-4172-a89b-15f940bdf50f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc454a7d-1998-4f06-88a5-eff03c8d3ffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "562df22d-f534-4202-ac4b-fec3fc28fff1",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee9c2d5-be35-4573-a6cd-81c073f225d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "222985e3-7a95-4129-9341-f2af2b58ca89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88faa13-b553-438f-8c42-090783b010e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f53f0a72-1271-4f94-b2d7-36020e498e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1327f87b-ce8f-4cf8-9bcd-0be341f86384",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9524c3-c6d0-4d03-b350-22d62e7ccdb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd904b0b-6869-4589-a4fe-7efe224566cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca01635-d8bc-4443-8e5e-460dca2a04fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a36b8e8f-0d63-40ea-b2b2-46e1c0eeb3cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7f1c8f-45c3-4ab8-b4ae-17e8e2a31d04",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45bb1d90-56b2-4e90-bc94-5ac48fac9167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9b47854-e9ca-43b9-a1b9-d43d0029de47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14669fc6-bfed-49ad-8e04-5732309e2588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d1b071a-2ff2-46c2-b260-94bfcfc37479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "526ea357-a7e8-429a-94cf-8fdb3ccdfec9",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2940a23f-77d8-468d-bfa3-2379571bdf1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53ac1b72-e77d-4b0d-80d2-adbf17e5d850"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd30eaf8-cfb2-4dbf-b528-8cb7612d9fa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebfaa214-291b-431a-8f5c-912c02a54423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe245d1f-5618-4c7f-8d4b-f736d840b2c4",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3874669-d399-4fdd-8582-a1413963972a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1188fd74-21af-4f43-829d-c74b327da600"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "972fb573-47c8-46e4-911e-bb5c88852fb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d079f041-be8a-42cb-a8fe-943951b61080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4eba82-e01e-4ce2-a489-aa67273ae40c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00681511-18ae-4c92-af23-7a2c2bc81e56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d27f536-1b83-4bcd-8aef-5fc141da3cb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a1f6e1-1c3c-432c-80d7-a4da6e5f2247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d07cdb9-b802-4b35-8b1a-7489854edb22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c01a52-a3ad-4078-bfcd-0848c1fd167a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4bf624a-dd46-49d8-808b-4f281ce693bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f8f7a9e-c586-4939-8510-b94ea42a80f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef7028e7-af41-4948-92ed-78f1ac098100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b30338ef-c28c-4225-adef-61c2dcabc3ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63910c77-9a26-485f-84bd-b82025728427",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634a9c30-4bd9-4ba6-8b37-00e643a38c1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fbc5b82-a64c-47da-968b-50c267333086"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "926c92f7-3a9e-4304-8f49-c5d91e6dcf9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00a432c4-6a88-495f-81d5-ba6536c57e70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6c3945-4bf2-48fd-9f09-579dae32c7ae",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70633296-a8a3-429a-9765-c5969873947a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc6d471f-1996-47f2-b89a-d0b5f466de1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "296bf28b-c547-401c-a8bb-96cc9cc20e45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "831393e4-ddc5-4bd1-827b-325dfadb42ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f8df224-32d4-4c97-9b60-1d9d4483ea32",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94aa12ef-2885-4c23-bf3b-b598926136e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f2d491f-76da-4f5e-a58c-8be71c10c1ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee1fa91-b578-484e-ae74-67c825062338",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29cfd37d-c515-4b67-87bf-21da1c8e9e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f438e55-ba92-4e82-afc6-c406e3bfee06",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "414728d6-5a46-4e37-8469-892389c5885a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdea13a0-5a39-4c61-a146-0bfb48f76841"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48fcde02-8d97-4c73-9fb5-e729f4cf2e58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15add69d-63b2-4464-be3d-70eb9dc2044c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d22997fd-07f4-44f9-af24-a92e280739f0",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0dad273-ddb9-432b-95a1-177c220de3ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73ac310e-9207-40c9-9d07-b85c158c8439"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f399e40c-70b4-4ab0-a12b-94f72f2fbfd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc03d141-b93a-4291-aee2-379dc3af341f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5eac831-b667-4275-ae59-98bc29d8c083",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63ecdaf-a088-49f0-9f5d-58df0bd489f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff391183-93a4-4c40-a2e5-a178ca1f6ff2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9834c3c1-fa4c-4327-9952-a813b4008a5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "225260fa-ee77-4371-b382-95af4bef06d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "846432f0-ed49-494e-bbc3-9ddff7dfaa01",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "149c5bd1-8328-446f-b229-26021259ff33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2410bae9-4961-4507-a13e-f1ba34cf91c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc2d8cf-51e4-4a59-a9ff-c39eef435aa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b17be849-74bd-4b37-a028-5403ba333beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab74f30f-779f-4077-91ba-dfbe47a530aa",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b29c4dee-e9a7-4733-ad07-e289ec5e98bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d66e1bba-9f4a-48a3-ab6d-7136ee2a4b48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c1c7a3-0d92-4a6e-9151-708f1ee4940c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09f4801d-5bf0-4eef-a6d9-fc02340d34d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88cebf6f-172f-4c91-8800-ecd21185ae51",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70fcb7ee-9995-4982-aa3e-0ed4dc0749c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97bb0658-63f2-4fcc-a320-787239d53d73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f91e3451-9be9-485b-a245-509816dbacef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f864e42-af27-4a7f-8def-c1d053fdeb5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb43a07-1042-427f-94d1-3728b615150e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c321e426-4315-4de1-ad01-74d4035c2fcf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec13efb4-b0fd-470d-84db-45b85e100d79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e431bba7-bbeb-4c4f-87e3-c08758f17919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b3439eb-40c8-415e-a792-33514e1743bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b738f5cc-340f-4fb6-af32-304e1f618112",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67af4a23-dba0-4979-b49a-5f849128115e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "012edaaa-6177-4827-832c-0cd6c1a48963"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edbaad31-486e-4a01-87f5-8bb86f5ad191",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd8ca7c0-520a-4abf-9a41-9aec8d5af2d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63efc551-7284-4e78-8534-82006219e319",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "159337cc-875f-428e-9f6f-126fbfda00b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c72f44b4-e858-4582-9758-a22539dab0ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "706ba80e-5da6-41a1-a1c4-4221be17be32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9010091b-ef6c-42db-bba6-186fbe496294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1f54126-81f7-4609-8c01-e32f29635f31",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8954aa08-1486-4860-bf8d-a156c8c0781f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "207e5917-0389-4365-bbde-4c386178e01c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "878d0316-59c1-42ff-b753-20216b59337e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4970780e-3898-420b-8e78-aeff19655e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "480d5d1c-aced-4cc3-ab18-7b2db804cb6d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed5c939d-2442-43cf-a3a8-814e0388a569",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "457f9a11-c43e-40fc-b86d-7017b054dd1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5abe1417-7739-4b53-a0cc-266cdc120ee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8929beec-2d2d-4570-addb-70cc7e6fda52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f61b6b-dd35-464f-bd43-e66ec201f38f",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3d09643-135e-4ef6-81aa-0c9d58bb4c0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef561327-b6e7-4889-9613-1c9b950b5436"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1caf043d-5196-4bcd-b92c-180d285c4b1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80c0b9a9-5b5f-44b1-a170-f0a15538d21f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5a814e-3617-4ee7-a6d7-0552063f2865",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a780c52f-4ae9-4850-950f-0f518c57e113",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4069d7af-5039-4ee2-955a-59aaa5bd2252"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6154df1-c4b3-43ec-9a7a-ef88355ecb3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a78d9d2-c0c4-4f3d-ba1e-756de44520ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148eca1e-2b6b-4446-b400-b8beeebe9ba6",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48956fa-2143-49db-bfde-a7cf6d69343c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a80dc24f-8e3e-4da0-801f-54f2a5d75ccd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "942de7b7-0c22-4ab4-9d45-643eba352600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b50a77b-d64d-4149-b644-8f677a5984ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d88db8f-96c7-42c3-8557-9c1b0ba88ca9",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15839f00-559f-4feb-a71b-39c80baee59f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "990a84fa-17e5-4c38-8063-06a4dde2b46d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c40ff0f-59fe-4aa8-b285-8a9684f4c188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96367a43-caca-4f38-b416-5375382e82b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c251590-71f3-4241-a40c-486dcfb16468",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65be2e07-496c-45d7-bdb0-e9b1201064d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c81099cd-5912-4e79-a2ec-77dac738241f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9582a49c-0475-4e21-915e-38e5eba88eb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0f6202e-c68d-4cd5-ba8c-679958e902cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abbe4fdf-3498-40a4-96e2-0f9751fd78af",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf04b71f-2c57-48ba-b85b-2f25c53e418e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2288eb6-dd10-490a-a210-0f917f527eb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55174add-a785-4c7d-813c-197e5268b68e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9db7a7c-5ca0-4dca-8220-3e98de0863b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d176f9c-e541-4cb8-a1de-5412160ce095",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e907bf8-f8e3-4155-8b30-93d4c52c7849",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c69fd672-ff90-4a7f-9d07-2a89f20a7015"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf77467-c079-4d89-a447-abd40101da7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d7c8cf9-80c3-43f1-b8fb-4a5012161ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b146d2-3dc3-41b4-9239-7c1e2d512d61",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d6e93b-8c59-4426-8bcc-6dd9dac86982",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78515373-6f36-4a21-8d8e-d385a3b87afa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce1a83d-f61c-4cc9-af29-a54fc74bf16d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a78f1784-f505-40e6-ac8e-338931b1f27a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa72204-36a9-4037-8fc2-a0575be02876",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee96e395-ef4a-4f62-a336-bdcbe24333ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9100345-7855-4fe1-851f-4255d92f19ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "608a2477-8c05-4d97-bf20-a799b138f799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4964406-2db3-4524-ab6a-b70c86d52558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d64f0b3-014c-4a5b-b560-27a5f2af002d",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be74ea5b-88e9-4372-accd-2f5565fc6376",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09a83fd6-6935-4173-b1a0-b1fa0cf05d51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7266643-a8e6-4a65-99eb-2e1bfdafa822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3db8f61b-138a-4254-91bd-afb93195f2c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28df0232-b83b-47da-a291-e0abc716e2f7",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ddc23b7-9ea5-48ac-a85b-854a361751d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb5da50f-88fb-4a9f-b721-a21d69d9c4fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da74d327-4571-483e-9d74-a16158a278c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cd7ca7b-b9e5-46fa-be58-f9385f30f644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "620d9351-5b1f-443d-b740-8848e14bca7b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67567e24-91ba-457b-8699-ba181c8fc07d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f964c71a-08a0-4736-b369-a361d9504c55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "139864f4-15a4-4e1a-aa27-0efe8c27d555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4358b51d-b263-4208-8520-414873bd77bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d5952ee-b88b-46d7-9670-85916d9ac6a6",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f3be22-dd19-4453-acd0-08050c69845b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5d2bc5f-d676-4565-96f5-f625f6339749"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cdb61e0-c231-4a55-aa03-f81156b51a7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c361b06-bfcd-47a0-bd75-feb26dc2d3f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b645be95-e1d6-45d7-850e-a9a4cbdb89c7",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6cffb28-929f-41f9-8305-442b47ba5d0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "747a22ad-c1ad-4e9a-9457-48e0925e648d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7aea108-601d-43b7-91dd-f2ec247f7091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52305d1b-a051-493e-a0bf-3565c55ae74d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3568c1c-c8de-4490-9fdb-db2a208ad62e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfaa0aa0-dff8-4eb0-a807-d2989db82b56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7a8d4f6-bf3b-4d15-b273-55c2c90dafdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "812abee0-b998-479e-b838-786518777b95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f61c0a7e-9a6c-4b90-9082-4afbbf835787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ce0691-2a37-47bb-9b70-59d2ddfc838c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e74696a-4928-480b-99c1-a4f0b828d801",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eaf45d26-442c-4062-b1c3-5285aff23878"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da7deca-2a8d-42d2-be76-28060955c3b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8ea4155-351a-46b5-a103-5255d7608cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef1a7eb0-292b-46ad-881c-aee5a2f75fe0",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fba25fd-8111-491f-a906-fb3d640105c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07259d26-1107-4912-a373-5dedc34a7fd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96cdb203-95be-427a-80ec-dd3e6ad5de08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e07138ab-1c08-4c9d-acc1-8bbd8d67c4ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "799a0eba-64be-4b6d-a8e6-988bb7eb1b4d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53eeae00-de1a-4595-840b-c712fa97eb0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "114bc9ef-7157-453c-b7e1-f4d0988173ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c40aa106-271c-4203-84f6-99946f2c5ec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e163e32-aefe-4f31-8a62-1ebaf730cd7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc60273b-5ead-451a-8658-442436fc408f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62410dc4-c01f-45aa-8f72-0bf32cb6fd56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36db0af1-d93a-467e-8660-b8c81056e787"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "961b4439-545c-4143-96c1-f1b5036e871d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88a91031-5d18-4765-bb42-5de015231512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c55e94-21c0-4133-9254-6adb2bffdf4e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d07ab9-6adb-4a3d-85b3-4bfa8e376bca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab7f76b2-9c3b-43b2-bb61-799251610f51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a22c89-c67f-4aa4-a499-5641f8e77f5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd3a62f0-e36b-4593-98bd-0500140de4ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb4aacd8-a3c1-4cdd-921e-27f1ea2c2f56",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe4c685-9570-474a-84ac-a29518d53e00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ab9c95b-c70e-4b52-8d45-1c66473684f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c71c115-ca24-449c-aafc-7b6b90183e75",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d9eaff2-8267-4e89-81f7-67946d164c96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b46f141-780a-4230-88fa-5fdaa5cb7631",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d881a9e5-2d3f-4606-884b-0c1f9e666e3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05910bfa-c4de-44b6-88f2-4f3b26e27e8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b55fc3-20a0-4530-bcb0-8655500c0416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "877d7865-32cc-4114-aefc-ed8fb8a13122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf2a7fe-114a-4468-abb0-009ae8eaf4a3",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5283b4e-00f0-48de-9480-493825e470f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36578f4d-470d-4b95-a656-a6ade1aa5a73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "983aa21a-1be9-4ec8-ba63-f24d182822ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "803de4ac-10ad-4818-b20d-df3df819538c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b3c2123-eebe-4e5d-abef-b4b589ece3bd",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7e0e738-3096-464b-9008-a65e7ecb4adb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0060bffd-4f72-43c9-920e-4dfeb58b71c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dfb9f0a-0d7e-4823-8c34-42d5623e9774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05930c50-9ce2-490d-8028-75c4ce9c15ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c77dee7d-e560-43dd-a6cc-721767f66dac",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79abe623-8169-4736-882f-2872a3b28634",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "775fa100-9631-41ad-a554-9addfc0254b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a551836-f29c-40af-a12f-1abb378ea194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3140f58-60a3-4c3d-abcd-3a5610660630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b37ed0-45ab-45d9-93b8-cdff4201eb7f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61919ed8-6a95-4710-a9a5-f9d9e00269a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b095500e-81a3-4912-acfa-73e38c4a9c46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf5b250-cba3-4cac-be8e-99cc93d3db84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06e835ff-a22d-4c67-bbc5-627b8c249678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c61e731-3672-4899-ada7-6d252ae58af3",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ce58391-7f08-49c2-8c51-be5d8e9edbb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d102d18f-6dca-4a94-b9d5-2c957fb554c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1decda-7d54-449c-8768-31ebd5a49040",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b979d4d-0a91-4748-9146-c4306bf16ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7bb244a-b7af-45a8-a482-534d47da94e5",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf40852-8a32-4db3-8443-81b908a6fd72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf78a94d-b8c2-4eca-8bb3-96a969fc5fde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0fd70b-a86f-4d4a-8ea1-ad3d58ba62f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d92ffcd-1959-47f2-b207-963a4d0b90e5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ca92998-4503-4c00-91f9-532bffeda7d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af1b1af3-ec04-42cb-9991-0f9c8a845756"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "222d32a1-03ed-4e80-8b4a-a7f36f5c7e52",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "48fc75c6-acaa-4620-8114-0d3df96a233d"
                    }
                  }
                ]
              },
              {
                "id": "2a97faff-9495-45d3-a9b8-3a0667011dd3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c3f4f69b-a3e9-4a5b-9b80-b62c2366fb98",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "280a11ad-eb44-479c-b571-9c2c0a96df20",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b071c04e-cc34-440b-943f-0b0bbb7b18fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc568b12-8c53-44cd-bcd8-9b2bbe916b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6b884fa6-5c56-4612-9b3f-3d5390e54ada"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eeb164d9-3e02-484d-a7a3-7ba0d192b213",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb5850f3-305f-4f2b-b833-135e7d719204"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e582eede-37d9-4c64-8d33-e73b1797f8f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2af3510f-6096-4f44-8778-01a9e9023875"
                    }
                  }
                ]
              },
              {
                "id": "3d81d181-1c45-4f87-9146-cfb295e56fe5",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e2ac6a1d-b064-45b4-9f8b-6fb42e7b4778",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f0f9df-590e-4889-935d-55a6540a62e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a3001c61-6535-4dc1-9d27-2dc616c33024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f5f307-360b-4aa9-8e76-6473cfb53e5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0b92035-797c-454b-9f48-e212c172651b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d9796564-f687-4659-a0a0-a9f7f40d8e95",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f35cb630-3b49-4044-a6be-92a2f38dfa3e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "58827187-7857-4a46-b536-8e5ba24713ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "92b62689-7842-4c82-aadc-c29df627c818"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f4f1b6d6-fb70-4825-99d0-cf68b71eea12",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e908cd3f-9d87-4f29-8d73-225e4aabdb93"
                    }
                  }
                ]
              },
              {
                "id": "36509a50-7b9b-4618-af30-32e881b3edad",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0402a0cf-428c-4915-84f1-459e8a70eec1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "af12afac-da09-46f8-ab0d-7e29a3dee53b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0d560be2-b386-4c36-855f-af744fed4cbd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "139a2142-ef85-4f94-bff2-783bfa49f1e5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eb263aab-9b6a-4d21-95d7-e6c5aa9ea0d8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9a037600-40bd-4df5-9b51-fc4bd407d572"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0b45e032-2a15-4e01-a6b0-56d496c7d31e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "87b16473-4624-4241-967c-c408d649ad72"
            }
          }
        ]
      },
      {
        "id": "5e722d40-c2d5-4a57-81b3-608e50483888",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7e837165-f2b6-437f-ac09-e769a9a068e9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5f51740a-6667-4871-b119-373808cfb3e7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "810c3900-cd4e-4eac-b4f6-5e7b2467f396",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0efd2fa5-0180-455b-9937-cfbf8c102173",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4b02555b-b988-478f-ab11-9f72d6f05ca6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d8d6b49-13e8-4912-b44b-e5b7ceacf7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7ad5fdb-7de7-4209-accb-965fffc8ef02"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a819d0c-8f01-49e4-abb3-5ba4461f7c3a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c65b4a8d-d752-47d3-ad4c-a0bb7a1268a9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "09a27801-cffa-417a-8dc8-543c489b8d39",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78533ee2-548a-44e0-80d6-c381778ae5ee"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2ecf8bdd-f2a8-4955-b4f6-6eaff649e5b7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "16146580-00e5-42dd-8e17-93752d523b20"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6e4c65ab-9da8-4fbc-af6b-ffeb5a3257ce",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "52be6650-8ea8-4168-9aa6-76c0d85a1e67"
            }
          }
        ]
      },
      {
        "id": "862c9cc3-c94f-486d-92b9-18ad359a2edd",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "827566b6-dd72-4fcf-b6cd-5f80fcdc66d6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c2c3001d-1ac0-405b-9988-803066d10701",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "601b4390-3342-4cc0-858e-57e840d9d592",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "942fdbc9-c099-490e-85e5-3132df2d5c24",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e801afb5-3514-4c5b-8f53-7c85d7535423"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab29bc49-37e5-426a-9688-c2d1da6a2405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f835155b-01f3-4222-8d6c-c940639a1ee4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2bcbdf4c-b16e-468b-924b-911bd9487e32",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fbb25b8e-9762-4289-815a-c2e026dc3891"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3786db44-e112-4a61-b94f-ed59d2eb3315",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "61503820-2feb-4544-8d76-3ef4d91848bc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b91804c-6c6b-4b60-ae33-8d916fddecc4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d7753a51-c941-4d04-8851-00e195d37277"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f1e23a96-2395-4905-8034-eea4cf353fa5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0e444289-5e13-4118-9c54-f3ac197b9a50"
            }
          }
        ]
      },
      {
        "id": "53359faf-04d8-40fa-8ca2-80531bbc2233",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "d8f88866-9bfa-4cf3-b3a7-a0ef79acab59",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9a17f369-bd66-4487-950f-e34e957bfe08",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3a9d8345-e691-478d-8a0f-9ca9767c72b3",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "386a0549-df0a-47fc-9fef-ae2b4731a916",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "183a198d-d22d-4448-9e6a-a965fddd8bef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "237b8139-decd-4213-bdf2-560dec222122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2e018100-d810-4b86-82c3-5e43ef22c07a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e668f56a-7e0e-4b97-9768-51fc2835f82b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "56ebe5fe-d222-496a-8047-4c33bcbd6797"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "edb884d0-987a-4679-8f3c-cca9b3d7500c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa73f80b-1468-4f29-8d91-2052a32eac84"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "756c8440-7d6e-4cea-90fb-7462d6bfc960",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5ab57777-6467-4ccd-ba92-4179678ed583"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a70b6569-75cc-4d56-9530-6c92296b662e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6ca76893-f271-43de-a104-0634751881b2"
            }
          }
        ]
      },
      {
        "id": "7a2b6c4b-06ac-44bb-98e8-a57f8b9c4604",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bee980cb-4227-4d8e-a756-c26d84c4647c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e2b28b15-1a3d-4c16-b05f-115448bc53cc",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "2503c7be-e36e-404a-bc86-973cfb0d31e0",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "841c3cd8-e0e1-4edd-9117-fbdca3f2d7ff",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a0e13ca7-087a-45cd-8dde-d4d6607e9c0d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 10.519298245614037,
      "responseMin": 2,
      "responseMax": 282,
      "responseSd": 34.551722929577274,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1710290056982,
      "completed": 1710290068927
    },
    "executions": [
      {
        "id": "4e2af6a9-529d-402d-ba5e-aec35420c1e1",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a0caea80-0d31-4840-bb9e-dc204c1ab54d",
          "httpRequestId": "7b4b4291-6d93-465b-8acf-32c1b96575ef"
        },
        "item": {
          "id": "4e2af6a9-529d-402d-ba5e-aec35420c1e1",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c1ff75fc-e570-42ce-9e86-e6b58dd6f0a0",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 0
        }
      },
      {
        "id": "17431404-62a3-48e8-b87e-d008ae518aa2",
        "cursor": {
          "ref": "58b1be6f-e58e-4ac2-9810-5679c97a315c",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b5443230-50d0-42f2-a12c-cd1907baba9d"
        },
        "item": {
          "id": "17431404-62a3-48e8-b87e-d008ae518aa2",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ca9c1a56-5814-4e38-9d4b-fa43693deca7",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "f6d5a505-dffd-4734-86ee-77c0b4d59b10",
        "cursor": {
          "ref": "f06248dc-cf47-4953-943b-46eec0a8de9e",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "4ff5051f-c870-41c7-979b-0c3565c36a77"
        },
        "item": {
          "id": "f6d5a505-dffd-4734-86ee-77c0b4d59b10",
          "name": "did_json"
        },
        "response": {
          "id": "69801c00-d405-492d-ad74-0c95df7c29c4",
          "status": "OK",
          "code": 200,
          "responseTime": 232,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a87ea05c-4538-4eae-8510-c9c5e7618653",
        "cursor": {
          "ref": "f6ce4bf8-49e8-4813-a9d1-ee6575e6b012",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4da464d7-bb54-4cb8-99d8-84cb77c863af"
        },
        "item": {
          "id": "a87ea05c-4538-4eae-8510-c9c5e7618653",
          "name": "did:invalid"
        },
        "response": {
          "id": "4d53bb7f-c067-4e86-bbdc-a661ef2eed8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a87ea05c-4538-4eae-8510-c9c5e7618653",
        "cursor": {
          "ref": "f6ce4bf8-49e8-4813-a9d1-ee6575e6b012",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4da464d7-bb54-4cb8-99d8-84cb77c863af"
        },
        "item": {
          "id": "a87ea05c-4538-4eae-8510-c9c5e7618653",
          "name": "did:invalid"
        },
        "response": {
          "id": "4d53bb7f-c067-4e86-bbdc-a661ef2eed8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1530fc8-9e1e-4485-ab4f-4f2761382fab",
        "cursor": {
          "ref": "adbcebf7-885e-467d-917a-467c86da8b4b",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "acef3250-6075-4fc4-90d6-45b216180658"
        },
        "item": {
          "id": "f1530fc8-9e1e-4485-ab4f-4f2761382fab",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f6ac24c1-61b3-45f6-a35d-857be81dae61",
          "status": "Not Found",
          "code": 404,
          "responseTime": 272,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e85dd7d7-d122-4c43-ba0d-4ce030fce84e",
        "cursor": {
          "ref": "fd129359-e670-4f75-b3b1-95b9303782d7",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "af6711f8-6630-4775-beeb-38da4d346c4f"
        },
        "item": {
          "id": "e85dd7d7-d122-4c43-ba0d-4ce030fce84e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "21941f19-660b-419d-aba4-129fbd271ab8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd12887-4cb3-4662-86f0-70d7b6422ee8",
        "cursor": {
          "ref": "1a4bfff8-f678-4f5d-8639-8f63563bbe37",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e9f9f2eb-d75e-4ad0-84b8-cbaea87a8af3"
        },
        "item": {
          "id": "8dd12887-4cb3-4662-86f0-70d7b6422ee8",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "6b2bfd2b-3f3b-4b33-9c93-8ca1bf660671",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18010e1e-2774-49c7-a450-00182220d2d5",
        "cursor": {
          "ref": "29e2eb0c-c3b1-4001-b6d2-e444a644f659",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "cee5dd9c-1d29-43b3-9aeb-1f276aa288f0"
        },
        "item": {
          "id": "18010e1e-2774-49c7-a450-00182220d2d5",
          "name": "identifiers"
        },
        "response": {
          "id": "f8acba00-aba1-4a47-b554-6689d8850aa9",
          "status": "OK",
          "code": 200,
          "responseTime": 83,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f02b458-4943-4a25-8629-dd882a25cf14",
        "cursor": {
          "ref": "aac1555a-7547-46b9-98c9-1b38cd9526b3",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "30b74c41-2342-4e52-a798-a63d61b34216"
        },
        "item": {
          "id": "6f02b458-4943-4a25-8629-dd882a25cf14",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "cb7050bf-0061-4b40-856a-36fac222b5ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d96107ea-d923-48e6-a547-826b800ea001",
        "cursor": {
          "ref": "ea84726b-6c23-4bf7-b16b-45614fd80ed4",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "94479d5a-47f8-4ff8-9d78-34d2963a26b0"
        },
        "item": {
          "id": "d96107ea-d923-48e6-a547-826b800ea001",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "de22fef6-a8dd-447e-9f9c-b71cd897ceca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e492cb74-469b-4b12-b308-752e0db8a1cc",
        "cursor": {
          "ref": "a0d7c97b-8e32-4809-8a52-b360e2874d39",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "13c920ce-f3e4-468a-a68b-d9ec24827f24"
        },
        "item": {
          "id": "e492cb74-469b-4b12-b308-752e0db8a1cc",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4d572ccc-4906-483b-bdd2-e33c780db576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef8ce4d5-adba-46d9-829c-545348064cc9",
        "cursor": {
          "ref": "c768369b-2fe0-44d7-a4a8-ec5f8093370c",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "cb6b758a-b014-44e2-afea-1dc281ccb177"
        },
        "item": {
          "id": "ef8ce4d5-adba-46d9-829c-545348064cc9",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "76e232be-f427-4c9e-9c59-eaf67f72b1f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f85928-0ba0-4188-b69b-3b86cf8311ad",
        "cursor": {
          "ref": "6566b55b-d464-413b-bc5b-3d77876d48ca",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "fa2199de-20d1-4b43-89d6-1aca69c7513f"
        },
        "item": {
          "id": "02f85928-0ba0-4188-b69b-3b86cf8311ad",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b54275b9-e021-4e03-9d92-997054065d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "147c792c-f65a-4a12-8be3-c54d5b0a5454",
        "cursor": {
          "ref": "1e14794c-7c3d-4816-ba78-b88fc39527ef",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9aed6208-e6b2-4457-ac59-ef9b03879a30"
        },
        "item": {
          "id": "147c792c-f65a-4a12-8be3-c54d5b0a5454",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "de3132db-dcfc-4ae7-9db8-ca3df8036355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6896fe95-bf60-4a18-a896-98841951b3cb",
        "cursor": {
          "ref": "a552179b-ac7b-428a-bf9a-0c5df7220bcf",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8edfc58f-ba24-4469-84a8-a3c69613dcda"
        },
        "item": {
          "id": "6896fe95-bf60-4a18-a896-98841951b3cb",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "bcab1740-8a9b-43fc-a69a-a5fd89c7390c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e334bab3-a30f-4c4b-900b-3d3b332eed63",
        "cursor": {
          "ref": "6f8d5159-3a7d-4780-8bc6-f57edf1473a0",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "6bde04e9-10ae-44bc-9a6d-b1be86c0743e"
        },
        "item": {
          "id": "e334bab3-a30f-4c4b-900b-3d3b332eed63",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "45279e0f-881a-4a52-bce5-8e9b9e1774b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe9446b-c95b-4a6b-8d2f-d875fa2e428b",
        "cursor": {
          "ref": "92760266-b98d-431d-b802-9b70a50df3e6",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "1736ecbf-4823-497f-9538-9338d7542d3a"
        },
        "item": {
          "id": "fbe9446b-c95b-4a6b-8d2f-d875fa2e428b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0a3ea4e4-838c-41f7-88f8-e47b9e11a574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0c8475-86ec-48d4-a2c7-44618d3c3de5",
        "cursor": {
          "ref": "a22b8f7e-e37d-40fb-8365-cd9e91ff5298",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9a0e7500-dd42-4205-93da-1d7cda441961"
        },
        "item": {
          "id": "9d0c8475-86ec-48d4-a2c7-44618d3c3de5",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "8bd54490-cdcf-4aed-9417-1a3691398f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1f25f4-963a-4235-b2c8-ffde8c5d3a85",
        "cursor": {
          "ref": "e6f0b75e-91db-494b-8984-254c2054fb09",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "392cacf9-605f-4241-8d73-9567a76155a6"
        },
        "item": {
          "id": "ec1f25f4-963a-4235-b2c8-ffde8c5d3a85",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c60c37a1-166e-47f1-92e4-9d32adf45b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e31076c-2a86-40dd-ae9c-2ed8c0b41060",
        "cursor": {
          "ref": "eb30528b-85a8-4777-a1e3-422736b3e71c",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7b27732d-4c43-4a1d-b80d-585818882fa2"
        },
        "item": {
          "id": "8e31076c-2a86-40dd-ae9c-2ed8c0b41060",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "8f93d929-22bf-4271-9db1-74ea0ed043ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dedadaa9-66f6-4cb8-8ec0-a505575eb507",
        "cursor": {
          "ref": "a9cb2823-55a8-41f5-91cb-54a0f5dc26b4",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9313be24-b910-4113-8e3e-696bf625f809"
        },
        "item": {
          "id": "dedadaa9-66f6-4cb8-8ec0-a505575eb507",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "795c32a0-3f4c-48b6-980a-83ed4c7664bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0acf9c6-f48d-4077-9f3c-c4b0d822a9b9",
        "cursor": {
          "ref": "20a34b5f-c770-4fd9-b0cb-619874c29714",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "89d5196b-518b-48b9-9522-3a73d77523df"
        },
        "item": {
          "id": "d0acf9c6-f48d-4077-9f3c-c4b0d822a9b9",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4b1542b2-4968-4e0f-9e35-879131fc21ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d24c2906-4401-4808-8084-043cd7e8cb8c",
        "cursor": {
          "ref": "66092aa4-1f25-4027-9b4f-bcac943c7671",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b42f8d06-acc1-4d0a-9053-e7ddba0496f4"
        },
        "item": {
          "id": "d24c2906-4401-4808-8084-043cd7e8cb8c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b72af362-63a0-429c-8dcd-674cc5345f75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a07ba2-35f8-4f37-8888-bfec3fb468d2",
        "cursor": {
          "ref": "b37b96e8-4022-43df-8b06-99202e6ddfd9",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d326c49f-6d62-4c7d-a03b-7058af6ea539"
        },
        "item": {
          "id": "c4a07ba2-35f8-4f37-8888-bfec3fb468d2",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "a125b4f4-f6a3-49d8-8dc3-ce4db1a82342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b829f3ca-2867-46a8-8f84-c4b4380c3322",
        "cursor": {
          "ref": "1878f50f-9ec0-4841-8aa5-6e319148637b",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "157f461b-761e-44ff-82c7-2d828e843a24"
        },
        "item": {
          "id": "b829f3ca-2867-46a8-8f84-c4b4380c3322",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "1debc0a7-f0cb-4861-a494-156b958c82b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fbbfdb6-d026-4693-8d2c-902532a915c0",
        "cursor": {
          "ref": "24a17a3e-d94e-4744-9ead-cf13ceef8b1e",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5da6454e-bba3-47c0-ad9d-e56b13c80ea8"
        },
        "item": {
          "id": "1fbbfdb6-d026-4693-8d2c-902532a915c0",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3a56c2a7-9430-4ee2-a025-12489cddbc13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989b9774-3632-4815-a52e-a4da85dd3f15",
        "cursor": {
          "ref": "aa715db7-b17d-4212-ac44-4d97d9918a15",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d500fec6-8083-41f2-ba07-6efe6fd319a8"
        },
        "item": {
          "id": "989b9774-3632-4815-a52e-a4da85dd3f15",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6a1890e3-b9ca-401b-b81c-4c67c7201db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c0e379-4837-41f1-be81-aa5b11219b99",
        "cursor": {
          "ref": "a815c17d-39f7-4ece-b54d-c6f7f5bb28d0",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "80238b68-af00-42db-a63b-20f47d1042a9"
        },
        "item": {
          "id": "e4c0e379-4837-41f1-be81-aa5b11219b99",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8f4ce68b-da1d-48d2-b1ec-c9b3945a0912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cfa7d57-5ab7-4a5a-8d3e-ad2d63b3c929",
        "cursor": {
          "ref": "74d21020-89dd-4936-bdfb-662fe823f291",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "184b4ff8-861f-4178-917c-0d0d8d9b59ac"
        },
        "item": {
          "id": "3cfa7d57-5ab7-4a5a-8d3e-ad2d63b3c929",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "4af805b1-b0ef-4d55-8be3-bc9ec036521a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da9f5ca-fad5-4bb5-96ed-76a1e0be5230",
        "cursor": {
          "ref": "fc63b4ef-6835-4308-9c2b-0992107f967c",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "08cf0c84-ed6a-43f9-a552-86cf957d4683"
        },
        "item": {
          "id": "7da9f5ca-fad5-4bb5-96ed-76a1e0be5230",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d73dd32f-a059-4b99-9950-4376677e1d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4147ba9b-452c-4be0-b4d2-23963905a8af",
        "cursor": {
          "ref": "7cfd4c8e-3fc8-4d01-b5c5-736b8f5b126f",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "781ee32f-7f3f-4da0-be45-dffb82de887f"
        },
        "item": {
          "id": "4147ba9b-452c-4be0-b4d2-23963905a8af",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "84ca98fd-335d-48e0-960a-05ab8c065138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c11df4-3d38-4139-8640-996c8be1d196",
        "cursor": {
          "ref": "1975057e-ab0d-46ae-9892-f2e0d7bc2317",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a513cf2d-d44d-4be0-8232-be0bceb479fe"
        },
        "item": {
          "id": "04c11df4-3d38-4139-8640-996c8be1d196",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4a58da36-08d5-4bc7-9d2f-532ad2832dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09fd4856-6560-4b41-a9ed-d226871f433f",
        "cursor": {
          "ref": "3733bc6f-f952-4a32-8ca3-2da93a216725",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "3aaa47c7-d68f-4623-9e74-daa79282a876"
        },
        "item": {
          "id": "09fd4856-6560-4b41-a9ed-d226871f433f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e0e940c5-b26c-4615-9a0d-59c9bd17d484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68edf989-9da5-4b0c-933b-02a2122060d7",
        "cursor": {
          "ref": "3a2b936b-d223-45de-ac94-a5ca6bd57a20",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "df119210-7def-4e64-9413-dd07655a0d6c"
        },
        "item": {
          "id": "68edf989-9da5-4b0c-933b-02a2122060d7",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "99804899-34de-458e-bef8-aedc24658f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf78c53-fe6b-403b-99e9-067799b709f7",
        "cursor": {
          "ref": "cfccec6d-06bf-43f9-8851-a557f7367d93",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "bcd7b638-ec18-4bd6-b088-655ec087d72c"
        },
        "item": {
          "id": "ecf78c53-fe6b-403b-99e9-067799b709f7",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3efe6cf1-5d20-4091-a023-f97133231a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ec68e8-764a-4c1b-a433-757ed37b2baa",
        "cursor": {
          "ref": "f8f7365f-942d-4c79-80da-f4fee6f9393a",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f262ba03-1405-49ac-9077-e1a76df328db"
        },
        "item": {
          "id": "f3ec68e8-764a-4c1b-a433-757ed37b2baa",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "8446ae40-50e3-4a27-8302-431ab636db45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f885e6a8-c24b-467a-8bb1-9f5754853a1d",
        "cursor": {
          "ref": "db88891f-86da-4805-9a9c-12418f1cc70d",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "12272f31-e15f-485b-8456-087ee7d393a2"
        },
        "item": {
          "id": "f885e6a8-c24b-467a-8bb1-9f5754853a1d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "21197746-efeb-4fe1-b0aa-d1892ce26be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b86ae7cc-0314-4fce-8fab-47d522d9feb4",
        "cursor": {
          "ref": "ac2e2afc-8a67-4a7b-8ef9-98a820591446",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "bebd78d3-5c24-4b47-b256-342d853a624d"
        },
        "item": {
          "id": "b86ae7cc-0314-4fce-8fab-47d522d9feb4",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "585f4528-8a47-43e8-919c-536cbf3a628f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2abd237-81d5-4d78-ac59-d3aee11e4e18",
        "cursor": {
          "ref": "005c043f-f4d3-4929-85e4-fc267f219e9f",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a60ccfab-a80f-45f7-9869-ed5b5ad6ada7"
        },
        "item": {
          "id": "f2abd237-81d5-4d78-ac59-d3aee11e4e18",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "90499f87-59bd-416f-8019-5e66594c46d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1478ded7-9c61-4235-9c12-95edd1230b3c",
        "cursor": {
          "ref": "8eb83680-a2ce-4929-937b-368782ae7a6e",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "de454e22-41c5-463e-bf21-e6ed2237b7ec"
        },
        "item": {
          "id": "1478ded7-9c61-4235-9c12-95edd1230b3c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "39dc705c-d6bf-4c26-b975-919ec34b7458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f1b3535-838a-415b-9338-14e37dd99776",
        "cursor": {
          "ref": "a5bceaf5-24c2-4942-9ce1-fba63e3cf59c",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "55261d6f-e10f-4775-ad70-59d58e0883f2"
        },
        "item": {
          "id": "1f1b3535-838a-415b-9338-14e37dd99776",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "88d56ff6-a279-4c9c-88ab-20d580b2f3bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3122a73-450f-467f-af02-192a6f927e07",
        "cursor": {
          "ref": "885f1ebc-045e-4892-8eae-d734be3a421c",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e9081554-5123-4fcd-8f67-fa2780c1c29d"
        },
        "item": {
          "id": "b3122a73-450f-467f-af02-192a6f927e07",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "06f91ca9-d74d-44dc-a3bd-d44fa82968fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc1381f-2c7d-4da3-8497-4e3f2dbad09e",
        "cursor": {
          "ref": "cf850203-445b-4e6f-aec3-bf80330a61cc",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2741ee1d-61f7-42ce-a3ea-eff486910a54"
        },
        "item": {
          "id": "0cc1381f-2c7d-4da3-8497-4e3f2dbad09e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9d2c1740-330e-4586-a968-d02e988dc634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddbdbd2b-27b3-4e16-8ef0-2731842b5e72",
        "cursor": {
          "ref": "6d77a32d-8ceb-4768-bff5-5bce399bb062",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e43dcae4-9fff-4ef6-a923-947b94ab55f9"
        },
        "item": {
          "id": "ddbdbd2b-27b3-4e16-8ef0-2731842b5e72",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "7971b57a-744c-49c5-bc82-dae86498338a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 27,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d9dea51-1453-46e9-b316-b4335506996f",
        "cursor": {
          "ref": "91e52694-9564-4431-b724-1ed419bb10a9",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c2d17659-a396-4c6e-88c1-8a2e53eadcbe"
        },
        "item": {
          "id": "3d9dea51-1453-46e9-b316-b4335506996f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "047b2930-4384-49ab-99ce-aa1e53922cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3485501-8117-40f9-8d1b-2a018c32e0f8",
        "cursor": {
          "ref": "7f0cb634-5438-4517-9865-a967c0e4a6e6",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c0b9aa28-8600-4061-9593-4e4c2dc95dd1"
        },
        "item": {
          "id": "a3485501-8117-40f9-8d1b-2a018c32e0f8",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "4a3764d1-94d7-4716-911e-3ece5c193240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbaaed7b-42fa-4729-a480-8d261593e3d6",
        "cursor": {
          "ref": "0fa6a766-e839-4cfa-b798-7c449f30f5c7",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "d09885d0-3f05-4c7e-b092-8b0995798124"
        },
        "item": {
          "id": "cbaaed7b-42fa-4729-a480-8d261593e3d6",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "9b259c25-9898-4fb7-bb67-2ebd693fa00e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d2f7f2-0048-443c-95c6-59978beadaad",
        "cursor": {
          "ref": "c1a1963c-ade4-41a1-b906-10df991d6f94",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "96556a62-12d9-4652-90ac-f7838644cef5"
        },
        "item": {
          "id": "75d2f7f2-0048-443c-95c6-59978beadaad",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "6b36e19d-4936-4f85-b81e-aee10f5993d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "194dc2fd-231e-48cf-a8f5-6c268fa49558",
        "cursor": {
          "ref": "b9077ef4-1ec4-41b7-ac19-5b2de2bb889a",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "10622394-aaa5-4b27-9615-2f503f03f36f"
        },
        "item": {
          "id": "194dc2fd-231e-48cf-a8f5-6c268fa49558",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4c299507-731e-44fb-83cd-58cf5ced524d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b653db7d-4fdb-41fe-a04a-ad9b2c415848",
        "cursor": {
          "ref": "303c2498-2847-4f22-8c1b-7f5b981b0614",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a9dfaa67-be70-4cde-9eef-b7195d1bc319"
        },
        "item": {
          "id": "b653db7d-4fdb-41fe-a04a-ad9b2c415848",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a289927b-d5e2-47c5-88b8-04d01d66440d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0b62a9-21ff-4b72-ac2c-3af97b6bc616",
        "cursor": {
          "ref": "966684ea-5023-48eb-b333-98b395238250",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "e155fd39-9197-4a58-9cdd-0eb6ee172c31"
        },
        "item": {
          "id": "8f0b62a9-21ff-4b72-ac2c-3af97b6bc616",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "bafc607e-89dd-427f-87ae-821f9e975c23",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 21,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc46c723-e509-42d8-9c13-8d3f6bce2ae1",
        "cursor": {
          "ref": "acff50e7-83e9-4530-963a-39fede94e740",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1134a637-b8d5-45e1-8f79-dd9436148a86"
        },
        "item": {
          "id": "cc46c723-e509-42d8-9c13-8d3f6bce2ae1",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a467a8ac-1b8d-4d2e-a5b6-f85ea4f3c24b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d83abdd8-bc6b-41bb-8769-db3156aa8530",
        "cursor": {
          "ref": "b9136174-69a9-4183-a7d2-375b9488bf8a",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "27ec9872-d7de-4e49-bd32-9497b3046224"
        },
        "item": {
          "id": "d83abdd8-bc6b-41bb-8769-db3156aa8530",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "bbf95d71-a1b0-46e4-970d-c88694950d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18989c4a-ec2d-4197-8b5c-70cbfad426d2",
        "cursor": {
          "ref": "fec2c5b9-a48d-4ab3-90bc-205f57ca1e26",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "aba56394-22fc-4666-b5e8-35365dbc6327"
        },
        "item": {
          "id": "18989c4a-ec2d-4197-8b5c-70cbfad426d2",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "83a1ea8d-e8e7-4bff-af88-b3bff67a4edb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be45d7e4-394a-4633-8f61-0750d56756ea",
        "cursor": {
          "ref": "83ee47ce-5c7b-482b-b2fc-e48926fd2d94",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a69ac887-a667-4fec-8987-342fcf5d4b28"
        },
        "item": {
          "id": "be45d7e4-394a-4633-8f61-0750d56756ea",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "47321f27-497e-4470-b86d-739a9826961a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038439a4-5a56-4386-a397-15cfdb973c42",
        "cursor": {
          "ref": "88394c3b-fedc-4ef2-94e8-7bff38d3dbbf",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ddaed71f-e368-4731-a20d-f2f63da5ee10"
        },
        "item": {
          "id": "038439a4-5a56-4386-a397-15cfdb973c42",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "98446ed3-89e6-4138-ad42-8a0a7dd2ceca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ddb9c3-3288-46e9-830e-659298b30d5a",
        "cursor": {
          "ref": "95c014f3-9755-402b-8436-86714b529b4b",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3bc84824-64ee-4853-9554-5b1fc450ec8d"
        },
        "item": {
          "id": "06ddb9c3-3288-46e9-830e-659298b30d5a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b468e2f6-4e18-4222-8461-e1171090d158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c950c49-e137-4f8a-9463-ca07af42be12",
        "cursor": {
          "ref": "c46878b6-95ca-4460-b4c1-84ae05f82aaa",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c0ab9790-8958-4bf4-bd1e-79e4f2ff376f"
        },
        "item": {
          "id": "9c950c49-e137-4f8a-9463-ca07af42be12",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "eb4644c2-1b9e-4eff-8e8d-fc2f8d10d334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a411f639-6a4d-40f7-bfb2-f47d3bb669ea",
        "cursor": {
          "ref": "b8e103fb-3bc8-45c1-8c3b-12f74eda0fd7",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "0d863ecb-4405-4477-8c22-975b13b5e0b1"
        },
        "item": {
          "id": "a411f639-6a4d-40f7-bfb2-f47d3bb669ea",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "3af21b6a-b749-49b8-9eb6-7ad6ca167a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995a8dae-41c6-4264-ad1c-3672cd775a73",
        "cursor": {
          "ref": "499cc2d3-dad5-4f05-8cb1-4e4ce814ebb0",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "31532c44-3667-4e38-ada3-976c72bebbe1"
        },
        "item": {
          "id": "995a8dae-41c6-4264-ad1c-3672cd775a73",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "521e5439-901b-41d7-94a5-d12eefae659e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a02e059a-240f-4504-9c79-66af2a0232f6",
        "cursor": {
          "ref": "b151a79c-0923-458e-9219-cc66530ed739",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "71730b0d-d0d7-4de5-93ae-5370180448a0"
        },
        "item": {
          "id": "a02e059a-240f-4504-9c79-66af2a0232f6",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f5e16214-8652-4256-a450-d267bfad8b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84186acc-87e5-449d-9f72-2789872fd2f2",
        "cursor": {
          "ref": "c51a4c6c-d528-4258-9c22-75c2172c31aa",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "71d2c21a-3023-4aa8-a1a0-9b858760b8a1"
        },
        "item": {
          "id": "84186acc-87e5-449d-9f72-2789872fd2f2",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4065e8f2-9294-4bc3-bf00-8b89c12aa6b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d08db7-dbfd-4b0e-977e-ec5b0c8974f5",
        "cursor": {
          "ref": "4ccd433d-2cbe-4b34-ad92-7dfc28b78126",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "52f2a83a-bdfa-4ae6-bea9-fa4d78b547cb"
        },
        "item": {
          "id": "74d08db7-dbfd-4b0e-977e-ec5b0c8974f5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6d531294-3faa-4ddf-a9bc-8d5514dc611e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a4666f-9cde-45d0-910a-a1ff9c90fc80",
        "cursor": {
          "ref": "4eb2b07b-237f-4d38-b1c6-21b8cf6c030b",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "58767a11-19cb-456a-bd4b-227407ad86d1"
        },
        "item": {
          "id": "e2a4666f-9cde-45d0-910a-a1ff9c90fc80",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "44ce068c-d072-4f22-83e2-f3e864356f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1227dc35-3b47-47f2-98be-22dfb67c7992",
        "cursor": {
          "ref": "fae03b3a-fc3c-42f3-ac30-969d3158f5b4",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "bee465f6-5e76-482d-a510-7edc21b95734"
        },
        "item": {
          "id": "1227dc35-3b47-47f2-98be-22dfb67c7992",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "4c2f0705-ce25-4345-aeb1-7fa4733f0347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d630c40c-da76-4755-bfc2-560e0fc3144e",
        "cursor": {
          "ref": "0eeff782-3929-4b13-92f4-c577a02af5c7",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "0eadc722-3ac5-4a17-9d99-fcd15dcd8940"
        },
        "item": {
          "id": "d630c40c-da76-4755-bfc2-560e0fc3144e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "caf3d80a-dfd7-4840-8513-af937fc4daee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a6ae459-ec5a-4b2f-ade2-5fe2eb79472f",
        "cursor": {
          "ref": "2b30a0ed-7cf0-4798-9d26-e314618002ca",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e84597c8-9bc1-4989-9d13-16b9445f9225"
        },
        "item": {
          "id": "3a6ae459-ec5a-4b2f-ade2-5fe2eb79472f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "608f0b7e-f413-45e0-a502-9114bbd133ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e93beb44-2959-4731-81df-d3afa32f8ba7",
        "cursor": {
          "ref": "cf3f934d-022b-4512-909f-4e44863250d3",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e608c93c-c091-4c5c-ae8b-4204e6be400d"
        },
        "item": {
          "id": "e93beb44-2959-4731-81df-d3afa32f8ba7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "adcc3d10-deec-4ea3-8a7a-259799ab007c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9934522b-3548-4c22-8a56-73346ee1a69a",
        "cursor": {
          "ref": "76f007c3-b94a-4bd6-98df-f5712c507ff0",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "feeadfa4-22b4-472e-9c63-6eb3538ebd39"
        },
        "item": {
          "id": "9934522b-3548-4c22-8a56-73346ee1a69a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "cd75b173-d609-47ae-b4db-618b64f1790d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784b4dd7-25cd-4af5-b0e2-d4616610e478",
        "cursor": {
          "ref": "2b565262-c27d-49b0-8a2f-1895168fbbe8",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b0e22f17-0cce-4a5b-b7e1-77b6bc39cc3b"
        },
        "item": {
          "id": "784b4dd7-25cd-4af5-b0e2-d4616610e478",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "1e13be79-307a-4209-90c4-3e20be9d4c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801e180b-c7ed-4a74-ae11-d646af9d5f04",
        "cursor": {
          "ref": "60bc5b5b-6e3b-4e78-8d50-b6252b99405d",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e89728e4-9a8c-4a76-9593-7337dd1878b8"
        },
        "item": {
          "id": "801e180b-c7ed-4a74-ae11-d646af9d5f04",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "673fbd4a-9f25-4197-9d8a-2a09316041dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5206b34c-6f8e-455f-9d82-d8fb2fdfaccb",
        "cursor": {
          "ref": "d7539799-4f7c-4445-83d2-126c2736e226",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a0e44c08-ab5b-4d21-827a-2f8203313afc"
        },
        "item": {
          "id": "5206b34c-6f8e-455f-9d82-d8fb2fdfaccb",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b838ac94-9b8d-4650-85b9-95f8ae0305f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240c76ef-f99b-4ac9-ad99-fd9fbbef45c6",
        "cursor": {
          "ref": "b3bffd2d-d107-433f-aca2-81e8257a3999",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9accc836-bf02-4c8f-ba01-e3938a94a5a5"
        },
        "item": {
          "id": "240c76ef-f99b-4ac9-ad99-fd9fbbef45c6",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "223f68fd-9aa0-4d55-9ea3-70789a2a708d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60b0585-7ead-4334-8f36-629960c93506",
        "cursor": {
          "ref": "43b78488-14db-4348-b8c2-373c1f85b102",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c3b83705-ebb9-4f17-924d-639ed1f78586"
        },
        "item": {
          "id": "e60b0585-7ead-4334-8f36-629960c93506",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "bb044d0f-7dd6-4ba2-bd17-dc1a4c0e14be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc73b06-dd9e-4972-8ed2-25311ffb6993",
        "cursor": {
          "ref": "f7da4a99-20a9-48d7-b33c-30fbf1c33b43",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "5ce63455-d48d-4c16-84f7-d46c491c3078"
        },
        "item": {
          "id": "1fc73b06-dd9e-4972-8ed2-25311ffb6993",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8bb93d67-f316-49ee-8766-cb6f5da14615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe1003a-6b15-4d32-8368-275fdc3253eb",
        "cursor": {
          "ref": "e953603f-b43c-4c7d-bb47-d9592585b222",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "4e775333-4054-4649-a82d-439be390adde"
        },
        "item": {
          "id": "bbe1003a-6b15-4d32-8368-275fdc3253eb",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "6ab6c02b-3873-4ab9-9024-f8e07325cbf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24bc52cf-0930-4199-a9a0-b822190ec943",
        "cursor": {
          "ref": "f000726f-b58d-447e-a614-824ca78bece0",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "55725911-e593-4b9d-8d5e-8402ebac7820"
        },
        "item": {
          "id": "24bc52cf-0930-4199-a9a0-b822190ec943",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f636651b-03b2-4b34-aca1-989d183f61c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27174c51-4390-48bd-b3b2-6c33c99b8bda",
        "cursor": {
          "ref": "422fe939-2954-41ac-9142-6fa97b628014",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b7daaefb-7669-413b-aa4e-67d301351dab"
        },
        "item": {
          "id": "27174c51-4390-48bd-b3b2-6c33c99b8bda",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c3fb439d-85b8-4447-83b1-bfd805082e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b70cfe-7fad-4b27-ba82-47e8020ff116",
        "cursor": {
          "ref": "62339cdc-b9f9-4a18-8f7a-1bbf68e664ca",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1fdcb851-3339-409b-aabd-2c04f057dccb"
        },
        "item": {
          "id": "71b70cfe-7fad-4b27-ba82-47e8020ff116",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b4467415-34da-4cc9-823b-aefcf32b64e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb4bda4-434e-42fe-a103-4fb50fef14b0",
        "cursor": {
          "ref": "9cdc916d-3348-44e7-a1ec-03d485c969cf",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "fdaf49e6-a6ef-4600-801f-366bb8fea178"
        },
        "item": {
          "id": "6bb4bda4-434e-42fe-a103-4fb50fef14b0",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "faea437b-36f4-4b8b-9c0e-4afdec63cadd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3d2bd1-b2ee-4518-8579-4e678c0b07fe",
        "cursor": {
          "ref": "1b4e2152-789e-4a06-a74d-4ea0de7672df",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "efc14f7e-f54d-48db-b6ee-1d9b49cd6cbf"
        },
        "item": {
          "id": "8c3d2bd1-b2ee-4518-8579-4e678c0b07fe",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3ff5199d-d4e7-4681-bc65-6b48ff2419eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f287f4-de98-4384-9cab-8874677554eb",
        "cursor": {
          "ref": "02c6f645-46ba-4676-9241-ecad9f25df47",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4bff8f85-b8e6-4e5a-b319-d9a2720d742a"
        },
        "item": {
          "id": "d3f287f4-de98-4384-9cab-8874677554eb",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "249f6784-42c7-49d5-97f4-d6b6fad66aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8beb67b8-7600-40e1-a79b-de0a9d9d01dd",
        "cursor": {
          "ref": "30be1aa0-201d-4700-8109-73a485d9dea5",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "103a9500-fec1-4467-b18f-74c29247733c"
        },
        "item": {
          "id": "8beb67b8-7600-40e1-a79b-de0a9d9d01dd",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "00564b15-87a1-4ef4-b7ff-857c34d91a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57aaddf-f8c3-46d6-8975-e899f2407ef4",
        "cursor": {
          "ref": "785961c5-7b22-401a-a11c-5d6fe5268808",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "431df6d0-4967-47d5-a5d0-b3dec7883a23"
        },
        "item": {
          "id": "f57aaddf-f8c3-46d6-8975-e899f2407ef4",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0effb721-7570-426c-b6ac-15bfe5eb0fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeee30c7-9743-4d56-806d-db2779df80a4",
        "cursor": {
          "ref": "ec56be09-d767-4382-8f63-7a5092ee8862",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "040e39d2-0441-42b6-ac2a-a4bd8b4c4c12"
        },
        "item": {
          "id": "eeee30c7-9743-4d56-806d-db2779df80a4",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2eb52ac2-3fb6-4fc1-9231-a5bb483b87a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c255436-5ed4-465e-9db6-14231bdd5200",
        "cursor": {
          "ref": "d68e2d26-532f-4516-a18a-aa268aeed0ce",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "daa2c460-3b73-4e68-b036-47bb77d68dc1"
        },
        "item": {
          "id": "1c255436-5ed4-465e-9db6-14231bdd5200",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "34fe402c-e9e5-4816-8ba0-4eec36b9d114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "278d4b37-83ea-4417-9ab4-ee77bd0af781",
        "cursor": {
          "ref": "0f02206f-dd2f-4b74-9508-1ef15bd4dba4",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d75bb051-b302-414d-82d5-33fee0fe9d0f"
        },
        "item": {
          "id": "278d4b37-83ea-4417-9ab4-ee77bd0af781",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ab1fcf13-58f7-4b8f-a476-3663be58c1e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbad2779-f567-40e2-b714-ea78e29b47c8",
        "cursor": {
          "ref": "9ededbea-09ed-42a0-b7c4-e1c397f91773",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "9c257660-f16f-406b-a691-d0b8c7b8a678"
        },
        "item": {
          "id": "cbad2779-f567-40e2-b714-ea78e29b47c8",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "7771ac50-b97f-4490-bbf7-bb8a7739f650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c76de1b0-ecff-4c1c-9eb1-6ff82d3b84ec",
        "cursor": {
          "ref": "85700e7a-c98a-4c93-b693-8bff2262db74",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c0f78f80-b086-4e43-aeac-11e4c0685018"
        },
        "item": {
          "id": "c76de1b0-ecff-4c1c-9eb1-6ff82d3b84ec",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "4e688762-003f-4d43-a372-ca1a5abc0052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17609fcf-c1c9-431b-b8c0-acf2373f3356",
        "cursor": {
          "ref": "7a75e1b0-93aa-4e41-b772-688c787209bf",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5f411523-9bb6-44a0-8a18-40bd03cb93c0"
        },
        "item": {
          "id": "17609fcf-c1c9-431b-b8c0-acf2373f3356",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "8aba1a0d-8a54-437f-aa4a-c736801558d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f016ab9f-d4f0-49b3-b4bc-0ecbf015fc07",
        "cursor": {
          "ref": "f1808126-8408-4bed-838e-151611603fdd",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2c710e0e-1e60-40f3-8420-5ae17b885d8b"
        },
        "item": {
          "id": "f016ab9f-d4f0-49b3-b4bc-0ecbf015fc07",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "4998191f-18ca-47ce-b614-97e2a1cc44af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee4fe33-db4b-4c4d-b9e4-5b80bcc99e32",
        "cursor": {
          "ref": "520374f1-7b55-42d3-8ad0-b6025673c586",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a72925f8-00f7-4081-be16-604afa43491a"
        },
        "item": {
          "id": "bee4fe33-db4b-4c4d-b9e4-5b80bcc99e32",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f0c4160f-8e4e-4f2a-bb1b-586831549e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "432c03f7-e646-4228-afa9-daf142aab7e1",
        "cursor": {
          "ref": "414c38d2-d103-43ef-8e59-0a0168ef0a0d",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0ca51c56-b4dd-4010-8b3f-9241103835c1"
        },
        "item": {
          "id": "432c03f7-e646-4228-afa9-daf142aab7e1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b0e8f8f3-cf5c-4d4f-b6d2-bb38eac5c952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7909adb-0300-451a-8dd9-681936798d80",
        "cursor": {
          "ref": "b54d2770-9dcf-432c-b437-6720bfe50a6f",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2cff3886-1cc5-40f8-9705-316aef987fd7"
        },
        "item": {
          "id": "c7909adb-0300-451a-8dd9-681936798d80",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "def1b0c9-569d-4945-a71e-05f924863b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683fe500-5428-4949-bb8e-207006488b62",
        "cursor": {
          "ref": "801a1a51-6deb-497a-b75a-56999c64cbf4",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "bea8621b-dd0d-40c9-bb34-0aa14d6df259"
        },
        "item": {
          "id": "683fe500-5428-4949-bb8e-207006488b62",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "5a65411a-74c1-422c-b728-494158b17a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f2a558-60bd-4b7d-9207-dd0abbdbb891",
        "cursor": {
          "ref": "e9930382-83f3-4679-a896-f92d59069af6",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "9d65d7cd-14e1-4046-b367-9b2b1285d851"
        },
        "item": {
          "id": "80f2a558-60bd-4b7d-9207-dd0abbdbb891",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3022919c-83ce-49c5-86b2-898e4a343f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "529fb54e-37f7-44ee-93c3-bf4ac32956d3",
        "cursor": {
          "ref": "cd3080cb-8423-49c0-a647-e087b693f8a9",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "eeb69bed-b2ec-491d-ba81-72a348edd994"
        },
        "item": {
          "id": "529fb54e-37f7-44ee-93c3-bf4ac32956d3",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "668d1f54-d43b-415f-882e-8a82b7d15914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3216f17f-384d-4437-8947-e0f21cf7e250",
        "cursor": {
          "ref": "f03e6bde-2067-4c23-8cd8-319ed8d2396b",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9bdda781-4da5-4782-af7a-4d5144fdaa08"
        },
        "item": {
          "id": "3216f17f-384d-4437-8947-e0f21cf7e250",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c95dcced-4cde-4ec6-a88a-27dbd835255b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18e33c39-8ecc-42b3-8e99-686fc44787a8",
        "cursor": {
          "ref": "6e13b717-78e1-4c6a-b0ab-912a341d3d7d",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3ca04e30-3f3f-48a6-988c-d8d9fd9521c3"
        },
        "item": {
          "id": "18e33c39-8ecc-42b3-8e99-686fc44787a8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1c5eedf7-d2b5-4bb8-a392-d37fba4ac389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b06bd3e-3386-4623-b75b-57f95648d93b",
        "cursor": {
          "ref": "be6de825-c58c-41ed-b22d-9524b094424e",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "1e721b1a-4e14-4180-8547-c18c419916a8"
        },
        "item": {
          "id": "2b06bd3e-3386-4623-b75b-57f95648d93b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "2f40803f-ed1c-472d-b3bb-2df6fc356e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f708310-07a7-417b-ad95-c3476ab65909",
        "cursor": {
          "ref": "7b8791a6-edd2-46ad-92e0-52c4950b07a2",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c2d77636-6cfa-46a1-8b0a-bb36454cbbcf"
        },
        "item": {
          "id": "6f708310-07a7-417b-ad95-c3476ab65909",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "621d1ea2-a404-461d-b3cf-2aea8460eb0c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41bdb04-84ce-4462-a83d-c0d3e1fbc683",
        "cursor": {
          "ref": "4a34b42a-7735-4330-8613-3d18f4ae6aa5",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "345815ab-6f85-4584-8756-d62250fc9949"
        },
        "item": {
          "id": "a41bdb04-84ce-4462-a83d-c0d3e1fbc683",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "5d3a94a5-a4e9-4ca0-9be1-48a5e2cf6220",
          "status": "Created",
          "code": 201,
          "responseTime": 42,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5c2ffb-26bc-4080-bc08-271f2f445db3",
        "cursor": {
          "ref": "641413c1-0d58-49f9-a4c1-89578b0c1d24",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e253e77b-8249-4947-bd20-ec22b302719d"
        },
        "item": {
          "id": "ea5c2ffb-26bc-4080-bc08-271f2f445db3",
          "name": "credentials_issue"
        },
        "response": {
          "id": "16d8018b-52c3-4667-94f1-357bc7cd45b6",
          "status": "Created",
          "code": 201,
          "responseTime": 244,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "6159dfd4-afb6-4968-8afc-768fb166a106",
        "cursor": {
          "ref": "0004ad7d-7379-43b6-ab21-ab674589bc25",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1ef34d9e-c20d-4701-a09f-f3d8fc29cbff"
        },
        "item": {
          "id": "6159dfd4-afb6-4968-8afc-768fb166a106",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "50e81607-e1ba-4a29-afdc-54963f448336",
          "status": "Created",
          "code": 201,
          "responseTime": 240,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c1bbe3-b2e9-49a8-81c1-fbdab06d9a38",
        "cursor": {
          "ref": "fb89f0ca-0367-498d-b452-05558e292f17",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "65e08e10-4bc5-4943-be48-9b5af7fc49f3"
        },
        "item": {
          "id": "97c1bbe3-b2e9-49a8-81c1-fbdab06d9a38",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "792a1435-d4a9-412f-8519-037e1432dc9a",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 918
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "63cf1c1e-4902-4f33-8958-a828d15c8fa3",
        "cursor": {
          "ref": "f53ff1ba-327a-4e22-96e1-87b46b065c72",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "db1a40be-3b9b-4c8f-993b-7c6928568b15"
        },
        "item": {
          "id": "63cf1c1e-4902-4f33-8958-a828d15c8fa3",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f92af414-939e-43ef-9ece-e82d6bfb7cbe",
          "status": "Created",
          "code": 201,
          "responseTime": 34,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b1991a-967e-4f8d-b839-e8e58bab44b8",
        "cursor": {
          "ref": "ff35ca5e-4271-4849-959b-28361182bdf4",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d95d47f8-d224-4045-9148-c5addaa2362c"
        },
        "item": {
          "id": "a2b1991a-967e-4f8d-b839-e8e58bab44b8",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "43d0faea-d366-4038-9262-b918782e6079",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "32100f82-eb1a-455a-a1f4-a08bdc7f180b",
        "cursor": {
          "ref": "bdf79317-41d3-46bc-b711-8705e7234be9",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f9ada5ca-5461-4282-a504-1443eb6fceba"
        },
        "item": {
          "id": "32100f82-eb1a-455a-a1f4-a08bdc7f180b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d70e8671-dbe6-4658-92a4-2cfc5d28ebfd",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d219ca-cee3-4af9-bdcb-ca0666211467",
        "cursor": {
          "ref": "f91b8443-29c5-4a17-9fef-e7df2dbbefba",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "8c964f2c-7c3b-47b5-bfa1-6e2f5a701771"
        },
        "item": {
          "id": "03d219ca-cee3-4af9-bdcb-ca0666211467",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4027931a-cfe8-4f64-bb5b-f84aa495266d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba14c4ce-89ec-444a-9a0a-1eb7fac92602",
        "cursor": {
          "ref": "97374aea-a054-4190-b1ae-342fa05f8cf9",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9d9a8313-cbb3-4948-88f1-0e1d26f98be2"
        },
        "item": {
          "id": "ba14c4ce-89ec-444a-9a0a-1eb7fac92602",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7093c14e-1e70-48a4-b4f3-009a9e6e70a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa4b965-7a97-4507-b40f-e1afeb99b29f",
        "cursor": {
          "ref": "f839bbbd-0da1-42e7-b9cd-137582b4e8d8",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ca532435-1039-4b04-a21a-e120ec26613f"
        },
        "item": {
          "id": "1aa4b965-7a97-4507-b40f-e1afeb99b29f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a65a5211-b747-4226-9359-7267605e7fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d23f0bef-b7b0-47ea-bfe1-168b2b3eaf24",
        "cursor": {
          "ref": "08248cdf-b052-4609-bd13-b5971dc764fd",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "50d0b210-da10-475e-9c09-db5a2ff89933"
        },
        "item": {
          "id": "d23f0bef-b7b0-47ea-bfe1-168b2b3eaf24",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "09ca033a-2759-4de5-8ae4-9736a8be3c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccae1903-734c-4f36-a55a-3e2738707027",
        "cursor": {
          "ref": "1bb01c2c-50ec-4ede-b815-74db06c7971c",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a9aa0343-68f9-4174-923a-71978bd25b41"
        },
        "item": {
          "id": "ccae1903-734c-4f36-a55a-3e2738707027",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "58fcfb59-eec8-4979-8df2-b3761c8d4e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb4a53a-7677-47a3-a8e6-bd5ba883228a",
        "cursor": {
          "ref": "95d75319-d577-4c36-a954-6b44a083abae",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "9c156686-82f7-494c-a2f5-71914d26b84b"
        },
        "item": {
          "id": "9cb4a53a-7677-47a3-a8e6-bd5ba883228a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "45338851-f13d-4e5a-ac8f-1eda9842dc81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17792b47-5da8-4740-a34c-e4d32afc723b",
        "cursor": {
          "ref": "47babf92-e9d1-4e2a-9720-3d84e415aa23",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "854c3a1b-1100-4dd1-bff0-b2b9cdde9849"
        },
        "item": {
          "id": "17792b47-5da8-4740-a34c-e4d32afc723b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f12dbc54-1194-4f7e-ac8e-027db3772a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ebb73de-bb36-4468-b4f6-c0b6f3edf968",
        "cursor": {
          "ref": "a8a47334-2511-4b4d-9fdc-12312a26c39c",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "cddf716a-7455-4da7-a47a-766b3597c39b"
        },
        "item": {
          "id": "5ebb73de-bb36-4468-b4f6-c0b6f3edf968",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c09ff695-a70f-4202-80da-c58d2530c0a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbe8e396-a55a-49a6-ba09-b4efe5942a1c",
        "cursor": {
          "ref": "5acd4cc2-583d-403f-b8e3-f79dbd84dd32",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "813100b3-0b52-4542-a269-eab3b4383bed"
        },
        "item": {
          "id": "dbe8e396-a55a-49a6-ba09-b4efe5942a1c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ae4cdcc1-9272-4187-88fd-ac668b8437a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16751fce-d3c9-41ea-9267-916e70d74447",
        "cursor": {
          "ref": "b3457ee6-d616-46d8-a10d-ba8be720e462",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c551b222-4125-4601-8377-ab19f68c5838"
        },
        "item": {
          "id": "16751fce-d3c9-41ea-9267-916e70d74447",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "17de08aa-8aeb-495b-8bf0-00074450515a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "538aa4d9-b261-4fc3-9879-03f008d88a5e",
        "cursor": {
          "ref": "3e1fa763-453e-44b6-831c-ae64fb8e9cc4",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "05c66618-9467-4d5a-93e2-7eea7d5f79c1"
        },
        "item": {
          "id": "538aa4d9-b261-4fc3-9879-03f008d88a5e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9f4db9a4-fa09-45b4-b573-e0f9849a995a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e432af6-ab8b-454e-b55e-af3ae5a4a3c3",
        "cursor": {
          "ref": "92085f35-6237-4ad7-9c8f-7f7f66c33d20",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "652a5995-d1db-400e-a6af-059227a71b9d"
        },
        "item": {
          "id": "0e432af6-ab8b-454e-b55e-af3ae5a4a3c3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "10c9f606-6a62-4317-af5f-bcfd7ea2ed75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f6c258-7d90-463d-8128-4b1efd813b71",
        "cursor": {
          "ref": "8515d22e-c8ec-4a55-abd2-daf25c90c068",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b431cc29-1de0-4966-87b0-9ef4cc82463f"
        },
        "item": {
          "id": "67f6c258-7d90-463d-8128-4b1efd813b71",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c7b41f10-a290-40a0-99d8-59b184870575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75960570-2bca-41f4-a1dd-c2d39366c449",
        "cursor": {
          "ref": "e063e8d7-0de6-4f22-a094-bdefeac79b9b",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "10e2805e-00f9-4a4d-adaf-9426b6791abf"
        },
        "item": {
          "id": "75960570-2bca-41f4-a1dd-c2d39366c449",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "44d8a972-ff83-4383-94cf-d68f003b3005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d25ef74-6864-4d1b-b3b2-14501e3fcaf3",
        "cursor": {
          "ref": "d7a96813-150d-4ce4-8872-18c7a236e18e",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "491e193f-7e7e-4454-981e-1cd6e957608a"
        },
        "item": {
          "id": "1d25ef74-6864-4d1b-b3b2-14501e3fcaf3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7c0a0d45-757e-4c3c-8cce-c788a70110c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b7c694-b1cd-4e61-9c7e-510e782dfeea",
        "cursor": {
          "ref": "612045e6-6ce1-4596-b4e7-54b3dd3b9608",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e3ed0021-e061-49d1-9879-fd450f608762"
        },
        "item": {
          "id": "20b7c694-b1cd-4e61-9c7e-510e782dfeea",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8ade5149-4436-4bfc-8e3a-84b5ed7be23e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d53b198-e339-4db0-bb78-87e269cc64e6",
        "cursor": {
          "ref": "bc446bba-619d-4ec9-a8ed-4a642b0f6ce8",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "147cf566-3cce-4d96-a931-73c0ec46155b"
        },
        "item": {
          "id": "5d53b198-e339-4db0-bb78-87e269cc64e6",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e5dfeb44-0e69-48bc-a822-66163ff18f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b30cceb-5e52-41e3-b17c-be9d861551e9",
        "cursor": {
          "ref": "61e32a0c-5ed3-4f26-91a4-8fc573a372a2",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6b786065-7d93-4d5c-a658-5c0203cc0f11"
        },
        "item": {
          "id": "9b30cceb-5e52-41e3-b17c-be9d861551e9",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9f302b25-368d-4c72-8942-901aaaa39203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec661484-8be7-487f-9dff-fcb1790f777c",
        "cursor": {
          "ref": "51f6ce99-90ac-4ba3-a616-46b7d6288133",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "7207ab6d-422b-48a4-be4f-ba8dedacbf99"
        },
        "item": {
          "id": "ec661484-8be7-487f-9dff-fcb1790f777c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d172acf1-7314-4f8c-9ca8-f137434a3804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "201daffd-82c4-42d8-8aac-a7faf4f713aa",
        "cursor": {
          "ref": "0267397b-858a-4c2a-bea9-2d36c904d13e",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "20827478-d8ea-402c-8ed8-b2046e8eb34d"
        },
        "item": {
          "id": "201daffd-82c4-42d8-8aac-a7faf4f713aa",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3a86dff7-8e48-4aac-8545-c8e7d4b4d526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd15ecde-c2d4-4931-8d0d-42cdfb748df2",
        "cursor": {
          "ref": "e7463b15-bfba-4911-87bf-cc2ffad87ad1",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "631274b8-7f68-4f05-ba27-8890b01cbae3"
        },
        "item": {
          "id": "dd15ecde-c2d4-4931-8d0d-42cdfb748df2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "334f738f-03a5-4a27-ac80-f292567bde95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89003528-eaa2-44ec-873d-5d9471b3e14e",
        "cursor": {
          "ref": "eb5c619b-b4d8-4d8d-a0ff-b9eb491d5c01",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "82b777e3-8824-4300-9f7c-acd53b2341fd"
        },
        "item": {
          "id": "89003528-eaa2-44ec-873d-5d9471b3e14e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "92bf9bf3-b355-4def-bcb3-141604028a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aea2324-8870-4f26-ae98-e9b00e21a077",
        "cursor": {
          "ref": "5c7dca80-5579-4146-ae03-db8fd2dc5d1b",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "afc3110a-517e-41dd-bc1d-6add1c1acf6c"
        },
        "item": {
          "id": "1aea2324-8870-4f26-ae98-e9b00e21a077",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "da75c198-0ad8-4581-8b3f-68cd486e9d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a0fa21f-9694-4200-b05f-40a133fcd3e5",
        "cursor": {
          "ref": "09542cab-114b-4c65-831f-99a12c4ac687",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "8ef8e4a0-dd61-4efc-81ef-9a86fee30829"
        },
        "item": {
          "id": "9a0fa21f-9694-4200-b05f-40a133fcd3e5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "59941b03-4fd1-46fc-bde8-83b3b46e7930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bded8639-c3ff-4ecb-996e-ac86765f4562",
        "cursor": {
          "ref": "f62fc7fc-ee35-4a90-b6dc-9a5beecf8006",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a42bf129-42f2-4bc5-bf8b-0638983fa312"
        },
        "item": {
          "id": "bded8639-c3ff-4ecb-996e-ac86765f4562",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8d2749e2-d732-4af2-921a-e54a1b47b55b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118dad58-cc9c-4ec6-a0f1-4dfa106a691e",
        "cursor": {
          "ref": "1352be87-d6df-4228-8e9c-6e246981912c",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e9b71676-da8b-45d9-9f2c-5a028f650a37"
        },
        "item": {
          "id": "118dad58-cc9c-4ec6-a0f1-4dfa106a691e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f7f33725-3bcc-4609-bbc3-1d53adfedb5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2dba3b5-64a9-4ffe-a58b-080c336040e5",
        "cursor": {
          "ref": "024102bf-5cd7-4bc6-ae75-655cb5319fa5",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6030e81e-ee1b-4efc-a8ce-fa135bc215d8"
        },
        "item": {
          "id": "c2dba3b5-64a9-4ffe-a58b-080c336040e5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "86256fc5-cbac-4ab5-8b96-dc2060f09e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c6a4bab-39a9-4285-8a5f-0877ed8d6ce3",
        "cursor": {
          "ref": "06e8af18-fbf5-4052-ba43-d364dc3c3e4a",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "73e56bcc-ffb5-4d79-a6e7-f83138011f58"
        },
        "item": {
          "id": "8c6a4bab-39a9-4285-8a5f-0877ed8d6ce3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4029a742-7fee-4e32-be09-2593cad34502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b6db85-26dc-4ca1-95ec-951c98a5d6dd",
        "cursor": {
          "ref": "9bd4002e-150a-483d-97bb-e4bd1d2f9626",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c17b4e5d-c09c-42c9-ba4a-25450204ca5e"
        },
        "item": {
          "id": "d6b6db85-26dc-4ca1-95ec-951c98a5d6dd",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5a13dd00-a6fd-4c9f-9662-413da1a77d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "887e77c3-55ad-452d-bded-d324a7fd066b",
        "cursor": {
          "ref": "8f41fa08-b358-4ade-b6a5-73e2dfe00b94",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "709020d2-346c-4232-bd98-378ad3b12f77"
        },
        "item": {
          "id": "887e77c3-55ad-452d-bded-d324a7fd066b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f4bad8cb-79c5-40cf-90f1-9481a7ce15f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f1902e-a1df-44e9-baf8-583001f6bc20",
        "cursor": {
          "ref": "7d568353-3dfe-442b-ab9d-478a9c4d5644",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "8acd898f-1fa6-4a4c-9140-4c90f318d696"
        },
        "item": {
          "id": "70f1902e-a1df-44e9-baf8-583001f6bc20",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "bbbe5172-d73e-48f7-a5c5-d7827fe2d1c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f42539d1-b311-41e9-bd3a-f7a3ed367904",
        "cursor": {
          "ref": "9c252410-5ed9-47d6-98ec-5a17ca74495b",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5b082ccb-1dab-4ce7-9207-1854506191cf"
        },
        "item": {
          "id": "f42539d1-b311-41e9-bd3a-f7a3ed367904",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a6dc7f74-88c3-43cb-980b-d321b792112e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341ce93e-36b3-4455-b73b-477d2d1f343c",
        "cursor": {
          "ref": "f4a2ceeb-80e6-4374-901c-c0f259625af9",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "75e80948-89ae-415b-a733-40fcf1a1f769"
        },
        "item": {
          "id": "341ce93e-36b3-4455-b73b-477d2d1f343c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "686897c1-1fb2-4f8b-b3da-a267a20584db",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a6d4f10-2670-4d32-8a04-487eda8e6fb2",
        "cursor": {
          "ref": "5c86cf84-60ec-45fd-b0e3-4e3a5c1fb02e",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "13646076-9c9d-47d2-a4ab-7937530be7ed"
        },
        "item": {
          "id": "3a6d4f10-2670-4d32-8a04-487eda8e6fb2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1a0eeaef-9a0a-4920-9f93-498607112bc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9918588-7f8d-46b6-9e9c-1dd949c34894",
        "cursor": {
          "ref": "6a14f050-5e1e-4201-81b4-993fa783c83c",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "87e9392e-1fd6-40ca-b5dd-a921995ab012"
        },
        "item": {
          "id": "f9918588-7f8d-46b6-9e9c-1dd949c34894",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "582771d3-4ba4-46a7-ba1c-503befa87a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de0d0539-aca7-49f1-8bb8-10982c587e48",
        "cursor": {
          "ref": "fcdc5576-1ff8-4911-aa7a-08213e7437cf",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1f67508c-58fd-4dde-b672-67ffaca36a05"
        },
        "item": {
          "id": "de0d0539-aca7-49f1-8bb8-10982c587e48",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b99df8ce-471a-4a3d-a572-5b550a54a348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbaccc2e-2652-4723-939a-2f95b9ce268d",
        "cursor": {
          "ref": "29801e05-7180-415d-a724-91643ae9e51c",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "12257758-cc40-4cfa-a6b3-52a8e06ad025"
        },
        "item": {
          "id": "fbaccc2e-2652-4723-939a-2f95b9ce268d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "bc2beed0-caa0-4b9b-bb44-3825d44fca7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e5c564b-0d76-4a25-8c35-3a8f94e3e6a3",
        "cursor": {
          "ref": "45aee9da-7c43-47de-a220-9590843028e0",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "120e45c4-03fe-4071-bcd3-01a583e2ac0a"
        },
        "item": {
          "id": "6e5c564b-0d76-4a25-8c35-3a8f94e3e6a3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "873e502e-229f-4b78-b37a-4380fdd7fe94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4283e01c-f437-446a-ba99-18a51de8403a",
        "cursor": {
          "ref": "ede7d0c9-d1f6-4520-b5f3-cff2c4c42b81",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f9c2132a-ba0c-444f-840e-673728413397"
        },
        "item": {
          "id": "4283e01c-f437-446a-ba99-18a51de8403a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "76d53310-78cf-4d77-918f-b90ebc00dcab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3e7b57-c25b-49d3-83d9-7f416399510a",
        "cursor": {
          "ref": "86351422-b26e-4f67-84c2-f34aaf400e2d",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7ace2dc0-2ed1-4679-bbd4-e83591e6395b"
        },
        "item": {
          "id": "ce3e7b57-c25b-49d3-83d9-7f416399510a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "cc4be5fd-5fff-47b7-b412-dcf882902c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d8fba8-7142-4529-8b7b-433353f9db5e",
        "cursor": {
          "ref": "b7c17a13-bcc3-472a-acac-7363c43dc31d",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "2eea622c-84b8-406f-bfd0-6a57c9f58709"
        },
        "item": {
          "id": "73d8fba8-7142-4529-8b7b-433353f9db5e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5c61f0ab-c3ac-45c4-85d9-b915502e1fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54bb97cb-2245-4aef-b4fc-b87073055d3e",
        "cursor": {
          "ref": "e7c28766-70f9-433b-9bc9-fee0f2d06bd7",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "893baa4e-f2ee-4e34-a467-6a84b2bdcda6"
        },
        "item": {
          "id": "54bb97cb-2245-4aef-b4fc-b87073055d3e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3721b50b-1d2a-4bca-8709-b282c65f4f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db095d3d-0414-4a88-95ef-a0c077fde54d",
        "cursor": {
          "ref": "115a7551-b5df-421a-bbae-d2cc9ee6e055",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1b9405aa-1bed-45ba-86c9-0eae73cbaeb1"
        },
        "item": {
          "id": "db095d3d-0414-4a88-95ef-a0c077fde54d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1de0577f-0d99-43bd-9df5-8c572dfddfbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c4bf02-21a4-48bf-b2f0-4c3e637e21e9",
        "cursor": {
          "ref": "fda4af70-0f5b-4948-b35f-af31334182da",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2f380525-d2ba-4d26-8885-86e56f3c6abc"
        },
        "item": {
          "id": "23c4bf02-21a4-48bf-b2f0-4c3e637e21e9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "901e9d92-26fd-47d8-b152-55e6650d33a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dae9f11-1c27-4fee-b50d-1dc52d5b4ef0",
        "cursor": {
          "ref": "de1b7bb0-49dc-4d9e-ad40-6ef9b30686e4",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "71ca6cba-f55d-48cd-bd07-a728947a2fa2"
        },
        "item": {
          "id": "3dae9f11-1c27-4fee-b50d-1dc52d5b4ef0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bbec4a25-014b-41d6-8a0c-6fd8f634b06c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41dad280-40ea-4236-88ae-8fa6dd1df95c",
        "cursor": {
          "ref": "15d78b6e-b30d-457e-8329-989fe830ebc2",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3d2cff86-b67b-4ebc-bb8e-bc3ada1a89f0"
        },
        "item": {
          "id": "41dad280-40ea-4236-88ae-8fa6dd1df95c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5156f552-da88-4ca0-a6e4-f2b6bb0199c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524b7109-b512-414d-aab3-9c092c1d539d",
        "cursor": {
          "ref": "6e4f5fda-8692-4835-9653-6f90828048af",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b944b9d2-6a8e-4d56-8963-8f1b6655a74f"
        },
        "item": {
          "id": "524b7109-b512-414d-aab3-9c092c1d539d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c054df3d-2ace-4e10-a708-6af29f631284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f6ece8-2a08-4458-b583-b917c1f38531",
        "cursor": {
          "ref": "d420b7ad-082d-46d4-8ce0-7971c3f702ce",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e64c6647-60b7-4085-8bb3-15eb4e67ac7c"
        },
        "item": {
          "id": "a7f6ece8-2a08-4458-b583-b917c1f38531",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "614e78cd-bd76-42a1-ae8f-56af0a17fbc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47646bfa-b2f9-4129-97da-7193358ee184",
        "cursor": {
          "ref": "2d92cae0-31a3-46c1-8c89-c7f196b521b5",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d2988e2b-8f85-409b-bc5e-758e0b9d6741"
        },
        "item": {
          "id": "47646bfa-b2f9-4129-97da-7193358ee184",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d4cf7fc3-5afb-492f-b9c6-19f526f557dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72be8c6-11f0-4d58-8c65-ef5dc0752bb1",
        "cursor": {
          "ref": "709bdba1-5f58-4c1b-950f-08873767f44b",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7a8efcd8-7505-4551-a951-5191b7b627f0"
        },
        "item": {
          "id": "b72be8c6-11f0-4d58-8c65-ef5dc0752bb1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "18a5cf15-b3c6-4faf-b250-f99833ff056c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38756be8-b9fc-4d48-ab4f-d6cd103ba5ab",
        "cursor": {
          "ref": "6530346f-aafe-491b-a767-c6bbee437d77",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "de685e51-ff94-49f6-a0c7-9fc188d2650f"
        },
        "item": {
          "id": "38756be8-b9fc-4d48-ab4f-d6cd103ba5ab",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "358a47a5-d052-41c8-88d8-e70a560fec73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e9fafba-b5cf-47ec-bc59-48fcf71bf7f7",
        "cursor": {
          "ref": "815da79a-f61f-40f9-913a-55291ba2e094",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ea609c47-ce8e-4058-96a4-f08374859e1b"
        },
        "item": {
          "id": "8e9fafba-b5cf-47ec-bc59-48fcf71bf7f7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "57e6c1f6-c059-4909-a427-81d6c877386c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb25df40-e2e5-4fa6-8c55-cf63548fe55f",
        "cursor": {
          "ref": "4c4f1ce6-9f04-41e6-ba58-698e2f433ee3",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "909512c1-94b8-40eb-b69f-79972e086b6b"
        },
        "item": {
          "id": "eb25df40-e2e5-4fa6-8c55-cf63548fe55f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c438e890-8b18-438b-be6d-fd4464ed0c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66684cd-2344-4182-a354-2c2751f33eca",
        "cursor": {
          "ref": "05e4b2ab-a95f-46aa-84f8-f6252ddce3a4",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8211d80c-ce74-4450-a3f3-18f2a4e6aed1"
        },
        "item": {
          "id": "a66684cd-2344-4182-a354-2c2751f33eca",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9df160d1-1e2e-4b8a-af6f-d42c31c21417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1df595-1a56-4195-9124-22ad16ffb13a",
        "cursor": {
          "ref": "cba3a437-8235-47a7-90f8-d268e4493149",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "6837c126-ecbf-48d0-9fb5-2dd6adab5d4b"
        },
        "item": {
          "id": "da1df595-1a56-4195-9124-22ad16ffb13a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4322d289-b89e-4eb8-be40-72535f933de9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b902e95c-365c-4b12-8e32-59a8dfe72936",
        "cursor": {
          "ref": "9efb8d8a-77c0-40d3-8e3f-b7c35316f569",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "44e89229-bf80-44dc-9598-5738106a5091"
        },
        "item": {
          "id": "b902e95c-365c-4b12-8e32-59a8dfe72936",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "aebe08f3-7849-4d3b-ada0-7dc30bfc4297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "342afb55-05d3-4951-887c-db5a0d3bf426",
        "cursor": {
          "ref": "ce09333f-2d5f-44e9-b530-0976df454a66",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "bbf4e8a9-dd21-4d69-af39-5a2f1766a5e2"
        },
        "item": {
          "id": "342afb55-05d3-4951-887c-db5a0d3bf426",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1638a4b9-dce0-4ba3-bc5c-19b8e835280d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6762adb3-9dd8-4df0-92d7-7853f67a6c15",
        "cursor": {
          "ref": "04feaab0-16ee-4990-a270-2b2d068d6739",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9e428025-4b06-405c-a87c-311603e77330"
        },
        "item": {
          "id": "6762adb3-9dd8-4df0-92d7-7853f67a6c15",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "252eecc8-48f9-44f8-b9b4-2735dc597e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c4ec9ed-3b33-4373-93c5-05f54aa83ed3",
        "cursor": {
          "ref": "315019be-6635-4eda-bf33-d5eae193b40b",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c7fbe34c-c1d5-49c1-bca8-d9d0af3e42fe"
        },
        "item": {
          "id": "0c4ec9ed-3b33-4373-93c5-05f54aa83ed3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "54324e1b-192b-432b-881e-7d1ebc9bda56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a31c4b-85a7-4890-a5da-0b5b07a6c10e",
        "cursor": {
          "ref": "b4a40b60-e452-4f0f-978e-49c8ce163a01",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e8aa3858-8d2f-47cc-8472-6bc76c08c99d"
        },
        "item": {
          "id": "23a31c4b-85a7-4890-a5da-0b5b07a6c10e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "aa040802-ae3d-4284-942f-114375945dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383eac69-22a0-4049-a921-a3c65439143e",
        "cursor": {
          "ref": "f8d22cb5-8757-443e-99ec-18dd60481fba",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "2be6f92c-5721-4beb-b2bd-4bd741f4b6db"
        },
        "item": {
          "id": "383eac69-22a0-4049-a921-a3c65439143e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8cc062d1-214d-46f5-90b9-2c6a2cc30e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee71258c-a1a4-4101-805d-96efba01b571",
        "cursor": {
          "ref": "335255c2-c62e-43d5-bc1a-ec3d76030a9c",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "96a99294-7d34-4894-a751-5bfb6af13aa4"
        },
        "item": {
          "id": "ee71258c-a1a4-4101-805d-96efba01b571",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "03c5052c-88f5-430c-9893-efda953e1fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef396c19-d69d-4e2f-a657-45b50eb71f41",
        "cursor": {
          "ref": "c6074ae9-4bc0-4af7-848f-fbd1a4503a0f",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "aef10389-8a05-4d41-b5fd-afb1d207a950"
        },
        "item": {
          "id": "ef396c19-d69d-4e2f-a657-45b50eb71f41",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "43a1abd7-84ac-4488-a451-8653a55bc7ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc2edf1b-4138-470e-b7fc-45ff10cb6405",
        "cursor": {
          "ref": "54e489d4-60df-42a7-9b53-b61b2ecb4eec",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "03da1455-2815-4c89-a641-82cf1c094602"
        },
        "item": {
          "id": "dc2edf1b-4138-470e-b7fc-45ff10cb6405",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "173e5b7c-618f-4eac-932e-c6d1ae06abde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9390ad37-7cb9-4197-8e1a-3bb844b2ffad",
        "cursor": {
          "ref": "55b1fd85-9162-405f-bfbf-815249cd8d22",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e6b16a44-be83-45e4-bb92-c7ffc0efea51"
        },
        "item": {
          "id": "9390ad37-7cb9-4197-8e1a-3bb844b2ffad",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "830d427f-8e9e-4ffa-8b50-f11c51fae254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f4a2fd-7528-41af-a423-fdf967196e55",
        "cursor": {
          "ref": "afa6f6d1-09fa-414c-968c-2838228fe90d",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "194f2d02-f717-4824-81b4-2bdb27df2660"
        },
        "item": {
          "id": "a1f4a2fd-7528-41af-a423-fdf967196e55",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "4782dfd4-7536-4bbe-83ad-7eceb9b19ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fee08e5-2bbf-47a4-998e-9d58853ccaf0",
        "cursor": {
          "ref": "1b0f86db-5463-48ca-9a18-c5fcf72f7615",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "41d8bf81-1b92-43c1-90da-79c742b69980"
        },
        "item": {
          "id": "4fee08e5-2bbf-47a4-998e-9d58853ccaf0",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "36cf91b3-803f-4249-af49-43a6d8772ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4a4a65-ece4-4689-9692-23a16a7cb106",
        "cursor": {
          "ref": "8f3ce760-fad4-41c9-895d-fa6fe756c474",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "626df59c-df50-4f76-93d6-3ecb2df02dc4"
        },
        "item": {
          "id": "0b4a4a65-ece4-4689-9692-23a16a7cb106",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "9b4cdec5-1678-4421-add0-246b90703c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08413cb6-6be5-4d48-a2e7-a246dd17441f",
        "cursor": {
          "ref": "0c548290-768d-4846-8883-7dd51d54d0cf",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f32f684d-1ac9-41c1-a936-8d5ccf14cac3"
        },
        "item": {
          "id": "08413cb6-6be5-4d48-a2e7-a246dd17441f",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "4bde6772-a908-4e2d-aa23-90b5a92d92f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9baae110-d45b-4a6e-b982-b8310d6bff79",
        "cursor": {
          "ref": "55b6b6e8-5d1d-4be9-95f6-8391888b3bf4",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "6c87b743-5fc7-4e70-b988-d01f925a751d"
        },
        "item": {
          "id": "9baae110-d45b-4a6e-b982-b8310d6bff79",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "8a770a42-534e-4930-804b-8d194d44f7fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8fa8939-00f1-4712-972f-b2b61ef8f7b6",
        "cursor": {
          "ref": "39139cff-18f8-4839-ba0f-e57bbb380973",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "484f9dbc-7a75-48c2-8018-28a76816596d"
        },
        "item": {
          "id": "e8fa8939-00f1-4712-972f-b2b61ef8f7b6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7c72e7ad-2274-4503-add7-d746f7121314",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9f6c34-9854-4fb5-9efb-22c08a0cb275",
        "cursor": {
          "ref": "de7d283f-c636-4751-b098-3829c5541406",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "396d7ac2-4492-4f47-b484-4542215f9af2"
        },
        "item": {
          "id": "ad9f6c34-9854-4fb5-9efb-22c08a0cb275",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f2dde34a-e6a4-4037-a6ab-ca3d2ea888a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd75d70-6b67-4f7b-98ea-96a944d53f87",
        "cursor": {
          "ref": "8d4523dc-744e-49e1-a87c-b783fe1d8897",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "8ac39c2d-5abd-4da4-937a-e6adf8fc61eb"
        },
        "item": {
          "id": "1dd75d70-6b67-4f7b-98ea-96a944d53f87",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "325f0084-6d42-41ae-b411-d2d9f0cde3ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aacd9871-b1ec-4c43-9680-a1574cc955ad",
        "cursor": {
          "ref": "6a1553f8-7c5f-4717-87a0-4d6a7c9bd2b5",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "bf77b736-75e2-4573-aa37-d03132d20495"
        },
        "item": {
          "id": "aacd9871-b1ec-4c43-9680-a1574cc955ad",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "410d87d7-5ba7-4b86-abf3-9d736341c6a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8746abb3-b660-46c5-9628-ee821bf55d19",
        "cursor": {
          "ref": "744c33d5-b09a-4007-a393-ed20d38ee119",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e5ee053a-9461-4271-87e0-3ef48128a5ae"
        },
        "item": {
          "id": "8746abb3-b660-46c5-9628-ee821bf55d19",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "17205539-6d96-42d5-a810-977f891166e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d87e47e-7d36-4301-987d-8ee8e96f01f2",
        "cursor": {
          "ref": "c8f6526c-55e1-4e08-8332-51af62bb4152",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8d3a2fe9-43d2-44d0-8426-c929cfd45ca9"
        },
        "item": {
          "id": "1d87e47e-7d36-4301-987d-8ee8e96f01f2",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "485e7c0a-67e1-4c48-bf14-f5433279ddd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329b8415-66b8-4512-bbcd-c1e2e9cf427c",
        "cursor": {
          "ref": "911b1de6-9134-44a9-a5a8-d6392814039f",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "faf23200-ac44-401f-962c-9cedb7bc3dcc"
        },
        "item": {
          "id": "329b8415-66b8-4512-bbcd-c1e2e9cf427c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b74d1f9a-b72e-4ef3-8022-81303685f2c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "285b9987-52dc-4d4b-b1f3-10a4f264f27e",
        "cursor": {
          "ref": "7255eb25-a347-485a-bbf9-1ea916aa2f41",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7ea75361-f419-4e30-aacc-e99ced3308aa"
        },
        "item": {
          "id": "285b9987-52dc-4d4b-b1f3-10a4f264f27e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "7d62aa96-f576-47e5-9978-dc51add9fa97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd4ff47-34fb-4b2f-bb72-49ea01bd8e40",
        "cursor": {
          "ref": "b49bea5f-8f0e-46a4-9817-df159f9fad7b",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "73d652ca-0f0a-4195-a965-51d856d599fb"
        },
        "item": {
          "id": "ecd4ff47-34fb-4b2f-bb72-49ea01bd8e40",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "8604cf07-7f2b-47d3-a46a-d8a19f80707f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "720ed8de-5e8b-47a4-a2fb-d1bcb90e8eac",
        "cursor": {
          "ref": "b6fa01d7-45df-43a3-9184-dbc7b9009ffe",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "fc937c40-1287-42da-9c87-1d775925ce1d"
        },
        "item": {
          "id": "720ed8de-5e8b-47a4-a2fb-d1bcb90e8eac",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "bb0eb227-a34c-457d-8f95-03be3690a855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9ad8f1-aa51-4756-81be-1f748b3bf4e7",
        "cursor": {
          "ref": "76a8ae98-8787-43df-8d9c-803529bd1ce0",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "b57cdb1b-808c-420a-9941-66e4d6c47739"
        },
        "item": {
          "id": "be9ad8f1-aa51-4756-81be-1f748b3bf4e7",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "773af127-efa4-41b5-b0a5-dd12bd69caec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8abdcf-2632-471e-91a9-27292e9bcf03",
        "cursor": {
          "ref": "44a2744d-aa7f-4590-8e97-2a8cb4cd3649",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c1915b4c-7fd3-4e87-a84f-1e5a5a4ec084"
        },
        "item": {
          "id": "8f8abdcf-2632-471e-91a9-27292e9bcf03",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a311457b-e200-4d11-853c-cf4d95441c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc95470b-77e7-4e68-8bee-5f7fff596500",
        "cursor": {
          "ref": "f89055bc-0024-45c4-ae41-eafc90b0829b",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "735ac9a7-7a3a-4e8a-9824-7b48d7065359"
        },
        "item": {
          "id": "cc95470b-77e7-4e68-8bee-5f7fff596500",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "44edd0bf-ba18-45b8-9db1-9c832db5429b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffbfe831-0f07-4c48-8a91-4ffb4dc23bfb",
        "cursor": {
          "ref": "b2de3635-a884-403e-a4e1-914b237c2f4b",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a01d2963-c776-4187-a28c-cf6cac317eb3"
        },
        "item": {
          "id": "ffbfe831-0f07-4c48-8a91-4ffb4dc23bfb",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "44fb2b20-df71-4ce1-931a-1641a8dce4ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a0ca62-31e5-475c-ab22-b98babf8bdb9",
        "cursor": {
          "ref": "10b97709-fc5e-49a1-9b5c-bed3357de31c",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "11f3ecdb-25de-4a8d-acd2-625aabfde741"
        },
        "item": {
          "id": "79a0ca62-31e5-475c-ab22-b98babf8bdb9",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f23474e8-3fdb-4d09-90d8-a18e03e29b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8fe16a-2214-49de-b634-1f14be943343",
        "cursor": {
          "ref": "bd345dbd-f1bb-4e25-ae9c-8bc380cdfcf8",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "01d98e0e-9842-481e-a3c3-85bca3f0dd5d"
        },
        "item": {
          "id": "6b8fe16a-2214-49de-b634-1f14be943343",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "39c0a687-a4f2-4a5b-89d3-25ef155ba34f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec60c4ee-9900-4e37-969f-9614bd0e7c85",
        "cursor": {
          "ref": "eb0d7533-943f-4844-ae32-5aee7c0798ad",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d27bcfe7-727f-44e7-b43a-366b479b2738"
        },
        "item": {
          "id": "ec60c4ee-9900-4e37-969f-9614bd0e7c85",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "488109df-b22f-4b0b-a31c-2f638290a021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e371c1-aeb6-4b82-9c16-58fc29b192c8",
        "cursor": {
          "ref": "492ddf6d-1f2d-4ea7-bb38-d8a8c6d3f357",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "beebc470-4f99-43c8-a551-b1d3f7666085"
        },
        "item": {
          "id": "21e371c1-aeb6-4b82-9c16-58fc29b192c8",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "b86de11e-43dd-4d96-bbb7-9483c4d92e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f985210-65fb-4596-b923-a0ecf448ddfe",
        "cursor": {
          "ref": "dcb6ad07-5dc8-4f28-b45d-eddf510389b4",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "078c5482-882d-4776-96f9-7582cc820af5"
        },
        "item": {
          "id": "5f985210-65fb-4596-b923-a0ecf448ddfe",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ecaed161-98fb-4f54-9be0-cb324b69af1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea4ebee8-0c93-4895-a184-da0a86b0abee",
        "cursor": {
          "ref": "42567c72-5f7c-44c6-8f73-26df9050fd24",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4a93d117-12c7-4b20-b6c1-a625d7ad7d77"
        },
        "item": {
          "id": "ea4ebee8-0c93-4895-a184-da0a86b0abee",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f219f7f2-b174-447d-a579-37c83a61d208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3cad70-3410-47d7-bd2c-30d0f3a1955d",
        "cursor": {
          "ref": "7c076cc3-c694-4fbc-96a8-d0bc3756b48f",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "cafdbf3d-c31f-41cd-9eb2-5539eb9196e0"
        },
        "item": {
          "id": "4f3cad70-3410-47d7-bd2c-30d0f3a1955d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "78d5ec8a-0f46-4421-8d59-20027da2ceef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c1a8ccd-f18c-4d9b-ac29-077b7f87a476",
        "cursor": {
          "ref": "7f5326b5-7447-43c7-8ab0-4dc2b6d0bf83",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "0f3cd263-6780-44b0-9321-78f461d1f3f8"
        },
        "item": {
          "id": "2c1a8ccd-f18c-4d9b-ac29-077b7f87a476",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4c72e707-5064-4554-82e0-70dce5fd2d60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46cfc60c-9042-49a1-81dc-7116f04d5a12",
        "cursor": {
          "ref": "7f1b101a-4555-4949-86b8-11d68f439b2d",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "4079fbce-dd09-48cb-86a4-260e7ee6bd21"
        },
        "item": {
          "id": "46cfc60c-9042-49a1-81dc-7116f04d5a12",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b573ef89-aa24-4190-8d9e-82c2e81fccc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17b812c1-0fbb-4908-88ab-2930b3c7e0a4",
        "cursor": {
          "ref": "f09860a8-434c-4fde-baf2-854876beb93d",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c155aa79-6c2a-4115-9692-a8a942a00aca"
        },
        "item": {
          "id": "17b812c1-0fbb-4908-88ab-2930b3c7e0a4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f0834df7-52e6-4a1b-ba30-b262adc5f7ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ccaa225-af3e-41f6-9023-98a2c6936eed",
        "cursor": {
          "ref": "917180ec-326b-4305-bdf8-b6d2eea5bffe",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "3abe88c2-2324-498c-bab0-d2b0d6b6f8e0"
        },
        "item": {
          "id": "9ccaa225-af3e-41f6-9023-98a2c6936eed",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2dc8accc-b116-48dd-be74-7583c965ce7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 153,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f612467-c4f1-44bf-80d6-ea6f78ea7a1a",
        "cursor": {
          "ref": "661e6746-0850-4ad5-82dd-983bd2fbf2e4",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "dcc784c3-9829-42c1-86b5-d46ed815bd7c"
        },
        "item": {
          "id": "0f612467-c4f1-44bf-80d6-ea6f78ea7a1a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a43cff28-c501-4c75-b88b-aad8d6a1c244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88055b0-9173-4876-997f-cae7d53bce8e",
        "cursor": {
          "ref": "944c2a66-950b-49e4-8fa8-5cb1f75ab2b0",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "4fa8e9d7-1ac2-443f-b97b-20af67d9a5cd"
        },
        "item": {
          "id": "d88055b0-9173-4876-997f-cae7d53bce8e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "7e182a7c-44bb-4831-b439-21d8fb7decf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370a08e5-391f-42b1-a354-9ffa432fb9e8",
        "cursor": {
          "ref": "fc704829-a4c8-4ae1-8cc3-696a9a80e952",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9b27a54e-b186-4ac4-bdb6-8457d4b6dec0"
        },
        "item": {
          "id": "370a08e5-391f-42b1-a354-9ffa432fb9e8",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "bea2b30c-3c70-4230-8873-274ff231cd16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "013b5719-364f-4102-8bcd-cc2100f81e2e",
        "cursor": {
          "ref": "83217e39-c877-4335-ac2f-bcadd08ae83b",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a2ed1559-ccc4-4bdf-b736-46d667f7ba15"
        },
        "item": {
          "id": "013b5719-364f-4102-8bcd-cc2100f81e2e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "2214ffb1-d3b0-400f-87d1-d2c5e20b6a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aecaad3-52a4-4369-9017-a4d5df2781d4",
        "cursor": {
          "ref": "ca438a20-eb2d-453b-ab6f-a540f63a6fd3",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "534355a9-9432-451f-989a-f4aae653574f"
        },
        "item": {
          "id": "6aecaad3-52a4-4369-9017-a4d5df2781d4",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8afd1174-bfc2-464d-b9fa-9d6830775378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e42684-9ea3-45c2-bb9a-cd9da885f737",
        "cursor": {
          "ref": "1170dac8-d3c7-4922-8437-e153e2b083a5",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "018e81be-b29a-4347-8bfc-7c34582ad01d"
        },
        "item": {
          "id": "81e42684-9ea3-45c2-bb9a-cd9da885f737",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3c4a7bc2-11b9-4aa8-8807-49abc0bb1e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be1fcae-5248-49a6-8f34-09ff674a4646",
        "cursor": {
          "ref": "4d596adb-11f7-444f-bfd2-743726902c16",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "8989426d-9cbc-402d-a0ef-7f14838222ad"
        },
        "item": {
          "id": "0be1fcae-5248-49a6-8f34-09ff674a4646",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8e156a33-878d-485e-956e-0c84ee93621c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a713ca-1a8b-41fd-a976-53555a4f1475",
        "cursor": {
          "ref": "b8ea2045-9e5a-4f33-adaf-98fe549cc433",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b409d868-1bf8-48ff-8b8f-10ce5aa51867"
        },
        "item": {
          "id": "c8a713ca-1a8b-41fd-a976-53555a4f1475",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "dc2cd4bc-829e-44ac-a8df-0b3b3bcab4cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd20df37-1fb6-4a1d-a0aa-f79a184d4f84",
        "cursor": {
          "ref": "2c6201ce-7b7d-459d-828b-f12872dc5bba",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5a9e1420-36de-499f-8c95-2d994d78163d"
        },
        "item": {
          "id": "fd20df37-1fb6-4a1d-a0aa-f79a184d4f84",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ddc9f965-9106-494d-b5f2-54f6d4ffe14c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb42d0ed-a083-4c40-b509-505db702c1db",
        "cursor": {
          "ref": "711f0bc7-da92-4544-b718-3784f902565f",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "7831c530-ab35-44f0-a32b-9851303f2c4a"
        },
        "item": {
          "id": "cb42d0ed-a083-4c40-b509-505db702c1db",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a4b45634-26b3-45fe-94a0-30a1f886d9ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8edd866f-bad7-454c-8a53-a4be16eee236",
        "cursor": {
          "ref": "9fa88b3f-e4c0-4de1-89c9-7d482ec6c041",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e5b5dbfa-6a75-43c0-915b-236b9b9a8fed"
        },
        "item": {
          "id": "8edd866f-bad7-454c-8a53-a4be16eee236",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "27a9d98d-c84b-458a-b138-d87a4fccaec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4375e4c0-2fb1-488b-a8fc-5f30e0c6ff37",
        "cursor": {
          "ref": "a924826b-ed4a-4717-840f-64b5b16b1d78",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "7c3d9743-f1ee-4276-a64f-130fb4631258"
        },
        "item": {
          "id": "4375e4c0-2fb1-488b-a8fc-5f30e0c6ff37",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d5d5a90d-3845-4c07-a7ff-90963ee88115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb823ffc-5b7c-4f12-89e9-2f9dc08f00f5",
        "cursor": {
          "ref": "d86a8109-190d-4a03-aa1f-c974d88858ac",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "fb8e287d-de43-486b-8b45-96fe90b9cb03"
        },
        "item": {
          "id": "bb823ffc-5b7c-4f12-89e9-2f9dc08f00f5",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "6248f1fc-970b-4952-98be-87cee8859a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09a295a-7ac2-4129-9610-ae99a4e04ab8",
        "cursor": {
          "ref": "e65fc146-1542-4f03-bb5f-6d0376eb77c2",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "198dd24e-8e4b-455e-80f7-32d423c3910f"
        },
        "item": {
          "id": "e09a295a-7ac2-4129-9610-ae99a4e04ab8",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6fd33cac-b213-4249-a9f7-20398b0687c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d96758f3-95cd-4e4a-8c0b-c237da361c47",
        "cursor": {
          "ref": "b9681a50-369e-4029-96e8-720c70f1f990",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "fbc184a1-82b7-429f-bb47-a1a981fcabf3"
        },
        "item": {
          "id": "d96758f3-95cd-4e4a-8c0b-c237da361c47",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "96d326ef-0299-4bf1-9796-96a449c2d808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec37860f-27f5-4e5b-8697-a46a95dbfe8f",
        "cursor": {
          "ref": "fab0100d-9135-4335-8896-f9d7f68a117d",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a995e7be-dd58-47b1-95d0-ee24785c5ea3"
        },
        "item": {
          "id": "ec37860f-27f5-4e5b-8697-a46a95dbfe8f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "006f6cdb-0d68-4023-ab70-ea1fd01b310b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10ef15d-0318-45ad-9c98-bf73aa8c50cb",
        "cursor": {
          "ref": "52a6e7d3-6851-4dad-9c30-3447b63c70bf",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "4fa9d5bc-60b3-459d-88e2-c7b6d500495f"
        },
        "item": {
          "id": "b10ef15d-0318-45ad-9c98-bf73aa8c50cb",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "68dfe1e7-054a-44e0-a94d-eeaf4bf94b48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4cd99b3-8f25-48b5-a081-dee233e53167",
        "cursor": {
          "ref": "e5e8f7cd-94fe-4993-8ebe-51e5b92e16af",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "18106192-1035-4839-829b-7343e0fe0abe"
        },
        "item": {
          "id": "a4cd99b3-8f25-48b5-a081-dee233e53167",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "df7e8091-61f5-4790-9c3c-dd185e674cee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ae1253-3ceb-4053-b31b-a162ed834d1d",
        "cursor": {
          "ref": "beab92b2-8b47-499b-8b49-2d7be5fc429f",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d70319f1-090f-41b1-bf9f-049bf43df240"
        },
        "item": {
          "id": "36ae1253-3ceb-4053-b31b-a162ed834d1d",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "94893439-c1b8-4054-8175-41f2f8dc2450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c778a31-8d39-4f7c-9300-3b84466c8e71",
        "cursor": {
          "ref": "3afc68b2-bdf3-4d8c-8a81-563227e86c3e",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "88fcaec1-25e5-46a4-b62d-08b927276612"
        },
        "item": {
          "id": "1c778a31-8d39-4f7c-9300-3b84466c8e71",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "bcf4ec38-6c27-4365-b37a-d318636dc926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aacbee6-5d29-4d46-b91c-faa663abe6b8",
        "cursor": {
          "ref": "37d8d7b8-3d43-44a4-8445-21f2163c341e",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "fae13c76-d4c3-40af-a678-45c9ca31ccc1"
        },
        "item": {
          "id": "8aacbee6-5d29-4d46-b91c-faa663abe6b8",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b52cfb3a-d2c1-414a-8a57-8cb3013ccf57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd21e02-48ca-46ba-9502-d69cf0e46f97",
        "cursor": {
          "ref": "59ac3f0f-f98e-46d0-9d44-060a0d28cfe4",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "1c53c2be-f79d-41a6-9909-b0a5c54801fb"
        },
        "item": {
          "id": "5bd21e02-48ca-46ba-9502-d69cf0e46f97",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ba65657f-362b-4acf-9820-447a9f81440a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbee6415-cf34-4b4d-ac18-c6eeab2d7068",
        "cursor": {
          "ref": "3d8cc1d9-af10-4d82-a2a4-cfb364c2a0b0",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b3b36c7b-8828-4315-902c-9f7277796815"
        },
        "item": {
          "id": "bbee6415-cf34-4b4d-ac18-c6eeab2d7068",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9eb9c096-3547-4db7-982f-69a2e202584c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29efa7f5-17ed-41f9-b59f-3760cf38866e",
        "cursor": {
          "ref": "f2dc012b-d25d-4a54-9a49-f345358fae95",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "3e933ff2-9a4b-4fe5-8092-a268acd95c6b"
        },
        "item": {
          "id": "29efa7f5-17ed-41f9-b59f-3760cf38866e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e8f5ffc2-5117-43a0-8539-e34bc191ec7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "562df22d-f534-4202-ac4b-fec3fc28fff1",
        "cursor": {
          "ref": "565c23fe-1a7f-4efe-ac2d-4828d461acd4",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "32b1c972-91d7-4c25-bae5-8dbf2ba2a78b"
        },
        "item": {
          "id": "562df22d-f534-4202-ac4b-fec3fc28fff1",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "6983f7c7-e718-48c0-a5ef-c85efe43ba35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1327f87b-ce8f-4cf8-9bcd-0be341f86384",
        "cursor": {
          "ref": "6188ad7a-bd1d-4613-bc50-21cabac27ac1",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "56027775-9d53-4cfe-934f-80f43eddc6fd"
        },
        "item": {
          "id": "1327f87b-ce8f-4cf8-9bcd-0be341f86384",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "49b76468-5338-4888-9779-2915f76c3659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7f1c8f-45c3-4ab8-b4ae-17e8e2a31d04",
        "cursor": {
          "ref": "06d879cf-29e5-428a-afdc-83d78a36ecea",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "72a990ca-f929-468e-8457-01c7dbb331aa"
        },
        "item": {
          "id": "0e7f1c8f-45c3-4ab8-b4ae-17e8e2a31d04",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1dcafb35-1637-4493-9ac3-5948b8ea2a5a",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "526ea357-a7e8-429a-94cf-8fdb3ccdfec9",
        "cursor": {
          "ref": "c74b9069-7bb5-4993-ad16-e1211be684b6",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e935c3e4-2cdb-49f9-aa51-dae87d33de25"
        },
        "item": {
          "id": "526ea357-a7e8-429a-94cf-8fdb3ccdfec9",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "aa2c08f7-a332-4b22-be1e-bb95b539c0e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe245d1f-5618-4c7f-8d4b-f736d840b2c4",
        "cursor": {
          "ref": "2fe877c2-32ce-45ec-a17c-8e97cc401e66",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "3f3061d7-3f17-49b9-b639-85822b762da4"
        },
        "item": {
          "id": "fe245d1f-5618-4c7f-8d4b-f736d840b2c4",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "7f00c4f7-bcf5-4994-8426-f931dc0944bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4eba82-e01e-4ce2-a489-aa67273ae40c",
        "cursor": {
          "ref": "d626b138-48b5-41af-bcb5-fb1052aa753c",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "0bc89d9e-eb70-43ce-a5c3-988c1e51e268"
        },
        "item": {
          "id": "ce4eba82-e01e-4ce2-a489-aa67273ae40c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f775a687-352a-4bf2-a732-68465f77274c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c01a52-a3ad-4078-bfcd-0848c1fd167a",
        "cursor": {
          "ref": "962450e9-f75c-41c6-a009-dbd66cd23ff6",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e5e7c554-68d0-46f1-8d0a-916144feaf8b"
        },
        "item": {
          "id": "78c01a52-a3ad-4078-bfcd-0848c1fd167a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d7c7451b-d798-45e9-a1e7-13765183a4b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63910c77-9a26-485f-84bd-b82025728427",
        "cursor": {
          "ref": "434bcec8-6cbf-4a6f-aa97-d2a0ddf6232e",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "2f392adc-b102-442d-ae36-11e26bcb8955"
        },
        "item": {
          "id": "63910c77-9a26-485f-84bd-b82025728427",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "9a3e1ec9-e19c-4623-a7e3-6f47cd7004de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6c3945-4bf2-48fd-9f09-579dae32c7ae",
        "cursor": {
          "ref": "680db90e-ecb7-405b-b9c9-8be316ed031f",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c5c90679-1c89-42ed-ad3b-e990191871e9"
        },
        "item": {
          "id": "bb6c3945-4bf2-48fd-9f09-579dae32c7ae",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "99ada6ea-733d-4255-9ba2-a484fb9004d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f8df224-32d4-4c97-9b60-1d9d4483ea32",
        "cursor": {
          "ref": "bd0e40a3-4717-4693-9daa-22a86c8f29f1",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "77091502-d741-40bb-bf75-f3722bd70902"
        },
        "item": {
          "id": "7f8df224-32d4-4c97-9b60-1d9d4483ea32",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9fb577cb-930b-419b-8367-dcf8f788897f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f438e55-ba92-4e82-afc6-c406e3bfee06",
        "cursor": {
          "ref": "3f89caa9-f9aa-4b62-bb10-65fd6b404801",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "82236407-a9a9-4e89-8c5d-28568693210e"
        },
        "item": {
          "id": "3f438e55-ba92-4e82-afc6-c406e3bfee06",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "44211817-9f86-4ebc-861b-e32f847efcd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22997fd-07f4-44f9-af24-a92e280739f0",
        "cursor": {
          "ref": "8242a9e0-b148-4814-9f2d-9a2729f7f551",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c3cb1593-45a2-45bb-be9d-1012f70bd81c"
        },
        "item": {
          "id": "d22997fd-07f4-44f9-af24-a92e280739f0",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "214af6cb-f9f7-49b8-995f-b8a26cbc5d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5eac831-b667-4275-ae59-98bc29d8c083",
        "cursor": {
          "ref": "cb4ab7df-017a-4a9d-8eff-442b1abc429a",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "2512ba87-e6c8-4d66-b983-f496ac7858d9"
        },
        "item": {
          "id": "b5eac831-b667-4275-ae59-98bc29d8c083",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8bfa20a1-5531-4ec9-a856-20186902e413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846432f0-ed49-494e-bbc3-9ddff7dfaa01",
        "cursor": {
          "ref": "09072c43-4ceb-4edd-bbf0-f09e9ac717bd",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "dffda846-b53a-45c3-8118-bb700cdfddc4"
        },
        "item": {
          "id": "846432f0-ed49-494e-bbc3-9ddff7dfaa01",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e778a29b-59dc-4f4a-8ff0-e22d304e2030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab74f30f-779f-4077-91ba-dfbe47a530aa",
        "cursor": {
          "ref": "bad60048-5603-4752-8217-e2e985773524",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0cf63c03-9f66-4d66-b3ae-993bd31f949c"
        },
        "item": {
          "id": "ab74f30f-779f-4077-91ba-dfbe47a530aa",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "62777f66-b78d-477b-9617-0f780ef95c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88cebf6f-172f-4c91-8800-ecd21185ae51",
        "cursor": {
          "ref": "fc7045db-293b-407f-8813-42e5c31a4e06",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "07d71c6f-5942-4ca5-aeab-50fd6fc222cb"
        },
        "item": {
          "id": "88cebf6f-172f-4c91-8800-ecd21185ae51",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f5d0abfc-e4f6-4de7-a9af-1054e7fd431f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb43a07-1042-427f-94d1-3728b615150e",
        "cursor": {
          "ref": "74d24bb2-c4d1-4b8d-84c5-a1cabd43462e",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "7dd38ca4-90b6-453e-a1b1-f256284e3932"
        },
        "item": {
          "id": "5eb43a07-1042-427f-94d1-3728b615150e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "49900dde-8f95-4ae7-8818-f04e3c743b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b738f5cc-340f-4fb6-af32-304e1f618112",
        "cursor": {
          "ref": "fb187485-d717-434b-bd12-bbda7c3ee83c",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "587a487f-2024-4534-83b4-a1d3b64dea6d"
        },
        "item": {
          "id": "b738f5cc-340f-4fb6-af32-304e1f618112",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c4263ca3-5a6c-4152-ba6a-68b67af887d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63efc551-7284-4e78-8534-82006219e319",
        "cursor": {
          "ref": "7515b7f6-f00c-49ad-bb88-4f0b727887dc",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "df4d4bd3-658b-4f3b-a209-e62de62e1d41"
        },
        "item": {
          "id": "63efc551-7284-4e78-8534-82006219e319",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "cd723034-386b-4d8a-8b59-4c3a29b81bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f54126-81f7-4609-8c01-e32f29635f31",
        "cursor": {
          "ref": "8c4b9dda-5b92-4c51-a7ce-02e00cf53163",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "77556bfc-a06c-420b-91f4-ec531c1aa817"
        },
        "item": {
          "id": "d1f54126-81f7-4609-8c01-e32f29635f31",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "03839b0c-5d89-44ca-95a2-bf5c63566820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "480d5d1c-aced-4cc3-ab18-7b2db804cb6d",
        "cursor": {
          "ref": "c3f26a3b-2376-46c7-ab83-635e86ae7992",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9d1b92e2-7023-4b27-9a42-27b5da16fdca"
        },
        "item": {
          "id": "480d5d1c-aced-4cc3-ab18-7b2db804cb6d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1c127587-730c-4866-87e2-51e7594512fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f61b6b-dd35-464f-bd43-e66ec201f38f",
        "cursor": {
          "ref": "5198cf59-dc7d-4376-89f3-1852ab8904fc",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a0adcdc0-b474-4328-bbbc-fcfc4a8b738d"
        },
        "item": {
          "id": "27f61b6b-dd35-464f-bd43-e66ec201f38f",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "60113ac0-2c88-46c1-885b-63085e1e1da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5a814e-3617-4ee7-a6d7-0552063f2865",
        "cursor": {
          "ref": "a8424d5c-7720-4f74-8337-508ee9d0f390",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "91b6e251-b318-4fab-82e8-3227dc833743"
        },
        "item": {
          "id": "9e5a814e-3617-4ee7-a6d7-0552063f2865",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "716b305b-360c-42f8-af29-171e5a1ae90b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148eca1e-2b6b-4446-b400-b8beeebe9ba6",
        "cursor": {
          "ref": "f4c96b61-597f-428f-965c-3f0e62bf6c0f",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "585ebfd7-be8d-45e5-96b9-c08fc5e6a1c2"
        },
        "item": {
          "id": "148eca1e-2b6b-4446-b400-b8beeebe9ba6",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b5b0c4b3-7e2f-4ffe-984b-c582a284d154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d88db8f-96c7-42c3-8557-9c1b0ba88ca9",
        "cursor": {
          "ref": "992fbdae-bc5e-4862-b4e8-d46eb5bfa622",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "b15eb008-7d2d-499a-adf1-5486b6f1cb5c"
        },
        "item": {
          "id": "0d88db8f-96c7-42c3-8557-9c1b0ba88ca9",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "818a9a7d-fe16-4c04-8735-69d67e70108c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c251590-71f3-4241-a40c-486dcfb16468",
        "cursor": {
          "ref": "31542397-fc81-44f1-b582-2837206522c1",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "1018db01-2e9d-4231-8453-1e5c48381087"
        },
        "item": {
          "id": "9c251590-71f3-4241-a40c-486dcfb16468",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "dced28a3-3de2-4552-907e-b87ef5f64142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abbe4fdf-3498-40a4-96e2-0f9751fd78af",
        "cursor": {
          "ref": "5588641d-0b4f-4758-8188-50a2106cba7c",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "55bc7297-6ba3-4db9-b53e-3e2c960ef4e3"
        },
        "item": {
          "id": "abbe4fdf-3498-40a4-96e2-0f9751fd78af",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d614d7c4-ae20-49a3-ae49-9709328c2420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d176f9c-e541-4cb8-a1de-5412160ce095",
        "cursor": {
          "ref": "0d7731bd-f402-4147-8359-2175d82252b6",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "bf2faff1-8b13-4293-aa62-a529e76754c9"
        },
        "item": {
          "id": "5d176f9c-e541-4cb8-a1de-5412160ce095",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "72f230e6-60a4-4ccc-af3d-6d9f330889c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b146d2-3dc3-41b4-9239-7c1e2d512d61",
        "cursor": {
          "ref": "a0b82cbd-f5ad-48d2-a4cc-7b66d3e84265",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "b16f2ea4-4b3c-4283-a49a-4c04bce272fa"
        },
        "item": {
          "id": "03b146d2-3dc3-41b4-9239-7c1e2d512d61",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "bc0243c3-4a69-4832-b55a-d5d8a03a8e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa72204-36a9-4037-8fc2-a0575be02876",
        "cursor": {
          "ref": "b8629f33-f883-4131-9f18-79e8e1e8c759",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "bf5b61a9-4f32-4496-882e-82816054c1fd"
        },
        "item": {
          "id": "1fa72204-36a9-4037-8fc2-a0575be02876",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "69ec1c4f-e3c5-4250-9f39-79763068dfc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d64f0b3-014c-4a5b-b560-27a5f2af002d",
        "cursor": {
          "ref": "403511ef-0c97-479a-8a72-ca99ab2dffec",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "137504f0-5917-4aee-b1dd-2265829735b5"
        },
        "item": {
          "id": "6d64f0b3-014c-4a5b-b560-27a5f2af002d",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "aa7a6b72-ba18-4682-9ded-cbbb8b3ddaaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28df0232-b83b-47da-a291-e0abc716e2f7",
        "cursor": {
          "ref": "ffd408e6-a165-496d-955e-05fc128ef542",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "e3f0d716-56ee-4c17-9d23-79a9a2d08702"
        },
        "item": {
          "id": "28df0232-b83b-47da-a291-e0abc716e2f7",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "414c133c-cdcf-4118-9fd9-78e0e72db49c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620d9351-5b1f-443d-b740-8848e14bca7b",
        "cursor": {
          "ref": "4acaaddc-7807-479d-81ae-4ce334f87752",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "4bd4c7e1-ded7-49a0-9c04-3595c44ad163"
        },
        "item": {
          "id": "620d9351-5b1f-443d-b740-8848e14bca7b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6ec17c40-9786-42b8-831d-4d8b286ab2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d5952ee-b88b-46d7-9670-85916d9ac6a6",
        "cursor": {
          "ref": "2ce313db-a9e9-4f9f-ae12-eded1336a272",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "d023d3e7-e826-450e-ae53-ef07179cd585"
        },
        "item": {
          "id": "3d5952ee-b88b-46d7-9670-85916d9ac6a6",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "34beb2f4-85fc-49c8-9c2a-1b6f5f6cc293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b645be95-e1d6-45d7-850e-a9a4cbdb89c7",
        "cursor": {
          "ref": "dc326963-c9c7-4eff-9d48-90dd83819494",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "0cc13914-7d57-450d-b5cc-e17942537731"
        },
        "item": {
          "id": "b645be95-e1d6-45d7-850e-a9a4cbdb89c7",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2cda6097-fbac-47e9-ae36-52869f00d7f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3568c1c-c8de-4490-9fdb-db2a208ad62e",
        "cursor": {
          "ref": "9799b726-b15b-4978-ac9c-c72e20f7f8e7",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "4e300a02-7a1a-4f28-b7b6-f5f7b31a21bd"
        },
        "item": {
          "id": "a3568c1c-c8de-4490-9fdb-db2a208ad62e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a98c8abc-a896-4b68-9c17-de444c7aa8cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ce0691-2a37-47bb-9b70-59d2ddfc838c",
        "cursor": {
          "ref": "efbe32ed-d7c5-4ed4-93ef-1af877aed604",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "8c53d095-2fb3-4e95-a645-cfdd619fbaa4"
        },
        "item": {
          "id": "26ce0691-2a37-47bb-9b70-59d2ddfc838c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a3968af5-b5b2-476e-bc81-e9cb232559c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef1a7eb0-292b-46ad-881c-aee5a2f75fe0",
        "cursor": {
          "ref": "f1ddcbd7-5d54-42cb-85b6-e7344a503a5f",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "b351868b-41f0-43ae-8434-4fb18df3a4d0"
        },
        "item": {
          "id": "ef1a7eb0-292b-46ad-881c-aee5a2f75fe0",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "3a1bb1e4-0d4b-44c5-998b-c78ed87adc9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "799a0eba-64be-4b6d-a8e6-988bb7eb1b4d",
        "cursor": {
          "ref": "d467f8f9-c8ac-4174-9d13-5f229bce5e90",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "924165e9-7243-4ea3-8071-c96275b31c44"
        },
        "item": {
          "id": "799a0eba-64be-4b6d-a8e6-988bb7eb1b4d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "0954041e-c398-4148-a930-baeee6d007a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc60273b-5ead-451a-8658-442436fc408f",
        "cursor": {
          "ref": "515812da-562f-478d-8c80-6aacbc2fa683",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "5d194f31-120c-41d5-9553-bfcbfe21bdd4"
        },
        "item": {
          "id": "cc60273b-5ead-451a-8658-442436fc408f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c9655757-cd1e-4070-940b-6fbc67bb7cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c55e94-21c0-4133-9254-6adb2bffdf4e",
        "cursor": {
          "ref": "02b9c05e-104e-49cb-af5f-5e384aa21fe0",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "0e9f9dd7-ed34-4c86-9a51-e2a27089f979"
        },
        "item": {
          "id": "e6c55e94-21c0-4133-9254-6adb2bffdf4e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c6844370-49f6-4894-a2df-4a39d8f15f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4aacd8-a3c1-4cdd-921e-27f1ea2c2f56",
        "cursor": {
          "ref": "29c2adc5-767d-40f1-947f-d323af8daddd",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "81b85cf7-0864-4cf0-b1e2-4a291924782a"
        },
        "item": {
          "id": "bb4aacd8-a3c1-4cdd-921e-27f1ea2c2f56",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "7b8cb0ea-08b0-405c-894c-72fd99cb7929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b46f141-780a-4230-88fa-5fdaa5cb7631",
        "cursor": {
          "ref": "071bddc9-51fd-4fd3-b29e-53cc50b95406",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "13d04b33-cbd3-411b-adb3-45d992b52653"
        },
        "item": {
          "id": "4b46f141-780a-4230-88fa-5fdaa5cb7631",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "24404c43-5762-42d1-ae9f-e44990c3c226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf2a7fe-114a-4468-abb0-009ae8eaf4a3",
        "cursor": {
          "ref": "4d5d22d6-e63e-4961-bfbe-3c6eb0fba9ea",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "1fb66584-9a92-4fc9-abff-2923b0cd81d7"
        },
        "item": {
          "id": "dcf2a7fe-114a-4468-abb0-009ae8eaf4a3",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "325887ec-a3fb-4329-b362-739b18d633b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b3c2123-eebe-4e5d-abef-b4b589ece3bd",
        "cursor": {
          "ref": "2bf1cac8-5d46-48b4-961d-50de3994f015",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "b16c6660-9710-4381-905c-fc5c351fcf2f"
        },
        "item": {
          "id": "3b3c2123-eebe-4e5d-abef-b4b589ece3bd",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "74543261-0d3e-48f4-a874-0e6f179a9ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c77dee7d-e560-43dd-a6cc-721767f66dac",
        "cursor": {
          "ref": "9ffe0677-e995-40bc-92d8-bd57fdf776ec",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "d72c7ab1-8cca-484f-8dee-b05bb2d9f5fd"
        },
        "item": {
          "id": "c77dee7d-e560-43dd-a6cc-721767f66dac",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "51893aea-c0ae-46b5-9ccd-69a01d6217d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b37ed0-45ab-45d9-93b8-cdff4201eb7f",
        "cursor": {
          "ref": "6d9e9269-bd3b-4ae3-9922-81e8d3437ff0",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "3e31dc08-5be3-472e-b38e-45b7841b2977"
        },
        "item": {
          "id": "83b37ed0-45ab-45d9-93b8-cdff4201eb7f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "96554b9c-e793-4ea8-94d1-1662c6d937a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c61e731-3672-4899-ada7-6d252ae58af3",
        "cursor": {
          "ref": "0cbf4250-11e6-4eea-814e-eefd64984883",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "3fef4a11-ec31-483e-abc5-2c2c9f9b9873"
        },
        "item": {
          "id": "1c61e731-3672-4899-ada7-6d252ae58af3",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "0ecfebe3-8825-40d1-8045-45ca1d68232d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7bb244a-b7af-45a8-a482-534d47da94e5",
        "cursor": {
          "ref": "08ffe9df-22e2-4bca-a26d-fbef65a7c8a7",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "57859844-9007-47ce-9ecf-8e4954242ac8"
        },
        "item": {
          "id": "c7bb244a-b7af-45a8-a482-534d47da94e5",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "025c2e0c-b830-46f8-95dd-f68fe5544a10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f4f69b-a3e9-4a5b-9b80-b62c2366fb98",
        "cursor": {
          "ref": "cbe5636a-a084-48c8-a92f-bda0c33e30cb",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "40ac5a91-9684-4b6c-a8ae-063177b8f8a2"
        },
        "item": {
          "id": "c3f4f69b-a3e9-4a5b-9b80-b62c2366fb98",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "89bf0051-2a53-4a51-b4e0-ae8e93cb6d15",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ac6a1d-b064-45b4-9f8b-6fb42e7b4778",
        "cursor": {
          "ref": "a15a5157-92b5-4aeb-b1df-0b3e205843f0",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "69f91ebf-5b71-4a87-bb23-7b04b971036f"
        },
        "item": {
          "id": "e2ac6a1d-b064-45b4-9f8b-6fb42e7b4778",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ca2cb210-add9-4366-a90e-4651c651b4d2",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35cb630-3b49-4044-a6be-92a2f38dfa3e",
        "cursor": {
          "ref": "5e72df31-ba42-46ea-9e57-cc48ca2656b6",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "bd12da31-41a5-4ab2-9aea-5edbb2b7233d"
        },
        "item": {
          "id": "f35cb630-3b49-4044-a6be-92a2f38dfa3e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "384fe0d3-bc10-4d10-833a-a522ccceec9c",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "36509a50-7b9b-4618-af30-32e881b3edad",
        "cursor": {
          "ref": "cd7be477-652b-498b-8e50-53d10c01619e",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "6cfef11c-bdad-413a-a1b0-b0d37c12f518"
        },
        "item": {
          "id": "36509a50-7b9b-4618-af30-32e881b3edad",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c8368373-6f61-45f1-acb7-d503aace7e3c",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "810c3900-cd4e-4eac-b4f6-5e7b2467f396",
        "cursor": {
          "ref": "3e5a1963-48e4-433b-9356-1c688c00c568",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2e2e3182-068c-41a6-bba8-f46390421971"
        },
        "item": {
          "id": "810c3900-cd4e-4eac-b4f6-5e7b2467f396",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "78473c90-7433-410e-861c-ebd2d27d3570",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "810c3900-cd4e-4eac-b4f6-5e7b2467f396",
        "cursor": {
          "ref": "3e5a1963-48e4-433b-9356-1c688c00c568",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "2e2e3182-068c-41a6-bba8-f46390421971"
        },
        "item": {
          "id": "810c3900-cd4e-4eac-b4f6-5e7b2467f396",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "78473c90-7433-410e-861c-ebd2d27d3570",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "601b4390-3342-4cc0-858e-57e840d9d592",
        "cursor": {
          "ref": "b0b369e6-adfb-4ee7-84a6-98cb21a7a9d2",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "f519548c-24f1-4c2d-abe1-7f3534508c54"
        },
        "item": {
          "id": "601b4390-3342-4cc0-858e-57e840d9d592",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "d3363cbf-9b08-40b0-b235-626dc45b26ea",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9d8345-e691-478d-8a0f-9ca9767c72b3",
        "cursor": {
          "ref": "0415fed2-fa12-49f5-9f81-e8b4afa88cc5",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "94f33a76-ac1a-4ee5-8df9-948ddd08115e"
        },
        "item": {
          "id": "3a9d8345-e691-478d-8a0f-9ca9767c72b3",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "202d6fdb-3b2e-4da8-82bd-e86d26b309c3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}